#:compute.gcp.descriptor{:name "tagmanager", :title "Tag Manager API", :api-version "v1", :revision "20210303", :endpoint #:compute.gcp.descriptor{:url "https://tagmanager.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"description" "JSONP", "type" "string", "location" "query"}, "uploadType" {"type" "string", "description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "location" "query"}, "key" {"description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "type" "string", "location" "query"}, "access_token" {"location" "query", "description" "OAuth access token.", "type" "string"}, "oauth_token" {"type" "string", "location" "query", "description" "OAuth 2.0 token for the current user."}, "prettyPrint" {"type" "boolean", "location" "query", "description" "Returns response with indentations and line breaks.", "default" "true"}, "alt" {"description" "Data format for response.", "enum" ["json" "media" "proto"], "type" "string", "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "default" "json", "location" "query"}, "$.xgafv" {"type" "string", "location" "query", "enumDescriptions" ["v1 error format" "v2 error format"], "enum" ["1" "2"], "description" "V1 error format."}, "fields" {"description" "Selector specifying which fields to include in a partial response.", "type" "string", "location" "query"}, "upload_protocol" {"type" "string", "description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "location" "query"}, "quotaUser" {"description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "location" "query", "type" "string"}}, :op->info {"tagmanager.accounts.containers.list" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v1/accounts/{accountId}/containers", :response {"$ref" "ListContainersResponse"}, :parameters {"accountId" {"location" "path", "required" true, "type" "string", "description" "The GTM Account ID."}}, :description "Lists all Containers that belongs to a GTM Account."}, "tagmanager.accounts.containers.variables.create" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/variables", :request {"$ref" "Variable"}, :response {"$ref" "Variable"}, :parameters {"accountId" {"required" true, "description" "The GTM Account ID.", "location" "path", "type" "string"}, "containerId" {"type" "string", "required" true, "description" "The GTM Container ID.", "location" "path"}}, :description "Creates a GTM Variable."}, "tagmanager.accounts.containers.create" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v1/accounts/{accountId}/containers", :request {"$ref" "Container"}, :response {"$ref" "Container"}, :parameters {"accountId" {"description" "The GTM Account ID.", "location" "path", "type" "string", "required" true}}, :description "Creates a Container."}, "tagmanager.accounts.containers.move_folders.update" #:compute.gcp.descriptor{:http-method :put, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/move_folders/{folderId}", :request {"$ref" "Folder"}, :parameters {"folderId" {"required" true, "location" "path", "type" "string", "description" "The GTM Folder ID."}, "containerId" {"location" "path", "required" true, "type" "string", "description" "The GTM Container ID."}, "variableId" {"description" "The variables to be moved to the folder.", "repeated" true, "type" "string", "location" "query"}, "tagId" {"location" "query", "repeated" true, "type" "string", "description" "The tags to be moved to the folder."}, "triggerId" {"repeated" true, "location" "query", "type" "string", "description" "The triggers to be moved to the folder."}, "accountId" {"required" true, "type" "string", "location" "path", "description" "The GTM Account ID."}}, :description "Moves entities to a GTM Folder."}, "tagmanager.accounts.permissions.update" #:compute.gcp.descriptor{:http-method :put, :path "tagmanager/v1/accounts/{accountId}/permissions/{permissionId}", :request {"$ref" "UserAccess"}, :response {"$ref" "UserAccess"}, :parameters {"accountId" {"location" "path", "type" "string", "description" "The GTM Account ID.", "required" true}, "permissionId" {"type" "string", "required" true, "description" "The GTM User ID.", "location" "path"}}, :description "Updates a user's Account & Container Permissions."}, "tagmanager.accounts.containers.versions.create" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/versions", :request {"$ref" "CreateContainerVersionRequestVersionOptions"}, :response {"$ref" "CreateContainerVersionResponse"}, :parameters {"accountId" {"type" "string", "required" true, "description" "The GTM Account ID.", "location" "path"}, "containerId" {"description" "The GTM Container ID.", "required" true, "location" "path", "type" "string"}}, :description "Creates a Container Version."}, "tagmanager.accounts.permissions.get" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v1/accounts/{accountId}/permissions/{permissionId}", :response {"$ref" "UserAccess"}, :parameters {"accountId" {"location" "path", "required" true, "description" "The GTM Account ID.", "type" "string"}, "permissionId" {"required" true, "location" "path", "type" "string", "description" "The GTM User ID."}}, :description "Gets a user's Account & Container Permissions."}, "tagmanager.accounts.containers.tags.delete" #:compute.gcp.descriptor{:http-method :delete, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/tags/{tagId}", :parameters {"containerId" {"required" true, "location" "path", "type" "string", "description" "The GTM Container ID."}, "accountId" {"type" "string", "required" true, "description" "The GTM Account ID.", "location" "path"}, "tagId" {"type" "string", "description" "The GTM Tag ID.", "location" "path", "required" true}}, :description "Deletes a GTM Tag."}, "tagmanager.accounts.containers.versions.restore" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/versions/{containerVersionId}/restore", :response {"$ref" "ContainerVersion"}, :parameters {"containerId" {"type" "string", "required" true, "description" "The GTM Container ID.", "location" "path"}, "accountId" {"location" "path", "required" true, "description" "The GTM Account ID.", "type" "string"}, "containerVersionId" {"location" "path", "required" true, "description" "The GTM Container Version ID.", "type" "string"}}, :description "Restores a Container Version. This will overwrite the container's current configuration (including its variables, triggers and tags). The operation will not have any effect on the version that is being served (i.e. the published version)."}, "tagmanager.accounts.containers.variables.update" #:compute.gcp.descriptor{:http-method :put, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/variables/{variableId}", :request {"$ref" "Variable"}, :response {"$ref" "Variable"}, :parameters {"variableId" {"description" "The GTM Variable ID.", "location" "path", "type" "string", "required" true}, "accountId" {"location" "path", "type" "string", "description" "The GTM Account ID.", "required" true}, "fingerprint" {"description" "When provided, this fingerprint must match the fingerprint of the variable in storage.", "location" "query", "type" "string"}, "containerId" {"required" true, "description" "The GTM Container ID.", "location" "path", "type" "string"}}, :description "Updates a GTM Variable."}, "tagmanager.accounts.permissions.delete" #:compute.gcp.descriptor{:http-method :delete, :path "tagmanager/v1/accounts/{accountId}/permissions/{permissionId}", :parameters {"accountId" {"type" "string", "required" true, "description" "The GTM Account ID.", "location" "path"}, "permissionId" {"location" "path", "required" true, "description" "The GTM User ID.", "type" "string"}}, :description "Removes a user from the account, revoking access to it and all of its containers."}, "tagmanager.accounts.containers.versions.get" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/versions/{containerVersionId}", :response {"$ref" "ContainerVersion"}, :parameters {"containerVersionId" {"type" "string", "required" true, "location" "path", "description" "The GTM Container Version ID. Specify published to retrieve the currently published version."}, "containerId" {"type" "string", "description" "The GTM Container ID.", "location" "path", "required" true}, "accountId" {"description" "The GTM Account ID.", "location" "path", "required" true, "type" "string"}}, :description "Gets a Container Version."}, "tagmanager.accounts.containers.environments.update" #:compute.gcp.descriptor{:http-method :put, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/environments/{environmentId}", :request {"$ref" "Environment"}, :response {"$ref" "Environment"}, :parameters {"containerId" {"description" "The GTM Container ID.", "required" true, "type" "string", "location" "path"}, "environmentId" {"required" true, "location" "path", "description" "The GTM Environment ID.", "type" "string"}, "accountId" {"description" "The GTM Account ID.", "type" "string", "location" "path", "required" true}, "fingerprint" {"location" "query", "description" "When provided, this fingerprint must match the fingerprint of the environment in storage.", "type" "string"}}, :description "Updates a GTM Environment."}, "tagmanager.accounts.containers.environments.get" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/environments/{environmentId}", :response {"$ref" "Environment"}, :parameters {"environmentId" {"type" "string", "description" "The GTM Environment ID.", "location" "path", "required" true}, "containerId" {"type" "string", "required" true, "description" "The GTM Container ID.", "location" "path"}, "accountId" {"location" "path", "type" "string", "required" true, "description" "The GTM Account ID."}}, :description "Gets a GTM Environment."}, "tagmanager.accounts.containers.versions.delete" #:compute.gcp.descriptor{:http-method :delete, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/versions/{containerVersionId}", :parameters {"accountId" {"location" "path", "description" "The GTM Account ID.", "required" true, "type" "string"}, "containerId" {"required" true, "description" "The GTM Container ID.", "location" "path", "type" "string"}, "containerVersionId" {"type" "string", "required" true, "description" "The GTM Container Version ID.", "location" "path"}}, :description "Deletes a Container Version."}, "tagmanager.accounts.containers.variables.get" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/variables/{variableId}", :response {"$ref" "Variable"}, :parameters {"accountId" {"description" "The GTM Account ID.", "required" true, "location" "path", "type" "string"}, "variableId" {"type" "string", "location" "path", "required" true, "description" "The GTM Variable ID."}, "containerId" {"description" "The GTM Container ID.", "type" "string", "required" true, "location" "path"}}, :description "Gets a GTM Variable."}, "tagmanager.accounts.containers.reauthorize_environments.update" #:compute.gcp.descriptor{:http-method :put, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/reauthorize_environments/{environmentId}", :request {"$ref" "Environment"}, :response {"$ref" "Environment"}, :parameters {"environmentId" {"location" "path", "description" "The GTM Environment ID.", "type" "string", "required" true}, "accountId" {"type" "string", "description" "The GTM Account ID.", "location" "path", "required" true}, "containerId" {"required" true, "type" "string", "description" "The GTM Container ID.", "location" "path"}}, :description "Re-generates the authorization code for a GTM Environment."}, "tagmanager.accounts.containers.environments.create" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/environments", :request {"$ref" "Environment"}, :response {"$ref" "Environment"}, :parameters {"containerId" {"type" "string", "required" true, "location" "path", "description" "The GTM Container ID."}, "accountId" {"required" true, "location" "path", "type" "string", "description" "The GTM Account ID."}}, :description "Creates a GTM Environment."}, "tagmanager.accounts.containers.versions.update" #:compute.gcp.descriptor{:http-method :put, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/versions/{containerVersionId}", :request {"$ref" "ContainerVersion"}, :response {"$ref" "ContainerVersion"}, :parameters {"containerId" {"location" "path", "type" "string", "required" true, "description" "The GTM Container ID."}, "fingerprint" {"type" "string", "description" "When provided, this fingerprint must match the fingerprint of the container version in storage.", "location" "query"}, "containerVersionId" {"type" "string", "location" "path", "required" true, "description" "The GTM Container Version ID."}, "accountId" {"required" true, "type" "string", "description" "The GTM Account ID.", "location" "path"}}, :description "Updates a Container Version."}, "tagmanager.accounts.containers.triggers.get" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/triggers/{triggerId}", :response {"$ref" "Trigger"}, :parameters {"containerId" {"required" true, "type" "string", "location" "path", "description" "The GTM Container ID."}, "accountId" {"location" "path", "type" "string", "description" "The GTM Account ID.", "required" true}, "triggerId" {"location" "path", "description" "The GTM Trigger ID.", "type" "string", "required" true}}, :description "Gets a GTM Trigger."}, "tagmanager.accounts.containers.triggers.delete" #:compute.gcp.descriptor{:http-method :delete, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/triggers/{triggerId}", :parameters {"accountId" {"required" true, "type" "string", "location" "path", "description" "The GTM Account ID."}, "triggerId" {"required" true, "location" "path", "description" "The GTM Trigger ID.", "type" "string"}, "containerId" {"required" true, "description" "The GTM Container ID.", "type" "string", "location" "path"}}, :description "Deletes a GTM Trigger."}, "tagmanager.accounts.containers.versions.undelete" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/versions/{containerVersionId}/undelete", :response {"$ref" "ContainerVersion"}, :parameters {"containerVersionId" {"type" "string", "location" "path", "required" true, "description" "The GTM Container Version ID."}, "accountId" {"type" "string", "location" "path", "description" "The GTM Account ID.", "required" true}, "containerId" {"required" true, "description" "The GTM Container ID.", "type" "string", "location" "path"}}, :description "Undeletes a Container Version."}, "tagmanager.accounts.containers.delete" #:compute.gcp.descriptor{:http-method :delete, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}", :parameters {"accountId" {"description" "The GTM Account ID.", "type" "string", "required" true, "location" "path"}, "containerId" {"location" "path", "type" "string", "required" true, "description" "The GTM Container ID."}}, :description "Deletes a Container."}, "tagmanager.accounts.containers.triggers.update" #:compute.gcp.descriptor{:http-method :put, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/triggers/{triggerId}", :request {"$ref" "Trigger"}, :response {"$ref" "Trigger"}, :parameters {"accountId" {"required" true, "type" "string", "description" "The GTM Account ID.", "location" "path"}, "containerId" {"description" "The GTM Container ID.", "type" "string", "location" "path", "required" true}, "fingerprint" {"location" "query", "description" "When provided, this fingerprint must match the fingerprint of the trigger in storage.", "type" "string"}, "triggerId" {"type" "string", "description" "The GTM Trigger ID.", "location" "path", "required" true}}, :description "Updates a GTM Trigger."}, "tagmanager.accounts.containers.tags.list" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/tags", :response {"$ref" "ListTagsResponse"}, :parameters {"accountId" {"description" "The GTM Account ID.", "location" "path", "type" "string", "required" true}, "containerId" {"location" "path", "type" "string", "required" true, "description" "The GTM Container ID."}}, :description "Lists all GTM Tags of a Container."}, "tagmanager.accounts.containers.folders.get" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/folders/{folderId}", :response {"$ref" "Folder"}, :parameters {"containerId" {"location" "path", "required" true, "type" "string", "description" "The GTM Container ID."}, "accountId" {"required" true, "type" "string", "description" "The GTM Account ID.", "location" "path"}, "folderId" {"location" "path", "description" "The GTM Folder ID.", "required" true, "type" "string"}}, :description "Gets a GTM Folder."}, "tagmanager.accounts.permissions.list" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v1/accounts/{accountId}/permissions", :response {"$ref" "ListAccountUsersResponse"}, :parameters {"accountId" {"description" "The GTM Account ID.", "type" "string", "required" true, "location" "path"}}, :description "List all users that have access to the account along with Account and Container Permissions granted to each of them."}, "tagmanager.accounts.containers.environments.delete" #:compute.gcp.descriptor{:http-method :delete, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/environments/{environmentId}", :parameters {"containerId" {"description" "The GTM Container ID.", "required" true, "type" "string", "location" "path"}, "environmentId" {"location" "path", "required" true, "type" "string", "description" "The GTM Environment ID."}, "accountId" {"location" "path", "type" "string", "description" "The GTM Account ID.", "required" true}}, :description "Deletes a GTM Environment."}, "tagmanager.accounts.get" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v1/accounts/{accountId}", :response {"$ref" "Account"}, :parameters {"accountId" {"location" "path", "description" "The GTM Account ID.", "required" true, "type" "string"}}, :description "Gets a GTM Account."}, "tagmanager.accounts.containers.tags.update" #:compute.gcp.descriptor{:http-method :put, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/tags/{tagId}", :request {"$ref" "Tag"}, :response {"$ref" "Tag"}, :parameters {"fingerprint" {"location" "query", "type" "string", "description" "When provided, this fingerprint must match the fingerprint of the tag in storage."}, "accountId" {"description" "The GTM Account ID.", "location" "path", "required" true, "type" "string"}, "containerId" {"required" true, "description" "The GTM Container ID.", "location" "path", "type" "string"}, "tagId" {"location" "path", "type" "string", "required" true, "description" "The GTM Tag ID."}}, :description "Updates a GTM Tag."}, "tagmanager.accounts.containers.folders.list" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/folders", :response {"$ref" "ListFoldersResponse"}, :parameters {"containerId" {"location" "path", "type" "string", "description" "The GTM Container ID.", "required" true}, "accountId" {"type" "string", "required" true, "description" "The GTM Account ID.", "location" "path"}}, :description "Lists all GTM Folders of a Container."}, "tagmanager.accounts.update" #:compute.gcp.descriptor{:http-method :put, :path "tagmanager/v1/accounts/{accountId}", :request {"$ref" "Account"}, :response {"$ref" "Account"}, :parameters {"fingerprint" {"type" "string", "description" "When provided, this fingerprint must match the fingerprint of the account in storage.", "location" "query"}, "accountId" {"description" "The GTM Account ID.", "location" "path", "type" "string", "required" true}}, :description "Updates a GTM Account."}, "tagmanager.accounts.containers.folders.entities.list" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/folders/{folderId}/entities", :response {"$ref" "FolderEntities"}, :parameters {"accountId" {"required" true, "description" "The GTM Account ID.", "type" "string", "location" "path"}, "folderId" {"type" "string", "location" "path", "required" true, "description" "The GTM Folder ID."}, "containerId" {"description" "The GTM Container ID.", "required" true, "location" "path", "type" "string"}}, :description "List all entities in a GTM Folder."}, "tagmanager.accounts.containers.tags.create" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/tags", :request {"$ref" "Tag"}, :response {"$ref" "Tag"}, :parameters {"containerId" {"location" "path", "description" "The GTM Container ID.", "required" true, "type" "string"}, "accountId" {"location" "path", "required" true, "type" "string", "description" "The GTM Account ID."}}, :description "Creates a GTM Tag."}, "tagmanager.accounts.containers.folders.create" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/folders", :request {"$ref" "Folder"}, :response {"$ref" "Folder"}, :parameters {"accountId" {"type" "string", "required" true, "description" "The GTM Account ID.", "location" "path"}, "containerId" {"description" "The GTM Container ID.", "required" true, "type" "string", "location" "path"}}, :description "Creates a GTM Folder."}, "tagmanager.accounts.list" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v1/accounts", :response {"$ref" "ListAccountsResponse"}, :parameters {}, :description "Lists all GTM Accounts that a user has access to."}, "tagmanager.accounts.containers.folders.update" #:compute.gcp.descriptor{:http-method :put, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/folders/{folderId}", :request {"$ref" "Folder"}, :response {"$ref" "Folder"}, :parameters {"fingerprint" {"type" "string", "location" "query", "description" "When provided, this fingerprint must match the fingerprint of the folder in storage."}, "accountId" {"type" "string", "description" "The GTM Account ID.", "required" true, "location" "path"}, "folderId" {"required" true, "type" "string", "location" "path", "description" "The GTM Folder ID."}, "containerId" {"description" "The GTM Container ID.", "type" "string", "location" "path", "required" true}}, :description "Updates a GTM Folder."}, "tagmanager.accounts.permissions.create" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v1/accounts/{accountId}/permissions", :request {"$ref" "UserAccess"}, :response {"$ref" "UserAccess"}, :parameters {"accountId" {"location" "path", "description" "The GTM Account ID.", "required" true, "type" "string"}}, :description "Creates a user's Account & Container Permissions."}, "tagmanager.accounts.containers.tags.get" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/tags/{tagId}", :response {"$ref" "Tag"}, :parameters {"tagId" {"type" "string", "required" true, "location" "path", "description" "The GTM Tag ID."}, "accountId" {"location" "path", "type" "string", "description" "The GTM Account ID.", "required" true}, "containerId" {"type" "string", "description" "The GTM Container ID.", "location" "path", "required" true}}, :description "Gets a GTM Tag."}, "tagmanager.accounts.containers.triggers.create" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/triggers", :request {"$ref" "Trigger"}, :response {"$ref" "Trigger"}, :parameters {"accountId" {"location" "path", "required" true, "description" "The GTM Account ID.", "type" "string"}, "containerId" {"location" "path", "description" "The GTM Container ID.", "type" "string", "required" true}}, :description "Creates a GTM Trigger."}, "tagmanager.accounts.containers.variables.list" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/variables", :response {"$ref" "ListVariablesResponse"}, :parameters {"containerId" {"description" "The GTM Container ID.", "required" true, "location" "path", "type" "string"}, "accountId" {"required" true, "description" "The GTM Account ID.", "type" "string", "location" "path"}}, :description "Lists all GTM Variables of a Container."}, "tagmanager.accounts.containers.update" #:compute.gcp.descriptor{:http-method :put, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}", :request {"$ref" "Container"}, :response {"$ref" "Container"}, :parameters {"fingerprint" {"location" "query", "type" "string", "description" "When provided, this fingerprint must match the fingerprint of the container in storage."}, "accountId" {"location" "path", "description" "The GTM Account ID.", "type" "string", "required" true}, "containerId" {"description" "The GTM Container ID.", "type" "string", "location" "path", "required" true}}, :description "Updates a Container."}, "tagmanager.accounts.containers.get" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}", :response {"$ref" "Container"}, :parameters {"containerId" {"type" "string", "required" true, "description" "The GTM Container ID.", "location" "path"}, "accountId" {"location" "path", "type" "string", "description" "The GTM Account ID.", "required" true}}, :description "Gets a Container."}, "tagmanager.accounts.containers.folders.delete" #:compute.gcp.descriptor{:http-method :delete, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/folders/{folderId}", :parameters {"folderId" {"description" "The GTM Folder ID.", "location" "path", "type" "string", "required" true}, "accountId" {"description" "The GTM Account ID.", "required" true, "type" "string", "location" "path"}, "containerId" {"type" "string", "location" "path", "required" true, "description" "The GTM Container ID."}}, :description "Deletes a GTM Folder."}, "tagmanager.accounts.containers.environments.list" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/environments", :response {"$ref" "ListEnvironmentsResponse"}, :parameters {"accountId" {"type" "string", "required" true, "description" "The GTM Account ID.", "location" "path"}, "containerId" {"location" "path", "required" true, "type" "string", "description" "The GTM Container ID."}}, :description "Lists all GTM Environments of a GTM Container."}, "tagmanager.accounts.containers.variables.delete" #:compute.gcp.descriptor{:http-method :delete, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/variables/{variableId}", :parameters {"containerId" {"type" "string", "location" "path", "required" true, "description" "The GTM Container ID."}, "variableId" {"type" "string", "required" true, "description" "The GTM Variable ID.", "location" "path"}, "accountId" {"location" "path", "type" "string", "description" "The GTM Account ID.", "required" true}}, :description "Deletes a GTM Variable."}, "tagmanager.accounts.containers.versions.list" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/versions", :response {"$ref" "ListContainerVersionsResponse"}, :parameters {"includeDeleted" {"description" "Also retrieve deleted (archived) versions when true.", "location" "query", "default" "false", "type" "boolean"}, "headers" {"default" "false", "description" "Retrieve headers only when true.", "type" "boolean", "location" "query"}, "accountId" {"type" "string", "description" "The GTM Account ID.", "location" "path", "required" true}, "containerId" {"type" "string", "description" "The GTM Container ID.", "required" true, "location" "path"}}, :description "Lists all Container Versions of a GTM Container."}, "tagmanager.accounts.containers.triggers.list" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/triggers", :response {"$ref" "ListTriggersResponse"}, :parameters {"containerId" {"description" "The GTM Container ID.", "location" "path", "type" "string", "required" true}, "accountId" {"required" true, "location" "path", "type" "string", "description" "The GTM Account ID."}}, :description "Lists all GTM Triggers of a Container."}, "tagmanager.accounts.containers.versions.publish" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v1/accounts/{accountId}/containers/{containerId}/versions/{containerVersionId}/publish", :response {"$ref" "PublishContainerVersionResponse"}, :parameters {"accountId" {"description" "The GTM Account ID.", "location" "path", "required" true, "type" "string"}, "containerId" {"description" "The GTM Container ID.", "required" true, "type" "string", "location" "path"}, "containerVersionId" {"description" "The GTM Container Version ID.", "location" "path", "required" true, "type" "string"}, "fingerprint" {"type" "string", "location" "query", "description" "When provided, this fingerprint must match the fingerprint of the container version in storage."}}, :description "Publishes a Container Version."}}, :schemas {"ListEnvironmentsResponse" {"description" "List Environments Response.", "type" "object", "properties" {"environments" {"items" {"$ref" "Environment"}, "type" "array", "description" "All Environments of a GTM Container."}}, "id" "ListEnvironmentsResponse"}, "ListTriggersResponse" {"description" "List triggers response.", "type" "object", "properties" {"triggers" {"description" "All GTM Triggers of a GTM Container.", "type" "array", "items" {"$ref" "Trigger"}}}, "id" "ListTriggersResponse"}, "SetupTag" {"id" "SetupTag", "properties" {"tagName" {"description" "The name of the setup tag.", "type" "string"}, "stopOnSetupFailure" {"type" "boolean", "description" "If true, fire the main tag if and only if the setup tag fires successfully. If false, fire the main tag regardless of setup tag firing status."}}, "type" "object"}, "CreateContainerVersionRequestVersionOptions" {"description" "Options for new container versions.", "type" "object", "id" "CreateContainerVersionRequestVersionOptions", "properties" {"notes" {"type" "string", "description" "The notes of the container version to be created."}, "quickPreview" {"description" "The creation of this version may be for quick preview and shouldn't be saved.", "type" "boolean"}, "name" {"type" "string", "description" "The name of the container version to be created."}}}, "ListFoldersResponse" {"description" "List Folders Response.", "type" "object", "properties" {"folders" {"description" "All GTM Folders of a GTM Container.", "items" {"$ref" "Folder"}, "type" "array"}}, "id" "ListFoldersResponse"}, "ContainerVersion" {"id" "ContainerVersion", "description" "Represents a Google Tag Manager Container Version.", "type" "object", "properties" {"folder" {"type" "array", "description" "The folders in the container that this version was taken from.", "items" {"$ref" "Folder"}}, "rule" {"description" "The rules in the container that this version was taken from.", "type" "array", "items" {"$ref" "Rule"}}, "accountId" {"description" "GTM Account ID.", "type" "string"}, "fingerprint" {"type" "string", "description" "The fingerprint of the GTM Container Version as computed at storage time. This value is recomputed whenever the container version is modified."}, "name" {"description" "Container version display name. @mutable tagmanager.accounts.containers.versions.update", "type" "string"}, "tag" {"type" "array", "description" "The tags in the container that this version was taken from.", "items" {"$ref" "Tag"}}, "variable" {"items" {"$ref" "Variable"}, "type" "array", "description" "The variables in the container that this version was taken from."}, "containerVersionId" {"description" "The Container Version ID uniquely identifies the GTM Container Version.", "type" "string"}, "deleted" {"type" "boolean", "description" "A value of true indicates this container version has been deleted."}, "containerId" {"type" "string", "description" "GTM Container ID."}, "notes" {"description" "User notes on how to apply this container version in the container. @mutable tagmanager.accounts.containers.versions.update", "type" "string"}, "trigger" {"items" {"$ref" "Trigger"}, "type" "array", "description" "The triggers in the container that this version was taken from."}, "macro" {"description" "The macros in the container that this version was taken from.", "type" "array", "items" {"$ref" "Macro"}}, "container" {"$ref" "Container", "description" "The container that this version was taken from."}}}, "ListAccountUsersResponse" {"id" "ListAccountUsersResponse", "type" "object", "description" "List AccountUsers Response.", "properties" {"userAccess" {"type" "array", "description" "All GTM AccountUsers of a GTM Account.", "items" {"$ref" "UserAccess"}}}}, "Folder" {"type" "object", "id" "Folder", "properties" {"accountId" {"description" "GTM Account ID.", "type" "string"}, "name" {"description" "Folder display name. @mutable tagmanager.accounts.containers.folders.create @mutable tagmanager.accounts.containers.folders.update", "type" "string", "annotations" {"required" ["tagmanager.accounts.containers.folders.create" "tagmanager.accounts.containers.folders.update"]}}, "containerId" {"description" "GTM Container ID.", "type" "string"}, "fingerprint" {"description" "The fingerprint of the GTM Folder as computed at storage time. This value is recomputed whenever the folder is modified.", "type" "string"}, "folderId" {"type" "string", "description" "The Folder ID uniquely identifies the GTM Folder."}}, "description" "Represents a Google Tag Manager Folder."}, "ListTagsResponse" {"description" "List Tags Response.", "properties" {"tags" {"type" "array", "description" "All GTM Tags of a GTM Container.", "items" {"$ref" "Tag"}}}, "id" "ListTagsResponse", "type" "object"}, "AccountAccess" {"properties" {"permission" {"type" "array", "description" "List of Account permissions. Valid account permissions are read and manage. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update", "items" {"type" "string", "enumDescriptions" ["" "" "" "" "" ""], "enum" ["read" "edit" "publish" "delete" "manage" "editWorkspace"]}, "annotations" {"required" ["tagmanager.accounts.permissions.create"]}}}, "type" "object", "description" "Defines the Google Tag Manager Account access permissions.", "id" "AccountAccess"}, "CreateContainerVersionResponse" {"type" "object", "description" "Create container versions response.", "id" "CreateContainerVersionResponse", "properties" {"compilerError" {"description" "Compiler errors or not.", "type" "boolean"}, "containerVersion" {"$ref" "ContainerVersion", "description" "The container version created."}}}, "ListAccountsResponse" {"properties" {"accounts" {"description" "List of GTM Accounts that a user has access to.", "type" "array", "items" {"$ref" "Account"}}}, "description" "List Accounts Response.", "id" "ListAccountsResponse", "type" "object"}, "ListContainerVersionsResponse" {"properties" {"containerVersionHeader" {"items" {"$ref" "ContainerVersionHeader"}, "description" "All container version headers of a GTM Container.", "type" "array"}, "containerVersion" {"items" {"$ref" "ContainerVersion"}, "type" "array", "description" "All versions of a GTM Container."}}, "description" "List container versions response.", "id" "ListContainerVersionsResponse", "type" "object"}, "TeardownTag" {"properties" {"tagName" {"description" "The name of the teardown tag.", "type" "string"}, "stopTeardownOnFailure" {"description" "If true, fire the teardown tag if and only if the main tag fires successfully. If false, fire the teardown tag regardless of main tag firing status.", "type" "boolean"}}, "type" "object", "id" "TeardownTag"}, "ListVariablesResponse" {"type" "object", "id" "ListVariablesResponse", "properties" {"variables" {"description" "All GTM Variables of a GTM Container.", "items" {"$ref" "Variable"}, "type" "array"}}, "description" "List Variables Response."}, "ListContainersResponse" {"type" "object", "properties" {"containers" {"description" "All Containers of a GTM Account.", "type" "array", "items" {"$ref" "Container"}}}, "id" "ListContainersResponse", "description" "List Containers Response."}, "Account" {"description" "Represents a Google Tag Manager Account.", "properties" {"fingerprint" {"type" "string", "description" "The fingerprint of the GTM Account as computed at storage time. This value is recomputed whenever the account is modified."}, "shareData" {"description" "Whether the account shares data anonymously with Google and others. @mutable tagmanager.accounts.create @mutable tagmanager.accounts.update", "type" "boolean"}, "accountId" {"description" "The Account ID uniquely identifies the GTM Account.", "type" "string"}, "name" {"type" "string", "description" "Account display name. @mutable tagmanager.accounts.create @mutable tagmanager.accounts.update"}}, "type" "object", "id" "Account"}, "Container" {"properties" {"timeZoneCountryId" {"description" "Container Country ID. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update", "annotations" {"required" ["tagmanager.accounts.containers.create"]}, "type" "string"}, "accountId" {"description" "GTM Account ID.", "type" "string"}, "fingerprint" {"type" "string", "description" "The fingerprint of the GTM Container as computed at storage time. This value is recomputed whenever the account is modified."}, "enabledBuiltInVariable" {"type" "array", "description" "List of enabled built-in variables. Valid values include: pageUrl, pageHostname, pagePath, referrer, event, clickElement, clickClasses, clickId, clickTarget, clickUrl, clickText, formElement, formClasses, formId, formTarget, formUrl, formText, errorMessage, errorUrl, errorLine, newHistoryFragment, oldHistoryFragment, newHistoryState, oldHistoryState, historySource, containerVersion, debugMode, randomNumber, containerId. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update", "items" {"enum" ["pageUrl" "pageHostname" "pagePath" "referrer" "event" "clickElement" "clickClasses" "clickId" "clickTarget" "clickUrl" "clickText" "firstPartyServingUrl" "formElement" "formClasses" "formId" "formTarget" "formUrl" "formText" "environmentName" "errorMessage" "errorUrl" "errorLine" "newHistoryUrl" "oldHistoryUrl" "newHistoryFragment" "oldHistoryFragment" "newHistoryState" "oldHistoryState" "historySource" "containerVersion" "debugMode" "randomNumber" "containerId" "appId" "appName" "appVersionCode" "appVersionName" "language" "osVersion" "platform" "sdkVersion" "deviceName" "resolution" "advertiserId" "advertisingTrackingEnabled" "htmlId" "ampBrowserLanguage" "ampCanonicalPath" "ampCanonicalUrl" "ampCanonicalHost" "ampReferrer" "ampTitle" "ampClientId" "ampClientTimezone" "ampClientTimestamp" "ampClientScreenWidth" "ampClientScreenHeight" "ampClientScrollX" "ampClientScrollY" "ampClientMaxScrollX" "ampClientMaxScrollY" "ampTotalEngagedTime" "ampPageViewId" "ampPageLoadTime" "ampPageDownloadTime" "ampGtmEvent" "eventName" "firebaseEventParameterCampaign" "firebaseEventParameterCampaignAclid" "firebaseEventParameterCampaignAnid" "firebaseEventParameterCampaignClickTimestamp" "firebaseEventParameterCampaignContent" "firebaseEventParameterCampaignCp1" "firebaseEventParameterCampaignGclid" "firebaseEventParameterCampaignSource" "firebaseEventParameterCampaignTerm" "firebaseEventParameterCurrency" "firebaseEventParameterDynamicLinkAcceptTime" "firebaseEventParameterDynamicLinkLinkid" "firebaseEventParameterNotificationMessageDeviceTime" "firebaseEventParameterNotificationMessageId" "firebaseEventParameterNotificationMessageName" "firebaseEventParameterNotificationMessageTime" "firebaseEventParameterNotificationTopic" "firebaseEventParameterPreviousAppVersion" "firebaseEventParameterPreviousOsVersion" "firebaseEventParameterPrice" "firebaseEventParameterProductId" "firebaseEventParameterQuantity" "firebaseEventParameterValue" "videoProvider" "videoUrl" "videoTitle" "videoDuration" "videoPercent" "videoVisible" "videoStatus" "videoCurrentTime" "scrollDepthThreshold" "scrollDepthUnits" "scrollDepthDirection" "elementVisibilityRatio" "elementVisibilityTime" "elementVisibilityFirstTime" "elementVisibilityRecentTime"], "enumDescriptions" ["" "" "" "" "For web or mobile." "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "For web or mobile." "" "For web or mobile." "For web or mobile." "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" ""], "type" "string"}}, "domainName" {"type" "array", "description" "Optional list of domain names associated with the Container. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update", "items" {"type" "string"}}, "publicId" {"type" "string", "description" "Container Public ID."}, "name" {"description" "Container display name. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update", "annotations" {"required" ["tagmanager.accounts.containers.create"]}, "type" "string"}, "timeZoneId" {"annotations" {"required" ["tagmanager.accounts.containers.create"]}, "type" "string", "description" "Container Time Zone ID. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update"}, "usageContext" {"type" "array", "annotations" {"required" ["tagmanager.accounts.containers.create" "tagmanager.accounts.containers.update"]}, "description" "List of Usage Contexts for the Container. Valid values include: web, android, ios. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update", "items" {"enum" ["web" "android" "ios" "androidSdk5" "iosSdk5" "amp"], "type" "string", "enumDescriptions" ["" "" "" "" "" ""]}}, "containerId" {"type" "string", "description" "The Container ID uniquely identifies the GTM Container."}, "notes" {"description" "Container Notes. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update", "type" "string"}}, "description" "Represents a Google Tag Manager Container.", "type" "object", "id" "Container"}, "UserAccess" {"description" "Represents a user's permissions to an account and its container.", "properties" {"accountId" {"type" "string", "description" "GTM Account ID."}, "permissionId" {"description" "Account Permission ID.", "type" "string"}, "containerAccess" {"type" "array", "items" {"$ref" "ContainerAccess"}, "description" "GTM Container access permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update"}, "emailAddress" {"type" "string", "description" "User's email address. @mutable tagmanager.accounts.permissions.create", "annotations" {"required" ["tagmanager.accounts.permissions.create"]}}, "accountAccess" {"$ref" "AccountAccess", "annotations" {"required" ["tagmanager.accounts.permissions.create"]}, "description" "GTM Account access permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update"}}, "id" "UserAccess", "type" "object"}, "ContainerAccess" {"properties" {"permission" {"description" "List of Container permissions. Valid container permissions are: read, edit, delete, publish. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update", "type" "array", "items" {"enum" ["read" "edit" "publish" "delete" "manage" "editWorkspace"], "enumDescriptions" ["" "" "" "" "" ""], "type" "string"}}, "containerId" {"type" "string", "description" "GTM Container ID. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update"}}, "type" "object", "description" "Defines the Google Tag Manager Container access permissions.", "id" "ContainerAccess"}, "ContainerVersionHeader" {"properties" {"numRules" {"description" "Number of rules in the container version.", "type" "string"}, "numTags" {"type" "string", "description" "Number of tags in the container version."}, "accountId" {"type" "string", "description" "GTM Account ID."}, "numTriggers" {"type" "string", "description" "Number of triggers in the container version."}, "name" {"type" "string", "description" "Container version display name."}, "numVariables" {"description" "Number of variables in the container version.", "type" "string"}, "containerVersionId" {"type" "string", "description" "The Container Version ID uniquely identifies the GTM Container Version."}, "deleted" {"description" "A value of true indicates this container version has been deleted.", "type" "boolean"}, "containerId" {"type" "string", "description" "GTM Container ID."}, "numMacros" {"description" "Number of macros in the container version.", "type" "string"}}, "description" "Represents a Google Tag Manager Container Version Header.", "id" "ContainerVersionHeader", "type" "object"}, "Parameter" {"description" "Represents a Google Tag Manager Parameter.", "properties" {"type" {"annotations" {"required" ["tagmanager.accounts.containers.tags.create" "tagmanager.accounts.containers.tags.update" "tagmanager.accounts.containers.triggers.create" "tagmanager.accounts.containers.triggers.update" "tagmanager.accounts.containers.variables.create" "tagmanager.accounts.containers.variables.update"]}, "enumDescriptions" ["May include variable references (such as \"{{myVariable}}\")." "" "" "" "" "" ""], "description" "The parameter type. Valid values are: - boolean: The value represents a boolean, represented as 'true' or 'false' - integer: The value represents a 64-bit signed integer value, in base 10 - list: A list of parameters should be specified - map: A map of parameters should be specified - template: The value represents any text; this can include variable references (even variable references that might return non-string types) - trigger_reference: The value represents a trigger, represented as the trigger id - tag_reference: The value represents a tag, represented as the tag name @mutable tagmanager.accounts.containers.variables.create @mutable tagmanager.accounts.containers.variables.update @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update @mutable tagmanager.accounts.containers.tags.create @mutable tagmanager.accounts.containers.tags.update", "type" "string", "enum" ["template" "integer" "boolean" "list" "map" "triggerReference" "tagReference"]}, "list" {"description" "This list parameter's parameters (keys will be ignored). @mutable tagmanager.accounts.containers.variables.create @mutable tagmanager.accounts.containers.variables.update @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update @mutable tagmanager.accounts.containers.tags.create @mutable tagmanager.accounts.containers.tags.update", "type" "array", "items" {"$ref" "Parameter"}}, "value" {"type" "string", "description" "A parameter's value (may contain variable references such as \"{{myVariable}}\") as appropriate to the specified type. @mutable tagmanager.accounts.containers.variables.create @mutable tagmanager.accounts.containers.variables.update @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update @mutable tagmanager.accounts.containers.tags.create @mutable tagmanager.accounts.containers.tags.update"}, "key" {"type" "string", "description" "The named key that uniquely identifies a parameter. Required for top-level parameters, as well as map values. Ignored for list values. @mutable tagmanager.accounts.containers.variables.create @mutable tagmanager.accounts.containers.variables.update @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update @mutable tagmanager.accounts.containers.tags.create @mutable tagmanager.accounts.containers.tags.update"}, "map" {"type" "array", "items" {"$ref" "Parameter"}, "description" "This map parameter's parameters (must have keys; keys must be unique). @mutable tagmanager.accounts.containers.variables.create @mutable tagmanager.accounts.containers.variables.update @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update @mutable tagmanager.accounts.containers.tags.create @mutable tagmanager.accounts.containers.tags.update"}}, "type" "object", "id" "Parameter"}, "PublishContainerVersionResponse" {"description" "Publish container version response.", "properties" {"containerVersion" {"$ref" "ContainerVersion", "description" "The container version created."}, "compilerError" {"type" "boolean", "description" "Compiler errors or not."}}, "id" "PublishContainerVersionResponse", "type" "object"}, "Rule" {"description" "Represents a Google Tag Manager Rule.", "type" "object", "id" "Rule", "properties" {"ruleId" {"description" "The Rule ID uniquely identifies the GTM Rule.", "type" "string"}, "notes" {"type" "string", "description" "User notes on how to apply this rule in the container. @mutable tagmanager.accounts.containers.rules.create @mutable tagmanager.accounts.containers.rules.update"}, "accountId" {"type" "string", "description" "GTM Account ID."}, "condition" {"description" "The list of conditions that make up this rule (implicit AND between them). @mutable tagmanager.accounts.containers.rules.create @mutable tagmanager.accounts.containers.rules.update", "items" {"$ref" "Condition"}, "type" "array"}, "name" {"type" "string", "description" "Rule display name. @mutable tagmanager.accounts.containers.rules.create @mutable tagmanager.accounts.containers.rules.update"}, "containerId" {"type" "string", "description" "GTM Container ID."}, "fingerprint" {"description" "The fingerprint of the GTM Rule as computed at storage time. This value is recomputed whenever the rule is modified.", "type" "string"}}}, "Environment" {"properties" {"environmentId" {"description" "GTM Environment ID uniquely identifies the GTM Environment.", "type" "string"}, "url" {"description" "Default preview page url for the environment. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update", "type" "string"}, "accountId" {"description" "GTM Account ID.", "type" "string"}, "authorizationTimestampMs" {"type" "string", "description" "The last update time-stamp for the authorization code.", "format" "int64"}, "fingerprint" {"type" "string", "description" "The fingerprint of the GTM environment as computed at storage time. This value is recomputed whenever the environment is modified."}, "authorizationCode" {"type" "string", "description" "The environment authorization code."}, "enableDebug" {"description" "Whether or not to enable debug by default on for the environment. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update", "type" "boolean"}, "name" {"annotations" {"required" ["tagmanager.accounts.containers.environments.create" "tagmanager.accounts.containers.environments.update"]}, "type" "string", "description" "The environment display name. Can be set or changed only on USER type environments. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update"}, "containerVersionId" {"type" "string"}, "type" {"enum" ["user" "live" "latest" "draft"], "description" "The type of this environment.", "enumDescriptions" ["Used for user defined environments." "Used for Live environment, which points to the live published container version." "Used for Latest environment, which points to the latest created container version." "Used for Draft environment, which points to the single draft in the container."], "type" "string"}, "containerId" {"type" "string", "description" "GTM Container ID."}, "description" {"description" "The environment description. Can be set or changed only on USER type environments. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update", "type" "string"}}, "description" "Represents a Google Tag Manager Environment. Note that a user can create, delete and update environments of type USER, but can only update the enable_debug and url fields of environments of other types.", "id" "Environment", "type" "object"}, "FolderEntities" {"properties" {"variable" {"description" "The list of variables inside the folder.", "items" {"$ref" "Variable"}, "type" "array"}, "tag" {"type" "array", "items" {"$ref" "Tag"}, "description" "The list of tags inside the folder."}, "trigger" {"type" "array", "description" "The list of triggers inside the folder.", "items" {"$ref" "Trigger"}}}, "description" "Represents a Google Tag Manager Folder's contents.", "id" "FolderEntities", "type" "object"}, "Variable" {"type" "object", "description" "Represents a Google Tag Manager Variable.", "id" "Variable", "properties" {"parameter" {"items" {"$ref" "Parameter"}, "type" "array", "description" "The variable's parameters. @mutable tagmanager.accounts.containers.variables.create @mutable tagmanager.accounts.containers.variables.update"}, "accountId" {"type" "string", "description" "GTM Account ID."}, "disablingTriggerId" {"description" "For mobile containers only: A list of trigger IDs for disabling conditional variables; the variable is enabled if one of the enabling trigger is true while all the disabling trigger are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.variables.create @mutable tagmanager.accounts.containers.variables.update", "type" "array", "items" {"type" "string"}}, "variableId" {"description" "The Variable ID uniquely identifies the GTM Variable.", "type" "string"}, "fingerprint" {"description" "The fingerprint of the GTM Variable as computed at storage time. This value is recomputed whenever the variable is modified.", "type" "string"}, "parentFolderId" {"type" "string", "description" "Parent folder id."}, "name" {"description" "Variable display name. @mutable tagmanager.accounts.containers.variables.create @mutable tagmanager.accounts.containers.variables.update", "annotations" {"required" ["tagmanager.accounts.containers.variables.create" "tagmanager.accounts.containers.variables.update"]}, "type" "string"}, "scheduleStartMs" {"type" "string", "description" "The start timestamp in milliseconds to schedule a variable. @mutable tagmanager.accounts.containers.variables.create @mutable tagmanager.accounts.containers.variables.update", "format" "int64"}, "scheduleEndMs" {"format" "int64", "type" "string", "description" "The end timestamp in milliseconds to schedule a variable. @mutable tagmanager.accounts.containers.variables.create @mutable tagmanager.accounts.containers.variables.update"}, "enablingTriggerId" {"description" "For mobile containers only: A list of trigger IDs for enabling conditional variables; the variable is enabled if one of the enabling triggers is true while all the disabling triggers are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.variables.create @mutable tagmanager.accounts.containers.variables.update", "type" "array", "items" {"type" "string"}}, "type" {"annotations" {"required" ["tagmanager.accounts.containers.variables.create" "tagmanager.accounts.containers.variables.update"]}, "description" "GTM Variable Type. @mutable tagmanager.accounts.containers.variables.create @mutable tagmanager.accounts.containers.variables.update", "type" "string"}, "containerId" {"type" "string", "description" "GTM Container ID."}, "notes" {"description" "User notes on how to apply this variable in the container. @mutable tagmanager.accounts.containers.variables.create @mutable tagmanager.accounts.containers.variables.update", "type" "string"}}}, "Tag" {"type" "object", "id" "Tag", "properties" {"firingTriggerId" {"items" {"type" "string"}, "type" "array", "description" "Firing trigger IDs. A tag will fire when any of the listed triggers are true and all of its blockingTriggerIds (if any specified) are false. @mutable tagmanager.accounts.containers.tags.create @mutable tagmanager.accounts.containers.tags.update"}, "priority" {"description" "User defined numeric priority of the tag. Tags are fired asynchronously in order of priority. Tags with higher numeric value fire first. A tag's priority can be a positive or negative value. The default value is 0. @mutable tagmanager.accounts.containers.tags.create @mutable tagmanager.accounts.containers.tags.update", "$ref" "Parameter"}, "parameter" {"type" "array", "description" "The tag's parameters. @mutable tagmanager.accounts.containers.tags.create @mutable tagmanager.accounts.containers.tags.update", "items" {"$ref" "Parameter"}}, "accountId" {"description" "GTM Account ID.", "type" "string"}, "setupTag" {"items" {"$ref" "SetupTag"}, "type" "array", "description" "The list of setup tags. Currently we only allow one."}, "tagId" {"description" "The Tag ID uniquely identifies the GTM Tag.", "type" "string"}, "fingerprint" {"type" "string", "description" "The fingerprint of the GTM Tag as computed at storage time. This value is recomputed whenever the tag is modified."}, "tagFiringOption" {"type" "string", "enumDescriptions" ["Tag can be fired multiple times per event." "Tag can only be fired per event but can be fired multiple times per load (e.g., app load or page load)." "Tag can only be fired per load (e.g., app load or page load)."], "description" "Option to fire this tag.", "enum" ["unlimited" "oncePerEvent" "oncePerLoad"]}, "parentFolderId" {"description" "Parent folder id.", "type" "string"}, "blockingRuleId" {"description" "Blocking rule IDs. If any of the listed rules evaluate to true, the tag will not fire. @mutable tagmanager.accounts.containers.tags.create @mutable tagmanager.accounts.containers.tags.update", "type" "array", "items" {"type" "string"}}, "blockingTriggerId" {"type" "array", "description" "Blocking trigger IDs. If any of the listed triggers evaluate to true, the tag will not fire. @mutable tagmanager.accounts.containers.tags.create @mutable tagmanager.accounts.containers.tags.update", "items" {"type" "string"}}, "name" {"description" "Tag display name. @mutable tagmanager.accounts.containers.tags.create @mutable tagmanager.accounts.containers.tags.update", "type" "string", "annotations" {"required" ["tagmanager.accounts.containers.tags.create" "tagmanager.accounts.containers.tags.update"]}}, "paused" {"description" "True if the tag is paused. @mutable tagmanager.accounts.containers.tags.create @mutable tagmanager.accounts.containers.tags.update", "type" "boolean"}, "teardownTag" {"items" {"$ref" "TeardownTag"}, "type" "array", "description" "The list of teardown tags. Currently we only allow one."}, "scheduleStartMs" {"type" "string", "description" "The start timestamp in milliseconds to schedule a tag. @mutable tagmanager.accounts.containers.tags.create @mutable tagmanager.accounts.containers.tags.update", "format" "int64"}, "scheduleEndMs" {"type" "string", "format" "int64", "description" "The end timestamp in milliseconds to schedule a tag. @mutable tagmanager.accounts.containers.tags.create @mutable tagmanager.accounts.containers.tags.update"}, "liveOnly" {"description" "If set to true, this tag will only fire in the live environment (e.g. not in preview or debug mode). @mutable tagmanager.accounts.containers.tags.create @mutable tagmanager.accounts.containers.tags.update", "type" "boolean"}, "type" {"annotations" {"required" ["tagmanager.accounts.containers.tags.create"]}, "type" "string", "description" "GTM Tag Type. @mutable tagmanager.accounts.containers.tags.create @mutable tagmanager.accounts.containers.tags.update"}, "firingRuleId" {"description" "Firing rule IDs. A tag will fire when any of the listed rules are true and all of its blockingRuleIds (if any specified) are false. @mutable tagmanager.accounts.containers.tags.create @mutable tagmanager.accounts.containers.tags.update", "items" {"type" "string"}, "type" "array"}, "containerId" {"description" "GTM Container ID.", "type" "string"}, "notes" {"type" "string", "description" "User notes on how to apply this tag in the container. @mutable tagmanager.accounts.containers.tags.create @mutable tagmanager.accounts.containers.tags.update"}}, "description" "Represents a Google Tag Manager Tag."}, "Condition" {"id" "Condition", "type" "object", "properties" {"type" {"type" "string", "annotations" {"required" ["tagmanager.accounts.containers.triggers.create" "tagmanager.accounts.containers.triggers.update"]}, "enumDescriptions" ["" "" "" "" "" "" "" "" "" "" ""], "description" "The type of operator for this condition. @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update", "enum" ["equals" "contains" "startsWith" "endsWith" "matchRegex" "greater" "greaterOrEquals" "less" "lessOrEquals" "cssSelector" "urlMatches"]}, "parameter" {"description" "A list of named parameters (key/value), depending on the condition's type. Notes: - For binary operators, include parameters named arg0 and arg1 for specifying the left and right operands, respectively. - At this time, the left operand (arg0) must be a reference to a variable. - For case-insensitive Regex matching, include a boolean parameter named ignore_case that is set to true. If not specified or set to any other value, the matching will be case sensitive. - To negate an operator, include a boolean parameter named negate boolean parameter that is set to true. @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update", "type" "array", "items" {"$ref" "Parameter"}, "annotations" {"required" ["tagmanager.accounts.containers.triggers.create" "tagmanager.accounts.containers.triggers.update"]}}}, "description" "Represents a predicate."}, "Macro" {"properties" {"macroId" {"description" "The Macro ID uniquely identifies the GTM Macro.", "type" "string"}, "parameter" {"description" "The macro's parameters. @mutable tagmanager.accounts.containers.macros.create @mutable tagmanager.accounts.containers.macros.update", "items" {"$ref" "Parameter"}, "type" "array"}, "accountId" {"type" "string", "description" "GTM Account ID."}, "fingerprint" {"description" "The fingerprint of the GTM Macro as computed at storage time. This value is recomputed whenever the macro is modified.", "type" "string"}, "parentFolderId" {"type" "string", "description" "Parent folder id."}, "name" {"type" "string", "description" "Macro display name. @mutable tagmanager.accounts.containers.macros.create @mutable tagmanager.accounts.containers.macros.update"}, "disablingRuleId" {"type" "array", "items" {"type" "string"}, "description" "For mobile containers only: A list of rule IDs for disabling conditional macros; the macro is enabled if one of the enabling rules is true while all the disabling rules are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.macros.create @mutable tagmanager.accounts.containers.macros.update"}, "enablingRuleId" {"items" {"type" "string"}, "type" "array", "description" "For mobile containers only: A list of rule IDs for enabling conditional macros; the macro is enabled if one of the enabling rules is true while all the disabling rules are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.macros.create @mutable tagmanager.accounts.containers.macros.update"}, "scheduleStartMs" {"type" "string", "format" "int64", "description" "The start timestamp in milliseconds to schedule a macro. @mutable tagmanager.accounts.containers.macros.create @mutable tagmanager.accounts.containers.macros.update"}, "scheduleEndMs" {"type" "string", "format" "int64", "description" "The end timestamp in milliseconds to schedule a macro. @mutable tagmanager.accounts.containers.macros.create @mutable tagmanager.accounts.containers.macros.update"}, "type" {"description" "GTM Macro Type. @mutable tagmanager.accounts.containers.macros.create @mutable tagmanager.accounts.containers.macros.update", "type" "string"}, "containerId" {"description" "GTM Container ID.", "type" "string"}, "notes" {"description" "User notes on how to apply this macro in the container. @mutable tagmanager.accounts.containers.macros.create @mutable tagmanager.accounts.containers.macros.update", "type" "string"}}, "type" "object", "description" "Represents a Google Tag Manager Macro.", "id" "Macro"}, "Trigger" {"properties" {"continuousTimeMinMilliseconds" {"$ref" "Parameter", "description" "A visibility trigger minimum continuous visible time (in milliseconds). Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update"}, "autoEventFilter" {"type" "array", "items" {"$ref" "Condition"}, "description" "Used in the case of auto event tracking. @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update"}, "intervalSeconds" {"$ref" "Parameter", "description" "Time between Timer Events to fire (in seconds). Only valid for AMP Timer trigger. @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update"}, "parameter" {"description" "Additional parameters. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update", "type" "array", "items" {"$ref" "Parameter"}}, "accountId" {"description" "GTM Account ID.", "type" "string"}, "fingerprint" {"type" "string", "description" "The fingerprint of the GTM Trigger as computed at storage time. This value is recomputed whenever the trigger is modified."}, "waitForTags" {"$ref" "Parameter", "description" "Whether or not we should delay the form submissions or link opening until all of the tags have fired (by preventing the default action and later simulating the default action). Only valid for Form Submission and Link Click triggers. @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update"}, "parentFolderId" {"description" "Parent folder id.", "type" "string"}, "totalTimeMinMilliseconds" {"description" "A visibility trigger minimum total visible time (in milliseconds). Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update", "$ref" "Parameter"}, "maxTimerLengthSeconds" {"description" "Max time to fire Timer Events (in seconds). Only valid for AMP Timer trigger. @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update", "$ref" "Parameter"}, "checkValidation" {"$ref" "Parameter", "description" "Whether or not we should only fire tags if the form submit or link click event is not cancelled by some other event handler (e.g. because of validation). Only valid for Form Submission and Link Click triggers. @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update"}, "name" {"annotations" {"required" ["tagmanager.accounts.containers.triggers.create" "tagmanager.accounts.containers.triggers.update"]}, "description" "Trigger display name. @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update", "type" "string"}, "eventName" {"description" "Name of the GTM event that is fired. Only valid for Timer triggers. @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update", "$ref" "Parameter"}, "limit" {"$ref" "Parameter", "description" "Limit of the number of GTM events this Timer Trigger will fire. If no limit is set, we will continue to fire GTM events until the user leaves the page. Only valid for Timer triggers. @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update"}, "interval" {"$ref" "Parameter", "description" "Time between triggering recurring Timer Events (in milliseconds). Only valid for Timer triggers. @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update"}, "uniqueTriggerId" {"$ref" "Parameter", "description" "Globally unique id of the trigger that auto-generates this (a Form Submit, Link Click or Timer listener) if any. Used to make incompatible auto-events work together with trigger filtering based on trigger ids. This value is populated during output generation since the tags implied by triggers don't exist until then. Only valid for Form Submit, Link Click and Timer triggers. @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update"}, "verticalScrollPercentageList" {"$ref" "Parameter", "description" "List of integer percentage values for scroll triggers. The trigger will fire when each percentage is reached when the view is scrolled vertically. Only valid for AMP scroll triggers. @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update"}, "visiblePercentageMin" {"description" "A visibility trigger minimum percent visibility. Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update", "$ref" "Parameter"}, "filter" {"items" {"$ref" "Condition"}, "description" "The trigger will only fire iff all Conditions are true. @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update", "type" "array"}, "type" {"annotations" {"required" ["tagmanager.accounts.containers.triggers.create"]}, "description" "Defines the data layer event that causes this trigger. @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update", "enum" ["pageview" "domReady" "windowLoaded" "customEvent" "triggerGroup" "always" "formSubmission" "click" "linkClick" "jsError" "historyChange" "timer" "ampClick" "ampTimer" "ampScroll" "ampVisibility" "youTubeVideo" "scrollDepth" "elementVisibility"], "type" "string", "enumDescriptions" ["" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" ""]}, "visiblePercentageMax" {"description" "A visibility trigger maximum percent visibility. Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update", "$ref" "Parameter"}, "waitForTagsTimeout" {"$ref" "Parameter", "description" "How long to wait (in milliseconds) for tags to fire when 'waits_for_tags' above evaluates to true. Only valid for Form Submission and Link Click triggers. @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update"}, "horizontalScrollPercentageList" {"$ref" "Parameter", "description" "List of integer percentage values for scroll triggers. The trigger will fire when each percentage is reached when the view is scrolled horizontally. Only valid for AMP scroll triggers. @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update"}, "containerId" {"description" "GTM Container ID.", "type" "string"}, "triggerId" {"description" "The Trigger ID uniquely identifies the GTM Trigger.", "type" "string"}, "selector" {"description" "A click trigger CSS selector (i.e. \"a\", \"button\" etc.). Only valid for AMP Click trigger. @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update", "$ref" "Parameter"}, "customEventFilter" {"items" {"$ref" "Condition"}, "description" "Used in the case of custom event, which is fired iff all Conditions are true. @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update", "type" "array"}, "visibilitySelector" {"description" "A visibility trigger CSS selector (i.e. \"#id\"). Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.triggers.create @mutable tagmanager.accounts.containers.triggers.update", "$ref" "Parameter"}}, "id" "Trigger", "type" "object", "description" "Represents a Google Tag Manager Trigger"}}}