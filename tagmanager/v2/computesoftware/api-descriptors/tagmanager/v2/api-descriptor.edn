#:compute.gcp.descriptor{:name "tagmanager", :title "Tag Manager API", :api-version "v2", :revision "20220323", :endpoint #:compute.gcp.descriptor{:url "https://tagmanager.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"location" "query", "type" "string", "description" "JSONP"}, "uploadType" {"description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "type" "string", "location" "query"}, "key" {"type" "string", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "location" "query"}, "access_token" {"type" "string", "location" "query", "description" "OAuth access token."}, "oauth_token" {"location" "query", "type" "string", "description" "OAuth 2.0 token for the current user."}, "prettyPrint" {"type" "boolean", "default" "true", "description" "Returns response with indentations and line breaks.", "location" "query"}, "alt" {"enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "enum" ["json" "media" "proto"], "location" "query", "type" "string", "description" "Data format for response.", "default" "json"}, "$.xgafv" {"type" "string", "enum" ["1" "2"], "location" "query", "description" "V1 error format.", "enumDescriptions" ["v1 error format" "v2 error format"]}, "fields" {"description" "Selector specifying which fields to include in a partial response.", "type" "string", "location" "query"}, "upload_protocol" {"type" "string", "location" "query", "description" "Upload protocol for media (e.g. \"raw\", \"multipart\")."}, "quotaUser" {"type" "string", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "location" "query"}}, :op->info {"tagmanager.accounts.containers.workspaces.resolve_conflict" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v2/{+path}:resolve_conflict", :request {"$ref" "Entity"}, :parameters {"fingerprint" {"description" "When provided, this fingerprint must match the fingerprint of the entity_in_workspace in the merge conflict.", "location" "query", "type" "string"}, "path" {"required" true, "location" "path", "type" "string", "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$", "description" "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"}}, :description "Resolves a merge conflict for a workspace entity by updating it to the resolved entity passed in the request."}, "tagmanager.accounts.containers.workspaces.templates.create" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v2/{+parent}/templates", :request {"$ref" "CustomTemplate"}, :response {"$ref" "CustomTemplate"}, :parameters {"parent" {"type" "string", "description" "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}", "required" true, "location" "path", "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"}}, :description "Creates a GTM Custom Template."}, "tagmanager.accounts.containers.list" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v2/{+parent}/containers", :response {"$ref" "ListContainersResponse"}, :parameters {"parent" {"pattern" "^accounts/[^/]+$", "type" "string", "description" "GTM Accounts's API relative path. Example: accounts/{account_id}.", "location" "path", "required" true}, "pageToken" {"description" "Continuation token for fetching the next page of results.", "location" "query", "type" "string"}}, :description "Lists all Containers that belongs to a GTM Account."}, "tagmanager.accounts.containers.create" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v2/{+parent}/containers", :request {"$ref" "Container"}, :response {"$ref" "Container"}, :parameters {"parent" {"pattern" "^accounts/[^/]+$", "description" "GTM Account's API relative path. Example: accounts/{account_id}.", "location" "path", "required" true, "type" "string"}}, :description "Creates a Container."}, "tagmanager.accounts.containers.workspaces.variables.list" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v2/{+parent}/variables", :response {"$ref" "ListVariablesResponse"}, :parameters {"pageToken" {"description" "Continuation token for fetching the next page of results.", "location" "query", "type" "string"}, "parent" {"required" true, "description" "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}", "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$", "location" "path", "type" "string"}}, :description "Lists all GTM Variables of a Container."}, "tagmanager.accounts.containers.versions.get" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v2/{+path}", :response {"$ref" "ContainerVersion"}, :parameters {"path" {"description" "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}", "location" "path", "type" "string", "required" true, "pattern" "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$"}, "containerVersionId" {"location" "query", "description" "The GTM ContainerVersion ID. Specify published to retrieve the currently published version.", "type" "string"}}, :description "Gets a Container Version."}, "tagmanager.accounts.containers.workspaces.folders.create" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v2/{+parent}/folders", :request {"$ref" "Folder"}, :response {"$ref" "Folder"}, :parameters {"parent" {"description" "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}", "required" true, "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$", "type" "string", "location" "path"}}, :description "Creates a GTM Folder."}, "tagmanager.accounts.containers.workspaces.templates.update" #:compute.gcp.descriptor{:http-method :put, :path "tagmanager/v2/{+path}", :request {"$ref" "CustomTemplate"}, :response {"$ref" "CustomTemplate"}, :parameters {"path" {"description" "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}", "location" "path", "type" "string", "required" true, "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$"}, "fingerprint" {"description" "When provided, this fingerprint must match the fingerprint of the templates in storage.", "location" "query", "type" "string"}}, :description "Updates a GTM Template."}, "tagmanager.accounts.containers.workspaces.variables.create" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v2/{+parent}/variables", :request {"$ref" "Variable"}, :response {"$ref" "Variable"}, :parameters {"parent" {"location" "path", "required" true, "description" "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}", "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$", "type" "string"}}, :description "Creates a GTM Variable."}, "tagmanager.accounts.containers.environments.update" #:compute.gcp.descriptor{:http-method :put, :path "tagmanager/v2/{+path}", :request {"$ref" "Environment"}, :response {"$ref" "Environment"}, :parameters {"path" {"description" "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}", "type" "string", "required" true, "pattern" "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$", "location" "path"}, "fingerprint" {"type" "string", "description" "When provided, this fingerprint must match the fingerprint of the environment in storage.", "location" "query"}}, :description "Updates a GTM Environment."}, "tagmanager.accounts.containers.environments.get" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v2/{+path}", :response {"$ref" "Environment"}, :parameters {"path" {"location" "path", "description" "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}", "type" "string", "pattern" "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$", "required" true}}, :description "Gets a GTM Environment."}, "tagmanager.accounts.containers.workspaces.tags.delete" #:compute.gcp.descriptor{:http-method :delete, :path "tagmanager/v2/{+path}", :parameters {"path" {"description" "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}", "location" "path", "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$", "type" "string", "required" true}}, :description "Deletes a GTM Tag."}, "tagmanager.accounts.containers.workspaces.folders.revert" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v2/{+path}:revert", :response {"$ref" "RevertFolderResponse"}, :parameters {"fingerprint" {"location" "query", "type" "string", "description" "When provided, this fingerprint must match the fingerprint of the tag in storage."}, "path" {"description" "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}", "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$", "type" "string", "required" true, "location" "path"}}, :description "Reverts changes to a GTM Folder in a GTM Workspace."}, "tagmanager.accounts.containers.workspaces.get" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v2/{+path}", :response {"$ref" "Workspace"}, :parameters {"path" {"description" "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}", "type" "string", "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$", "location" "path", "required" true}}, :description "Gets a Workspace."}, "tagmanager.accounts.containers.versions.delete" #:compute.gcp.descriptor{:http-method :delete, :path "tagmanager/v2/{+path}", :parameters {"path" {"required" true, "description" "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}", "location" "path", "type" "string", "pattern" "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$"}}, :description "Deletes a Container Version."}, "tagmanager.accounts.containers.workspaces.tags.update" #:compute.gcp.descriptor{:http-method :put, :path "tagmanager/v2/{+path}", :request {"$ref" "Tag"}, :response {"$ref" "Tag"}, :parameters {"fingerprint" {"location" "query", "type" "string", "description" "When provided, this fingerprint must match the fingerprint of the tag in storage."}, "path" {"required" true, "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$", "type" "string", "location" "path", "description" "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}"}}, :description "Updates a GTM Tag."}, "tagmanager.accounts.containers.workspaces.delete" #:compute.gcp.descriptor{:http-method :delete, :path "tagmanager/v2/{+path}", :parameters {"path" {"pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$", "description" "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}", "type" "string", "required" true, "location" "path"}}, :description "Deletes a Workspace."}, "tagmanager.accounts.containers.workspaces.triggers.create" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v2/{+parent}/triggers", :request {"$ref" "Trigger"}, :response {"$ref" "Trigger"}, :parameters {"parent" {"pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$", "type" "string", "description" "GTM Workspaces's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}", "required" true, "location" "path"}}, :description "Creates a GTM Trigger."}, "tagmanager.accounts.containers.environments.create" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v2/{+parent}/environments", :request {"$ref" "Environment"}, :response {"$ref" "Environment"}, :parameters {"parent" {"pattern" "^accounts/[^/]+/containers/[^/]+$", "required" true, "location" "path", "description" "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}", "type" "string"}}, :description "Creates a GTM Environment."}, "tagmanager.accounts.containers.workspaces.built_in_variables.list" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v2/{+parent}/built_in_variables", :response {"$ref" "ListEnabledBuiltInVariablesResponse"}, :parameters {"pageToken" {"location" "query", "type" "string", "description" "Continuation token for fetching the next page of results."}, "parent" {"type" "string", "required" true, "location" "path", "description" "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}", "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"}}, :description "Lists all the enabled Built-In Variables of a GTM Container."}, "tagmanager.accounts.containers.workspaces.zones.update" #:compute.gcp.descriptor{:http-method :put, :path "tagmanager/v2/{+path}", :request {"$ref" "Zone"}, :response {"$ref" "Zone"}, :parameters {"fingerprint" {"type" "string", "description" "When provided, this fingerprint must match the fingerprint of the zone in storage.", "location" "query"}, "path" {"pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$", "required" true, "description" "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}", "type" "string", "location" "path"}}, :description "Updates a GTM Zone."}, "tagmanager.accounts.containers.workspaces.quick_preview" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v2/{+path}:quick_preview", :response {"$ref" "QuickPreviewResponse"}, :parameters {"path" {"required" true, "description" "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}", "type" "string", "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$", "location" "path"}}, :description "Quick previews a workspace by creating a fake container version from all entities in the provided workspace."}, "tagmanager.accounts.containers.versions.update" #:compute.gcp.descriptor{:http-method :put, :path "tagmanager/v2/{+path}", :request {"$ref" "ContainerVersion"}, :response {"$ref" "ContainerVersion"}, :parameters {"fingerprint" {"description" "When provided, this fingerprint must match the fingerprint of the container version in storage.", "type" "string", "location" "query"}, "path" {"description" "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}", "location" "path", "type" "string", "required" true, "pattern" "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$"}}, :description "Updates a Container Version."}, "tagmanager.accounts.containers.workspaces.tags.revert" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v2/{+path}:revert", :response {"$ref" "RevertTagResponse"}, :parameters {"path" {"type" "string", "description" "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}", "required" true, "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$", "location" "path"}, "fingerprint" {"location" "query", "type" "string", "description" "When provided, this fingerprint must match the fingerprint of thetag in storage."}}, :description "Reverts changes to a GTM Tag in a GTM Workspace."}, "tagmanager.accounts.containers.workspaces.triggers.list" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v2/{+parent}/triggers", :response {"$ref" "ListTriggersResponse"}, :parameters {"pageToken" {"location" "query", "type" "string", "description" "Continuation token for fetching the next page of results."}, "parent" {"pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$", "type" "string", "location" "path", "required" true, "description" "GTM Workspaces's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"}}, :description "Lists all GTM Triggers of a Container."}, "tagmanager.accounts.containers.workspaces.sync" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v2/{+path}:sync", :response {"$ref" "SyncWorkspaceResponse"}, :parameters {"path" {"description" "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}", "type" "string", "location" "path", "required" true, "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"}}, :description "Syncs a workspace to the latest container version by updating all unmodified workspace entities and displaying conflicts for modified entities."}, "tagmanager.accounts.containers.workspaces.built_in_variables.create" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v2/{+parent}/built_in_variables", :response {"$ref" "CreateBuiltInVariableResponse"}, :parameters {"parent" {"description" "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}", "location" "path", "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$", "required" true, "type" "string"}, "type" {"type" "string", "description" "The types of built-in variables to enable.", "enumDescriptions" ["" "" "" "" "" "For web or mobile." "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "For web or mobile." "" "For web or mobile." "For web or mobile." "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" ""], "repeated" true, "enum" ["builtInVariableTypeUnspecified" "pageUrl" "pageHostname" "pagePath" "referrer" "event" "clickElement" "clickClasses" "clickId" "clickTarget" "clickUrl" "clickText" "firstPartyServingUrl" "formElement" "formClasses" "formId" "formTarget" "formUrl" "formText" "errorMessage" "errorUrl" "errorLine" "newHistoryUrl" "oldHistoryUrl" "newHistoryFragment" "oldHistoryFragment" "newHistoryState" "oldHistoryState" "historySource" "containerVersion" "debugMode" "randomNumber" "containerId" "appId" "appName" "appVersionCode" "appVersionName" "language" "osVersion" "platform" "sdkVersion" "deviceName" "resolution" "advertiserId" "advertisingTrackingEnabled" "htmlId" "environmentName" "ampBrowserLanguage" "ampCanonicalPath" "ampCanonicalUrl" "ampCanonicalHost" "ampReferrer" "ampTitle" "ampClientId" "ampClientTimezone" "ampClientTimestamp" "ampClientScreenWidth" "ampClientScreenHeight" "ampClientScrollX" "ampClientScrollY" "ampClientMaxScrollX" "ampClientMaxScrollY" "ampTotalEngagedTime" "ampPageViewId" "ampPageLoadTime" "ampPageDownloadTime" "ampGtmEvent" "eventName" "firebaseEventParameterCampaign" "firebaseEventParameterCampaignAclid" "firebaseEventParameterCampaignAnid" "firebaseEventParameterCampaignClickTimestamp" "firebaseEventParameterCampaignContent" "firebaseEventParameterCampaignCp1" "firebaseEventParameterCampaignGclid" "firebaseEventParameterCampaignSource" "firebaseEventParameterCampaignTerm" "firebaseEventParameterCurrency" "firebaseEventParameterDynamicLinkAcceptTime" "firebaseEventParameterDynamicLinkLinkid" "firebaseEventParameterNotificationMessageDeviceTime" "firebaseEventParameterNotificationMessageId" "firebaseEventParameterNotificationMessageName" "firebaseEventParameterNotificationMessageTime" "firebaseEventParameterNotificationTopic" "firebaseEventParameterPreviousAppVersion" "firebaseEventParameterPreviousOsVersion" "firebaseEventParameterPrice" "firebaseEventParameterProductId" "firebaseEventParameterQuantity" "firebaseEventParameterValue" "videoProvider" "videoUrl" "videoTitle" "videoDuration" "videoPercent" "videoVisible" "videoStatus" "videoCurrentTime" "scrollDepthThreshold" "scrollDepthUnits" "scrollDepthDirection" "elementVisibilityRatio" "elementVisibilityTime" "elementVisibilityFirstTime" "elementVisibilityRecentTime" "requestPath" "requestMethod" "clientName" "queryString" "serverPageLocationUrl" "serverPageLocationPath" "serverPageLocationHostname"], "location" "query"}}, :description "Creates one or more GTM Built-In Variables."}, "tagmanager.accounts.containers.workspaces.zones.create" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v2/{+parent}/zones", :request {"$ref" "Zone"}, :response {"$ref" "Zone"}, :parameters {"parent" {"pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$", "type" "string", "location" "path", "description" "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}", "required" true}}, :description "Creates a GTM Zone."}, "tagmanager.accounts.containers.workspaces.clients.create" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v2/{+parent}/clients", :request {"$ref" "Client"}, :response {"$ref" "Client"}, :parameters {"parent" {"description" "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}", "required" true, "type" "string", "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$", "location" "path"}}, :description "Creates a GTM Client."}, "tagmanager.accounts.containers.workspaces.clients.update" #:compute.gcp.descriptor{:http-method :put, :path "tagmanager/v2/{+path}", :request {"$ref" "Client"}, :response {"$ref" "Client"}, :parameters {"fingerprint" {"type" "string", "location" "query", "description" "When provided, this fingerprint must match the fingerprint of the client in storage."}, "path" {"location" "path", "type" "string", "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/clients/[^/]+$", "description" "GTM Client's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/clients/{client_id}", "required" true}}, :description "Updates a GTM Client."}, "tagmanager.accounts.containers.versions.undelete" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v2/{+path}:undelete", :response {"$ref" "ContainerVersion"}, :parameters {"path" {"required" true, "location" "path", "type" "string", "description" "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}", "pattern" "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$"}}, :description "Undeletes a Container Version."}, "tagmanager.accounts.containers.workspaces.zones.get" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v2/{+path}", :response {"$ref" "Zone"}, :parameters {"path" {"required" true, "description" "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}", "type" "string", "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$", "location" "path"}}, :description "Gets a GTM Zone."}, "tagmanager.accounts.containers.workspaces.tags.get" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v2/{+path}", :response {"$ref" "Tag"}, :parameters {"path" {"type" "string", "description" "GTM Tag's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/tags/{tag_id}", "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/tags/[^/]+$", "location" "path", "required" true}}, :description "Gets a GTM Tag."}, "tagmanager.accounts.containers.workspaces.tags.create" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v2/{+parent}/tags", :request {"$ref" "Tag"}, :response {"$ref" "Tag"}, :parameters {"parent" {"pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$", "location" "path", "required" true, "type" "string", "description" "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"}}, :description "Creates a GTM Tag."}, "tagmanager.accounts.containers.workspaces.variables.revert" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v2/{+path}:revert", :response {"$ref" "RevertVariableResponse"}, :parameters {"path" {"pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$", "required" true, "description" "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}", "location" "path", "type" "string"}, "fingerprint" {"description" "When provided, this fingerprint must match the fingerprint of the variable in storage.", "location" "query", "type" "string"}}, :description "Reverts changes to a GTM Variable in a GTM Workspace."}, "tagmanager.accounts.containers.delete" #:compute.gcp.descriptor{:http-method :delete, :path "tagmanager/v2/{+path}", :parameters {"path" {"required" true, "type" "string", "pattern" "^accounts/[^/]+/containers/[^/]+$", "description" "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}", "location" "path"}}, :description "Deletes a Container."}, "tagmanager.accounts.containers.workspaces.triggers.update" #:compute.gcp.descriptor{:http-method :put, :path "tagmanager/v2/{+path}", :request {"$ref" "Trigger"}, :response {"$ref" "Trigger"}, :parameters {"path" {"required" true, "location" "path", "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$", "type" "string", "description" "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}"}, "fingerprint" {"location" "query", "description" "When provided, this fingerprint must match the fingerprint of the trigger in storage.", "type" "string"}}, :description "Updates a GTM Trigger."}, "tagmanager.accounts.containers.workspaces.create_version" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v2/{+path}:create_version", :request {"$ref" "CreateContainerVersionRequestVersionOptions"}, :response {"$ref" "CreateContainerVersionResponse"}, :parameters {"path" {"pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$", "location" "path", "description" "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}", "required" true, "type" "string"}}, :description "Creates a Container Version from the entities present in the workspace, deletes the workspace, and sets the base container version to the newly created version."}, "tagmanager.accounts.containers.workspaces.folders.list" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v2/{+parent}/folders", :response {"$ref" "ListFoldersResponse"}, :parameters {"parent" {"description" "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}", "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$", "required" true, "type" "string", "location" "path"}, "pageToken" {"location" "query", "description" "Continuation token for fetching the next page of results.", "type" "string"}}, :description "Lists all GTM Folders of a Container."}, "tagmanager.accounts.containers.workspaces.built_in_variables.delete" #:compute.gcp.descriptor{:http-method :delete, :path "tagmanager/v2/{+path}", :parameters {"path" {"location" "path", "type" "string", "required" true, "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/built_in_variables$", "description" "GTM BuiltInVariable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/built_in_variables"}, "type" {"enumDescriptions" ["" "" "" "" "" "For web or mobile." "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "For web or mobile." "" "For web or mobile." "For web or mobile." "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" ""], "description" "The types of built-in variables to delete.", "location" "query", "enum" ["builtInVariableTypeUnspecified" "pageUrl" "pageHostname" "pagePath" "referrer" "event" "clickElement" "clickClasses" "clickId" "clickTarget" "clickUrl" "clickText" "firstPartyServingUrl" "formElement" "formClasses" "formId" "formTarget" "formUrl" "formText" "errorMessage" "errorUrl" "errorLine" "newHistoryUrl" "oldHistoryUrl" "newHistoryFragment" "oldHistoryFragment" "newHistoryState" "oldHistoryState" "historySource" "containerVersion" "debugMode" "randomNumber" "containerId" "appId" "appName" "appVersionCode" "appVersionName" "language" "osVersion" "platform" "sdkVersion" "deviceName" "resolution" "advertiserId" "advertisingTrackingEnabled" "htmlId" "environmentName" "ampBrowserLanguage" "ampCanonicalPath" "ampCanonicalUrl" "ampCanonicalHost" "ampReferrer" "ampTitle" "ampClientId" "ampClientTimezone" "ampClientTimestamp" "ampClientScreenWidth" "ampClientScreenHeight" "ampClientScrollX" "ampClientScrollY" "ampClientMaxScrollX" "ampClientMaxScrollY" "ampTotalEngagedTime" "ampPageViewId" "ampPageLoadTime" "ampPageDownloadTime" "ampGtmEvent" "eventName" "firebaseEventParameterCampaign" "firebaseEventParameterCampaignAclid" "firebaseEventParameterCampaignAnid" "firebaseEventParameterCampaignClickTimestamp" "firebaseEventParameterCampaignContent" "firebaseEventParameterCampaignCp1" "firebaseEventParameterCampaignGclid" "firebaseEventParameterCampaignSource" "firebaseEventParameterCampaignTerm" "firebaseEventParameterCurrency" "firebaseEventParameterDynamicLinkAcceptTime" "firebaseEventParameterDynamicLinkLinkid" "firebaseEventParameterNotificationMessageDeviceTime" "firebaseEventParameterNotificationMessageId" "firebaseEventParameterNotificationMessageName" "firebaseEventParameterNotificationMessageTime" "firebaseEventParameterNotificationTopic" "firebaseEventParameterPreviousAppVersion" "firebaseEventParameterPreviousOsVersion" "firebaseEventParameterPrice" "firebaseEventParameterProductId" "firebaseEventParameterQuantity" "firebaseEventParameterValue" "videoProvider" "videoUrl" "videoTitle" "videoDuration" "videoPercent" "videoVisible" "videoStatus" "videoCurrentTime" "scrollDepthThreshold" "scrollDepthUnits" "scrollDepthDirection" "elementVisibilityRatio" "elementVisibilityTime" "elementVisibilityFirstTime" "elementVisibilityRecentTime" "requestPath" "requestMethod" "clientName" "queryString" "serverPageLocationUrl" "serverPageLocationPath" "serverPageLocationHostname"], "type" "string", "repeated" true}}, :description "Deletes one or more GTM Built-In Variables."}, "tagmanager.accounts.containers.environments.delete" #:compute.gcp.descriptor{:http-method :delete, :path "tagmanager/v2/{+path}", :parameters {"path" {"description" "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}", "required" true, "type" "string", "location" "path", "pattern" "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$"}}, :description "Deletes a GTM Environment."}, "tagmanager.accounts.containers.environments.reauthorize" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v2/{+path}:reauthorize", :request {"$ref" "Environment"}, :response {"$ref" "Environment"}, :parameters {"path" {"pattern" "^accounts/[^/]+/containers/[^/]+/environments/[^/]+$", "type" "string", "location" "path", "required" true, "description" "GTM Environment's API relative path. Example: accounts/{account_id}/containers/{container_id}/environments/{environment_id}"}}, :description "Re-generates the authorization code for a GTM Environment."}, "tagmanager.accounts.containers.workspaces.getStatus" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v2/{+path}/status", :response {"$ref" "GetWorkspaceStatusResponse"}, :parameters {"path" {"pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$", "location" "path", "required" true, "description" "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}", "type" "string"}}, :description "Finds conflicting and modified entities in the workspace."}, "tagmanager.accounts.containers.workspaces.zones.delete" #:compute.gcp.descriptor{:http-method :delete, :path "tagmanager/v2/{+path}", :parameters {"path" {"pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$", "required" true, "type" "string", "description" "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}", "location" "path"}}, :description "Deletes a GTM Zone."}, "tagmanager.accounts.containers.workspaces.folders.update" #:compute.gcp.descriptor{:http-method :put, :path "tagmanager/v2/{+path}", :request {"$ref" "Folder"}, :response {"$ref" "Folder"}, :parameters {"path" {"required" true, "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$", "type" "string", "location" "path", "description" "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}"}, "fingerprint" {"description" "When provided, this fingerprint must match the fingerprint of the folder in storage.", "type" "string", "location" "query"}}, :description "Updates a GTM Folder."}, "tagmanager.accounts.get" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v2/{+path}", :response {"$ref" "Account"}, :parameters {"path" {"type" "string", "location" "path", "required" true, "description" "GTM Accounts's API relative path. Example: accounts/{account_id}", "pattern" "^accounts/[^/]+$"}}, :description "Gets a GTM Account."}, "tagmanager.accounts.containers.workspaces.folders.entities" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v2/{+path}:entities", :response {"$ref" "FolderEntities"}, :parameters {"path" {"description" "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}", "required" true, "type" "string", "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$", "location" "path"}, "pageToken" {"type" "string", "description" "Continuation token for fetching the next page of results.", "location" "query"}}, :description "List all entities in a GTM Folder."}, "tagmanager.accounts.containers.workspaces.templates.delete" #:compute.gcp.descriptor{:http-method :delete, :path "tagmanager/v2/{+path}", :parameters {"path" {"type" "string", "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$", "description" "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}", "required" true, "location" "path"}}, :description "Deletes a GTM Template."}, "tagmanager.accounts.containers.version_headers.list" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v2/{+parent}/version_headers", :response {"$ref" "ListContainerVersionsResponse"}, :parameters {"includeDeleted" {"description" "Also retrieve deleted (archived) versions when true.", "type" "boolean", "location" "query"}, "pageToken" {"description" "Continuation token for fetching the next page of results.", "location" "query", "type" "string"}, "parent" {"description" "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}", "location" "path", "pattern" "^accounts/[^/]+/containers/[^/]+$", "required" true, "type" "string"}}, :description "Lists all Container Versions of a GTM Container."}, "tagmanager.accounts.user_permissions.create" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v2/{+parent}/user_permissions", :request {"$ref" "UserPermission"}, :response {"$ref" "UserPermission"}, :parameters {"parent" {"pattern" "^accounts/[^/]+$", "description" "GTM Account's API relative path. Example: accounts/{account_id}", "type" "string", "required" true, "location" "path"}}, :description "Creates a user's Account & Container access."}, "tagmanager.accounts.update" #:compute.gcp.descriptor{:http-method :put, :path "tagmanager/v2/{+path}", :request {"$ref" "Account"}, :response {"$ref" "Account"}, :parameters {"fingerprint" {"description" "When provided, this fingerprint must match the fingerprint of the account in storage.", "location" "query", "type" "string"}, "path" {"description" "GTM Accounts's API relative path. Example: accounts/{account_id}", "pattern" "^accounts/[^/]+$", "type" "string", "required" true, "location" "path"}}, :description "Updates a GTM Account."}, "tagmanager.accounts.containers.workspaces.create" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v2/{+parent}/workspaces", :request {"$ref" "Workspace"}, :response {"$ref" "Workspace"}, :parameters {"parent" {"required" true, "pattern" "^accounts/[^/]+/containers/[^/]+$", "location" "path", "type" "string", "description" "GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}"}}, :description "Creates a Workspace."}, "tagmanager.accounts.containers.workspaces.folders.get" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v2/{+path}", :response {"$ref" "Folder"}, :parameters {"path" {"type" "string", "location" "path", "required" true, "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$", "description" "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}"}}, :description "Gets a GTM Folder."}, "tagmanager.accounts.containers.workspaces.templates.revert" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v2/{+path}:revert", :response {"$ref" "RevertTemplateResponse"}, :parameters {"path" {"required" true, "type" "string", "description" "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}", "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$", "location" "path"}, "fingerprint" {"location" "query", "description" "When provided, this fingerprint must match the fingerprint of the template in storage.", "type" "string"}}, :description "Reverts changes to a GTM Template in a GTM Workspace."}, "tagmanager.accounts.containers.workspaces.clients.list" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v2/{+parent}/clients", :response {"$ref" "ListClientsResponse"}, :parameters {"parent" {"description" "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}", "location" "path", "type" "string", "required" true, "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"}, "pageToken" {"location" "query", "description" "Continuation token for fetching the next page of results.", "type" "string"}}, :description "Lists all GTM Clients of a GTM container workspace."}, "tagmanager.accounts.containers.workspaces.clients.revert" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v2/{+path}:revert", :response {"$ref" "RevertClientResponse"}, :parameters {"fingerprint" {"type" "string", "description" "When provided, this fingerprint must match the fingerprint of the client in storage.", "location" "query"}, "path" {"required" true, "description" "GTM Client's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/clients/{client_id}", "type" "string", "location" "path", "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/clients/[^/]+$"}}, :description "Reverts changes to a GTM Client in a GTM Workspace."}, "tagmanager.accounts.list" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v2/accounts", :response {"$ref" "ListAccountsResponse"}, :parameters {"pageToken" {"location" "query", "type" "string", "description" "Continuation token for fetching the next page of results."}}, :description "Lists all GTM Accounts that a user has access to."}, "tagmanager.accounts.containers.workspaces.templates.list" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v2/{+parent}/templates", :response {"$ref" "ListTemplatesResponse"}, :parameters {"pageToken" {"description" "Continuation token for fetching the next page of results.", "location" "query", "type" "string"}, "parent" {"required" true, "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$", "location" "path", "type" "string", "description" "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}"}}, :description "Lists all GTM Templates of a GTM container workspace."}, "tagmanager.accounts.user_permissions.list" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v2/{+parent}/user_permissions", :response {"$ref" "ListUserPermissionsResponse"}, :parameters {"pageToken" {"type" "string", "description" "Continuation token for fetching the next page of results.", "location" "query"}, "parent" {"required" true, "location" "path", "type" "string", "pattern" "^accounts/[^/]+$", "description" "GTM Accounts's API relative path. Example: accounts/{account_id}"}}, :description "List all users that have access to the account along with Account and Container user access granted to each of them."}, "tagmanager.accounts.user_permissions.delete" #:compute.gcp.descriptor{:http-method :delete, :path "tagmanager/v2/{+path}", :parameters {"path" {"type" "string", "location" "path", "pattern" "^accounts/[^/]+/user_permissions/[^/]+$", "required" true, "description" "GTM UserPermission's API relative path. Example: accounts/{account_id}/user_permissions/{user_permission_id}"}}, :description "Removes a user from the account, revoking access to it and all of its containers."}, "tagmanager.accounts.containers.workspaces.built_in_variables.revert" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v2/{+path}/built_in_variables:revert", :response {"$ref" "RevertBuiltInVariableResponse"}, :parameters {"path" {"location" "path", "description" "GTM BuiltInVariable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/built_in_variables", "type" "string", "required" true, "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"}, "type" {"description" "The type of built-in variable to revert.", "enumDescriptions" ["" "" "" "" "" "For web or mobile." "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "For web or mobile." "" "For web or mobile." "For web or mobile." "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" ""], "location" "query", "type" "string", "enum" ["builtInVariableTypeUnspecified" "pageUrl" "pageHostname" "pagePath" "referrer" "event" "clickElement" "clickClasses" "clickId" "clickTarget" "clickUrl" "clickText" "firstPartyServingUrl" "formElement" "formClasses" "formId" "formTarget" "formUrl" "formText" "errorMessage" "errorUrl" "errorLine" "newHistoryUrl" "oldHistoryUrl" "newHistoryFragment" "oldHistoryFragment" "newHistoryState" "oldHistoryState" "historySource" "containerVersion" "debugMode" "randomNumber" "containerId" "appId" "appName" "appVersionCode" "appVersionName" "language" "osVersion" "platform" "sdkVersion" "deviceName" "resolution" "advertiserId" "advertisingTrackingEnabled" "htmlId" "environmentName" "ampBrowserLanguage" "ampCanonicalPath" "ampCanonicalUrl" "ampCanonicalHost" "ampReferrer" "ampTitle" "ampClientId" "ampClientTimezone" "ampClientTimestamp" "ampClientScreenWidth" "ampClientScreenHeight" "ampClientScrollX" "ampClientScrollY" "ampClientMaxScrollX" "ampClientMaxScrollY" "ampTotalEngagedTime" "ampPageViewId" "ampPageLoadTime" "ampPageDownloadTime" "ampGtmEvent" "eventName" "firebaseEventParameterCampaign" "firebaseEventParameterCampaignAclid" "firebaseEventParameterCampaignAnid" "firebaseEventParameterCampaignClickTimestamp" "firebaseEventParameterCampaignContent" "firebaseEventParameterCampaignCp1" "firebaseEventParameterCampaignGclid" "firebaseEventParameterCampaignSource" "firebaseEventParameterCampaignTerm" "firebaseEventParameterCurrency" "firebaseEventParameterDynamicLinkAcceptTime" "firebaseEventParameterDynamicLinkLinkid" "firebaseEventParameterNotificationMessageDeviceTime" "firebaseEventParameterNotificationMessageId" "firebaseEventParameterNotificationMessageName" "firebaseEventParameterNotificationMessageTime" "firebaseEventParameterNotificationTopic" "firebaseEventParameterPreviousAppVersion" "firebaseEventParameterPreviousOsVersion" "firebaseEventParameterPrice" "firebaseEventParameterProductId" "firebaseEventParameterQuantity" "firebaseEventParameterValue" "videoProvider" "videoUrl" "videoTitle" "videoDuration" "videoPercent" "videoVisible" "videoStatus" "videoCurrentTime" "scrollDepthThreshold" "scrollDepthUnits" "scrollDepthDirection" "elementVisibilityRatio" "elementVisibilityTime" "elementVisibilityFirstTime" "elementVisibilityRecentTime" "requestPath" "requestMethod" "clientName" "queryString" "serverPageLocationUrl" "serverPageLocationPath" "serverPageLocationHostname"]}}, :description "Reverts changes to a GTM Built-In Variables in a GTM Workspace."}, "tagmanager.accounts.containers.workspaces.clients.delete" #:compute.gcp.descriptor{:http-method :delete, :path "tagmanager/v2/{+path}", :parameters {"path" {"required" true, "location" "path", "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/clients/[^/]+$", "type" "string", "description" "GTM Client's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/clients/{client_id}"}}, :description "Deletes a GTM Client."}, "tagmanager.accounts.containers.workspaces.variables.delete" #:compute.gcp.descriptor{:http-method :delete, :path "tagmanager/v2/{+path}", :parameters {"path" {"type" "string", "location" "path", "required" true, "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$", "description" "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}"}}, :description "Deletes a GTM Variable."}, "tagmanager.accounts.containers.workspaces.zones.list" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v2/{+parent}/zones", :response {"$ref" "ListZonesResponse"}, :parameters {"parent" {"required" true, "type" "string", "description" "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}", "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$", "location" "path"}, "pageToken" {"description" "Continuation token for fetching the next page of results.", "type" "string", "location" "query"}}, :description "Lists all GTM Zones of a GTM container workspace."}, "tagmanager.accounts.containers.workspaces.variables.update" #:compute.gcp.descriptor{:http-method :put, :path "tagmanager/v2/{+path}", :request {"$ref" "Variable"}, :response {"$ref" "Variable"}, :parameters {"path" {"description" "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}", "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$", "type" "string", "required" true, "location" "path"}, "fingerprint" {"location" "query", "description" "When provided, this fingerprint must match the fingerprint of the variable in storage.", "type" "string"}}, :description "Updates a GTM Variable."}, "tagmanager.accounts.containers.workspaces.clients.get" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v2/{+path}", :response {"$ref" "Client"}, :parameters {"path" {"pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/clients/[^/]+$", "type" "string", "description" "GTM Client's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/clients/{client_id}", "location" "path", "required" true}}, :description "Gets a GTM Client."}, "tagmanager.accounts.containers.workspaces.variables.get" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v2/{+path}", :response {"$ref" "Variable"}, :parameters {"path" {"type" "string", "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/variables/[^/]+$", "description" "GTM Variable's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/variables/{variable_id}", "required" true, "location" "path"}}, :description "Gets a GTM Variable."}, "tagmanager.accounts.user_permissions.update" #:compute.gcp.descriptor{:http-method :put, :path "tagmanager/v2/{+path}", :request {"$ref" "UserPermission"}, :response {"$ref" "UserPermission"}, :parameters {"path" {"type" "string", "required" true, "location" "path", "description" "GTM UserPermission's API relative path. Example: accounts/{account_id}/user_permissions/{user_permission_id}", "pattern" "^accounts/[^/]+/user_permissions/[^/]+$"}}, :description "Updates a user's Account & Container access."}, "tagmanager.accounts.containers.workspaces.list" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v2/{+parent}/workspaces", :response {"$ref" "ListWorkspacesResponse"}, :parameters {"parent" {"pattern" "^accounts/[^/]+/containers/[^/]+$", "type" "string", "required" true, "description" "GTM parent Container's API relative path. Example: accounts/{account_id}/containers/{container_id}", "location" "path"}, "pageToken" {"description" "Continuation token for fetching the next page of results.", "location" "query", "type" "string"}}, :description "Lists all Workspaces that belong to a GTM Container."}, "tagmanager.accounts.containers.update" #:compute.gcp.descriptor{:http-method :put, :path "tagmanager/v2/{+path}", :request {"$ref" "Container"}, :response {"$ref" "Container"}, :parameters {"fingerprint" {"location" "query", "type" "string", "description" "When provided, this fingerprint must match the fingerprint of the container in storage."}, "path" {"description" "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}", "required" true, "pattern" "^accounts/[^/]+/containers/[^/]+$", "location" "path", "type" "string"}}, :description "Updates a Container."}, "tagmanager.accounts.containers.get" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v2/{+path}", :response {"$ref" "Container"}, :parameters {"path" {"pattern" "^accounts/[^/]+/containers/[^/]+$", "location" "path", "required" true, "type" "string", "description" "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}"}}, :description "Gets a Container."}, "tagmanager.accounts.containers.versions.live" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v2/{+parent}/versions:live", :response {"$ref" "ContainerVersion"}, :parameters {"parent" {"location" "path", "required" true, "description" "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}", "type" "string", "pattern" "^accounts/[^/]+/containers/[^/]+$"}}, :description "Gets the live (i.e. published) container version"}, "tagmanager.accounts.containers.versions.set_latest" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v2/{+path}:set_latest", :response {"$ref" "ContainerVersion"}, :parameters {"path" {"location" "path", "required" true, "pattern" "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$", "type" "string", "description" "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}"}}, :description "Sets the latest version used for synchronization of workspaces when detecting conflicts and errors."}, "tagmanager.accounts.containers.workspaces.triggers.get" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v2/{+path}", :response {"$ref" "Trigger"}, :parameters {"path" {"required" true, "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$", "type" "string", "description" "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}", "location" "path"}}, :description "Gets a GTM Trigger."}, "tagmanager.accounts.containers.workspaces.folders.move_entities_to_folder" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v2/{+path}:move_entities_to_folder", :request {"$ref" "Folder"}, :parameters {"variableId" {"type" "string", "repeated" true, "location" "query", "description" "The variables to be moved to the folder."}, "path" {"location" "path", "description" "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}", "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$", "type" "string", "required" true}, "triggerId" {"location" "query", "type" "string", "description" "The triggers to be moved to the folder.", "repeated" true}, "tagId" {"type" "string", "description" "The tags to be moved to the folder.", "repeated" true, "location" "query"}}, :description "Moves entities to a GTM Folder."}, "tagmanager.accounts.containers.workspaces.zones.revert" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v2/{+path}:revert", :response {"$ref" "RevertZoneResponse"}, :parameters {"path" {"type" "string", "location" "path", "description" "GTM Zone's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/zones/{zone_id}", "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/zones/[^/]+$", "required" true}, "fingerprint" {"location" "query", "description" "When provided, this fingerprint must match the fingerprint of the zone in storage.", "type" "string"}}, :description "Reverts changes to a GTM Zone in a GTM Workspace."}, "tagmanager.accounts.containers.environments.list" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v2/{+parent}/environments", :response {"$ref" "ListEnvironmentsResponse"}, :parameters {"parent" {"type" "string", "description" "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}", "required" true, "pattern" "^accounts/[^/]+/containers/[^/]+$", "location" "path"}, "pageToken" {"description" "Continuation token for fetching the next page of results.", "type" "string", "location" "query"}}, :description "Lists all GTM Environments of a GTM Container."}, "tagmanager.accounts.user_permissions.get" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v2/{+path}", :response {"$ref" "UserPermission"}, :parameters {"path" {"description" "GTM UserPermission's API relative path. Example: accounts/{account_id}/user_permissions/{user_permission_id}", "pattern" "^accounts/[^/]+/user_permissions/[^/]+$", "location" "path", "type" "string", "required" true}}, :description "Gets a user's Account & Container access."}, "tagmanager.accounts.containers.workspaces.folders.delete" #:compute.gcp.descriptor{:http-method :delete, :path "tagmanager/v2/{+path}", :parameters {"path" {"required" true, "location" "path", "type" "string", "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/folders/[^/]+$", "description" "GTM Folder's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/folders/{folder_id}"}}, :description "Deletes a GTM Folder."}, "tagmanager.accounts.containers.version_headers.latest" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v2/{+parent}/version_headers:latest", :response {"$ref" "ContainerVersionHeader"}, :parameters {"parent" {"pattern" "^accounts/[^/]+/containers/[^/]+$", "location" "path", "type" "string", "description" "GTM Container's API relative path. Example: accounts/{account_id}/containers/{container_id}", "required" true}}, :description "Gets the latest container version header"}, "tagmanager.accounts.containers.workspaces.templates.get" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v2/{+path}", :response {"$ref" "CustomTemplate"}, :parameters {"path" {"type" "string", "description" "GTM Custom Template's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/templates/{template_id}", "location" "path", "required" true, "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/templates/[^/]+$"}}, :description "Gets a GTM Template."}, "tagmanager.accounts.containers.workspaces.tags.list" #:compute.gcp.descriptor{:http-method :get, :path "tagmanager/v2/{+parent}/tags", :response {"$ref" "ListTagsResponse"}, :parameters {"parent" {"pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$", "description" "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}", "type" "string", "required" true, "location" "path"}, "pageToken" {"location" "query", "type" "string", "description" "Continuation token for fetching the next page of results."}}, :description "Lists all GTM Tags of a Container."}, "tagmanager.accounts.containers.workspaces.update" #:compute.gcp.descriptor{:http-method :put, :path "tagmanager/v2/{+path}", :request {"$ref" "Workspace"}, :response {"$ref" "Workspace"}, :parameters {"path" {"description" "GTM Workspace's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}", "required" true, "type" "string", "location" "path", "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+$"}, "fingerprint" {"location" "query", "type" "string", "description" "When provided, this fingerprint must match the fingerprint of the workspace in storage."}}, :description "Updates a Workspace."}, "tagmanager.accounts.containers.versions.publish" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v2/{+path}:publish", :response {"$ref" "PublishContainerVersionResponse"}, :parameters {"path" {"location" "path", "pattern" "^accounts/[^/]+/containers/[^/]+/versions/[^/]+$", "type" "string", "description" "GTM ContainerVersion's API relative path. Example: accounts/{account_id}/containers/{container_id}/versions/{version_id}", "required" true}, "fingerprint" {"location" "query", "description" "When provided, this fingerprint must match the fingerprint of the container version in storage.", "type" "string"}}, :description "Publishes a Container Version."}, "tagmanager.accounts.containers.workspaces.triggers.delete" #:compute.gcp.descriptor{:http-method :delete, :path "tagmanager/v2/{+path}", :parameters {"path" {"description" "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}", "location" "path", "pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$", "required" true, "type" "string"}}, :description "Deletes a GTM Trigger."}, "tagmanager.accounts.containers.workspaces.triggers.revert" #:compute.gcp.descriptor{:http-method :post, :path "tagmanager/v2/{+path}:revert", :response {"$ref" "RevertTriggerResponse"}, :parameters {"fingerprint" {"type" "string", "location" "query", "description" "When provided, this fingerprint must match the fingerprint of the trigger in storage."}, "path" {"pattern" "^accounts/[^/]+/containers/[^/]+/workspaces/[^/]+/triggers/[^/]+$", "location" "path", "type" "string", "required" true, "description" "GTM Trigger's API relative path. Example: accounts/{account_id}/containers/{container_id}/workspaces/{workspace_id}/triggers/{trigger_id}"}}, :description "Reverts changes to a GTM Trigger in a GTM Workspace."}}, :schemas {"RevertTemplateResponse" {"type" "object", "properties" {"template" {"description" "Template as it appears in the latest container version since the last workspace synchronization operation. If no template is present, that means the template was deleted in the latest container version.", "$ref" "CustomTemplate"}}, "description" "The result of reverting a template in a workspace.", "id" "RevertTemplateResponse"}, "ListEnvironmentsResponse" {"description" "List Environments Response.", "properties" {"nextPageToken" {"description" "Continuation token for fetching the next page of results.", "type" "string"}, "environment" {"description" "All Environments of a GTM Container.", "items" {"$ref" "Environment"}, "type" "array"}}, "id" "ListEnvironmentsResponse", "type" "object"}, "ListTriggersResponse" {"type" "object", "properties" {"nextPageToken" {"type" "string", "description" "Continuation token for fetching the next page of results."}, "trigger" {"items" {"$ref" "Trigger"}, "type" "array", "description" "All GTM Triggers of a GTM Container."}}, "id" "ListTriggersResponse", "description" "List triggers response."}, "SetupTag" {"id" "SetupTag", "type" "object", "properties" {"stopOnSetupFailure" {"description" "If true, fire the main tag if and only if the setup tag fires successfully. If false, fire the main tag regardless of setup tag firing status.", "type" "boolean"}, "tagName" {"description" "The name of the setup tag.", "type" "string"}}, "description" "Represents a reference to atag that fires before another tag in order to set up dependencies."}, "CreateContainerVersionRequestVersionOptions" {"type" "object", "id" "CreateContainerVersionRequestVersionOptions", "properties" {"notes" {"type" "string", "description" "The notes of the container version to be created."}, "name" {"description" "The name of the container version to be created.", "type" "string"}}, "description" "Options for new container versions."}, "ListFoldersResponse" {"description" "List Folders Response.", "id" "ListFoldersResponse", "properties" {"nextPageToken" {"description" "Continuation token for fetching the next page of results.", "type" "string"}, "folder" {"description" "All GTM Folders of a GTM Container.", "type" "array", "items" {"$ref" "Folder"}}}, "type" "object"}, "ContainerVersion" {"description" "Represents a Google Tag Manager Container Version.", "id" "ContainerVersion", "type" "object", "properties" {"tagManagerUrl" {"type" "string", "description" "Auto generated link to the tag manager UI"}, "folder" {"items" {"$ref" "Folder"}, "description" "The folders in the container that this version was taken from.", "type" "array"}, "accountId" {"description" "GTM Account ID.", "type" "string"}, "fingerprint" {"type" "string", "description" "The fingerprint of the GTM Container Version as computed at storage time. This value is recomputed whenever the container version is modified."}, "path" {"description" "GTM ContainerVersions's API relative path.", "type" "string"}, "customTemplate" {"description" "The custom templates in the container that this version was taken from.", "items" {"$ref" "CustomTemplate"}, "type" "array"}, "name" {"description" "Container version display name. @mutable tagmanager.accounts.containers.versions.update", "type" "string"}, "tag" {"type" "array", "description" "The tags in the container that this version was taken from.", "items" {"$ref" "Tag"}}, "builtInVariable" {"type" "array", "description" "The built-in variables in the container that this version was taken from.", "items" {"$ref" "BuiltInVariable"}}, "variable" {"type" "array", "description" "The variables in the container that this version was taken from.", "items" {"$ref" "Variable"}}, "containerVersionId" {"type" "string", "description" "The Container Version ID uniquely identifies the GTM Container Version."}, "deleted" {"type" "boolean", "description" "A value of true indicates this container version has been deleted."}, "zone" {"items" {"$ref" "Zone"}, "type" "array", "description" "The zones in the container that this version was taken from."}, "containerId" {"description" "GTM Container ID.", "type" "string"}, "client" {"type" "array", "description" "The clients in the container that this version was taken from.", "items" {"$ref" "Client"}}, "trigger" {"description" "The triggers in the container that this version was taken from.", "type" "array", "items" {"$ref" "Trigger"}}, "description" {"type" "string", "description" "Container version description. @mutable tagmanager.accounts.containers.versions.update"}, "container" {"description" "The container that this version was taken from.", "$ref" "Container"}}}, "Folder" {"type" "object", "description" "Represents a Google Tag Manager Folder.", "id" "Folder", "properties" {"tagManagerUrl" {"type" "string", "description" "Auto generated link to the tag manager UI"}, "workspaceId" {"type" "string", "description" "GTM Workspace ID."}, "accountId" {"description" "GTM Account ID.", "type" "string"}, "fingerprint" {"description" "The fingerprint of the GTM Folder as computed at storage time. This value is recomputed whenever the folder is modified.", "type" "string"}, "path" {"type" "string", "description" "GTM Folder's API relative path."}, "name" {"annotations" {"required" ["tagmanager.accounts.containers.workspaces.folders.create" "tagmanager.accounts.containers.workspaces.folders.update"]}, "description" "Folder display name. @mutable tagmanager.accounts.containers.workspaces.folders.create @mutable tagmanager.accounts.containers.workspaces.folders.update", "type" "string"}, "containerId" {"description" "GTM Container ID.", "type" "string"}, "notes" {"description" "User notes on how to apply this folder in the container. @mutable tagmanager.accounts.containers.workspaces.folders.create @mutable tagmanager.accounts.containers.workspaces.folders.update", "type" "string"}, "folderId" {"type" "string", "description" "The Folder ID uniquely identifies the GTM Folder."}}}, "SyncWorkspaceResponse" {"description" "A response after synchronizing the workspace to the latest container version.", "properties" {"mergeConflict" {"type" "array", "items" {"$ref" "MergeConflict"}, "description" "The merge conflict after sync. If this field is not empty, the sync is still treated as successful. But a version cannot be created until all conflicts are resolved."}, "syncStatus" {"description" "Indicates whether synchronization caused a merge conflict or sync error.", "$ref" "SyncStatus"}}, "type" "object", "id" "SyncWorkspaceResponse"}, "ListTemplatesResponse" {"id" "ListTemplatesResponse", "properties" {"nextPageToken" {"type" "string", "description" "Continuation token for fetching the next page of results."}, "template" {"items" {"$ref" "CustomTemplate"}, "type" "array", "description" "All GTM Custom Templates of a GTM Container."}}, "type" "object"}, "ListTagsResponse" {"description" "List Tags Response.", "properties" {"nextPageToken" {"type" "string", "description" "Continuation token for fetching the next page of results."}, "tag" {"items" {"$ref" "Tag"}, "type" "array", "description" "All GTM Tags of a GTM Container."}}, "type" "object", "id" "ListTagsResponse"}, "VariableFormatValue" {"type" "object", "id" "VariableFormatValue", "properties" {"convertNullToValue" {"$ref" "Parameter", "description" "The value to convert if a variable value is null."}, "convertUndefinedToValue" {"description" "The value to convert if a variable value is undefined.", "$ref" "Parameter"}, "caseConversionType" {"enum" ["none" "lowercase" "uppercase"], "enumDescriptions" ["" "The option to convert a variable value to lowercase." "The option to convert a variable value to uppercase."], "description" "The option to convert a string-type variable value to either lowercase or uppercase.", "type" "string"}, "convertFalseToValue" {"description" "The value to convert if a variable value is false.", "$ref" "Parameter"}, "convertTrueToValue" {"description" "The value to convert if a variable value is true.", "$ref" "Parameter"}}}, "AccountAccess" {"type" "object", "properties" {"permission" {"enumDescriptions" ["" "" "" ""], "enum" ["accountPermissionUnspecified" "noAccess" "user" "admin"], "description" "Whether the user has no access, user access, or admin access to an account. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update", "type" "string"}}, "description" "Defines the Google Tag Manager Account access permissions.", "id" "AccountAccess"}, "RevertFolderResponse" {"description" "The result of reverting folder changes in a workspace.", "properties" {"folder" {"description" "Folder as it appears in the latest container version since the last workspace synchronization operation. If no folder is present, that means the folder was deleted in the latest container version.", "$ref" "Folder"}}, "id" "RevertFolderResponse", "type" "object"}, "CreateContainerVersionResponse" {"properties" {"newWorkspacePath" {"type" "string", "description" "Auto generated workspace path created as a result of version creation. This field should only be populated if the created version was not a quick preview."}, "compilerError" {"description" "Compiler errors or not.", "type" "boolean"}, "syncStatus" {"description" "Whether version creation failed when syncing the workspace to the latest container version.", "$ref" "SyncStatus"}, "containerVersion" {"description" "The container version created.", "$ref" "ContainerVersion"}}, "description" "Create container versions response.", "id" "CreateContainerVersionResponse", "type" "object"}, "CreateBuiltInVariableResponse" {"type" "object", "id" "CreateBuiltInVariableResponse", "properties" {"builtInVariable" {"description" "List of created built-in variables.", "items" {"$ref" "BuiltInVariable"}, "type" "array"}}}, "RevertTriggerResponse" {"type" "object", "properties" {"trigger" {"$ref" "Trigger", "description" "Trigger as it appears in the latest container version since the last workspace synchronization operation. If no trigger is present, that means the trigger was deleted in the latest container version."}}, "description" "The result of reverting a trigger in a workspace.", "id" "RevertTriggerResponse"}, "ListZonesResponse" {"id" "ListZonesResponse", "type" "object", "properties" {"zone" {"items" {"$ref" "Zone"}, "description" "All GTM Zones of a GTM Container.", "type" "array"}, "nextPageToken" {"type" "string", "description" "Continuation token for fetching the next page of results."}}}, "ListAccountsResponse" {"properties" {"account" {"description" "List of GTM Accounts that a user has access to.", "type" "array", "items" {"$ref" "Account"}}, "nextPageToken" {"type" "string", "description" "Continuation token for fetching the next page of results."}}, "type" "object", "id" "ListAccountsResponse", "description" "List Accounts Response."}, "GetWorkspaceStatusResponse" {"properties" {"mergeConflict" {"description" "The merge conflict after sync.", "type" "array", "items" {"$ref" "MergeConflict"}}, "workspaceChange" {"description" "Entities that have been changed in the workspace.", "type" "array", "items" {"$ref" "Entity"}}}, "id" "GetWorkspaceStatusResponse", "type" "object", "description" "The changes that have occurred in the workspace since the base container version."}, "ListContainerVersionsResponse" {"description" "List container versions response.", "id" "ListContainerVersionsResponse", "properties" {"nextPageToken" {"description" "Continuation token for fetching the next page of results.", "type" "string"}, "containerVersionHeader" {"items" {"$ref" "ContainerVersionHeader"}, "description" "All container version headers of a GTM Container.", "type" "array"}}, "type" "object"}, "RevertClientResponse" {"type" "object", "id" "RevertClientResponse", "properties" {"client" {"$ref" "Client", "description" "Client as it appears in the latest container version since the last workspace synchronization operation. If no client is present, that means the client was deleted in the latest container version."}}, "description" "The result of reverting a client in a workspace."}, "ListWorkspacesResponse" {"type" "object", "description" "A list of workspaces in a container.", "properties" {"workspace" {"items" {"$ref" "Workspace"}, "type" "array", "description" "All Workspaces of a GTM Container."}, "nextPageToken" {"description" "Continuation token for fetching the next page of results.", "type" "string"}}, "id" "ListWorkspacesResponse"}, "TeardownTag" {"properties" {"tagName" {"type" "string", "description" "The name of the teardown tag."}, "stopTeardownOnFailure" {"description" "If true, fire the teardown tag if and only if the main tag fires successfully. If false, fire the teardown tag regardless of main tag firing status.", "type" "boolean"}}, "id" "TeardownTag", "type" "object", "description" "Represents a tag that fires after another tag in order to tear down dependencies."}, "ZoneBoundary" {"type" "object", "properties" {"condition" {"description" "The conditions that, when conjoined, make up the boundary.", "type" "array", "items" {"$ref" "Condition"}}, "customEvaluationTriggerId" {"type" "array", "description" "Custom evaluation trigger IDs. A zone will evaluate its boundary conditions when any of the listed triggers are true.", "items" {"type" "string"}}}, "description" "Represents a Zone's boundaries.", "id" "ZoneBoundary"}, "ListVariablesResponse" {"properties" {"nextPageToken" {"type" "string", "description" "Continuation token for fetching the next page of results."}, "variable" {"items" {"$ref" "Variable"}, "type" "array", "description" "All GTM Variables of a GTM Container."}}, "id" "ListVariablesResponse", "type" "object", "description" "List Variables Response."}, "ListContainersResponse" {"properties" {"nextPageToken" {"description" "Continuation token for fetching the next page of results.", "type" "string"}, "container" {"items" {"$ref" "Container"}, "description" "All Containers of a GTM Account.", "type" "array"}}, "type" "object", "id" "ListContainersResponse", "description" "List Containers Response."}, "Zone" {"type" "object", "id" "Zone", "description" "Represents a Google Tag Manager Zone's contents.", "properties" {"tagManagerUrl" {"type" "string", "description" "Auto generated link to the tag manager UI"}, "workspaceId" {"description" "GTM Workspace ID.", "type" "string"}, "parameter" {"type" "array", "items" {"$ref" "Parameter"}, "description" "Additional parameters."}, "accountId" {"description" "GTM Account ID.", "type" "string"}, "fingerprint" {"type" "string", "description" "The fingerprint of the GTM Zone as computed at storage time. This value is recomputed whenever the zone is modified."}, "childContainer" {"items" {"$ref" "ZoneChildContainer"}, "type" "array", "description" "Containers that are children of this Zone."}, "path" {"description" "GTM Zone's API relative path.", "type" "string"}, "zoneId" {"description" "The Zone ID uniquely identifies the GTM Zone.", "type" "string"}, "name" {"type" "string", "description" "Zone display name."}, "typeRestriction" {"description" "This Zone's type restrictions.", "$ref" "ZoneTypeRestriction"}, "boundary" {"$ref" "ZoneBoundary", "description" "This Zone's boundary."}, "containerId" {"type" "string", "description" "GTM Container ID."}, "notes" {"description" "User notes on how to apply this zone in the container.", "type" "string"}}}, "Account" {"id" "Account", "type" "object", "properties" {"tagManagerUrl" {"type" "string", "description" "Auto generated link to the tag manager UI"}, "shareData" {"description" "Whether the account shares data anonymously with Google and others. This flag enables benchmarking by sharing your data in an anonymous form. Google will remove all identifiable information about your website, combine the data with hundreds of other anonymous sites and report aggregate trends in the benchmarking service. @mutable tagmanager.accounts.create @mutable tagmanager.accounts.update", "type" "boolean"}, "fingerprint" {"type" "string", "description" "The fingerprint of the GTM Account as computed at storage time. This value is recomputed whenever the account is modified."}, "accountId" {"description" "The Account ID uniquely identifies the GTM Account.", "type" "string"}, "path" {"type" "string", "description" "GTM Account's API relative path."}, "name" {"description" "Account display name. @mutable tagmanager.accounts.create @mutable tagmanager.accounts.update", "type" "string"}}, "description" "Represents a Google Tag Manager Account."}, "Container" {"description" "Represents a Google Tag Manager Container, which specifies the platform tags will run on, manages workspaces, and retains container versions.", "type" "object", "properties" {"tagManagerUrl" {"type" "string", "description" "Auto generated link to the tag manager UI"}, "accountId" {"description" "GTM Account ID.", "type" "string"}, "fingerprint" {"description" "The fingerprint of the GTM Container as computed at storage time. This value is recomputed whenever the account is modified.", "type" "string"}, "domainName" {"type" "array", "items" {"type" "string"}, "description" "List of domain names associated with the Container. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update"}, "path" {"type" "string", "description" "GTM Container's API relative path."}, "publicId" {"type" "string", "description" "Container Public ID."}, "name" {"annotations" {"required" ["tagmanager.accounts.containers.create"]}, "type" "string", "description" "Container display name. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update"}, "usageContext" {"items" {"type" "string", "enum" ["usageContextUnspecified" "web" "android" "ios" "androidSdk5" "iosSdk5" "amp" "server"], "enumDescriptions" ["" "" "" "" "" "" "" ""]}, "type" "array", "description" "List of Usage Contexts for the Container. Valid values include: web, android, or ios. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update", "annotations" {"required" ["tagmanager.accounts.containers.create" "tagmanager.accounts.containers.update"]}}, "containerId" {"type" "string", "description" "The Container ID uniquely identifies the GTM Container."}, "notes" {"description" "Container Notes. @mutable tagmanager.accounts.containers.create @mutable tagmanager.accounts.containers.update", "type" "string"}}, "id" "Container"}, "CustomTemplate" {"id" "CustomTemplate", "type" "object", "description" "Represents a Google Tag Manager Custom Template's contents.", "properties" {"tagManagerUrl" {"description" "Auto generated link to the tag manager UI", "type" "string"}, "workspaceId" {"type" "string", "description" "GTM Workspace ID."}, "accountId" {"description" "GTM Account ID.", "type" "string"}, "fingerprint" {"description" "The fingerprint of the GTM Custom Template as computed at storage time. This value is recomputed whenever the template is modified.", "type" "string"}, "templateData" {"description" "The custom template in text format.", "type" "string"}, "path" {"description" "GTM Custom Template's API relative path.", "type" "string"}, "name" {"type" "string", "description" "Custom Template display name."}, "galleryReference" {"description" "A reference to the Community Template Gallery entry.", "$ref" "GalleryReference"}, "containerId" {"description" "GTM Container ID.", "type" "string"}, "templateId" {"description" "The Custom Template ID uniquely identifies the GTM custom template.", "type" "string"}}}, "Workspace" {"properties" {"description" {"description" "Workspace description. @mutable tagmanager.accounts.containers.workspaces.create @mutable tagmanager.accounts.containers.workspaces.update", "type" "string"}, "tagManagerUrl" {"type" "string", "description" "Auto generated link to the tag manager UI"}, "workspaceId" {"type" "string", "description" "The Workspace ID uniquely identifies the GTM Workspace."}, "containerId" {"description" "GTM Container ID.", "type" "string"}, "accountId" {"type" "string", "description" "GTM Account ID."}, "name" {"annotations" {"required" ["tagmanager.accounts.containers.workspaces.create" "tagmanager.accounts.containers.workspaces.update"]}, "description" "Workspace display name. @mutable tagmanager.accounts.containers.workspaces.create @mutable tagmanager.accounts.containers.workspaces.update", "type" "string"}, "fingerprint" {"description" "The fingerprint of the GTM Workspace as computed at storage time. This value is recomputed whenever the workspace is modified.", "type" "string"}, "path" {"description" "GTM Workspace's API relative path.", "type" "string"}}, "description" "Represents a Google Tag Manager Container Workspace.", "id" "Workspace", "type" "object"}, "QuickPreviewResponse" {"description" "Response to quick previewing a workspace.", "properties" {"compilerError" {"type" "boolean", "description" "Were there compiler errors or not."}, "containerVersion" {"$ref" "ContainerVersion", "description" "The quick previewed container version."}, "syncStatus" {"description" "Whether quick previewing failed when syncing the workspace to the latest container version.", "$ref" "SyncStatus"}}, "id" "QuickPreviewResponse", "type" "object"}, "ContainerAccess" {"id" "ContainerAccess", "type" "object", "properties" {"containerId" {"description" "GTM Container ID. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update", "type" "string"}, "permission" {"enum" ["containerPermissionUnspecified" "noAccess" "read" "edit" "approve" "publish"], "enumDescriptions" ["" "" "" "" "" ""], "description" "List of Container permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update", "type" "string"}}, "description" "Defines the Google Tag Manager Container access permissions."}, "ContainerVersionHeader" {"properties" {"numRules" {"description" "Number of rules in the container version.", "type" "string"}, "numTags" {"description" "Number of tags in the container version.", "type" "string"}, "numCustomTemplates" {"type" "string", "description" "Number of custom templates in the container version."}, "accountId" {"description" "GTM Account ID.", "type" "string"}, "numClients" {"type" "string", "description" "Number of clients in the container version."}, "numTriggers" {"description" "Number of triggers in the container version.", "type" "string"}, "path" {"description" "GTM Container Versions's API relative path.", "type" "string"}, "name" {"type" "string", "description" "Container version display name."}, "numVariables" {"description" "Number of variables in the container version.", "type" "string"}, "containerVersionId" {"description" "The Container Version ID uniquely identifies the GTM Container Version.", "type" "string"}, "deleted" {"description" "A value of true indicates this container version has been deleted.", "type" "boolean"}, "numZones" {"type" "string", "description" "Number of zones in the container version."}, "containerId" {"description" "GTM Container ID.", "type" "string"}, "numMacros" {"description" "Number of macros in the container version.", "type" "string"}}, "id" "ContainerVersionHeader", "description" "Represents a Google Tag Manager Container Version Header.", "type" "object"}, "MergeConflict" {"description" "Represents a merge conflict.", "properties" {"entityInBaseVersion" {"$ref" "Entity", "description" "The base version entity (since the latest sync operation) that has conflicting changes compared to the workspace. If this field is missing, it means the workspace entity is deleted from the base version."}, "entityInWorkspace" {"$ref" "Entity", "description" "The workspace entity that has conflicting changes compared to the base version. If an entity is deleted in a workspace, it will still appear with a deleted change status."}}, "type" "object", "id" "MergeConflict"}, "Parameter" {"id" "Parameter", "type" "object", "properties" {"value" {"description" "A parameter's value (may contain variable references such as \"{{myVariable}}\") as appropriate to the specified type. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update", "type" "string"}, "type" {"enum" ["typeUnspecified" "template" "integer" "boolean" "list" "map" "triggerReference" "tagReference"], "annotations" {"required" ["tagmanager.accounts.containers.workspaces.tags.create" "tagmanager.accounts.containers.workspaces.tags.update" "tagmanager.accounts.containers.workspaces.triggers.create" "tagmanager.accounts.containers.workspaces.triggers.update" "tagmanager.accounts.containers.workspaces.variables.create" "tagmanager.accounts.containers.workspaces.variables.update"]}, "description" "The parameter type. Valid values are: - boolean: The value represents a boolean, represented as 'true' or 'false' - integer: The value represents a 64-bit signed integer value, in base 10 - list: A list of parameters should be specified - map: A map of parameters should be specified - template: The value represents any text; this can include variable references (even variable references that might return non-string types) - trigger_reference: The value represents a trigger, represented as the trigger id - tag_reference: The value represents a tag, represented as the tag name @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update", "type" "string", "enumDescriptions" ["" "May include variable references (such as \"{{myVariable}}\")." "" "" "" "" "" ""]}, "list" {"type" "array", "description" "This list parameter's parameters (keys will be ignored). @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update", "items" {"$ref" "Parameter"}}, "key" {"type" "string", "description" "The named key that uniquely identifies a parameter. Required for top-level parameters, as well as map values. Ignored for list values. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"}, "map" {"type" "array", "description" "This map parameter's parameters (must have keys; keys must be unique). @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update", "items" {"$ref" "Parameter"}}}, "description" "Represents a Google Tag Manager Parameter."}, "GalleryReference" {"properties" {"owner" {"description" "The name of the owner for the community gallery template.", "type" "string"}, "host" {"type" "string", "description" "The name of the host for the community gallery template."}, "isModified" {"type" "boolean", "description" "If a user has manually edited the community gallery template."}, "version" {"description" "The version of the community gallery template.", "type" "string"}, "repository" {"type" "string", "description" "The name of the repository for the community gallery template."}, "signature" {"description" "The signature of the community gallery template as computed at import time. This value is recomputed whenever the template is updated from the gallery.", "type" "string"}}, "description" "Represents the link between a custom template and an entry on the Community Template Gallery site.", "id" "GalleryReference", "type" "object"}, "PublishContainerVersionResponse" {"properties" {"containerVersion" {"$ref" "ContainerVersion", "description" "The container version created."}, "compilerError" {"description" "Compiler errors or not.", "type" "boolean"}}, "type" "object", "id" "PublishContainerVersionResponse", "description" "Publish container version response."}, "ZoneChildContainer" {"properties" {"publicId" {"description" "The child container's public id.", "type" "string"}, "nickname" {"type" "string", "description" "The zone's nickname for the child container."}}, "description" "Represents a child container of a Zone.", "type" "object", "id" "ZoneChildContainer"}, "Environment" {"type" "object", "id" "Environment", "description" "Represents a Google Tag Manager Environment. Note that a user can create, delete and update environments of type USER, but can only update the enable_debug and url fields of environments of other types.", "properties" {"tagManagerUrl" {"type" "string", "description" "Auto generated link to the tag manager UI"}, "workspaceId" {"type" "string", "description" "Represents a link to a quick preview of a workspace."}, "environmentId" {"description" "GTM Environment ID uniquely identifies the GTM Environment.", "type" "string"}, "url" {"description" "Default preview page url for the environment. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update", "type" "string"}, "accountId" {"type" "string", "description" "GTM Account ID."}, "fingerprint" {"type" "string", "description" "The fingerprint of the GTM environment as computed at storage time. This value is recomputed whenever the environment is modified."}, "authorizationCode" {"type" "string", "description" "The environment authorization code."}, "enableDebug" {"type" "boolean", "description" "Whether or not to enable debug by default for the environment. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update"}, "path" {"description" "GTM Environment's API relative path.", "type" "string"}, "name" {"description" "The environment display name. Can be set or changed only on USER type environments. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update", "annotations" {"required" ["tagmanager.accounts.containers.environments.create" "tagmanager.accounts.containers.environments.update"]}, "type" "string"}, "containerVersionId" {"type" "string", "description" "Represents a link to a container version."}, "type" {"enum" ["user" "live" "latest" "workspace"], "description" "The type of this environment.", "type" "string", "enumDescriptions" ["Points to a user defined environment." "Points to the current live container version." "Points to the latest container version." "Automatically managed environment that points to a workspace preview or version created by a workspace."]}, "containerId" {"description" "GTM Container ID.", "type" "string"}, "authorizationTimestamp" {"type" "string", "format" "google-datetime", "description" "The last update time-stamp for the authorization code."}, "description" {"description" "The environment description. Can be set or changed only on USER type environments. @mutable tagmanager.accounts.containers.environments.create @mutable tagmanager.accounts.containers.environments.update", "type" "string"}}}, "FolderEntities" {"description" "Represents a Google Tag Manager Folder's contents.", "properties" {"tag" {"type" "array", "items" {"$ref" "Tag"}, "description" "The list of tags inside the folder."}, "variable" {"items" {"$ref" "Variable"}, "type" "array", "description" "The list of variables inside the folder."}, "nextPageToken" {"type" "string", "description" "Continuation token for fetching the next page of results."}, "trigger" {"description" "The list of triggers inside the folder.", "items" {"$ref" "Trigger"}, "type" "array"}}, "type" "object", "id" "FolderEntities"}, "RevertZoneResponse" {"type" "object", "id" "RevertZoneResponse", "description" "The result of reverting a zone in a workspace.", "properties" {"zone" {"$ref" "Zone", "description" "Zone as it appears in the latest container version since the last workspace synchronization operation. If no zone is present, that means the zone was deleted in the latest container version."}}}, "ListClientsResponse" {"properties" {"client" {"type" "array", "description" "All GTM Clients of a GTM Container.", "items" {"$ref" "Client"}}, "nextPageToken" {"type" "string", "description" "Continuation token for fetching the next page of results."}}, "type" "object", "id" "ListClientsResponse"}, "Variable" {"id" "Variable", "type" "object", "properties" {"tagManagerUrl" {"description" "Auto generated link to the tag manager UI", "type" "string"}, "workspaceId" {"type" "string", "description" "GTM Workspace ID."}, "parameter" {"type" "array", "description" "The variable's parameters. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update", "items" {"$ref" "Parameter"}}, "accountId" {"type" "string", "description" "GTM Account ID."}, "disablingTriggerId" {"type" "array", "description" "For mobile containers only: A list of trigger IDs for disabling conditional variables; the variable is enabled if one of the enabling trigger is true while all the disabling trigger are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update", "items" {"type" "string"}}, "variableId" {"description" "The Variable ID uniquely identifies the GTM Variable.", "type" "string"}, "fingerprint" {"type" "string", "description" "The fingerprint of the GTM Variable as computed at storage time. This value is recomputed whenever the variable is modified."}, "path" {"type" "string", "description" "GTM Variable's API relative path."}, "parentFolderId" {"type" "string", "description" "Parent folder id."}, "name" {"type" "string", "description" "Variable display name. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update", "annotations" {"required" ["tagmanager.accounts.containers.workspaces.variables.create" "tagmanager.accounts.containers.workspaces.variables.update"]}}, "scheduleStartMs" {"format" "int64", "type" "string", "description" "The start timestamp in milliseconds to schedule a variable. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update"}, "scheduleEndMs" {"description" "The end timestamp in milliseconds to schedule a variable. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update", "format" "int64", "type" "string"}, "enablingTriggerId" {"type" "array", "items" {"type" "string"}, "description" "For mobile containers only: A list of trigger IDs for enabling conditional variables; the variable is enabled if one of the enabling triggers is true while all the disabling triggers are false. Treated as an unordered set. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update"}, "type" {"description" "GTM Variable Type. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update", "annotations" {"required" ["tagmanager.accounts.containers.workspaces.variables.create" "tagmanager.accounts.containers.workspaces.variables.update"]}, "type" "string"}, "formatValue" {"description" "Option to convert a variable value to other value.", "$ref" "VariableFormatValue"}, "containerId" {"type" "string", "description" "GTM Container ID."}, "notes" {"description" "User notes on how to apply this variable in the container. @mutable tagmanager.accounts.containers.workspaces.variables.create @mutable tagmanager.accounts.containers.workspaces.variables.update", "type" "string"}}, "description" "Represents a Google Tag Manager Variable."}, "ListEnabledBuiltInVariablesResponse" {"id" "ListEnabledBuiltInVariablesResponse", "type" "object", "description" "A list of enabled built-in variables.", "properties" {"builtInVariable" {"type" "array", "items" {"$ref" "BuiltInVariable"}, "description" "All GTM BuiltInVariables of a GTM container."}, "nextPageToken" {"type" "string", "description" "Continuation token for fetching the next page of results."}}}, "Entity" {"id" "Entity", "properties" {"changeStatus" {"description" "Represents how the entity has been changed in the workspace.", "type" "string", "enumDescriptions" ["" "The entity has never been changed." "The entity is added to the workspace." "The entity is deleted from the workspace." "The entity has been updated in the workspace."], "enum" ["changeStatusUnspecified" "none" "added" "deleted" "updated"]}, "folder" {"$ref" "Folder", "description" "The folder being represented by the entity."}, "trigger" {"$ref" "Trigger", "description" "The trigger being represented by the entity."}, "client" {"$ref" "Client", "description" "The client being represented by the entity."}, "tag" {"description" "The tag being represented by the entity.", "$ref" "Tag"}, "variable" {"$ref" "Variable", "description" "The variable being represented by the entity."}}, "description" "A workspace entity that may represent a tag, trigger, variable, or folder in addition to its status in the workspace.", "type" "object"}, "ListUserPermissionsResponse" {"properties" {"userPermission" {"type" "array", "items" {"$ref" "UserPermission"}, "description" "All GTM UserPermissions of a GTM Account."}, "nextPageToken" {"description" "Continuation token for fetching the next page of results.", "type" "string"}}, "type" "object", "id" "ListUserPermissionsResponse", "description" "List user permissions response."}, "Tag" {"properties" {"tagManagerUrl" {"description" "Auto generated link to the tag manager UI", "type" "string"}, "workspaceId" {"type" "string", "description" "GTM Workspace ID."}, "firingTriggerId" {"items" {"type" "string"}, "description" "Firing trigger IDs. A tag will fire when any of the listed triggers are true and all of its blockingTriggerIds (if any specified) are false. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update", "type" "array"}, "priority" {"description" "User defined numeric priority of the tag. Tags are fired asynchronously in order of priority. Tags with higher numeric value fire first. A tag's priority can be a positive or negative value. The default value is 0. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update", "$ref" "Parameter"}, "parameter" {"description" "The tag's parameters. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update", "type" "array", "items" {"$ref" "Parameter"}}, "monitoringMetadata" {"$ref" "Parameter", "description" "A map of key-value pairs of tag metadata to be included in the event data for tag monitoring. Notes: - This parameter must be type MAP. - Each parameter in the map are type TEMPLATE, however cannot contain variable references. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"}, "accountId" {"type" "string", "description" "GTM Account ID."}, "setupTag" {"type" "array", "description" "The list of setup tags. Currently we only allow one.", "items" {"$ref" "SetupTag"}}, "tagId" {"description" "The Tag ID uniquely identifies the GTM Tag.", "type" "string"}, "fingerprint" {"type" "string", "description" "The fingerprint of the GTM Tag as computed at storage time. This value is recomputed whenever the tag is modified."}, "path" {"description" "GTM Tag's API relative path.", "type" "string"}, "tagFiringOption" {"type" "string", "enumDescriptions" ["" "Tag can be fired multiple times per event." "Tag can only be fired per event but can be fired multiple times per load (e.g., app load or page load)." "Tag can only be fired per load (e.g., app load or page load)."], "description" "Option to fire this tag.", "enum" ["tagFiringOptionUnspecified" "unlimited" "oncePerEvent" "oncePerLoad"]}, "parentFolderId" {"type" "string", "description" "Parent folder id."}, "blockingRuleId" {"type" "array", "items" {"type" "string"}, "description" "Blocking rule IDs. If any of the listed rules evaluate to true, the tag will not fire. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"}, "blockingTriggerId" {"description" "Blocking trigger IDs. If any of the listed triggers evaluate to true, the tag will not fire. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update", "type" "array", "items" {"type" "string"}}, "name" {"annotations" {"required" ["tagmanager.accounts.containers.workspaces.tags.create" "tagmanager.accounts.containers.workspaces.tags.update"]}, "description" "Tag display name. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update", "type" "string"}, "paused" {"type" "boolean", "description" "Indicates whether the tag is paused, which prevents the tag from firing. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"}, "teardownTag" {"description" "The list of teardown tags. Currently we only allow one.", "items" {"$ref" "TeardownTag"}, "type" "array"}, "scheduleStartMs" {"format" "int64", "type" "string", "description" "The start timestamp in milliseconds to schedule a tag. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"}, "consentSettings" {"$ref" "TagConsentSetting", "description" "Consent settings of a tag. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"}, "scheduleEndMs" {"type" "string", "description" "The end timestamp in milliseconds to schedule a tag. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update", "format" "int64"}, "liveOnly" {"type" "boolean", "description" "If set to true, this tag will only fire in the live environment (e.g. not in preview or debug mode). @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"}, "type" {"description" "GTM Tag Type. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update", "annotations" {"required" ["tagmanager.accounts.containers.workspaces.tags.create" "tagmanager.accounts.containers.workspaces.tags.update"]}, "type" "string"}, "firingRuleId" {"items" {"type" "string"}, "description" "Firing rule IDs. A tag will fire when any of the listed rules are true and all of its blockingRuleIds (if any specified) are false. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update", "type" "array"}, "monitoringMetadataTagNameKey" {"type" "string", "description" "If non-empty, then the tag display name will be included in the monitoring metadata map using the key specified. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update"}, "containerId" {"type" "string", "description" "GTM Container ID."}, "notes" {"description" "User notes on how to apply this tag in the container. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update", "type" "string"}}, "type" "object", "id" "Tag", "description" "Represents a Google Tag Manager Tag."}, "Condition" {"properties" {"type" {"enum" ["conditionTypeUnspecified" "equals" "contains" "startsWith" "endsWith" "matchRegex" "greater" "greaterOrEquals" "less" "lessOrEquals" "cssSelector" "urlMatches"], "enumDescriptions" ["" "" "" "" "" "" "" "" "" "" "" "NOTE(lanzone): When defining a ConditionType here, don't forget to also define a matching PredicateType (in condition.proto)."], "type" "string", "annotations" {"required" ["tagmanager.accounts.containers.workspaces.triggers.create" "tagmanager.accounts.containers.workspaces.triggers.update"]}, "description" "The type of operator for this condition. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"}, "parameter" {"type" "array", "annotations" {"required" ["tagmanager.accounts.containers.workspaces.triggers.create" "tagmanager.accounts.containers.workspaces.triggers.update"]}, "description" "A list of named parameters (key/value), depending on the condition's type. Notes: - For binary operators, include parameters named arg0 and arg1 for specifying the left and right operands, respectively. - At this time, the left operand (arg0) must be a reference to a variable. - For case-insensitive Regex matching, include a boolean parameter named ignore_case that is set to true. If not specified or set to any other value, the matching will be case sensitive. - To negate an operator, include a boolean parameter named negate boolean parameter that is set to true. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update", "items" {"$ref" "Parameter"}}}, "description" "Represents a predicate.", "id" "Condition", "type" "object"}, "RevertVariableResponse" {"type" "object", "id" "RevertVariableResponse", "description" "The result of reverting a variable in a workspace.", "properties" {"variable" {"$ref" "Variable", "description" "Variable as it appears in the latest container version since the last workspace synchronization operation. If no variable is present, that means the variable was deleted in the latest container version."}}}, "RevertBuiltInVariableResponse" {"properties" {"enabled" {"type" "boolean", "description" "Whether the built-in variable is enabled after reversion."}}, "description" "The result of reverting a built-in variable in a workspace.", "id" "RevertBuiltInVariableResponse", "type" "object"}, "UserPermission" {"type" "object", "description" "Represents a user's permissions to an account and its container.", "id" "UserPermission", "properties" {"emailAddress" {"description" "User's email address. @mutable tagmanager.accounts.permissions.create", "type" "string"}, "accountId" {"type" "string", "description" "The Account ID uniquely identifies the GTM Account."}, "containerAccess" {"description" "GTM Container access permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update", "type" "array", "items" {"$ref" "ContainerAccess"}}, "accountAccess" {"description" "GTM Account access permissions. @mutable tagmanager.accounts.permissions.create @mutable tagmanager.accounts.permissions.update", "$ref" "AccountAccess"}, "path" {"description" "GTM UserPermission's API relative path.", "type" "string"}}}, "ZoneTypeRestriction" {"type" "object", "id" "ZoneTypeRestriction", "description" "Represents a Zone's type restrictions.", "properties" {"whitelistedTypeId" {"type" "array", "description" "List of type public ids that have been whitelisted for use in this Zone.", "items" {"type" "string"}}, "enable" {"description" "True if type restrictions have been enabled for this Zone.", "type" "boolean"}}}, "SyncStatus" {"type" "object", "description" "The status of a workspace after synchronization.", "id" "SyncStatus", "properties" {"syncError" {"type" "boolean", "description" "An error occurred during the synchronization operation."}, "mergeConflict" {"description" "Synchornization operation detected a merge conflict.", "type" "boolean"}}}, "TagConsentSetting" {"properties" {"consentStatus" {"description" "The tag's consent status. If set to NEEDED, the runtime will check that the consent types specified by the consent_type field have been granted.", "enumDescriptions" ["Default value where user has not specified any setting on it." "Tag doesn't require any additional consent settings." "Tag requires additional consent settings."], "type" "string", "enum" ["notSet" "notNeeded" "needed"]}, "consentType" {"description" "The type of consents to check for during tag firing if in the consent NEEDED state. This parameter must be of type LIST where each list item is of type STRING.", "$ref" "Parameter"}}, "type" "object", "id" "TagConsentSetting"}, "BuiltInVariable" {"type" "object", "description" "Built-in variables are a special category of variables that are pre-created and non-customizable. They provide common functionality like accessing propeties of the gtm data layer, monitoring clicks, or accessing elements of a page URL.", "properties" {"name" {"type" "string", "description" "Name of the built-in variable to be used to refer to the built-in variable."}, "accountId" {"description" "GTM Account ID.", "type" "string"}, "type" {"type" "string", "description" "Type of built-in variable. @required.tagmanager.accounts.containers.workspaces.built_in_variable.update @mutable tagmanager.accounts.containers.workspaces.built_in_variable.update", "enum" ["builtInVariableTypeUnspecified" "pageUrl" "pageHostname" "pagePath" "referrer" "event" "clickElement" "clickClasses" "clickId" "clickTarget" "clickUrl" "clickText" "firstPartyServingUrl" "formElement" "formClasses" "formId" "formTarget" "formUrl" "formText" "errorMessage" "errorUrl" "errorLine" "newHistoryUrl" "oldHistoryUrl" "newHistoryFragment" "oldHistoryFragment" "newHistoryState" "oldHistoryState" "historySource" "containerVersion" "debugMode" "randomNumber" "containerId" "appId" "appName" "appVersionCode" "appVersionName" "language" "osVersion" "platform" "sdkVersion" "deviceName" "resolution" "advertiserId" "advertisingTrackingEnabled" "htmlId" "environmentName" "ampBrowserLanguage" "ampCanonicalPath" "ampCanonicalUrl" "ampCanonicalHost" "ampReferrer" "ampTitle" "ampClientId" "ampClientTimezone" "ampClientTimestamp" "ampClientScreenWidth" "ampClientScreenHeight" "ampClientScrollX" "ampClientScrollY" "ampClientMaxScrollX" "ampClientMaxScrollY" "ampTotalEngagedTime" "ampPageViewId" "ampPageLoadTime" "ampPageDownloadTime" "ampGtmEvent" "eventName" "firebaseEventParameterCampaign" "firebaseEventParameterCampaignAclid" "firebaseEventParameterCampaignAnid" "firebaseEventParameterCampaignClickTimestamp" "firebaseEventParameterCampaignContent" "firebaseEventParameterCampaignCp1" "firebaseEventParameterCampaignGclid" "firebaseEventParameterCampaignSource" "firebaseEventParameterCampaignTerm" "firebaseEventParameterCurrency" "firebaseEventParameterDynamicLinkAcceptTime" "firebaseEventParameterDynamicLinkLinkid" "firebaseEventParameterNotificationMessageDeviceTime" "firebaseEventParameterNotificationMessageId" "firebaseEventParameterNotificationMessageName" "firebaseEventParameterNotificationMessageTime" "firebaseEventParameterNotificationTopic" "firebaseEventParameterPreviousAppVersion" "firebaseEventParameterPreviousOsVersion" "firebaseEventParameterPrice" "firebaseEventParameterProductId" "firebaseEventParameterQuantity" "firebaseEventParameterValue" "videoProvider" "videoUrl" "videoTitle" "videoDuration" "videoPercent" "videoVisible" "videoStatus" "videoCurrentTime" "scrollDepthThreshold" "scrollDepthUnits" "scrollDepthDirection" "elementVisibilityRatio" "elementVisibilityTime" "elementVisibilityFirstTime" "elementVisibilityRecentTime" "requestPath" "requestMethod" "clientName" "queryString" "serverPageLocationUrl" "serverPageLocationPath" "serverPageLocationHostname"], "enumDescriptions" ["" "" "" "" "" "For web or mobile." "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "For web or mobile." "" "For web or mobile." "For web or mobile." "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" ""]}, "workspaceId" {"description" "GTM Workspace ID.", "type" "string"}, "path" {"description" "GTM BuiltInVariable's API relative path.", "type" "string"}, "containerId" {"type" "string", "description" "GTM Container ID."}}, "id" "BuiltInVariable"}, "RevertTagResponse" {"properties" {"tag" {"$ref" "Tag", "description" "Tag as it appears in the latest container version since the last workspace synchronization operation. If no tag is present, that means the tag was deleted in the latest container version."}}, "description" "The result of reverting a tag in a workspace.", "type" "object", "id" "RevertTagResponse"}, "Client" {"properties" {"tagManagerUrl" {"type" "string", "description" "Auto generated link to the tag manager UI"}, "workspaceId" {"type" "string", "description" "GTM Workspace ID."}, "priority" {"type" "integer", "format" "int32", "description" "Priority determines relative firing order. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update"}, "parameter" {"items" {"$ref" "Parameter"}, "type" "array", "description" "The client's parameters. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update"}, "accountId" {"type" "string", "description" "GTM Account ID."}, "fingerprint" {"type" "string", "description" "The fingerprint of the GTM Client as computed at storage time. This value is recomputed whenever the client is modified."}, "path" {"type" "string", "description" "GTM client's API relative path."}, "parentFolderId" {"description" "Parent folder id.", "type" "string"}, "name" {"annotations" {"required" ["tagmanager.accounts.containers.workspaces.clients.create" "tagmanager.accounts.containers.workspaces.clients.update"]}, "type" "string", "description" "Client display name. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update"}, "clientId" {"type" "string", "description" "The Client ID uniquely identifies the GTM client."}, "type" {"description" "Client type. @mutable tagmanager.accounts.containers.workspaces.clients.create @mutable tagmanager.accounts.containers.workspaces.clients.update", "annotations" {"required" ["tagmanager.accounts.containers.workspaces.clients.create" "tagmanager.accounts.containers.workspaces.clients.update"]}, "type" "string"}, "containerId" {"type" "string", "description" "GTM Container ID."}, "notes" {"description" "User notes on how to apply this tag in the container. @mutable tagmanager.accounts.containers.workspaces.tags.create @mutable tagmanager.accounts.containers.workspaces.tags.update", "type" "string"}}, "id" "Client", "type" "object"}, "Trigger" {"id" "Trigger", "properties" {"continuousTimeMinMilliseconds" {"$ref" "Parameter", "description" "A visibility trigger minimum continuous visible time (in milliseconds). Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"}, "tagManagerUrl" {"description" "Auto generated link to the tag manager UI", "type" "string"}, "workspaceId" {"type" "string", "description" "GTM Workspace ID."}, "autoEventFilter" {"description" "Used in the case of auto event tracking. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update", "type" "array", "items" {"$ref" "Condition"}}, "intervalSeconds" {"description" "Time between Timer Events to fire (in seconds). Only valid for AMP Timer trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update", "$ref" "Parameter"}, "parameter" {"items" {"$ref" "Parameter"}, "type" "array", "description" "Additional parameters. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"}, "accountId" {"type" "string", "description" "GTM Account ID."}, "fingerprint" {"description" "The fingerprint of the GTM Trigger as computed at storage time. This value is recomputed whenever the trigger is modified.", "type" "string"}, "waitForTags" {"$ref" "Parameter", "description" "Whether or not we should delay the form submissions or link opening until all of the tags have fired (by preventing the default action and later simulating the default action). Only valid for Form Submission and Link Click triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"}, "path" {"description" "GTM Trigger's API relative path.", "type" "string"}, "parentFolderId" {"description" "Parent folder id.", "type" "string"}, "totalTimeMinMilliseconds" {"$ref" "Parameter", "description" "A visibility trigger minimum total visible time (in milliseconds). Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"}, "maxTimerLengthSeconds" {"description" "Max time to fire Timer Events (in seconds). Only valid for AMP Timer trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update", "$ref" "Parameter"}, "checkValidation" {"$ref" "Parameter", "description" "Whether or not we should only fire tags if the form submit or link click event is not cancelled by some other event handler (e.g. because of validation). Only valid for Form Submission and Link Click triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"}, "name" {"description" "Trigger display name. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update", "annotations" {"required" ["tagmanager.accounts.containers.workspaces.triggers.create" "tagmanager.accounts.containers.workspaces.triggers.update"]}, "type" "string"}, "eventName" {"description" "Name of the GTM event that is fired. Only valid for Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update", "$ref" "Parameter"}, "limit" {"$ref" "Parameter", "description" "Limit of the number of GTM events this Timer Trigger will fire. If no limit is set, we will continue to fire GTM events until the user leaves the page. Only valid for Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"}, "interval" {"$ref" "Parameter", "description" "Time between triggering recurring Timer Events (in milliseconds). Only valid for Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"}, "uniqueTriggerId" {"description" "Globally unique id of the trigger that auto-generates this (a Form Submit, Link Click or Timer listener) if any. Used to make incompatible auto-events work together with trigger filtering based on trigger ids. This value is populated during output generation since the tags implied by triggers don't exist until then. Only valid for Form Submit, Link Click and Timer triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update", "$ref" "Parameter"}, "verticalScrollPercentageList" {"description" "List of integer percentage values for scroll triggers. The trigger will fire when each percentage is reached when the view is scrolled vertically. Only valid for AMP scroll triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update", "$ref" "Parameter"}, "visiblePercentageMin" {"$ref" "Parameter", "description" "A visibility trigger minimum percent visibility. Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"}, "filter" {"items" {"$ref" "Condition"}, "type" "array", "description" "The trigger will only fire iff all Conditions are true. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"}, "type" {"enum" ["eventTypeUnspecified" "pageview" "domReady" "windowLoaded" "customEvent" "triggerGroup" "init" "consentInit" "serverPageview" "always" "firebaseAppException" "firebaseAppUpdate" "firebaseCampaign" "firebaseFirstOpen" "firebaseInAppPurchase" "firebaseNotificationDismiss" "firebaseNotificationForeground" "firebaseNotificationOpen" "firebaseNotificationReceive" "firebaseOsUpdate" "firebaseSessionStart" "firebaseUserEngagement" "formSubmission" "click" "linkClick" "jsError" "historyChange" "timer" "ampClick" "ampTimer" "ampScroll" "ampVisibility" "youTubeVideo" "scrollDepth" "elementVisibility"], "type" "string", "annotations" {"required" ["tagmanager.accounts.containers.workspaces.triggers.create"]}, "description" "Defines the data layer event that causes this trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update", "enumDescriptions" ["" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" ""]}, "visiblePercentageMax" {"description" "A visibility trigger maximum percent visibility. Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update", "$ref" "Parameter"}, "waitForTagsTimeout" {"description" "How long to wait (in milliseconds) for tags to fire when 'waits_for_tags' above evaluates to true. Only valid for Form Submission and Link Click triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update", "$ref" "Parameter"}, "horizontalScrollPercentageList" {"$ref" "Parameter", "description" "List of integer percentage values for scroll triggers. The trigger will fire when each percentage is reached when the view is scrolled horizontally. Only valid for AMP scroll triggers. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update"}, "containerId" {"description" "GTM Container ID.", "type" "string"}, "notes" {"description" "User notes on how to apply this trigger in the container. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update", "type" "string"}, "triggerId" {"description" "The Trigger ID uniquely identifies the GTM Trigger.", "type" "string"}, "selector" {"description" "A click trigger CSS selector (i.e. \"a\", \"button\" etc.). Only valid for AMP Click trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update", "$ref" "Parameter"}, "customEventFilter" {"description" "Used in the case of custom event, which is fired iff all Conditions are true. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update", "items" {"$ref" "Condition"}, "type" "array"}, "visibilitySelector" {"description" "A visibility trigger CSS selector (i.e. \"#id\"). Only valid for AMP Visibility trigger. @mutable tagmanager.accounts.containers.workspaces.triggers.create @mutable tagmanager.accounts.containers.workspaces.triggers.update", "$ref" "Parameter"}}, "description" "Represents a Google Tag Manager Trigger", "type" "object"}}}