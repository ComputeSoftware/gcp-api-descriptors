#:compute.gcp.descriptor{:name "tpu", :title "Cloud TPU API", :api-version "v1alpha1", :revision "20200318", :endpoint #:compute.gcp.descriptor{:url "https://tpu.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"type" "string", "location" "query", "description" "JSONP"}, "uploadType" {"type" "string", "location" "query", "description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."}, "key" {"type" "string", "location" "query", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."}, "access_token" {"type" "string", "location" "query", "description" "OAuth access token."}, "oauth_token" {"description" "OAuth 2.0 token for the current user.", "type" "string", "location" "query"}, "prettyPrint" {"location" "query", "description" "Returns response with indentations and line breaks.", "type" "boolean", "default" "true"}, "alt" {"enum" ["json" "media" "proto"], "type" "string", "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "location" "query", "description" "Data format for response.", "default" "json"}, "$.xgafv" {"location" "query", "enum" ["1" "2"], "description" "V1 error format.", "type" "string", "enumDescriptions" ["v1 error format" "v2 error format"]}, "fields" {"location" "query", "description" "Selector specifying which fields to include in a partial response.", "type" "string"}, "upload_protocol" {"location" "query", "description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "type" "string"}, "quotaUser" {"type" "string", "location" "query", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."}}, :op->info {"tpu.projects.locations.acceleratorTypes.get" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/projects/{projectsId}/locations/{locationsId}/acceleratorTypes/{acceleratorTypesId}", :response {"$ref" "AcceleratorType"}, :parameters {"name" {"pattern" "^projects/[^/]+/locations/[^/]+/acceleratorTypes/[^/]+$", "location" "path", "description" "The resource name.", "required" true, "type" "string"}}, :description "Gets AcceleratorType."}, "tpu.projects.locations.nodes.create" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/projects/{projectsId}/locations/{locationsId}/nodes", :request {"$ref" "Node"}, :response {"$ref" "Operation"}, :parameters {"parent" {"required" true, "type" "string", "pattern" "^projects/[^/]+/locations/[^/]+$", "location" "path", "description" "The parent resource name."}, "nodeId" {"type" "string", "location" "query", "description" "The unqualified resource name."}}, :description "Creates a node."}, "tpu.projects.locations.nodes.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1alpha1/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}", :response {"$ref" "Operation"}, :parameters {"name" {"description" "The resource name.", "required" true, "type" "string", "pattern" "^projects/[^/]+/locations/[^/]+/nodes/[^/]+$", "location" "path"}}, :description "Deletes a node."}, "tpu.projects.locations.operations.list" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations", :response {"$ref" "ListOperationsResponse"}, :parameters {"filter" {"type" "string", "location" "query", "description" "The standard list filter."}, "name" {"location" "path", "description" "The name of the operation's parent resource.", "required" true, "type" "string", "pattern" "^projects/[^/]+/locations/[^/]+$"}, "pageToken" {"location" "query", "description" "The standard list page token.", "type" "string"}, "pageSize" {"type" "integer", "location" "query", "description" "The standard list page size.", "format" "int32"}}, :description "Lists operations that match the specified filter in the request. If the\nserver doesn't support this method, it returns `UNIMPLEMENTED`.\n\nNOTE: the `name` binding allows API services to override the binding\nto use different resource name schemes, such as `users/*/operations`. To\noverride the binding, API services can add a binding such as\n`\"/v1/{name=users/*}/operations\"` to their service configuration.\nFor backwards compatibility, the default name includes the operations\ncollection id, however overriding users must ensure the name binding\nis the parent resource, without the operations collection id."}, "tpu.projects.locations.nodes.reimage" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}:reimage", :request {"$ref" "ReimageNodeRequest"}, :response {"$ref" "Operation"}, :parameters {"name" {"pattern" "^projects/[^/]+/locations/[^/]+/nodes/[^/]+$", "location" "path", "description" "The resource name.", "required" true, "type" "string"}}, :description "Reimages a node's OS."}, "tpu.projects.locations.get" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/projects/{projectsId}/locations/{locationsId}", :response {"$ref" "Location"}, :parameters {"name" {"required" true, "type" "string", "pattern" "^projects/[^/]+/locations/[^/]+$", "location" "path", "description" "Resource name for the location."}}, :description "Gets information about a location."}, "tpu.projects.locations.operations.cancel" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel", :response {"$ref" "Empty"}, :parameters {"name" {"location" "path", "description" "The name of the operation resource to be cancelled.", "required" true, "type" "string", "pattern" "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"}}, :description "Starts asynchronous cancellation on a long-running operation.  The server\nmakes a best effort to cancel the operation, but success is not\nguaranteed.  If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`.  Clients can use\nOperations.GetOperation or\nother methods to check whether the cancellation succeeded or whether the\noperation completed despite cancellation. On successful cancellation,\nthe operation is not deleted; instead, it becomes an operation with\nan Operation.error value with a google.rpc.Status.code of 1,\ncorresponding to `Code.CANCELLED`."}, "tpu.projects.locations.list" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/projects/{projectsId}/locations", :response {"$ref" "ListLocationsResponse"}, :parameters {"name" {"required" true, "type" "string", "pattern" "^projects/[^/]+$", "location" "path", "description" "The resource that owns the locations collection, if applicable."}, "pageToken" {"location" "query", "description" "The standard list page token.", "type" "string"}, "pageSize" {"description" "The standard list page size.", "format" "int32", "type" "integer", "location" "query"}, "filter" {"type" "string", "location" "query", "description" "The standard list filter."}}, :description "Lists information about the supported locations for this service."}, "tpu.projects.locations.nodes.start" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}:start", :request {"$ref" "StartNodeRequest"}, :response {"$ref" "Operation"}, :parameters {"name" {"location" "path", "description" "The resource name.", "required" true, "type" "string", "pattern" "^projects/[^/]+/locations/[^/]+/nodes/[^/]+$"}}, :description "Starts a node."}, "tpu.projects.locations.nodes.stop" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}:stop", :request {"$ref" "StopNodeRequest"}, :response {"$ref" "Operation"}, :parameters {"name" {"description" "The resource name.", "required" true, "type" "string", "pattern" "^projects/[^/]+/locations/[^/]+/nodes/[^/]+$", "location" "path"}}, :description "Stops a node."}, "tpu.projects.locations.nodes.get" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/projects/{projectsId}/locations/{locationsId}/nodes/{nodesId}", :response {"$ref" "Node"}, :parameters {"name" {"pattern" "^projects/[^/]+/locations/[^/]+/nodes/[^/]+$", "location" "path", "description" "The resource name.", "required" true, "type" "string"}}, :description "Gets the details of a node."}, "tpu.projects.locations.nodes.list" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/projects/{projectsId}/locations/{locationsId}/nodes", :response {"$ref" "ListNodesResponse"}, :parameters {"pageToken" {"description" "The next_page_token value returned from a previous List request, if any.", "type" "string", "location" "query"}, "pageSize" {"location" "query", "description" "The maximum number of items to return.", "format" "int32", "type" "integer"}, "parent" {"description" "The parent resource name.", "required" true, "type" "string", "pattern" "^projects/[^/]+/locations/[^/]+$", "location" "path"}}, :description "Lists nodes."}, "tpu.projects.locations.operations.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}", :response {"$ref" "Empty"}, :parameters {"name" {"pattern" "^projects/[^/]+/locations/[^/]+/operations/[^/]+$", "location" "path", "description" "The name of the operation resource to be deleted.", "required" true, "type" "string"}}, :description "Deletes a long-running operation. This method indicates that the client is\nno longer interested in the operation result. It does not cancel the\noperation. If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`."}, "tpu.projects.locations.tensorflowVersions.list" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/projects/{projectsId}/locations/{locationsId}/tensorflowVersions", :response {"$ref" "ListTensorFlowVersionsResponse"}, :parameters {"pageToken" {"description" "The next_page_token value returned from a previous List request, if any.", "type" "string", "location" "query"}, "orderBy" {"location" "query", "description" "Sort results.", "type" "string"}, "pageSize" {"location" "query", "description" "The maximum number of items to return.", "format" "int32", "type" "integer"}, "parent" {"location" "path", "description" "The parent resource name.", "required" true, "type" "string", "pattern" "^projects/[^/]+/locations/[^/]+$"}, "filter" {"location" "query", "description" "List filter.", "type" "string"}}, :description "Lists TensorFlow versions supported by this API."}, "tpu.projects.locations.acceleratorTypes.list" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/projects/{projectsId}/locations/{locationsId}/acceleratorTypes", :response {"$ref" "ListAcceleratorTypesResponse"}, :parameters {"parent" {"required" true, "type" "string", "pattern" "^projects/[^/]+/locations/[^/]+$", "location" "path", "description" "The parent resource name."}, "filter" {"description" "List filter.", "type" "string", "location" "query"}, "pageToken" {"type" "string", "location" "query", "description" "The next_page_token value returned from a previous List request, if any."}, "orderBy" {"type" "string", "location" "query", "description" "Sort results."}, "pageSize" {"description" "The maximum number of items to return.", "format" "int32", "type" "integer", "location" "query"}}, :description "Lists accelerator types supported by this API."}, "tpu.projects.locations.operations.get" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}", :response {"$ref" "Operation"}, :parameters {"name" {"required" true, "type" "string", "pattern" "^projects/[^/]+/locations/[^/]+/operations/[^/]+$", "location" "path", "description" "The name of the operation resource."}}, :description "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice."}, "tpu.projects.locations.tensorflowVersions.get" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/projects/{projectsId}/locations/{locationsId}/tensorflowVersions/{tensorflowVersionsId}", :response {"$ref" "TensorFlowVersion"}, :parameters {"name" {"pattern" "^projects/[^/]+/locations/[^/]+/tensorflowVersions/[^/]+$", "location" "path", "description" "The resource name.", "required" true, "type" "string"}}, :description "Gets TensorFlow Version."}}, :schemas {"ListAcceleratorTypesResponse" {"description" "Response for ListAcceleratorTypes.", "type" "object", "properties" {"nextPageToken" {"description" "The next page token or empty if none.", "type" "string"}, "unreachable" {"type" "array", "items" {"type" "string"}, "description" "Locations that could not be reached."}, "acceleratorTypes" {"description" "The listed nodes.", "type" "array", "items" {"$ref" "AcceleratorType"}}}, "id" "ListAcceleratorTypesResponse"}, "Empty" {"description" "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.", "type" "object", "properties" {}, "id" "Empty"}, "ListOperationsResponse" {"type" "object", "properties" {"nextPageToken" {"description" "The standard List next-page token.", "type" "string"}, "operations" {"description" "A list of operations that matches the specified filter in the request.", "type" "array", "items" {"$ref" "Operation"}}}, "id" "ListOperationsResponse", "description" "The response message for Operations.ListOperations."}, "SchedulingConfig" {"type" "object", "properties" {"reserved" {"description" "Whether the node is created under a reservation.", "type" "boolean"}, "preemptible" {"type" "boolean"}}, "id" "SchedulingConfig"}, "Location" {"id" "Location", "description" "A resource that represents Google Cloud Platform location.", "type" "object", "properties" {"name" {"description" "Resource name for the location, which may vary between implementations.\nFor example: `\"projects/example-project/locations/us-east1\"`", "type" "string"}, "locationId" {"description" "The canonical id for this location. For example: `\"us-east1\"`.", "type" "string"}, "displayName" {"type" "string", "description" "The friendly name for this location, typically a nearby city name.\nFor example, \"Tokyo\"."}, "metadata" {"additionalProperties" {"description" "Properties of the object. Contains field @type with type URL.", "type" "any"}, "description" "Service-specific metadata. For example the available capacity at the given\nlocation.", "type" "object"}, "labels" {"description" "Cross-service attributes for the location. For example\n\n    {\"cloud.googleapis.com/region\": \"us-east1\"}", "type" "object", "additionalProperties" {"type" "string"}}}}, "Operation" {"description" "This resource represents a long-running operation that is the result of a\nnetwork API call.", "type" "object", "properties" {"metadata" {"additionalProperties" {"description" "Properties of the object. Contains field @type with type URL.", "type" "any"}, "description" "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.", "type" "object"}, "done" {"type" "boolean", "description" "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable."}, "response" {"additionalProperties" {"description" "Properties of the object. Contains field @type with type URL.", "type" "any"}, "description" "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.", "type" "object"}, "name" {"type" "string", "description" "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`."}, "error" {"description" "The error result of the operation in case of failure or cancellation.", "$ref" "Status"}}, "id" "Operation"}, "AcceleratorType" {"id" "AcceleratorType", "description" "A accelerator type that a Node can be configured with.", "type" "object", "properties" {"name" {"description" "The resource name.", "type" "string"}, "type" {"type" "string", "description" "the accelerator type."}}}, "OperationMetadata" {"description" "Represents the metadata of the long-running operation.", "type" "object", "properties" {"endTime" {"description" "[Output only] The time the operation finished running.", "format" "google-datetime", "type" "string"}, "cancelRequested" {"description" "[Output only] Identifies whether the user has requested cancellation\nof the operation. Operations that have successfully been cancelled\nhave Operation.error value with a google.rpc.Status.code of 1,\ncorresponding to `Code.CANCELLED`.", "type" "boolean"}, "verb" {"description" "[Output only] Name of the verb executed by the operation.", "type" "string"}, "createTime" {"description" "[Output only] The time the operation was created.", "format" "google-datetime", "type" "string"}, "statusDetail" {"description" "[Output only] Human-readable status of the operation, if any.", "type" "string"}, "apiVersion" {"description" "[Output only] API version used to start the operation.", "type" "string"}, "target" {"description" "[Output only] Server-defined resource path for the target of the operation.", "type" "string"}}, "id" "OperationMetadata"}, "Status" {"type" "object", "properties" {"code" {"description" "The status code, which should be an enum value of google.rpc.Code.", "format" "int32", "type" "integer"}, "message" {"description" "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.", "type" "string"}, "details" {"description" "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.", "type" "array", "items" {"type" "object", "additionalProperties" {"type" "any", "description" "Properties of the object. Contains field @type with type URL."}}}}, "id" "Status", "description" "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}, "ListLocationsResponse" {"id" "ListLocationsResponse", "description" "The response message for Locations.ListLocations.", "type" "object", "properties" {"locations" {"type" "array", "items" {"$ref" "Location"}, "description" "A list of locations that matches the specified filter in the request."}, "nextPageToken" {"type" "string", "description" "The standard List next-page token."}}}, "NetworkEndpoint" {"id" "NetworkEndpoint", "description" "A network endpoint over which a TPU worker can be reached.", "type" "object", "properties" {"ipAddress" {"description" "The IP address of this network endpoint.", "type" "string"}, "port" {"description" "The port of this network endpoint.", "format" "int32", "type" "integer"}}}, "TensorFlowVersion" {"type" "object", "properties" {"name" {"description" "The resource name.", "type" "string"}, "version" {"description" "the tensorflow version.", "type" "string"}}, "id" "TensorFlowVersion", "description" "A tensorflow version that a Node can be configured with."}, "StartNodeRequest" {"type" "object", "properties" {}, "id" "StartNodeRequest", "description" "Request for StartNode."}, "StopNodeRequest" {"description" "Request for StopNode.", "type" "object", "properties" {}, "id" "StopNodeRequest"}, "ListNodesResponse" {"description" "Response for ListNodes.", "type" "object", "properties" {"unreachable" {"type" "array", "items" {"type" "string"}, "description" "Locations that could not be reached."}, "nodes" {"description" "The listed nodes.", "type" "array", "items" {"$ref" "Node"}}, "nextPageToken" {"description" "The next page token or empty if none.", "type" "string"}}, "id" "ListNodesResponse"}, "ListTensorFlowVersionsResponse" {"id" "ListTensorFlowVersionsResponse", "description" "Response for ListTensorFlowVersions.", "type" "object", "properties" {"nextPageToken" {"description" "The next page token or empty if none.", "type" "string"}, "tensorflowVersions" {"description" "The listed nodes.", "type" "array", "items" {"$ref" "TensorFlowVersion"}}, "unreachable" {"description" "Locations that could not be reached.", "type" "array", "items" {"type" "string"}}}}, "Node" {"description" "A TPU instance.", "type" "object", "properties" {"health" {"description" "The health status of the TPU node.", "type" "string", "enumDescriptions" ["Health status is unknown: not initialized or failed to retrieve." "The resource is healthy." "The resource is unhealthy." "The resource is unresponsive." "The in-guest ML stack is unhealthy." "The node is under maintenance/priority boost caused rescheduling and\nwill resume running once rescheduled."], "enum" ["HEALTH_UNSPECIFIED" "HEALTHY" "DEPRECATED_UNHEALTHY" "TIMEOUT" "UNHEALTHY_TENSORFLOW" "UNHEALTHY_MAINTENANCE"]}, "tensorflowVersion" {"description" "The version of Tensorflow running in the Node.\nRequired.", "type" "string"}, "acceleratorType" {"description" "The type of hardware accelerators associated with this node.\nRequired.", "type" "string"}, "schedulingConfig" {"$ref" "SchedulingConfig"}, "serviceAccount" {"type" "string", "description" "Output only. The service account used to run the tensor flow services within the node.\nTo share resources, including Google Cloud Storage data, with the\nTensorflow job running in the Node, this account must have permissions to\nthat data."}, "cidrBlock" {"description" "The CIDR block that the TPU node will use when selecting an IP address.\nThis CIDR block must be a /29 block; the Compute Engine networks API\nforbids a smaller block, and using a larger block would be wasteful (a\nnode can only consume one IP address). Errors will occur if the CIDR block\nhas already been used for a currently existing TPU node, the CIDR block\nconflicts with any subnetworks in the user's provided network, or the\nprovided network is peered with another network that is using that CIDR\nblock.", "type" "string"}, "networkEndpoints" {"description" "Output only. The network endpoints where TPU workers can be accessed and\nsent work. It is recommended that Tensorflow clients of the node reach out\nto the 0th entry in this map first.", "type" "array", "items" {"$ref" "NetworkEndpoint"}}, "name" {"description" "Output only. The immutable name of the TPU", "type" "string"}, "createTime" {"type" "string", "description" "Output only. The time when the node was created.", "format" "google-datetime"}, "network" {"description" "The name of a network they wish to peer the TPU node to. It must be a\npreexisting Compute Engine network inside of the project on which this API\nhas been activated. If none is provided, \"default\" will be used.", "type" "string"}, "labels" {"type" "object", "additionalProperties" {"type" "string"}, "description" "Resource labels to represent user-provided metadata."}, "healthDescription" {"description" "Output only. If this field is populated, it contains a description of why the TPU Node\nis unhealthy.", "type" "string"}, "port" {"description" "Output only. DEPRECATED! Use network_endpoints instead.\nThe network port for the TPU Node as visible to Compute Engine instances.", "type" "string"}, "state" {"type" "string", "enumDescriptions" ["TPU node state is not known/set." "TPU node is being created." "TPU node has been created and is fully usable." "TPU node is restarting." "TPU node is undergoing reimaging." "TPU node is being deleted." "TPU node is being repaired and may be unusable. Details can be\nfound in the `help_description` field." "TPU node is stopped." "TPU node is currently stopping." "TPU node is currently starting." "TPU node has been preempted. Only applies to Preemptible TPU Nodes." "TPU node has been terminated due to maintenance or has reached the end of\nits life cycle (for preemptible nodes)." "TPU node is currently hiding." "TPU node has been hidden." "TPU node is currently unhiding."], "enum" ["STATE_UNSPECIFIED" "CREATING" "READY" "RESTARTING" "REIMAGING" "DELETING" "REPAIRING" "STOPPED" "STOPPING" "STARTING" "PREEMPTED" "TERMINATED" "HIDING" "HIDDEN" "UNHIDING"], "description" "Output only. The current state for the TPU Node."}, "description" {"description" "The user-supplied description of the TPU. Maximum of 512 characters.", "type" "string"}, "ipAddress" {"description" "Output only. DEPRECATED! Use network_endpoints instead.\nThe network address for the TPU Node as visible to Compute Engine\ninstances.", "type" "string"}}, "id" "Node"}, "ReimageNodeRequest" {"id" "ReimageNodeRequest", "description" "Request for ReimageNode.", "type" "object", "properties" {"tensorflowVersion" {"description" "The version for reimage to create.", "type" "string"}}}}}