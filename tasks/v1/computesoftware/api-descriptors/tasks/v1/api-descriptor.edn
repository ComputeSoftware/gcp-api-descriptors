#:compute.gcp.descriptor{:name "tasks", :title "Tasks API", :api-version "v1", :revision "20200711", :endpoint #:compute.gcp.descriptor{:url "https://www.googleapis.com/", :batch-path "batch/tasks/v1", :service-path ""}, :parameters {"callback" {"location" "query", "type" "string", "description" "JSONP"}, "uploadType" {"description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "location" "query", "type" "string"}, "key" {"location" "query", "type" "string", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."}, "access_token" {"type" "string", "location" "query", "description" "OAuth access token."}, "oauth_token" {"location" "query", "type" "string", "description" "OAuth 2.0 token for the current user."}, "prettyPrint" {"default" "true", "type" "boolean", "location" "query", "description" "Returns response with indentations and line breaks."}, "alt" {"type" "string", "location" "query", "description" "Data format for response.", "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "enum" ["json" "media" "proto"], "default" "json"}, "$.xgafv" {"enum" ["1" "2"], "location" "query", "enumDescriptions" ["v1 error format" "v2 error format"], "type" "string", "description" "V1 error format."}, "fields" {"location" "query", "type" "string", "description" "Selector specifying which fields to include in a partial response."}, "upload_protocol" {"location" "query", "type" "string", "description" "Upload protocol for media (e.g. \"raw\", \"multipart\")."}, "quotaUser" {"location" "query", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "type" "string"}}, :op->info {"tasks.tasklists.list" #:compute.gcp.descriptor{:http-method :get, :path "tasks/v1/users/@me/lists", :response {"$ref" "TaskLists"}, :parameters {"maxResults" {"location" "query", "format" "int32", "type" "integer", "description" "Maximum number of task lists returned on one page. Optional. The default is\n20 (max allowed: 100)."}, "pageToken" {"description" "Token specifying the result page to return. Optional.", "location" "query", "type" "string"}}, :description "Returns all the authenticated user's task lists."}, "tasks.tasks.insert" #:compute.gcp.descriptor{:http-method :post, :path "tasks/v1/lists/{tasklist}/tasks", :request {"$ref" "Task"}, :response {"$ref" "Task"}, :parameters {"previous" {"type" "string", "description" "Previous sibling task identifier. If the task is created at the first\nposition among its siblings, this parameter is omitted. Optional.", "location" "query"}, "parent" {"type" "string", "description" "Parent task identifier. If the task is created at the top level, this\nparameter is omitted. Optional.", "location" "query"}, "tasklist" {"required" true, "type" "string", "location" "path", "description" "Task list identifier."}}, :description "Creates a new task on the specified task list."}, "tasks.tasks.delete" #:compute.gcp.descriptor{:http-method :delete, :path "tasks/v1/lists/{tasklist}/tasks/{task}", :parameters {"tasklist" {"location" "path", "type" "string", "description" "Task list identifier.", "required" true}, "task" {"description" "Task identifier.", "type" "string", "location" "path", "required" true}}, :description "Deletes the specified task from the task list."}, "tasks.tasks.list" #:compute.gcp.descriptor{:http-method :get, :path "tasks/v1/lists/{tasklist}/tasks", :response {"$ref" "Tasks"}, :parameters {"pageToken" {"location" "query", "description" "Token specifying the result page to return. Optional.", "type" "string"}, "completedMin" {"type" "string", "description" "Lower bound for a task's completion date (as a RFC 3339 timestamp) to\nfilter by. Optional. The default is not to filter by completion date.", "location" "query"}, "tasklist" {"required" true, "description" "Task list identifier.", "type" "string", "location" "path"}, "updatedMin" {"type" "string", "location" "query", "description" "Lower bound for a task's last modification time (as a RFC 3339 timestamp)\nto filter by. Optional. The default is not to filter by last modification\ntime."}, "maxResults" {"location" "query", "format" "int32", "description" "Maximum number of task lists returned on one page. Optional. The default is\n20 (max allowed: 100).", "type" "integer"}, "completedMax" {"location" "query", "type" "string", "description" "Upper bound for a task's completion date (as a RFC 3339 timestamp) to\nfilter by. Optional. The default is not to filter by completion date."}, "showDeleted" {"description" "Flag indicating whether deleted tasks are returned in the result. Optional.\nThe default is False.", "location" "query", "type" "boolean"}, "showCompleted" {"description" "Flag indicating whether completed tasks are returned in the result.\nOptional. The default is True.", "type" "boolean", "location" "query"}, "dueMax" {"description" "Upper bound for a task's due date (as a RFC 3339 timestamp) to filter by.\nOptional. The default is not to filter by due date.", "type" "string", "location" "query"}, "dueMin" {"description" "Lower bound for a task's due date (as a RFC 3339 timestamp) to filter by.\nOptional. The default is not to filter by due date.", "location" "query", "type" "string"}, "showHidden" {"type" "boolean", "location" "query", "description" "Flag indicating whether hidden tasks are returned in the result. Optional.\nThe default is False."}}, :description "Returns all tasks in the specified task list."}, "tasks.tasks.patch" #:compute.gcp.descriptor{:http-method :patch, :path "tasks/v1/lists/{tasklist}/tasks/{task}", :request {"$ref" "Task"}, :response {"$ref" "Task"}, :parameters {"tasklist" {"description" "Task list identifier.", "type" "string", "location" "path", "required" true}, "task" {"type" "string", "required" true, "location" "path", "description" "Task identifier."}}, :description "Updates the specified task. This method supports patch semantics."}, "tasks.tasklists.update" #:compute.gcp.descriptor{:http-method :put, :path "tasks/v1/users/@me/lists/{tasklist}", :request {"$ref" "TaskList"}, :response {"$ref" "TaskList"}, :parameters {"tasklist" {"location" "path", "type" "string", "required" true, "description" "Task list identifier."}}, :description "Updates the authenticated user's specified task list."}, "tasks.tasklists.insert" #:compute.gcp.descriptor{:http-method :post, :path "tasks/v1/users/@me/lists", :request {"$ref" "TaskList"}, :response {"$ref" "TaskList"}, :parameters {}, :description "Creates a new task list and adds it to the authenticated user's task lists."}, "tasks.tasks.clear" #:compute.gcp.descriptor{:http-method :post, :path "tasks/v1/lists/{tasklist}/clear", :parameters {"tasklist" {"location" "path", "required" true, "description" "Task list identifier.", "type" "string"}}, :description "Clears all completed tasks from the specified task list. The affected tasks\nwill be marked as 'hidden' and no longer be returned by default when\nretrieving all tasks for a task list."}, "tasks.tasks.update" #:compute.gcp.descriptor{:http-method :put, :path "tasks/v1/lists/{tasklist}/tasks/{task}", :request {"$ref" "Task"}, :response {"$ref" "Task"}, :parameters {"task" {"required" true, "type" "string", "location" "path", "description" "Task identifier."}, "tasklist" {"location" "path", "description" "Task list identifier.", "type" "string", "required" true}}, :description "Updates the specified task."}, "tasks.tasklists.delete" #:compute.gcp.descriptor{:http-method :delete, :path "tasks/v1/users/@me/lists/{tasklist}", :parameters {"tasklist" {"location" "path", "required" true, "type" "string", "description" "Task list identifier."}}, :description "Deletes the authenticated user's specified task list."}, "tasks.tasks.get" #:compute.gcp.descriptor{:http-method :get, :path "tasks/v1/lists/{tasklist}/tasks/{task}", :response {"$ref" "Task"}, :parameters {"task" {"required" true, "type" "string", "description" "Task identifier.", "location" "path"}, "tasklist" {"type" "string", "location" "path", "required" true, "description" "Task list identifier."}}, :description "Returns the specified task."}, "tasks.tasklists.patch" #:compute.gcp.descriptor{:http-method :patch, :path "tasks/v1/users/@me/lists/{tasklist}", :request {"$ref" "TaskList"}, :response {"$ref" "TaskList"}, :parameters {"tasklist" {"required" true, "type" "string", "location" "path", "description" "Task list identifier."}}, :description "Updates the authenticated user's specified task list. This method supports\npatch semantics."}, "tasks.tasklists.get" #:compute.gcp.descriptor{:http-method :get, :path "tasks/v1/users/@me/lists/{tasklist}", :response {"$ref" "TaskList"}, :parameters {"tasklist" {"location" "path", "description" "Task list identifier.", "type" "string", "required" true}}, :description "Returns the authenticated user's specified task list."}, "tasks.tasks.move" #:compute.gcp.descriptor{:http-method :post, :path "tasks/v1/lists/{tasklist}/tasks/{task}/move", :response {"$ref" "Task"}, :parameters {"task" {"type" "string", "required" true, "description" "Task identifier.", "location" "path"}, "previous" {"type" "string", "location" "query", "description" "New previous sibling task identifier. If the task is moved to the first\nposition among its siblings, this parameter is omitted. Optional."}, "tasklist" {"required" true, "type" "string", "description" "Task list identifier.", "location" "path"}, "parent" {"location" "query", "type" "string", "description" "New parent task identifier. If the task is moved to the top level, this\nparameter is omitted. Optional."}}, :description "Moves the specified task to another position in the task list. This can\ninclude putting it as a child task under a new parent and/or move it to a\ndifferent position among its sibling tasks."}}, :schemas {"Task" {"id" "Task", "properties" {"parent" {"description" "Parent task identifier. This field is omitted if it is a top-level task.\nThis field is read-only. Use the \"move\" method to move the task under a\ndifferent parent or to the top level.", "type" "string"}, "id" {"type" "string", "description" "Task identifier."}, "completed" {"type" "string", "description" "Completion date of the task (as a RFC 3339 timestamp). This field is\nomitted if the task has not been completed."}, "position" {"description" "String indicating the position of the task among its sibling tasks under\nthe same parent task or at the top level. If this string is greater than\nanother task's corresponding position string according to lexicographical\nordering, the task is positioned after the other task under the same parent\ntask (or at the top level). This field is read-only. Use the \"move\" method\nto move the task to another position.", "type" "string"}, "status" {"type" "string", "description" "Status of the task. This is either \"needsAction\" or \"completed\"."}, "selfLink" {"description" "URL pointing to this task. Used to retrieve, update, or delete this task.", "type" "string"}, "etag" {"description" "ETag of the resource.", "type" "string"}, "links" {"type" "array", "description" "Collection of links. This collection is read-only.", "items" {"properties" {"type" {"type" "string", "description" "Type of the link, e.g. \"email\"."}, "description" {"type" "string", "description" "The description. In HTML speak: Everything between &lt;a&gt; and\n&lt;/a&gt;."}, "link" {"type" "string", "description" "The URL."}}, "type" "object"}}, "kind" {"description" "Type of the resource. This is always \"tasks#task\".", "type" "string"}, "title" {"type" "string", "description" "Title of the task."}, "deleted" {"type" "boolean", "description" "Flag indicating whether the task has been deleted. The default is False."}, "hidden" {"type" "boolean", "description" "Flag indicating whether the task is hidden. This is the case if the task\nhad been marked completed when the task list was last cleared. The default\nis False. This field is read-only."}, "updated" {"description" "Last modification time of the task (as a RFC 3339 timestamp).", "type" "string"}, "notes" {"description" "Notes describing the task. Optional.", "type" "string"}, "due" {"type" "string", "description" "Due date of the task (as a RFC 3339 timestamp). Optional. The due date only\nrecords date information; the time portion of the timestamp is discarded\nwhen setting the due date. It isn't possible to read or write the time that\na task is due via the API."}}, "type" "object"}, "Tasks" {"type" "object", "id" "Tasks", "properties" {"kind" {"description" "Type of the resource. This is always \"tasks#tasks\".", "type" "string"}, "etag" {"type" "string", "description" "ETag of the resource."}, "nextPageToken" {"type" "string", "description" "Token used to access the next page of this result."}, "items" {"type" "array", "description" "Collection of tasks.", "items" {"$ref" "Task"}}}}, "TaskList" {"id" "TaskList", "type" "object", "properties" {"kind" {"type" "string", "description" "Type of the resource. This is always \"tasks#taskList\"."}, "selfLink" {"description" "URL pointing to this task list. Used to retrieve, update, or delete this\ntask list.", "type" "string"}, "updated" {"type" "string", "description" "Last modification time of the task list (as a RFC 3339 timestamp)."}, "etag" {"type" "string", "description" "ETag of the resource."}, "title" {"type" "string", "description" "Title of the task list."}, "id" {"type" "string", "description" "Task list identifier."}}}, "TaskLists" {"properties" {"nextPageToken" {"description" "Token that can be used to request the next page of this result.", "type" "string"}, "items" {"type" "array", "items" {"$ref" "TaskList"}, "description" "Collection of task lists."}, "kind" {"type" "string", "description" "Type of the resource. This is always \"tasks#taskLists\"."}, "etag" {"description" "ETag of the resource.", "type" "string"}}, "type" "object", "id" "TaskLists"}}}