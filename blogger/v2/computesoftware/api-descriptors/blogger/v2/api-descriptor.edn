#:compute.gcp.descriptor{:name "blogger", :title "Blogger API v3", :api-version "v2", :revision "20200416", :endpoint #:compute.gcp.descriptor{:url "https://blogger.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"description" "JSONP", "type" "string", "location" "query"}, "uploadType" {"type" "string", "location" "query", "description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."}, "key" {"location" "query", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "type" "string"}, "access_token" {"description" "OAuth access token.", "type" "string", "location" "query"}, "oauth_token" {"description" "OAuth 2.0 token for the current user.", "type" "string", "location" "query"}, "prettyPrint" {"description" "Returns response with indentations and line breaks.", "type" "boolean", "default" "true", "location" "query"}, "alt" {"default" "json", "enum" ["json" "media" "proto"], "type" "string", "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "location" "query", "description" "Data format for response."}, "$.xgafv" {"description" "V1 error format.", "type" "string", "enumDescriptions" ["v1 error format" "v2 error format"], "location" "query", "enum" ["1" "2"]}, "fields" {"location" "query", "description" "Selector specifying which fields to include in a partial response.", "type" "string"}, "upload_protocol" {"location" "query", "description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "type" "string"}, "quotaUser" {"location" "query", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "type" "string"}}, :op->info {"blogger.comments.list" #:compute.gcp.descriptor{:http-method :get, :path "v2/blogs/{blogId}/posts/{postId}/comments", :response {"$ref" "CommentList"}, :parameters {"postId" {"location" "path", "required" true, "type" "string"}, "fetchBodies" {"location" "query", "type" "boolean"}, "pageToken" {"type" "string", "location" "query"}, "blogId" {"required" true, "type" "string", "location" "path"}, "maxResults" {"format" "uint32", "type" "integer", "location" "query"}, "startDate" {"type" "string", "location" "query"}}, :description "Lists comments."}, "blogger.pages.list" #:compute.gcp.descriptor{:http-method :get, :path "v2/blogs/{blogId}/pages", :response {"$ref" "PageList"}, :parameters {"fetchBodies" {"type" "boolean", "location" "query"}, "blogId" {"required" true, "type" "string", "location" "path"}}, :description "Lists pages."}, "blogger.users.get" #:compute.gcp.descriptor{:http-method :get, :path "v2/users/{userId}", :response {"$ref" "User"}, :parameters {"userId" {"required" true, "type" "string", "location" "path"}}, :description "Gets a user by user id."}, "blogger.posts.list" #:compute.gcp.descriptor{:http-method :get, :path "v2/blogs/{blogId}/posts", :response {"$ref" "PostList"}, :parameters {"startDate" {"location" "query", "type" "string"}, "fetchBodies" {"location" "query", "type" "boolean"}, "pageToken" {"location" "query", "type" "string"}, "blogId" {"required" true, "type" "string", "location" "path"}, "maxResults" {"type" "integer", "location" "query", "format" "uint32"}}, :description "Lists posts."}, "blogger.pages.get" #:compute.gcp.descriptor{:http-method :get, :path "v2/blogs/{blogId}/pages/{pageId}", :response {"$ref" "Page"}, :parameters {"blogId" {"required" true, "type" "string", "location" "path"}, "pageId" {"required" true, "type" "string", "location" "path"}}, :description "Gets a page by blog id and page id."}, "blogger.blogs.list" #:compute.gcp.descriptor{:http-method :get, :path "v2/users/{userId}/blogs", :response {"$ref" "BlogList"}, :parameters {"userId" {"location" "path", "required" true, "type" "string"}}, :description "Lists blogs by user id, possibly filtered."}, "blogger.posts.get" #:compute.gcp.descriptor{:http-method :get, :path "v2/blogs/{blogId}/posts/{postId}", :response {"$ref" "Post"}, :parameters {"postId" {"required" true, "type" "string", "location" "path"}, "blogId" {"required" true, "type" "string", "location" "path"}}, :description "Gets a post by blog id and post id"}, "blogger.comments.get" #:compute.gcp.descriptor{:http-method :get, :path "v2/blogs/{blogId}/posts/{postId}/comments/{commentId}", :response {"$ref" "Comment"}, :parameters {"commentId" {"location" "path", "required" true, "type" "string"}, "blogId" {"required" true, "type" "string", "location" "path"}, "postId" {"location" "path", "required" true, "type" "string"}}, :description "Gets a comment by blog id, post id and comment id."}, "blogger.blogs.get" #:compute.gcp.descriptor{:http-method :get, :path "v2/blogs/{blogId}", :response {"$ref" "Blog"}, :parameters {"blogId" {"required" true, "type" "string", "location" "path"}}, :description "Gets a blog by id."}}, :schemas {"Post" {"type" "object", "properties" {"readerComments" {"type" "string", "enumDescriptions" ["" "" ""], "enum" ["ALLOW" "DONT_ALLOW_SHOW_EXISTING" "DONT_ALLOW_HIDE_EXISTING"], "description" "Comment control and display setting for readers of this post."}, "url" {"type" "string", "description" "The URL where this Post is displayed."}, "customMetaData" {"description" "The JSON meta-data for the Post.", "type" "string"}, "author" {"description" "The author of this Post.", "type" "object", "properties" {"displayName" {"type" "string", "description" "The display name."}, "id" {"type" "string", "description" "The identifier of the creator."}, "url" {"type" "string", "description" "The URL of the creator's Profile page."}, "image" {"description" "The creator's avatar.", "type" "object", "properties" {"url" {"description" "The creator's avatar URL.", "type" "string"}}}}}, "id" {"description" "The identifier of this Post.", "type" "string"}, "titleLink" {"description" "The title link URL, similar to atom's related link.", "type" "string"}, "labels" {"type" "array", "items" {"type" "string"}, "description" "The list of labels this Post was tagged with."}, "published" {"description" "RFC 3339 date-time when this Post was published.", "type" "string"}, "location" {"description" "The location for geotagged posts.", "type" "object", "properties" {"name" {"description" "Location name.", "type" "string"}, "span" {"description" "Location's viewport span. Can be used when rendering a map preview.", "type" "string"}, "lat" {"type" "number", "description" "Location's latitude.", "format" "double"}, "lng" {"description" "Location's longitude.", "format" "double", "type" "number"}}}, "blog" {"type" "object", "properties" {"id" {"description" "The identifier of the Blog that contains this Post.", "type" "string"}}, "description" "Data about the blog containing this Post."}, "status" {"enum" ["LIVE" "DRAFT" "SCHEDULED"], "description" "Status of the post. Only set for admin-level requests.", "type" "string", "enumDescriptions" ["" "" ""]}, "selfLink" {"description" "The API REST URL to fetch this resource from.", "type" "string"}, "content" {"description" "The content of the Post. May contain HTML markup.", "type" "string"}, "etag" {"description" "Etag of the resource.", "type" "string"}, "kind" {"description" "The kind of this entity. Always blogger#post.", "type" "string"}, "title" {"description" "The title of the Post.", "type" "string"}, "images" {"type" "array", "items" {"type" "object", "properties" {"url" {"type" "string"}}}, "description" "Display image for the Post."}, "replies" {"description" "The container of comments on this Post.", "type" "object", "properties" {"totalItems" {"type" "string", "description" "The count of comments on this post.", "format" "int64"}, "items" {"description" "The List of Comments for this Post.", "type" "array", "items" {"$ref" "Comment"}}, "selfLink" {"description" "The URL of the comments on this post.", "type" "string"}}}, "updated" {"description" "RFC 3339 date-time when this Post was last updated.", "type" "string"}}, "id" "Post"}, "Comment" {"type" "object", "properties" {"inReplyTo" {"description" "Data about the comment this is in reply to.", "type" "object", "properties" {"id" {"description" "The identified of the parent of this comment.", "type" "string"}}}, "author" {"description" "The author of this Comment.", "type" "object", "properties" {"image" {"description" "The creator's avatar.", "type" "object", "properties" {"url" {"description" "The creator's avatar URL.", "type" "string"}}}, "displayName" {"description" "The display name.", "type" "string"}, "id" {"type" "string", "description" "The identifier of the creator."}, "url" {"description" "The URL of the creator's Profile page.", "type" "string"}}}, "id" {"description" "The identifier for this resource.", "type" "string"}, "post" {"description" "Data about the post containing this comment.", "type" "object", "properties" {"id" {"description" "The identifier of the post containing this comment.", "type" "string"}}}, "published" {"description" "RFC 3339 date-time when this comment was published.", "type" "string"}, "blog" {"description" "Data about the blog containing this comment.", "type" "object", "properties" {"id" {"description" "The identifier of the blog containing this comment.", "type" "string"}}}, "status" {"enumDescriptions" ["" "" "" ""], "enum" ["LIVE" "EMPTIED" "PENDING" "SPAM"], "description" "The status of the comment (only populated for admin users).", "type" "string"}, "selfLink" {"description" "The API REST URL to fetch this resource from.", "type" "string"}, "content" {"description" "The actual content of the comment. May include HTML markup.", "type" "string"}, "kind" {"description" "The kind of this entry. Always blogger#comment.", "type" "string"}, "updated" {"description" "RFC 3339 date-time when this comment was last updated.", "type" "string"}}, "id" "Comment"}, "BlogPerUserInfo" {"type" "object", "properties" {"role" {"enumDescriptions" ["" "" "" ""], "enum" ["VIEW_TYPE_UNSPECIFIED" "READER" "AUTHOR" "ADMIN"], "description" "Access permissions that the user has for the blog (ADMIN, AUTHOR, or\nREADER).", "type" "string"}, "blogId" {"description" "ID of the Blog resource.", "type" "string"}, "kind" {"description" "The kind of this entity. Always blogger#blogPerUserInfo.", "type" "string"}, "photosAlbumKey" {"description" "The Photo Album Key for the user when adding photos to the blog.", "type" "string"}, "userId" {"description" "ID of the User.", "type" "string"}, "hasAdminAccess" {"description" "True if the user has Admin level access to the blog.", "type" "boolean"}}, "id" "BlogPerUserInfo"}, "BlogUserInfo" {"type" "object", "properties" {"blog_user_info" {"description" "Information about a User for the Blog.", "$ref" "BlogPerUserInfo"}, "blog" {"description" "The Blog resource.", "$ref" "Blog"}, "kind" {"description" "The kind of this entity. Always blogger#blogUserInfo.", "type" "string"}}, "id" "BlogUserInfo"}, "User" {"type" "object", "properties" {"created" {"description" "The timestamp of when this profile was created, in seconds since epoch.", "type" "string"}, "url" {"type" "string", "description" "The user's profile page."}, "blogs" {"description" "The container of blogs for this user.", "type" "object", "properties" {"selfLink" {"description" "The URL of the Blogs for this user.", "type" "string"}}}, "displayName" {"description" "The display name.", "type" "string"}, "about" {"description" "Profile summary information.", "type" "string"}, "id" {"description" "The identifier for this User.", "type" "string"}, "locale" {"type" "object", "properties" {"language" {"description" "The language this blog is authored in.", "type" "string"}, "country" {"description" "The country this blog's locale is set to.", "type" "string"}, "variant" {"description" "The language variant this blog is authored in.", "type" "string"}}, "description" "This user's locale"}, "selfLink" {"description" "The API REST URL to fetch this resource from.", "type" "string"}, "kind" {"description" "The kind of this entity. Always blogger#user.", "type" "string"}}, "id" "User"}, "CommentList" {"id" "CommentList", "type" "object", "properties" {"kind" {"description" "The kind of this entry. Always blogger#commentList.", "type" "string"}, "items" {"type" "array", "items" {"$ref" "Comment"}, "description" "The List of Comments for a Post."}, "etag" {"description" "Etag of the response.", "type" "string"}, "prevPageToken" {"description" "Pagination token to fetch the previous page, if one exists.", "type" "string"}, "nextPageToken" {"description" "Pagination token to fetch the next page, if one exists.", "type" "string"}}}, "Blog" {"type" "object", "properties" {"url" {"type" "string", "description" "The URL where this blog is published."}, "pages" {"description" "The container of pages in this blog.", "type" "object", "properties" {"selfLink" {"type" "string", "description" "The URL of the container for pages in this blog."}, "totalItems" {"description" "The count of pages in this blog.", "format" "int32", "type" "integer"}}}, "customMetaData" {"description" "The JSON custom meta-data for the Blog.", "type" "string"}, "id" {"type" "string", "description" "The identifier for this resource."}, "name" {"description" "The name of this blog. This is displayed as the title.", "type" "string"}, "locale" {"description" "The locale this Blog is set to.", "type" "object", "properties" {"language" {"description" "The language this blog is authored in.", "type" "string"}, "country" {"description" "The country this blog's locale is set to.", "type" "string"}, "variant" {"description" "The language variant this blog is authored in.", "type" "string"}}}, "published" {"type" "string", "description" "RFC 3339 date-time when this blog was published."}, "status" {"type" "string", "enumDescriptions" ["" ""], "enum" ["LIVE" "DELETED"], "description" "The status of the blog."}, "posts" {"description" "The container of posts in this blog.", "type" "object", "properties" {"totalItems" {"description" "The count of posts in this blog.", "format" "int32", "type" "integer"}, "items" {"type" "array", "items" {"$ref" "Post"}, "description" "The List of Posts for this Blog."}, "selfLink" {"description" "The URL of the container for posts in this blog.", "type" "string"}}}, "selfLink" {"description" "The API REST URL to fetch this resource from.", "type" "string"}, "kind" {"description" "The kind of this entry. Always blogger#blog.", "type" "string"}, "updated" {"description" "RFC 3339 date-time when this blog was last updated.", "type" "string"}, "description" {"type" "string", "description" "The description of this blog. This is displayed underneath the title."}}, "id" "Blog"}, "Page" {"type" "object", "properties" {"url" {"description" "The URL that this Page is displayed at.", "type" "string"}, "author" {"description" "The author of this Page.", "type" "object", "properties" {"displayName" {"description" "The display name.", "type" "string"}, "id" {"description" "The identifier of the creator.", "type" "string"}, "url" {"type" "string", "description" "The URL of the creator's Profile page."}, "image" {"type" "object", "properties" {"url" {"description" "The creator's avatar URL.", "type" "string"}}, "description" "The creator's avatar."}}}, "id" {"description" "The identifier for this resource.", "type" "string"}, "published" {"description" "RFC 3339 date-time when this Page was published.", "type" "string"}, "blog" {"type" "object", "properties" {"id" {"description" "The identifier of the blog containing this page.", "type" "string"}}, "description" "Data about the blog containing this Page."}, "status" {"enum" ["LIVE" "DRAFT"], "description" "The status of the page for admin resources (either LIVE or DRAFT).", "type" "string", "enumDescriptions" ["" ""]}, "selfLink" {"description" "The API REST URL to fetch this resource from.", "type" "string"}, "content" {"type" "string", "description" "The body content of this Page, in HTML."}, "etag" {"description" "Etag of the resource.", "type" "string"}, "kind" {"description" "The kind of this entity. Always blogger#page.", "type" "string"}, "title" {"description" "The title of this entity. This is the name displayed in the Admin user\ninterface.", "type" "string"}, "updated" {"type" "string", "description" "RFC 3339 date-time when this Page was last updated."}}, "id" "Page"}, "BlogList" {"id" "BlogList", "type" "object", "properties" {"kind" {"description" "The kind of this entity. Always blogger#blogList.", "type" "string"}, "blogUserInfos" {"description" "Admin level list of blog per-user information.", "type" "array", "items" {"$ref" "BlogUserInfo"}}, "items" {"type" "array", "items" {"$ref" "Blog"}, "description" "The list of Blogs this user has Authorship or Admin rights over."}}}, "PageList" {"type" "object", "properties" {"nextPageToken" {"description" "Pagination token to fetch the next page, if one exists.", "type" "string"}, "kind" {"description" "The kind of this entity. Always blogger#pageList.", "type" "string"}, "items" {"description" "The list of Pages for a Blog.", "type" "array", "items" {"$ref" "Page"}}, "etag" {"description" "Etag of the response.", "type" "string"}}, "id" "PageList"}, "PostList" {"type" "object", "properties" {"prevPageToken" {"type" "string", "description" "Pagination token to fetch the previous page, if one exists."}, "nextPageToken" {"type" "string", "description" "Pagination token to fetch the next page, if one exists."}, "kind" {"description" "The kind of this entity. Always blogger#postList.", "type" "string"}, "items" {"description" "The list of Posts for this Blog.", "type" "array", "items" {"$ref" "Post"}}, "etag" {"type" "string", "description" "Etag of the response."}}, "id" "PostList"}}}