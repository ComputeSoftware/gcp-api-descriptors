#:compute.api-descriptor{:endpoint {:schemes ["https"], :host "www.googleapis.com", :base-path "/drive/v2"}, :op->spec {"drive.properties.patch" {:description "Updates a property.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Property"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Property"}} {:description "The ID of the file.", :in "path", :name "fileId", :required true, :type "string"} {:description "The key of the property.", :in "path", :name "propertyKey", :required true, :type "string"} {:default "private", :description "The visibility of the property. Allowed values are PRIVATE and PUBLIC. (Default: PRIVATE)", :in "query", :name "visibility", :type "string"}], :operationId "drive.properties.patch", :compute.gcp.impl.descriptor/http-method :patch, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/properties/{propertyKey}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.files.patch" {:description "Updates file metadata and/or content. This method supports patch semantics.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/File"}}}, :parameters [{:description "Comma-separated list of parent IDs to add.", :in "query", :name "addParents", :type "string"} {:in "body", :name "body", :schema {:$ref "#/definitions/File"}} {:default false, :description "This parameter is deprecated and has no function.", :in "query", :name "convert", :type "boolean"} {:description "The ID of the file to update.", :in "path", :name "fileId", :required true, :type "string"} {:description "Determines the behavior in which modifiedDate is updated. This overrides setModifiedDate.", :enum ["fromBody" "fromBodyIfNeeded" "fromBodyOrNow" "noChange" "now" "nowIfNeeded"], :in "query", :name "modifiedDateBehavior", :type "string"} {:default true, :description "Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If true or not set, a new blob is created as head revision, and previous unpinned revisions are preserved for a short period of time. Pinned revisions are stored indefinitely, using additional storage quota, up to a maximum of 200 revisions. For details on how revisions are retained, see the Drive Help Center.", :in "query", :name "newRevision", :type "boolean"} {:default false, :description "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.", :in "query", :name "ocr", :type "boolean"} {:description "If ocr is true, hints at the language to use. Valid values are BCP 47 codes.", :in "query", :name "ocrLanguage", :type "string"} {:default false, :description "Whether to pin the new revision. A file can have a maximum of 200 pinned revisions.", :in "query", :name "pinned", :type "boolean"} {:description "Comma-separated list of parent IDs to remove.", :in "query", :name "removeParents", :type "string"} {:default false, :description "Whether to set the modified date using the value supplied in the request body. Setting this field to true is equivalent to modifiedDateBehavior=fromBodyOrNow, and false is equivalent to modifiedDateBehavior=now. To prevent any changes to the modified date set modifiedDateBehavior=noChange.", :in "query", :name "setModifiedDate", :type "boolean"} {:default false, :description "Deprecated - Whether the requesting application supports both My Drives and shared drives. This parameter will only be effective until June 1, 2020. Afterwards all applications are assumed to support shared drives.", :in "query", :name "supportsAllDrives", :type "boolean"} {:default false, :description "Deprecated use supportsAllDrives instead.", :in "query", :name "supportsTeamDrives", :type "boolean"} {:description "The language of the timed text.", :in "query", :name "timedTextLanguage", :type "string"} {:description "The timed text track name.", :in "query", :name "timedTextTrackName", :type "string"} {:default true, :description "Whether to update the view date after successfully updating the file.", :in "query", :name "updateViewedDate", :type "boolean"} {:default false, :description "Whether to use the content as indexable text.", :in "query", :name "useContentAsIndexableText", :type "boolean"}], :operationId "drive.files.patch", :compute.gcp.impl.descriptor/http-method :patch, :compute.gcp.impl.descriptor/http-path "/files/{fileId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.properties.update" {:description "Updates a property.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Property"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Property"}} {:description "The ID of the file.", :in "path", :name "fileId", :required true, :type "string"} {:description "The key of the property.", :in "path", :name "propertyKey", :required true, :type "string"} {:default "private", :description "The visibility of the property. Allowed values are PRIVATE and PUBLIC. (Default: PRIVATE)", :in "query", :name "visibility", :type "string"}], :operationId "drive.properties.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/properties/{propertyKey}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.teamdrives.insert" {:description "Deprecated use drives.insert instead.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/TeamDrive"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/TeamDrive"}} {:description "An ID, such as a random UUID, which uniquely identifies this user's request for idempotent creation of a Team Drive. A repeated request by the same user and with the same request ID will avoid creating duplicates by attempting to create the same Team Drive. If the Team Drive already exists a 409 error will be returned.", :in "query", :name "requestId", :required true, :type "string"}], :operationId "drive.teamdrives.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/teamdrives", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.children.list" {:description "Lists a folder's children.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ChildList"}}}, :parameters [{:description "The ID of the folder.", :in "path", :name "folderId", :required true, :type "string"} {:default 100, :description "Maximum number of children to return.", :in "query", :minimum 0, :name "maxResults", :type "integer"} {:description "A comma-separated list of sort keys. Valid keys are 'createdDate', 'folder', 'lastViewedByMeDate', 'modifiedByMeDate', 'modifiedDate', 'quotaBytesUsed', 'recency', 'sharedWithMeDate', 'starred', and 'title'. Each key sorts ascending by default, but may be reversed with the 'desc' modifier. Example usage: ?orderBy=folder,modifiedDate desc,title. Please note that there is a current limitation for users with approximately one million files in which the requested sort order is ignored.", :in "query", :name "orderBy", :type "string"} {:description "Page token for children.", :in "query", :name "pageToken", :type "string"} {:description "Query string for searching children.", :in "query", :name "q", :type "string"}], :operationId "drive.children.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/files/{folderId}/children", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.files.emptyTrash" {:description "Permanently deletes all of the user's trashed files.", :responses {"200" {:description "Successful response"}}, :operationId "drive.files.emptyTrash", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/files/trash", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.files.copy" {:description "Creates a copy of the specified file.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/File"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/File"}} {:default false, :description "Whether to convert this file to the corresponding Google Docs format.", :in "query", :name "convert", :type "boolean"} {:description "The ID of the file to copy.", :in "path", :name "fileId", :required true, :type "string"} {:default false, :description "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.", :in "query", :name "ocr", :type "boolean"} {:description "If ocr is true, hints at the language to use. Valid values are BCP 47 codes.", :in "query", :name "ocrLanguage", :type "string"} {:default false, :description "Whether to pin the head revision of the new copy. A file can have a maximum of 200 pinned revisions.", :in "query", :name "pinned", :type "boolean"} {:default false, :description "Deprecated - Whether the requesting application supports both My Drives and shared drives. This parameter will only be effective until June 1, 2020. Afterwards all applications are assumed to support shared drives.", :in "query", :name "supportsAllDrives", :type "boolean"} {:default false, :description "Deprecated use supportsAllDrives instead.", :in "query", :name "supportsTeamDrives", :type "boolean"} {:description "The language of the timed text.", :in "query", :name "timedTextLanguage", :type "string"} {:description "The timed text track name.", :in "query", :name "timedTextTrackName", :type "string"} {:default "DEFAULT", :description "The visibility of the new file. This parameter is only relevant when the source is not a native Google Doc and convert=false.", :enum ["DEFAULT" "PRIVATE"], :in "query", :name "visibility", :type "string"}], :operationId "drive.files.copy", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/copy", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.children.insert" {:description "Inserts a file into a folder.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ChildReference"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/ChildReference"}} {:description "The ID of the folder.", :in "path", :name "folderId", :required true, :type "string"} {:default false, :description "Deprecated - Whether the requesting application supports both My Drives and shared drives. This parameter will only be effective until June 1, 2020. Afterwards all applications are assumed to support shared drives.", :in "query", :name "supportsAllDrives", :type "boolean"} {:default false, :description "Deprecated use supportsAllDrives instead.", :in "query", :name "supportsTeamDrives", :type "boolean"}], :operationId "drive.children.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/files/{folderId}/children", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.files.untrash" {:description "Restores a file from the trash.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/File"}}}, :parameters [{:description "The ID of the file to untrash.", :in "path", :name "fileId", :required true, :type "string"} {:default false, :description "Deprecated - Whether the requesting application supports both My Drives and shared drives. This parameter will only be effective until June 1, 2020. Afterwards all applications are assumed to support shared drives.", :in "query", :name "supportsAllDrives", :type "boolean"} {:default false, :description "Deprecated use supportsAllDrives instead.", :in "query", :name "supportsTeamDrives", :type "boolean"}], :operationId "drive.files.untrash", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/untrash", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.comments.get" {:description "Gets a comment by ID.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Comment"}}}, :parameters [{:description "The ID of the comment.", :in "path", :name "commentId", :required true, :type "string"} {:description "The ID of the file.", :in "path", :name "fileId", :required true, :type "string"} {:default false, :description "If set, this will succeed when retrieving a deleted comment, and will include any deleted replies.", :in "query", :name "includeDeleted", :type "boolean"}], :operationId "drive.comments.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/comments/{commentId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.replies.patch" {:description "Updates an existing reply.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/CommentReply"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/CommentReply"}} {:description "The ID of the comment.", :in "path", :name "commentId", :required true, :type "string"} {:description "The ID of the file.", :in "path", :name "fileId", :required true, :type "string"} {:description "The ID of the reply.", :in "path", :name "replyId", :required true, :type "string"}], :operationId "drive.replies.patch", :compute.gcp.impl.descriptor/http-method :patch, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/comments/{commentId}/replies/{replyId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.replies.list" {:description "Lists all of the replies to a comment.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/CommentReplyList"}}}, :parameters [{:description "The ID of the comment.", :in "path", :name "commentId", :required true, :type "string"} {:description "The ID of the file.", :in "path", :name "fileId", :required true, :type "string"} {:default false, :description "If set, all replies, including deleted replies (with content stripped) will be returned.", :in "query", :name "includeDeleted", :type "boolean"} {:default 20, :description "The maximum number of replies to include in the response, used for paging.", :in "query", :maximum 100, :minimum 0, :name "maxResults", :type "integer"} {:description "The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.", :in "query", :name "pageToken", :type "string"}], :operationId "drive.replies.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/comments/{commentId}/replies", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.realtime.update" {:description "Overwrites the Realtime API data model associated with this file with the provided JSON data model.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "The revision of the model to diff the uploaded model against. If set, the uploaded model is diffed against the provided revision and those differences are merged with any changes made to the model after the provided revision. If not set, the uploaded model replaces the current model on the server.", :in "query", :name "baseRevision", :type "string"} {:description "The ID of the file that the Realtime API data model is associated with.", :in "path", :name "fileId", :required true, :type "string"}], :operationId "drive.realtime.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/realtime", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.changes.getStartPageToken" {:description "Gets the starting pageToken for listing future changes.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/StartPageToken"}}}, :parameters [{:description "The ID of the shared drive for which the starting pageToken for listing future changes from that shared drive will be returned.", :in "query", :name "driveId", :type "string"} {:default false, :description "Deprecated - Whether the requesting application supports both My Drives and shared drives. This parameter will only be effective until June 1, 2020. Afterwards all applications are assumed to support shared drives.", :in "query", :name "supportsAllDrives", :type "boolean"} {:default false, :description "Deprecated use supportsAllDrives instead.", :in "query", :name "supportsTeamDrives", :type "boolean"} {:description "Deprecated use driveId instead.", :in "query", :name "teamDriveId", :type "string"}], :operationId "drive.changes.getStartPageToken", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/changes/startPageToken", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.files.insert" {:description "Insert a new file.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/File"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/File"}} {:default false, :description "Whether to convert this file to the corresponding Google Docs format.", :in "query", :name "convert", :type "boolean"} {:default false, :description "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.", :in "query", :name "ocr", :type "boolean"} {:description "If ocr is true, hints at the language to use. Valid values are BCP 47 codes.", :in "query", :name "ocrLanguage", :type "string"} {:default false, :description "Whether to pin the head revision of the uploaded file. A file can have a maximum of 200 pinned revisions.", :in "query", :name "pinned", :type "boolean"} {:default false, :description "Deprecated - Whether the requesting application supports both My Drives and shared drives. This parameter will only be effective until June 1, 2020. Afterwards all applications are assumed to support shared drives.", :in "query", :name "supportsAllDrives", :type "boolean"} {:default false, :description "Deprecated use supportsAllDrives instead.", :in "query", :name "supportsTeamDrives", :type "boolean"} {:description "The language of the timed text.", :in "query", :name "timedTextLanguage", :type "string"} {:description "The timed text track name.", :in "query", :name "timedTextTrackName", :type "string"} {:default false, :description "Whether to use the content as indexable text.", :in "query", :name "useContentAsIndexableText", :type "boolean"} {:default "DEFAULT", :description "The visibility of the new file. This parameter is only relevant when convert=false.", :enum ["DEFAULT" "PRIVATE"], :in "query", :name "visibility", :type "string"}], :operationId "drive.files.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/files", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.comments.update" {:description "Updates an existing comment.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Comment"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Comment"}} {:description "The ID of the comment.", :in "path", :name "commentId", :required true, :type "string"} {:description "The ID of the file.", :in "path", :name "fileId", :required true, :type "string"}], :operationId "drive.comments.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/comments/{commentId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.comments.delete" {:description "Deletes a comment.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "The ID of the comment.", :in "path", :name "commentId", :required true, :type "string"} {:description "The ID of the file.", :in "path", :name "fileId", :required true, :type "string"}], :operationId "drive.comments.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/comments/{commentId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.permissions.delete" {:description "Deletes a permission from a file or shared drive.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "The ID for the file or shared drive.", :in "path", :name "fileId", :required true, :type "string"} {:description "The ID for the permission.", :in "path", :name "permissionId", :required true, :type "string"} {:default false, :description "Deprecated - Whether the requesting application supports both My Drives and shared drives. This parameter will only be effective until June 1, 2020. Afterwards all applications are assumed to support shared drives.", :in "query", :name "supportsAllDrives", :type "boolean"} {:default false, :description "Deprecated use supportsAllDrives instead.", :in "query", :name "supportsTeamDrives", :type "boolean"} {:default false, :description "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.", :in "query", :name "useDomainAdminAccess", :type "boolean"}], :operationId "drive.permissions.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/permissions/{permissionId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.permissions.update" {:description "Updates a permission.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Permission"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Permission"}} {:description "The ID for the file or shared drive.", :in "path", :name "fileId", :required true, :type "string"} {:description "The ID for the permission.", :in "path", :name "permissionId", :required true, :type "string"} {:default false, :description "Whether to remove the expiration date.", :in "query", :name "removeExpiration", :type "boolean"} {:default false, :description "Deprecated - Whether the requesting application supports both My Drives and shared drives. This parameter will only be effective until June 1, 2020. Afterwards all applications are assumed to support shared drives.", :in "query", :name "supportsAllDrives", :type "boolean"} {:default false, :description "Deprecated use supportsAllDrives instead.", :in "query", :name "supportsTeamDrives", :type "boolean"} {:default false, :description "Whether changing a role to 'owner' downgrades the current owners to writers. Does nothing if the specified role is not 'owner'.", :in "query", :name "transferOwnership", :type "boolean"} {:default false, :description "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.", :in "query", :name "useDomainAdminAccess", :type "boolean"}], :operationId "drive.permissions.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/permissions/{permissionId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.children.get" {:description "Gets a specific child reference.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ChildReference"}}}, :parameters [{:description "The ID of the child.", :in "path", :name "childId", :required true, :type "string"} {:description "The ID of the folder.", :in "path", :name "folderId", :required true, :type "string"}], :operationId "drive.children.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/files/{folderId}/children/{childId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.replies.insert" {:description "Creates a new reply to the given comment.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/CommentReply"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/CommentReply"}} {:description "The ID of the comment.", :in "path", :name "commentId", :required true, :type "string"} {:description "The ID of the file.", :in "path", :name "fileId", :required true, :type "string"}], :operationId "drive.replies.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/comments/{commentId}/replies", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.files.generateIds" {:description "Generates a set of file IDs which can be provided in insert or copy requests.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/GeneratedIds"}}}, :parameters [{:default 10, :description "Maximum number of IDs to return.", :in "query", :maximum 1000, :minimum 1, :name "maxResults", :type "integer"} {:default "drive", :description "The space in which the IDs can be used to create new files. Supported values are 'drive' and 'appDataFolder'.", :in "query", :name "space", :type "string"}], :operationId "drive.files.generateIds", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/files/generateIds", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.comments.list" {:description "Lists a file's comments.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/CommentList"}}}, :parameters [{:description "The ID of the file.", :in "path", :name "fileId", :required true, :type "string"} {:default false, :description "If set, all comments and replies, including deleted comments and replies (with content stripped) will be returned.", :in "query", :name "includeDeleted", :type "boolean"} {:default 20, :description "The maximum number of discussions to include in the response, used for paging.", :in "query", :maximum 100, :minimum 0, :name "maxResults", :type "integer"} {:description "The continuation token, used to page through large result sets. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.", :in "query", :name "pageToken", :type "string"} {:description "Only discussions that were updated after this timestamp will be returned. Formatted as an RFC 3339 timestamp.", :in "query", :name "updatedMin", :type "string"}], :operationId "drive.comments.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/comments", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.parents.insert" {:description "Adds a parent folder for a file.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ParentReference"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/ParentReference"}} {:description "The ID of the file.", :in "path", :name "fileId", :required true, :type "string"} {:default false, :description "Deprecated - Whether the requesting application supports both My Drives and shared drives. This parameter will only be effective until June 1, 2020. Afterwards all applications are assumed to support shared drives.", :in "query", :name "supportsAllDrives", :type "boolean"} {:default false, :description "Deprecated use supportsAllDrives instead.", :in "query", :name "supportsTeamDrives", :type "boolean"}], :operationId "drive.parents.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/parents", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.teamdrives.update" {:description "Deprecated use drives.update instead.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/TeamDrive"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/TeamDrive"}} {:description "The ID of the Team Drive", :in "path", :name "teamDriveId", :required true, :type "string"} {:default false, :description "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the Team Drive belongs.", :in "query", :name "useDomainAdminAccess", :type "boolean"}], :operationId "drive.teamdrives.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/teamdrives/{teamDriveId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.realtime.get" {:description "Exports the contents of the Realtime API data model associated with this file as JSON.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "The ID of the file that the Realtime API data model is associated with.", :in "path", :name "fileId", :required true, :type "string"} {:description "The revision of the Realtime API data model to export. Revisions start at 1 (the initial empty data model) and are incremented with each change. If this parameter is excluded, the most recent data model will be returned.", :in "query", :minimum 1, :name "revision", :type "integer"}], :operationId "drive.realtime.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/realtime", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.revisions.delete" {:description "Permanently deletes a file version. You can only delete revisions for files with binary content, like images or videos. Revisions for other files, like Google Docs or Sheets, and the last remaining file version can't be deleted.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "The ID of the file.", :in "path", :name "fileId", :required true, :type "string"} {:description "The ID of the revision.", :in "path", :name "revisionId", :required true, :type "string"}], :operationId "drive.revisions.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/revisions/{revisionId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.files.delete" {:description "Permanently deletes a file by ID. Skips the trash. The currently authenticated user must own the file or be an organizer on the parent for shared drive files.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "The ID of the file to delete.", :in "path", :name "fileId", :required true, :type "string"} {:default false, :description "Deprecated - Whether the requesting application supports both My Drives and shared drives. This parameter will only be effective until June 1, 2020. Afterwards all applications are assumed to support shared drives.", :in "query", :name "supportsAllDrives", :type "boolean"} {:default false, :description "Deprecated use supportsAllDrives instead.", :in "query", :name "supportsTeamDrives", :type "boolean"}], :operationId "drive.files.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/files/{fileId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.drives.hide" {:description "Hides a shared drive from the default view.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Drive"}}}, :parameters [{:description "The ID of the shared drive.", :in "path", :name "driveId", :required true, :type "string"}], :operationId "drive.drives.hide", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/drives/{driveId}/hide", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.revisions.update" {:description "Updates a revision.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Revision"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Revision"}} {:description "The ID for the file.", :in "path", :name "fileId", :required true, :type "string"} {:description "The ID for the revision.", :in "path", :name "revisionId", :required true, :type "string"}], :operationId "drive.revisions.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/revisions/{revisionId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.apps.get" {:description "Gets a specific app.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/App"}}}, :parameters [{:description "The ID of the app.", :in "path", :name "appId", :required true, :type "string"}], :operationId "drive.apps.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/apps/{appId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.parents.delete" {:description "Removes a parent from a file.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "The ID of the file.", :in "path", :name "fileId", :required true, :type "string"} {:description "The ID of the parent.", :in "path", :name "parentId", :required true, :type "string"}], :operationId "drive.parents.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/parents/{parentId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.changes.get" {:description "Deprecated - Use changes.getStartPageToken and changes.list to retrieve recent changes.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Change"}}}, :parameters [{:description "The ID of the change.", :in "path", :name "changeId", :required true, :type "string"} {:description "The shared drive from which the change will be returned.", :in "query", :name "driveId", :type "string"} {:default false, :description "Deprecated - Whether the requesting application supports both My Drives and shared drives. This parameter will only be effective until June 1, 2020. Afterwards all applications are assumed to support shared drives.", :in "query", :name "supportsAllDrives", :type "boolean"} {:default false, :description "Deprecated use supportsAllDrives instead.", :in "query", :name "supportsTeamDrives", :type "boolean"} {:description "Deprecated use driveId instead.", :in "query", :name "teamDriveId", :type "string"}], :operationId "drive.changes.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/changes/{changeId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.revisions.patch" {:description "Updates a revision.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Revision"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Revision"}} {:description "The ID for the file.", :in "path", :name "fileId", :required true, :type "string"} {:description "The ID for the revision.", :in "path", :name "revisionId", :required true, :type "string"}], :operationId "drive.revisions.patch", :compute.gcp.impl.descriptor/http-method :patch, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/revisions/{revisionId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.files.trash" {:description "Moves a file to the trash. The currently authenticated user must own the file or be at least a fileOrganizer on the parent for shared drive files.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/File"}}}, :parameters [{:description "The ID of the file to trash.", :in "path", :name "fileId", :required true, :type "string"} {:default false, :description "Deprecated - Whether the requesting application supports both My Drives and shared drives. This parameter will only be effective until June 1, 2020. Afterwards all applications are assumed to support shared drives.", :in "query", :name "supportsAllDrives", :type "boolean"} {:default false, :description "Deprecated use supportsAllDrives instead.", :in "query", :name "supportsTeamDrives", :type "boolean"}], :operationId "drive.files.trash", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/trash", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.revisions.get" {:description "Gets a specific revision.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Revision"}}}, :parameters [{:description "The ID of the file.", :in "path", :name "fileId", :required true, :type "string"} {:description "The ID of the revision.", :in "path", :name "revisionId", :required true, :type "string"}], :operationId "drive.revisions.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/revisions/{revisionId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.revisions.list" {:description "Lists a file's revisions.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/RevisionList"}}}, :parameters [{:description "The ID of the file.", :in "path", :name "fileId", :required true, :type "string"} {:default 200, :description "Maximum number of revisions to return.", :in "query", :maximum 1000, :minimum 1, :name "maxResults", :type "integer"} {:description "Page token for revisions. To get the next page of results, set this parameter to the value of \"nextPageToken\" from the previous response.", :in "query", :name "pageToken", :type "string"}], :operationId "drive.revisions.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/revisions", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.drives.get" {:description "Gets a shared drive's metadata by ID.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Drive"}}}, :parameters [{:description "The ID of the shared drive.", :in "path", :name "driveId", :required true, :type "string"} {:default false, :description "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the shared drive belongs.", :in "query", :name "useDomainAdminAccess", :type "boolean"}], :operationId "drive.drives.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/drives/{driveId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.teamdrives.delete" {:description "Deprecated use drives.delete instead.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "The ID of the Team Drive", :in "path", :name "teamDriveId", :required true, :type "string"}], :operationId "drive.teamdrives.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/teamdrives/{teamDriveId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.drives.insert" {:description "Creates a new shared drive.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Drive"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Drive"}} {:description "An ID, such as a random UUID, which uniquely identifies this user's request for idempotent creation of a shared drive. A repeated request by the same user and with the same request ID will avoid creating duplicates by attempting to create the same shared drive. If the shared drive already exists a 409 error will be returned.", :in "query", :name "requestId", :required true, :type "string"}], :operationId "drive.drives.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/drives", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.channels.stop" {:description "Stop watching resources through this channel", :responses {"200" {:description "Successful response"}}, :parameters [{:in "body", :name "resource", :schema {:$ref "#/definitions/Channel"}}], :operationId "drive.channels.stop", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/channels/stop", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.permissions.getIdForEmail" {:description "Returns the permission ID for an email address.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/PermissionId"}}}, :parameters [{:description "The email address for which to return a permission ID", :in "path", :name "email", :required true, :type "string"}], :operationId "drive.permissions.getIdForEmail", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/permissionIds/{email}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.properties.insert" {:description "Adds a property to a file, or updates it if it already exists.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Property"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Property"}} {:description "The ID of the file.", :in "path", :name "fileId", :required true, :type "string"}], :operationId "drive.properties.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/properties", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.permissions.patch" {:description "Updates a permission using patch semantics.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Permission"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Permission"}} {:description "The ID for the file or shared drive.", :in "path", :name "fileId", :required true, :type "string"} {:description "The ID for the permission.", :in "path", :name "permissionId", :required true, :type "string"} {:default false, :description "Whether to remove the expiration date.", :in "query", :name "removeExpiration", :type "boolean"} {:default false, :description "Deprecated - Whether the requesting application supports both My Drives and shared drives. This parameter will only be effective until June 1, 2020. Afterwards all applications are assumed to support shared drives.", :in "query", :name "supportsAllDrives", :type "boolean"} {:default false, :description "Deprecated use supportsAllDrives instead.", :in "query", :name "supportsTeamDrives", :type "boolean"} {:default false, :description "Whether changing a role to 'owner' downgrades the current owners to writers. Does nothing if the specified role is not 'owner'.", :in "query", :name "transferOwnership", :type "boolean"} {:default false, :description "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.", :in "query", :name "useDomainAdminAccess", :type "boolean"}], :operationId "drive.permissions.patch", :compute.gcp.impl.descriptor/http-method :patch, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/permissions/{permissionId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.permissions.insert" {:description "Inserts a permission for a file or shared drive.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Permission"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Permission"}} {:description "A plain text custom message to include in notification emails.", :in "query", :name "emailMessage", :type "string"} {:description "The ID for the file or shared drive.", :in "path", :name "fileId", :required true, :type "string"} {:default true, :description "Whether to send notification emails when sharing to users or groups. This parameter is ignored and an email is sent if the role is owner.", :in "query", :name "sendNotificationEmails", :type "boolean"} {:default false, :description "Deprecated - Whether the requesting application supports both My Drives and shared drives. This parameter will only be effective until June 1, 2020. Afterwards all applications are assumed to support shared drives.", :in "query", :name "supportsAllDrives", :type "boolean"} {:default false, :description "Deprecated use supportsAllDrives instead.", :in "query", :name "supportsTeamDrives", :type "boolean"} {:default false, :description "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.", :in "query", :name "useDomainAdminAccess", :type "boolean"}], :operationId "drive.permissions.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/permissions", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.files.update" {:description "Updates file metadata and/or content.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/File"}}}, :parameters [{:description "Comma-separated list of parent IDs to add.", :in "query", :name "addParents", :type "string"} {:in "body", :name "body", :schema {:$ref "#/definitions/File"}} {:default false, :description "This parameter is deprecated and has no function.", :in "query", :name "convert", :type "boolean"} {:description "The ID of the file to update.", :in "path", :name "fileId", :required true, :type "string"} {:description "Determines the behavior in which modifiedDate is updated. This overrides setModifiedDate.", :enum ["fromBody" "fromBodyIfNeeded" "fromBodyOrNow" "noChange" "now" "nowIfNeeded"], :in "query", :name "modifiedDateBehavior", :type "string"} {:default true, :description "Whether a blob upload should create a new revision. If false, the blob data in the current head revision is replaced. If true or not set, a new blob is created as head revision, and previous unpinned revisions are preserved for a short period of time. Pinned revisions are stored indefinitely, using additional storage quota, up to a maximum of 200 revisions. For details on how revisions are retained, see the Drive Help Center.", :in "query", :name "newRevision", :type "boolean"} {:default false, :description "Whether to attempt OCR on .jpg, .png, .gif, or .pdf uploads.", :in "query", :name "ocr", :type "boolean"} {:description "If ocr is true, hints at the language to use. Valid values are BCP 47 codes.", :in "query", :name "ocrLanguage", :type "string"} {:default false, :description "Whether to pin the new revision. A file can have a maximum of 200 pinned revisions.", :in "query", :name "pinned", :type "boolean"} {:description "Comma-separated list of parent IDs to remove.", :in "query", :name "removeParents", :type "string"} {:default false, :description "Whether to set the modified date using the value supplied in the request body. Setting this field to true is equivalent to modifiedDateBehavior=fromBodyOrNow, and false is equivalent to modifiedDateBehavior=now. To prevent any changes to the modified date set modifiedDateBehavior=noChange.", :in "query", :name "setModifiedDate", :type "boolean"} {:default false, :description "Deprecated - Whether the requesting application supports both My Drives and shared drives. This parameter will only be effective until June 1, 2020. Afterwards all applications are assumed to support shared drives.", :in "query", :name "supportsAllDrives", :type "boolean"} {:default false, :description "Deprecated use supportsAllDrives instead.", :in "query", :name "supportsTeamDrives", :type "boolean"} {:description "The language of the timed text.", :in "query", :name "timedTextLanguage", :type "string"} {:description "The timed text track name.", :in "query", :name "timedTextTrackName", :type "string"} {:default true, :description "Whether to update the view date after successfully updating the file.", :in "query", :name "updateViewedDate", :type "boolean"} {:default false, :description "Whether to use the content as indexable text.", :in "query", :name "useContentAsIndexableText", :type "boolean"}], :operationId "drive.files.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/files/{fileId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.files.watch" {:description "Subscribe to changes on a file", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Channel"}}}, :parameters [{:default false, :description "Whether the user is acknowledging the risk of downloading known malware or other abusive files.", :in "query", :name "acknowledgeAbuse", :type "boolean"} {:description "The ID for the file in question.", :in "path", :name "fileId", :required true, :type "string"} {:description "This parameter is deprecated and has no function.", :enum ["BASIC" "FULL"], :in "query", :name "projection", :type "string"} {:in "body", :name "resource", :schema {:$ref "#/definitions/Channel"}} {:description "Specifies the Revision ID that should be downloaded. Ignored unless alt=media is specified.", :in "query", :name "revisionId", :type "string"} {:default false, :description "Deprecated - Whether the requesting application supports both My Drives and shared drives. This parameter will only be effective until June 1, 2020. Afterwards all applications are assumed to support shared drives.", :in "query", :name "supportsAllDrives", :type "boolean"} {:default false, :description "Deprecated use supportsAllDrives instead.", :in "query", :name "supportsTeamDrives", :type "boolean"} {:default false, :description "Deprecated: Use files.update with modifiedDateBehavior=noChange, updateViewedDate=true and an empty request body.", :in "query", :name "updateViewedDate", :type "boolean"}], :operationId "drive.files.watch", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/watch", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.files.get" {:description "Gets a file's metadata by ID.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/File"}}}, :parameters [{:default false, :description "Whether the user is acknowledging the risk of downloading known malware or other abusive files.", :in "query", :name "acknowledgeAbuse", :type "boolean"} {:description "The ID for the file in question.", :in "path", :name "fileId", :required true, :type "string"} {:description "This parameter is deprecated and has no function.", :enum ["BASIC" "FULL"], :in "query", :name "projection", :type "string"} {:description "Specifies the Revision ID that should be downloaded. Ignored unless alt=media is specified.", :in "query", :name "revisionId", :type "string"} {:default false, :description "Deprecated - Whether the requesting application supports both My Drives and shared drives. This parameter will only be effective until June 1, 2020. Afterwards all applications are assumed to support shared drives.", :in "query", :name "supportsAllDrives", :type "boolean"} {:default false, :description "Deprecated use supportsAllDrives instead.", :in "query", :name "supportsTeamDrives", :type "boolean"} {:default false, :description "Deprecated: Use files.update with modifiedDateBehavior=noChange, updateViewedDate=true and an empty request body.", :in "query", :name "updateViewedDate", :type "boolean"}], :operationId "drive.files.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/files/{fileId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.drives.list" {:description "Lists the user's shared drives.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/DriveList"}}}, :parameters [{:default 10, :description "Maximum number of shared drives to return.", :in "query", :maximum 100, :minimum 1, :name "maxResults", :type "integer"} {:description "Page token for shared drives.", :in "query", :name "pageToken", :type "string"} {:description "Query string for searching shared drives.", :in "query", :name "q", :type "string"} {:default false, :description "Issue the request as a domain administrator; if set to true, then all shared drives of the domain in which the requester is an administrator are returned.", :in "query", :name "useDomainAdminAccess", :type "boolean"}], :operationId "drive.drives.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/drives", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.about.get" {:description "Gets the information about the current user along with Drive API settings", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/About"}}}, :parameters [{:default true, :description "Whether to count changes outside the My Drive hierarchy. When set to false, changes to files such as those in the Application Data folder or shared files which have not been added to My Drive will be omitted from the maxChangeIdCount.", :in "query", :name "includeSubscribed", :type "boolean"} {:default "1", :description "Maximum number of remaining change IDs to count", :in "query", :name "maxChangeIdCount", :type "string"} {:description "Change ID to start counting from when calculating number of remaining change IDs", :in "query", :name "startChangeId", :type "string"}], :operationId "drive.about.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/about", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.drives.update" {:description "Updates the metadata for a shared drive.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Drive"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Drive"}} {:description "The ID of the shared drive.", :in "path", :name "driveId", :required true, :type "string"} {:default false, :description "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the shared drive belongs.", :in "query", :name "useDomainAdminAccess", :type "boolean"}], :operationId "drive.drives.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/drives/{driveId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.drives.unhide" {:description "Restores a shared drive to the default view.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Drive"}}}, :parameters [{:description "The ID of the shared drive.", :in "path", :name "driveId", :required true, :type "string"}], :operationId "drive.drives.unhide", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/drives/{driveId}/unhide", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.permissions.list" {:description "Lists a file's or shared drive's permissions.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/PermissionList"}}}, :parameters [{:description "The ID for the file or shared drive.", :in "path", :name "fileId", :required true, :type "string"} {:description "The maximum number of permissions to return per page. When not set for files in a shared drive, at most 100 results will be returned. When not set for files that are not in a shared drive, the entire list will be returned.", :in "query", :maximum 100, :minimum 1, :name "maxResults", :type "integer"} {:description "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response.", :in "query", :name "pageToken", :type "string"} {:default false, :description "Deprecated - Whether the requesting application supports both My Drives and shared drives. This parameter will only be effective until June 1, 2020. Afterwards all applications are assumed to support shared drives.", :in "query", :name "supportsAllDrives", :type "boolean"} {:default false, :description "Deprecated use supportsAllDrives instead.", :in "query", :name "supportsTeamDrives", :type "boolean"} {:default false, :description "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.", :in "query", :name "useDomainAdminAccess", :type "boolean"}], :operationId "drive.permissions.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/permissions", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.replies.delete" {:description "Deletes a reply.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "The ID of the comment.", :in "path", :name "commentId", :required true, :type "string"} {:description "The ID of the file.", :in "path", :name "fileId", :required true, :type "string"} {:description "The ID of the reply.", :in "path", :name "replyId", :required true, :type "string"}], :operationId "drive.replies.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/comments/{commentId}/replies/{replyId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.permissions.get" {:description "Gets a permission by ID.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Permission"}}}, :parameters [{:description "The ID for the file or shared drive.", :in "path", :name "fileId", :required true, :type "string"} {:description "The ID for the permission.", :in "path", :name "permissionId", :required true, :type "string"} {:default false, :description "Deprecated - Whether the requesting application supports both My Drives and shared drives. This parameter will only be effective until June 1, 2020. Afterwards all applications are assumed to support shared drives.", :in "query", :name "supportsAllDrives", :type "boolean"} {:default false, :description "Deprecated use supportsAllDrives instead.", :in "query", :name "supportsTeamDrives", :type "boolean"} {:default false, :description "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.", :in "query", :name "useDomainAdminAccess", :type "boolean"}], :operationId "drive.permissions.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/permissions/{permissionId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.comments.patch" {:description "Updates an existing comment.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Comment"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Comment"}} {:description "The ID of the comment.", :in "path", :name "commentId", :required true, :type "string"} {:description "The ID of the file.", :in "path", :name "fileId", :required true, :type "string"}], :operationId "drive.comments.patch", :compute.gcp.impl.descriptor/http-method :patch, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/comments/{commentId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.parents.get" {:description "Gets a specific parent reference.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ParentReference"}}}, :parameters [{:description "The ID of the file.", :in "path", :name "fileId", :required true, :type "string"} {:description "The ID of the parent.", :in "path", :name "parentId", :required true, :type "string"}], :operationId "drive.parents.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/parents/{parentId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.properties.list" {:description "Lists a file's properties.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/PropertyList"}}}, :parameters [{:description "The ID of the file.", :in "path", :name "fileId", :required true, :type "string"}], :operationId "drive.properties.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/properties", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.files.touch" {:description "Set the file's updated time to the current server time.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/File"}}}, :parameters [{:description "The ID of the file to update.", :in "path", :name "fileId", :required true, :type "string"} {:default false, :description "Deprecated - Whether the requesting application supports both My Drives and shared drives. This parameter will only be effective until June 1, 2020. Afterwards all applications are assumed to support shared drives.", :in "query", :name "supportsAllDrives", :type "boolean"} {:default false, :description "Deprecated use supportsAllDrives instead.", :in "query", :name "supportsTeamDrives", :type "boolean"}], :operationId "drive.files.touch", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/touch", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.files.list" {:description "Lists the user's files.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/FileList"}}}, :parameters [{:description "Bodies of items (files/documents) to which the query applies. Supported bodies are 'default', 'domain', 'drive' and 'allDrives'. Prefer 'default' or 'drive' to 'allDrives' for efficiency.", :in "query", :name "corpora", :type "string"} {:description "The body of items (files/documents) to which the query applies. Deprecated: use 'corpora' instead.", :enum ["DEFAULT" "DOMAIN"], :in "query", :name "corpus", :type "string"} {:description "ID of the shared drive to search.", :in "query", :name "driveId", :type "string"} {:default false, :description "Deprecated - Whether both My Drive and shared drive items should be included in results. This parameter will only be effective until June 1, 2020. Afterwards shared drive items will be included in the results.", :in "query", :name "includeItemsFromAllDrives", :type "boolean"} {:default false, :description "Deprecated use includeItemsFromAllDrives instead.", :in "query", :name "includeTeamDriveItems", :type "boolean"} {:default 100, :description "The maximum number of files to return per page. Partial or empty result pages are possible even before the end of the files list has been reached.", :in "query", :minimum 0, :name "maxResults", :type "integer"} {:description "A comma-separated list of sort keys. Valid keys are 'createdDate', 'folder', 'lastViewedByMeDate', 'modifiedByMeDate', 'modifiedDate', 'quotaBytesUsed', 'recency', 'sharedWithMeDate', 'starred', 'title', and 'title_natural'. Each key sorts ascending by default, but may be reversed with the 'desc' modifier. Example usage: ?orderBy=folder,modifiedDate desc,title. Please note that there is a current limitation for users with approximately one million files in which the requested sort order is ignored.", :in "query", :name "orderBy", :type "string"} {:description "Page token for files.", :in "query", :name "pageToken", :type "string"} {:description "This parameter is deprecated and has no function.", :enum ["BASIC" "FULL"], :in "query", :name "projection", :type "string"} {:description "Query string for searching files.", :in "query", :name "q", :type "string"} {:description "A comma-separated list of spaces to query. Supported values are 'drive', 'appDataFolder' and 'photos'.", :in "query", :name "spaces", :type "string"} {:default false, :description "Deprecated - Whether the requesting application supports both My Drives and shared drives. This parameter will only be effective until June 1, 2020. Afterwards all applications are assumed to support shared drives.", :in "query", :name "supportsAllDrives", :type "boolean"} {:default false, :description "Deprecated use supportsAllDrives instead.", :in "query", :name "supportsTeamDrives", :type "boolean"} {:description "Deprecated use driveId instead.", :in "query", :name "teamDriveId", :type "string"}], :operationId "drive.files.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/files", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.drives.delete" {:description "Permanently deletes a shared drive for which the user is an organizer. The shared drive cannot contain any untrashed items.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "The ID of the shared drive.", :in "path", :name "driveId", :required true, :type "string"}], :operationId "drive.drives.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/drives/{driveId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.teamdrives.get" {:description "Deprecated use drives.get instead.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/TeamDrive"}}}, :parameters [{:description "The ID of the Team Drive", :in "path", :name "teamDriveId", :required true, :type "string"} {:default false, :description "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the Team Drive belongs.", :in "query", :name "useDomainAdminAccess", :type "boolean"}], :operationId "drive.teamdrives.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/teamdrives/{teamDriveId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.apps.list" {:description "Lists a user's installed apps.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/AppList"}}}, :parameters [{:default "", :description "A comma-separated list of file extensions for open with filtering. All apps within the given app query scope which can open any of the given file extensions will be included in the response. If appFilterMimeTypes are provided as well, the result is a union of the two resulting app lists.", :in "query", :name "appFilterExtensions", :type "string"} {:default "", :description "A comma-separated list of MIME types for open with filtering. All apps within the given app query scope which can open any of the given MIME types will be included in the response. If appFilterExtensions are provided as well, the result is a union of the two resulting app lists.", :in "query", :name "appFilterMimeTypes", :type "string"} {:description "A language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/).", :in "query", :name "languageCode", :type "string"}], :operationId "drive.apps.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/apps", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.replies.update" {:description "Updates an existing reply.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/CommentReply"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/CommentReply"}} {:description "The ID of the comment.", :in "path", :name "commentId", :required true, :type "string"} {:description "The ID of the file.", :in "path", :name "fileId", :required true, :type "string"} {:description "The ID of the reply.", :in "path", :name "replyId", :required true, :type "string"}], :operationId "drive.replies.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/comments/{commentId}/replies/{replyId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.comments.insert" {:description "Creates a new comment on the given file.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Comment"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Comment"}} {:description "The ID of the file.", :in "path", :name "fileId", :required true, :type "string"}], :operationId "drive.comments.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/comments", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.replies.get" {:description "Gets a reply.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/CommentReply"}}}, :parameters [{:description "The ID of the comment.", :in "path", :name "commentId", :required true, :type "string"} {:description "The ID of the file.", :in "path", :name "fileId", :required true, :type "string"} {:default false, :description "If set, this will succeed when retrieving a deleted reply.", :in "query", :name "includeDeleted", :type "boolean"} {:description "The ID of the reply.", :in "path", :name "replyId", :required true, :type "string"}], :operationId "drive.replies.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/comments/{commentId}/replies/{replyId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.properties.get" {:description "Gets a property by its key.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Property"}}}, :parameters [{:description "The ID of the file.", :in "path", :name "fileId", :required true, :type "string"} {:description "The key of the property.", :in "path", :name "propertyKey", :required true, :type "string"} {:default "private", :description "The visibility of the property.", :in "query", :name "visibility", :type "string"}], :operationId "drive.properties.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/properties/{propertyKey}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.changes.list" {:description "Lists the changes for a user or shared drive.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ChangeList"}}}, :parameters [{:description "The shared drive from which changes will be returned. If specified the change IDs will be reflective of the shared drive; use the combined drive ID and change ID as an identifier.", :in "query", :name "driveId", :type "string"} {:default false, :description "Whether changes should include the file resource if the file is still accessible by the user at the time of the request, even when a file was removed from the list of changes and there will be no further change entries for this file.", :in "query", :name "includeCorpusRemovals", :type "boolean"} {:default true, :description "Whether to include changes indicating that items have been removed from the list of changes, for example by deletion or loss of access.", :in "query", :name "includeDeleted", :type "boolean"} {:default false, :description "Deprecated - Whether both My Drive and shared drive items should be included in results. This parameter will only be effective until June 1, 2020. Afterwards shared drive items will be included in the results.", :in "query", :name "includeItemsFromAllDrives", :type "boolean"} {:default true, :description "Whether to include changes outside the My Drive hierarchy in the result. When set to false, changes to files such as those in the Application Data folder or shared files which have not been added to My Drive will be omitted from the result.", :in "query", :name "includeSubscribed", :type "boolean"} {:default false, :description "Deprecated use includeItemsFromAllDrives instead.", :in "query", :name "includeTeamDriveItems", :type "boolean"} {:default 100, :description "Maximum number of changes to return.", :in "query", :minimum 1, :name "maxResults", :type "integer"} {:description "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response or to the response from the getStartPageToken method.", :in "query", :name "pageToken", :type "string"} {:description "A comma-separated list of spaces to query. Supported values are 'drive', 'appDataFolder' and 'photos'.", :in "query", :name "spaces", :type "string"} {:description "Deprecated - use pageToken instead.", :in "query", :name "startChangeId", :type "string"} {:default false, :description "Deprecated - Whether the requesting application supports both My Drives and shared drives. This parameter will only be effective until June 1, 2020. Afterwards all applications are assumed to support shared drives.", :in "query", :name "supportsAllDrives", :type "boolean"} {:default false, :description "Deprecated use supportsAllDrives instead.", :in "query", :name "supportsTeamDrives", :type "boolean"} {:description "Deprecated use driveId instead.", :in "query", :name "teamDriveId", :type "string"}], :operationId "drive.changes.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/changes", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.parents.list" {:description "Lists a file's parents.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ParentList"}}}, :parameters [{:description "The ID of the file.", :in "path", :name "fileId", :required true, :type "string"}], :operationId "drive.parents.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/parents", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.files.export" {:description "Exports a Google Doc to the requested MIME type and returns the exported content. Please note that the exported content is limited to 10MB.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "The ID of the file.", :in "path", :name "fileId", :required true, :type "string"} {:description "The MIME type of the format requested for this export.", :in "query", :name "mimeType", :required true, :type "string"}], :operationId "drive.files.export", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/export", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.changes.watch" {:description "Subscribe to changes for a user.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Channel"}}}, :parameters [{:description "The shared drive from which changes will be returned. If specified the change IDs will be reflective of the shared drive; use the combined drive ID and change ID as an identifier.", :in "query", :name "driveId", :type "string"} {:default false, :description "Whether changes should include the file resource if the file is still accessible by the user at the time of the request, even when a file was removed from the list of changes and there will be no further change entries for this file.", :in "query", :name "includeCorpusRemovals", :type "boolean"} {:default true, :description "Whether to include changes indicating that items have been removed from the list of changes, for example by deletion or loss of access.", :in "query", :name "includeDeleted", :type "boolean"} {:default false, :description "Deprecated - Whether both My Drive and shared drive items should be included in results. This parameter will only be effective until June 1, 2020. Afterwards shared drive items will be included in the results.", :in "query", :name "includeItemsFromAllDrives", :type "boolean"} {:default true, :description "Whether to include changes outside the My Drive hierarchy in the result. When set to false, changes to files such as those in the Application Data folder or shared files which have not been added to My Drive will be omitted from the result.", :in "query", :name "includeSubscribed", :type "boolean"} {:default false, :description "Deprecated use includeItemsFromAllDrives instead.", :in "query", :name "includeTeamDriveItems", :type "boolean"} {:default 100, :description "Maximum number of changes to return.", :in "query", :minimum 1, :name "maxResults", :type "integer"} {:description "The token for continuing a previous list request on the next page. This should be set to the value of 'nextPageToken' from the previous response or to the response from the getStartPageToken method.", :in "query", :name "pageToken", :type "string"} {:in "body", :name "resource", :schema {:$ref "#/definitions/Channel"}} {:description "A comma-separated list of spaces to query. Supported values are 'drive', 'appDataFolder' and 'photos'.", :in "query", :name "spaces", :type "string"} {:description "Deprecated - use pageToken instead.", :in "query", :name "startChangeId", :type "string"} {:default false, :description "Deprecated - Whether the requesting application supports both My Drives and shared drives. This parameter will only be effective until June 1, 2020. Afterwards all applications are assumed to support shared drives.", :in "query", :name "supportsAllDrives", :type "boolean"} {:default false, :description "Deprecated use supportsAllDrives instead.", :in "query", :name "supportsTeamDrives", :type "boolean"} {:description "Deprecated use driveId instead.", :in "query", :name "teamDriveId", :type "string"}], :operationId "drive.changes.watch", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/changes/watch", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.teamdrives.list" {:description "Deprecated use drives.list instead.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/TeamDriveList"}}}, :parameters [{:default 10, :description "Maximum number of Team Drives to return.", :in "query", :maximum 100, :minimum 1, :name "maxResults", :type "integer"} {:description "Page token for Team Drives.", :in "query", :name "pageToken", :type "string"} {:description "Query string for searching Team Drives.", :in "query", :name "q", :type "string"} {:default false, :description "Issue the request as a domain administrator; if set to true, then all Team Drives of the domain in which the requester is an administrator are returned.", :in "query", :name "useDomainAdminAccess", :type "boolean"}], :operationId "drive.teamdrives.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/teamdrives", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.properties.delete" {:description "Deletes a property.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "The ID of the file.", :in "path", :name "fileId", :required true, :type "string"} {:description "The key of the property.", :in "path", :name "propertyKey", :required true, :type "string"} {:default "private", :description "The visibility of the property.", :in "query", :name "visibility", :type "string"}], :operationId "drive.properties.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/files/{fileId}/properties/{propertyKey}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "drive.children.delete" {:description "Removes a child from a folder.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "The ID of the child.", :in "path", :name "childId", :required true, :type "string"} {:description "The ID of the folder.", :in "path", :name "folderId", :required true, :type "string"}], :operationId "drive.children.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/files/{folderId}/children/{childId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}}, :parameters {:alt {:default "json", :description "Data format for the response.", :enum ["json"], :in "query", :name "alt", :type "string"}, :fields {:description "Selector specifying which fields to include in a partial response.", :in "query", :name "fields", :type "string"}, :key {:description "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", :in "query", :name "key", :type "string"}, :oauth_token {:description "OAuth 2.0 token for the current user.", :in "query", :name "oauth_token", :type "string"}, :prettyPrint {:default true, :description "Returns response with indentations and line breaks.", :in "query", :name "prettyPrint", :type "boolean"}, :quotaUser {:description "An opaque string that represents a user for quota purposes. Must not exceed 40 characters.", :in "query", :name "quotaUser", :type "string"}, :userIp {:description "Deprecated. Please use quotaUser instead.", :in "query", :name "userIp", :type "string"}}, :definitions {:ChangeList {:description "A list of changes for a user.", :properties {:etag {:description "The ETag of the list.", :type "string"}, :items {:description "The list of changes. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.", :items {:$ref "#/definitions/Change"}, :type "array"}, :kind {:default "drive#changeList", :description "This is always drive#changeList.", :type "string"}, :largestChangeId {:description "The current largest change ID.", :format "int64", :type "string"}, :newStartPageToken {:description "The starting page token for future changes. This will be present only if the end of the current changes list has been reached.", :type "string"}, :nextLink {:description "A link to the next page of changes.", :type "string"}, :nextPageToken {:description "The page token for the next page of changes. This will be absent if the end of the changes list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.", :type "string"}, :selfLink {:description "A link back to this list.", :type "string"}}, :type "object"}, :ParentList {:description "A list of a file's parents.", :properties {:etag {:description "The ETag of the list.", :type "string"}, :items {:description "The list of parents.", :items {:$ref "#/definitions/ParentReference"}, :type "array"}, :kind {:default "drive#parentList", :description "This is always drive#parentList.", :type "string"}, :selfLink {:description "A link back to this list.", :type "string"}}, :type "object"}, :Property {:description "A key-value pair attached to a file that is either public or private to an application.\nThe following limits apply to file properties:  \n- Maximum of 100 properties total per file\n- Maximum of 30 private properties per app\n- Maximum of 30 public properties\n- Maximum of 124 bytes size limit on (key + value) string in UTF-8 encoding for a single property.", :properties {:etag {:description "ETag of the property.", :type "string"}, :key {:description "The key of this property.", :type "string"}, :kind {:default "drive#property", :description "This is always drive#property.", :type "string"}, :selfLink {:description "The link back to this property.", :type "string"}, :value {:description "The value of this property.", :type "string"}, :visibility {:description "The visibility of this property. Allowed values are PRIVATE and PUBLIC. (Default: PRIVATE)", :type "string"}}, :type "object"}, :About {:description "An item with user information and settings.", :properties {:features {:description "List of additional features enabled on this account.", :items {:properties {:featureName {:description "The name of the feature.", :type "string"}, :featureRate {:description "The request limit rate for this feature, in queries per second.", :format "double", :type "number"}}, :type "object"}, :type "array"}, :quotaBytesTotal {:description "The total number of quota bytes. This is only relevant when quotaType is LIMITED.", :format "int64", :type "string"}, :canCreateDrives {:description "Whether the user can create shared drives.", :type "boolean"}, :canCreateTeamDrives {:description "Deprecated - use canCreateDrives instead.", :type "boolean"}, :isCurrentAppInstalled {:description "A boolean indicating whether the authenticated app is installed by the authenticated user.", :type "boolean"}, :quotaBytesUsedInTrash {:description "The number of quota bytes used by trashed items.", :format "int64", :type "string"}, :name {:description "The name of the current user.", :type "string"}, :domainSharingPolicy {:description "The domain sharing policy for the current user. Possible values are:  \n- allowed \n- allowedWithWarning \n- incomingOnly \n- disallowed", :type "string"}, :folderColorPalette {:description "The palette of allowable folder colors as RGB hex strings.", :items {:type "string"}, :type "array"}, :permissionId {:description "The current user's ID as visible in the permissions collection.", :type "string"}, :selfLink {:description "A link back to this item.", :type "string"}, :etag {:description "The ETag of the item.", :type "string"}, :exportFormats {:description "The allowable export formats.", :items {:properties {:source {:description "The content type to convert from.", :type "string"}, :targets {:description "The possible content types to convert to.", :items {:type "string"}, :type "array"}}, :type "object"}, :type "array"}, :quotaType {:description "The type of the user's storage quota. Possible values are:  \n- LIMITED \n- UNLIMITED", :type "string"}, :quotaBytesByService {:description "The amount of storage quota used by different Google services.", :items {:properties {:bytesUsed {:description "The storage quota bytes used by the service.", :format "int64", :type "string"}, :serviceName {:description "The service's name, e.g. DRIVE, GMAIL, or PHOTOS.", :type "string"}}, :type "object"}, :type "array"}, :maxUploadSizes {:description "List of max upload sizes for each file type. The most specific type takes precedence.", :items {:properties {:size {:description "The max upload size for this type.", :format "int64", :type "string"}, :type {:description "The file type.", :type "string"}}, :type "object"}, :type "array"}, :teamDriveThemes {:description "Deprecated - use driveThemes instead.", :items {:properties {:backgroundImageLink {:description "Deprecated - use driveThemes/backgroundImageLink instead.", :type "string"}, :colorRgb {:description "Deprecated - use driveThemes/colorRgb instead.", :type "string"}, :id {:description "Deprecated - use driveThemes/id instead.", :type "string"}}, :type "object"}, :type "array"}, :driveThemes {:description "A list of themes that are supported for shared drives.", :items {:properties {:backgroundImageLink {:description "A link to this theme's background image.", :type "string"}, :colorRgb {:description "The color of this theme as an RGB hex string.", :type "string"}, :id {:description "The ID of the theme.", :type "string"}}, :type "object"}, :type "array"}, :languageCode {:description "The user's language or locale code, as defined by BCP 47, with some extensions from Unicode's LDML format (http://www.unicode.org/reports/tr35/).", :type "string"}, :remainingChangeIds {:description "The number of remaining change ids, limited to no more than 2500.", :format "int64", :type "string"}, :additionalRoleInfo {:description "Information about supported additional roles per file type. The most specific type takes precedence.", :items {:properties {:roleSets {:description "The supported additional roles per primary role.", :items {:properties {:additionalRoles {:description "The supported additional roles with the primary role.", :items {:type "string"}, :type "array"}, :primaryRole {:description "A primary permission role.", :type "string"}}, :type "object"}, :type "array"}, :type {:description "The content type that this additional role info applies to.", :type "string"}}, :type "object"}, :type "array"}, :kind {:default "drive#about", :description "This is always drive#about.", :type "string"}, :quotaBytesUsed {:description "The number of quota bytes used by Google Drive.", :format "int64", :type "string"}, :largestChangeId {:description "The largest change id.", :format "int64", :type "string"}, :rootFolderId {:description "The id of the root folder.", :type "string"}, :user {:$ref "#/definitions/User", :description "The authenticated user."}, :quotaBytesUsedAggregate {:description "The number of quota bytes used by all Google apps (Drive, Picasa, etc.).", :format "int64", :type "string"}, :importFormats {:description "The allowable import formats.", :items {:properties {:source {:description "The imported file's content type to convert from.", :type "string"}, :targets {:description "The possible content types to convert to.", :items {:type "string"}, :type "array"}}, :type "object"}, :type "array"}}, :type "object"}, :CommentList {:description "A list of comments on a file in Google Drive.", :properties {:items {:description "The list of comments. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.", :items {:$ref "#/definitions/Comment"}, :type "array"}, :kind {:default "drive#commentList", :description "This is always drive#commentList.", :type "string"}, :nextLink {:description "A link to the next page of comments.", :type "string"}, :nextPageToken {:description "The page token for the next page of comments. This will be absent if the end of the comments list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.", :type "string"}, :selfLink {:description "A link back to this list.", :type "string"}}, :type "object"}, :RevisionList {:description "A list of revisions of a file.", :properties {:etag {:description "The ETag of the list.", :type "string"}, :items {:description "The list of revisions. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.", :items {:$ref "#/definitions/Revision"}, :type "array"}, :kind {:default "drive#revisionList", :description "This is always drive#revisionList.", :type "string"}, :nextPageToken {:description "The page token for the next page of revisions. This field will be absent if the end of the revisions list has been reached. If the token is rejected for any reason, it should be discarded and pagination should be restarted from the first page of results.", :type "string"}, :selfLink {:description "A link back to this list.", :type "string"}}, :type "object"}, :PermissionId {:description "An ID for a user or group as seen in Permission items.", :properties {:id {:description "The permission ID.", :type "string"}, :kind {:default "drive#permissionId", :description "This is always drive#permissionId.", :type "string"}}, :type "object"}, :Revision {:description "A revision of a file.", :properties {:publishedOutsideDomain {:description "Whether this revision is published outside the domain. This is only populated and can only be modified for Google Docs.", :type "boolean"}, :fileSize {:description "The size of the revision in bytes. This will only be populated on files with content stored in Drive.", :format "int64", :type "string"}, :publishAuto {:description "Whether subsequent revisions will be automatically republished. This is only populated and can only be modified for Google Docs.", :type "boolean"}, :pinned {:description "Whether this revision is pinned to prevent automatic purging. This will only be populated and can only be modified on files with content stored in Drive which are not Google Docs. Revisions can also be pinned when they are created through the drive.files.insert/update/copy by using the pinned query parameter. Pinned revisions are stored indefinitely using additional storage quota, up to a maximum of 200 revisions.", :type "boolean"}, :exportLinks {:additionalProperties {:description "A mapping from export format to URL", :type "string"}, :description "Links for exporting Google Docs to specific formats.", :type "object"}, :lastModifyingUserName {:description "Name of the last user to modify this revision.", :type "string"}, :selfLink {:description "A link back to this revision.", :type "string"}, :etag {:description "The ETag of the revision.", :type "string"}, :lastModifyingUser {:$ref "#/definitions/User", :description "The last user to modify this revision."}, :id {:description "The ID of the revision.", :type "string"}, :kind {:default "drive#revision", :description "This is always drive#revision.", :type "string"}, :mimeType {:description "The MIME type of the revision.", :type "string"}, :modifiedDate {:description "Last time this revision was modified (formatted RFC 3339 timestamp).", :format "date-time", :type "string"}, :downloadUrl {:description "Short term download URL for the file. This will only be populated on files with content stored in Drive.", :type "string"}, :md5Checksum {:description "An MD5 checksum for the content of this revision. This will only be populated on files with content stored in Drive.", :type "string"}, :publishedLink {:description "A link to the published revision.", :type "string"}, :originalFilename {:description "The original filename when this revision was created. This will only be populated on files with content stored in Drive.", :type "string"}, :published {:description "Whether this revision is published. This is only populated and can only be modified for Google Docs.", :type "boolean"}}, :type "object"}, :Permission {:description "A permission for a file.", :properties {:role {:description "The primary role for this user. While new values may be supported in the future, the following are currently allowed:  \n- owner \n- organizer \n- fileOrganizer \n- writer \n- reader", :type "string"}, :deleted {:description "Whether the account associated with this permission has been deleted. This field only pertains to user and group permissions.", :type "boolean"}, :authKey {:description "Deprecated.", :type "string"}, :name {:description "The name for this permission.", :type "string"}, :emailAddress {:description "The email address of the user or group this permission refers to. This is an output-only field which is present when the permission type is user or group.", :type "string"}, :value {:description "The email address or domain name for the entity. This is used during inserts and is not populated in responses. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified unless the permission type is anyone, in which case both id and value are ignored.", :type "string"}, :selfLink {:description "A link back to this permission.", :type "string"}, :type {:description "The account type. Allowed values are:  \n- user \n- group \n- domain \n- anyone", :type "string"}, :etag {:description "The ETag of the permission.", :type "string"}, :additionalRoles {:description "Additional roles for this user. Only commenter is currently allowed, though more may be supported in the future.", :items {:type "string"}, :type "array"}, :permissionDetails {:description "Details of whether the permissions on this shared drive item are inherited or directly on this item. This is an output-only field which is present only for shared drive items.", :items {:properties {:additionalRoles {:description "Additional roles for this user. Only commenter is currently possible, though more may be supported in the future.", :items {:type "string"}, :type "array"}, :inherited {:description "Whether this permission is inherited. This field is always populated. This is an output-only field.", :type "boolean"}, :inheritedFrom {:description "The ID of the item from which this permission is inherited. This is an output-only field and is only populated for members of the shared drive.", :type "string"}, :permissionType {:description "The permission type for this user. While new values may be added in future, the following are currently possible:  \n- file \n- member", :type "string"}, :role {:description "The primary role for this user. While new values may be added in the future, the following are currently possible:  \n- organizer \n- fileOrganizer \n- writer \n- reader", :type "string"}}, :type "object"}, :type "array"}, :teamDrivePermissionDetails {:description "Deprecated - use permissionDetails instead.", :items {:properties {:additionalRoles {:description "Deprecated - use permissionDetails/additionalRoles instead.", :items {:type "string"}, :type "array"}, :inherited {:description "Deprecated - use permissionDetails/inherited instead.", :type "boolean"}, :inheritedFrom {:description "Deprecated - use permissionDetails/inheritedFrom instead.", :type "string"}, :role {:description "Deprecated - use permissionDetails/role instead.", :type "string"}, :teamDrivePermissionType {:description "Deprecated - use permissionDetails/permissionType instead.", :type "string"}}, :type "object"}, :type "array"}, :id {:description "The ID of the user this permission refers to, and identical to the permissionId in the About and Files resources. When making a drive.permissions.insert request, exactly one of the id or value fields must be specified unless the permission type is anyone, in which case both id and value are ignored.", :type "string"}, :kind {:default "drive#permission", :description "This is always drive#permission.", :type "string"}, :domain {:description "The domain name of the entity this permission refers to. This is an output-only field which is present when the permission type is user, group or domain.", :type "string"}, :expirationDate {:description "The time at which this permission will expire (RFC 3339 date-time). Expiration dates have the following restrictions:  \n- They can only be set on user and group permissions \n- The date must be in the future \n- The date cannot be more than a year in the future \n- The date can only be set on drive.permissions.update or drive.permissions.patch requests", :format "date-time", :type "string"}, :withLink {:description "Whether the link is required for this permission.", :type "boolean"}, :photoLink {:description "A link to the profile photo, if available.", :type "string"}}, :type "object"}, :Comment {:description "A comment on a file in Google Drive.", :properties {:htmlContent {:description "HTML formatted content for this comment.", :type "string"}, :deleted {:description "Whether this comment has been deleted. If a comment has been deleted the content will be cleared and this will only represent a comment that once existed.", :type "boolean"}, :fileTitle {:description "The title of the file which this comment is addressing.", :type "string"}, :content {:description "The plain text content used to create this comment. This is not HTML safe and should only be used as a starting point to make edits to a comment's content.", :type "string"}, :selfLink {:description "A link back to this comment.", :type "string"}, :commentId {:description "The ID of the comment.", :type "string"}, :author {:$ref "#/definitions/User", :description "The author of the comment. The author's email address and permission ID will not be populated."}, :replies {:description "Replies to this post.", :items {:$ref "#/definitions/CommentReply"}, :type "array"}, :status {:description "The status of this comment. Status can be changed by posting a reply to a comment with the desired status.  \n- \"open\" - The comment is still open. \n- \"resolved\" - The comment has been resolved by one of its replies.", :type "string"}, :kind {:default "drive#comment", :description "This is always drive#comment.", :type "string"}, :context {:description "The context of the file which is being commented on.", :properties {:type {:description "The MIME type of the context snippet.", :type "string"}, :value {:description "Data representation of the segment of the file being commented on. In the case of a text file for example, this would be the actual text that the comment is about.", :type "string"}}, :type "object"}, :modifiedDate {:description "The date when this comment or any of its replies were last modified.", :format "date-time", :type "string"}, :createdDate {:description "The date when this comment was first created.", :format "date-time", :type "string"}, :anchor {:description "A region of the document represented as a JSON string. See anchor documentation for details on how to define and interpret anchor properties.", :type "string"}, :fileId {:description "The file which this comment is addressing.", :type "string"}}, :type "object"}, :Channel {:description "An notification channel used to watch for resource changes.", :properties {:address {:description "The address where notifications are delivered for this channel.", :type "string"}, :resourceUri {:description "A version-specific identifier for the watched resource.", :type "string"}, :payload {:description "A Boolean value to indicate whether payload is wanted. Optional.", :type "boolean"}, :expiration {:description "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.", :format "int64", :type "string"}, :params {:additionalProperties {:description "Declares a new parameter by name.", :type "string"}, :description "Additional parameters controlling delivery channel behavior. Optional.", :type "object"}, :type {:description "The type of delivery mechanism used for this channel.", :type "string"}, :resourceId {:description "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.", :type "string"}, :token {:description "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.", :type "string"}, :id {:description "A UUID or similar unique string that identifies this channel.", :type "string"}, :kind {:default "api#channel", :description "Identifies this as a notification channel used to watch for changes to a resource, which is \"api#channel\".", :type "string"}}, :type "object"}, :ChildList {:description "A list of children of a file.", :properties {:etag {:description "The ETag of the list.", :type "string"}, :items {:description "The list of children. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.", :items {:$ref "#/definitions/ChildReference"}, :type "array"}, :kind {:default "drive#childList", :description "This is always drive#childList.", :type "string"}, :nextLink {:description "A link to the next page of children.", :type "string"}, :nextPageToken {:description "The page token for the next page of children. This will be absent if the end of the children list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.", :type "string"}, :selfLink {:description "A link back to this list.", :type "string"}}, :type "object"}, :Drive {:description "Representation of a shared drive.", :properties {:capabilities {:description "Capabilities the current user has on this shared drive.", :properties {:canChangeDomainUsersOnlyRestriction {:description "Whether the current user can change the domainUsersOnly restriction of this shared drive.", :type "boolean"}, :canRenameDrive {:description "Whether the current user can rename this shared drive.", :type "boolean"}, :canCopy {:description "Whether the current user can copy files in this shared drive.", :type "boolean"}, :canManageMembers {:description "Whether the current user can add members to this shared drive or remove them or change their role.", :type "boolean"}, :canTrashChildren {:description "Whether the current user can trash children from folders in this shared drive.", :type "boolean"}, :canDownload {:description "Whether the current user can download files in this shared drive.", :type "boolean"}, :canChangeDriveMembersOnlyRestriction {:description "Whether the current user can change the driveMembersOnly restriction of this shared drive.", :type "boolean"}, :canDeleteChildren {:description "Whether the current user can delete children from folders in this shared drive.", :type "boolean"}, :canListChildren {:description "Whether the current user can list the children of folders in this shared drive.", :type "boolean"}, :canRename {:description "Whether the current user can rename files or folders in this shared drive.", :type "boolean"}, :canReadRevisions {:description "Whether the current user can read the revisions resource of files in this shared drive.", :type "boolean"}, :canDeleteDrive {:description "Whether the current user can delete this shared drive. Attempting to delete the shared drive may still fail if there are untrashed items inside the shared drive.", :type "boolean"}, :canChangeCopyRequiresWriterPermissionRestriction {:description "Whether the current user can change the copyRequiresWriterPermission restriction of this shared drive.", :type "boolean"}, :canEdit {:description "Whether the current user can edit files in this shared drive", :type "boolean"}, :canComment {:description "Whether the current user can comment on files in this shared drive.", :type "boolean"}, :canAddChildren {:description "Whether the current user can add children to folders in this shared drive.", :type "boolean"}, :canChangeDriveBackground {:description "Whether the current user can change the background of this shared drive.", :type "boolean"}, :canShare {:description "Whether the current user can share files or folders in this shared drive.", :type "boolean"}}, :type "object"}, :restrictions {:description "A set of restrictions that apply to this shared drive or items inside this shared drive.", :properties {:adminManagedRestrictions {:description "Whether administrative privileges on this shared drive are required to modify restrictions.", :type "boolean"}, :copyRequiresWriterPermission {:description "Whether the options to copy, print, or download files inside this shared drive, should be disabled for readers and commenters. When this restriction is set to true, it will override the similarly named field to true for any file inside this shared drive.", :type "boolean"}, :domainUsersOnly {:description "Whether access to this shared drive and items inside this shared drive is restricted to users of the domain to which this shared drive belongs. This restriction may be overridden by other sharing policies controlled outside of this shared drive.", :type "boolean"}, :driveMembersOnly {:description "Whether access to items inside this shared drive is restricted to its members.", :type "boolean"}}, :type "object"}, :themeId {:description "The ID of the theme from which the background image and color will be set. The set of possible driveThemes can be retrieved from a drive.about.get response. When not specified on a drive.drives.insert request, a random theme is chosen from which the background image and color are set. This is a write-only field; it can only be set on requests that don't set colorRgb or backgroundImageFile.", :type "string"}, :backgroundImageFile {:description "An image file and cropping parameters from which a background image for this shared drive is set. This is a write only field; it can only be set on drive.drives.update requests that don't set themeId. When specified, all fields of the backgroundImageFile must be set.", :properties {:id {:description "The ID of an image file in Google Drive to use for the background image.", :type "string"}, :width {:description "The width of the cropped image in the closed range of 0 to 1. This value represents the width of the cropped image divided by the width of the entire image. The height is computed by applying a width to height aspect ratio of 80 to 9. The resulting image must be at least 1280 pixels wide and 144 pixels high.", :format "float", :type "number"}, :xCoordinate {:description "The X coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the horizontal distance from the left side of the entire image to the left side of the cropping area divided by the width of the entire image.", :format "float", :type "number"}, :yCoordinate {:description "The Y coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the vertical distance from the top side of the entire image to the top side of the cropping area divided by the height of the entire image.", :format "float", :type "number"}}, :type "object"}, :name {:description "The name of this shared drive.", :type "string"}, :hidden {:description "Whether the shared drive is hidden from default view.", :type "boolean"}, :id {:description "The ID of this shared drive which is also the ID of the top level folder of this shared drive.", :type "string"}, :kind {:default "drive#drive", :description "This is always drive#drive", :type "string"}, :colorRgb {:description "The color of this shared drive as an RGB hex string. It can only be set on a drive.drives.update request that does not set themeId.", :type "string"}, :backgroundImageLink {:description "A short-lived link to this shared drive's background image.", :type "string"}, :createdDate {:description "The time at which the shared drive was created (RFC 3339 date-time).", :format "date-time", :type "string"}}, :type "object"}, :StartPageToken {:properties {:kind {:default "drive#startPageToken", :description "Identifies what kind of resource this is. Value: the fixed string \"drive#startPageToken\".", :type "string"}, :startPageToken {:description "The starting page token for listing changes.", :type "string"}}, :type "object"}, :FileList {:description "A list of files.", :properties {:etag {:description "The ETag of the list.", :type "string"}, :incompleteSearch {:description "Whether the search process was incomplete. If true, then some search results may be missing, since all documents were not searched. This may occur when searching multiple drives with the \"allDrives\" corpora, but all corpora could not be searched. When this happens, it is suggested that clients narrow their query by choosing a different corpus such as \"default\" or \"drive\".", :type "boolean"}, :items {:description "The list of files. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.", :items {:$ref "#/definitions/File"}, :type "array"}, :kind {:default "drive#fileList", :description "This is always drive#fileList.", :type "string"}, :nextLink {:description "A link to the next page of files.", :type "string"}, :nextPageToken {:description "The page token for the next page of files. This will be absent if the end of the files list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.", :type "string"}, :selfLink {:description "A link back to this list.", :type "string"}}, :type "object"}, :File {:description "The metadata for a file.", :properties {:description {:description "A short description of the file.", :type "string"}, :properties {:description "The list of properties.", :items {:$ref "#/definitions/Property"}, :type "array"}, :isAppAuthorized {:description "Whether the file was created or opened by the requesting app.", :type "boolean"}, :capabilities {:description "Capabilities the current user has on this file. Each capability corresponds to a fine-grained action that a user may take.", :properties {:canDelete {:description "Whether the current user can delete this file.", :type "boolean"}, :canTrash {:description "Whether the current user can move this file to trash.", :type "boolean"}, :canMoveChildrenOutOfTeamDrive {:description "Deprecated - use canMoveChildrenOutOfDrive instead.", :type "boolean"}, :canCopy {:description "Whether the current user can copy this file. For an item in a shared drive, whether the current user can copy non-folder descendants of this item, or this item itself if it is not a folder.", :type "boolean"}, :canTrashChildren {:description "Whether the current user can trash children of this folder. This is false when the item is not a folder. Only populated for items in shared drives.", :type "boolean"}, :canMoveChildrenWithinDrive {:description "Whether the current user can move children of this folder within the shared drive. This is false when the item is not a folder. Only populated for items in shared drives.", :type "boolean"}, :canDownload {:description "Whether the current user can download this file.", :type "boolean"}, :canReadTeamDrive {:description "Deprecated - use canReadDrive instead.", :type "boolean"}, :canUntrash {:description "Whether the current user can restore this file from trash.", :type "boolean"}, :canMoveChildrenOutOfDrive {:description "Whether the current user can move children of this folder outside of the shared drive. This is false when the item is not a folder. Only populated for items in shared drives.", :type "boolean"}, :canDeleteChildren {:description "Whether the current user can delete children of this folder. This is false when the item is not a folder. Only populated for items in shared drives.", :type "boolean"}, :canListChildren {:description "Whether the current user can list the children of this folder. This is always false when the item is not a folder.", :type "boolean"}, :canChangeRestrictedDownload {:description "Deprecated", :type "boolean"}, :canRename {:description "Whether the current user can rename this file.", :type "boolean"}, :canChangeCopyRequiresWriterPermission {:description "Whether the current user can change the copyRequiresWriterPermission restriction of this file.", :type "boolean"}, :canReadRevisions {:description "Whether the current user can read the revisions resource of this file. For a shared drive item, whether revisions of non-folder descendants of this item, or this item itself if it is not a folder, can be read.", :type "boolean"}, :canMoveItemIntoTeamDrive {:description "Deprecated - use canMoveItemOutOfDrive instead.", :type "boolean"}, :canMoveItemOutOfDrive {:description "Whether the current user can move this item outside of this drive by changing its parent. Note that a request to change the parent of the item may still fail depending on the new parent that is being added.", :type "boolean"}, :canEdit {:description "Whether the current user can edit this file. Other factors may limit the type of changes a user can make to a file. For example, see canChangeCopyRequiresWriterPermission or canModifyContent.", :type "boolean"}, :canComment {:description "Whether the current user can comment on this file.", :type "boolean"}, :canRemoveChildren {:description "Whether the current user can remove children from this folder. This is always false when the item is not a folder. For a folder in a shared drive, use canDeleteChildren or canTrashChildren instead.", :type "boolean"}, :canAddChildren {:description "Whether the current user can add children to this folder. This is always false when the item is not a folder.", :type "boolean"}, :canMoveItemWithinTeamDrive {:description "Deprecated - use canMoveItemWithinDrive instead.", :type "boolean"}, :canModifyContent {:description "Whether the current user can modify the content of this file.", :type "boolean"}, :canShare {:description "Whether the current user can modify the sharing settings for this file.", :type "boolean"}, :canMoveItemOutOfTeamDrive {:description "Deprecated - use canMoveItemOutOfDrive instead.", :type "boolean"}, :canMoveChildrenWithinTeamDrive {:description "Deprecated - use canMoveChildrenWithinDrive instead.", :type "boolean"}, :canMoveTeamDriveItem {:description "Deprecated - use canMoveItemWithinDrive or canMoveItemOutOfDrive instead.", :type "boolean"}, :canReadDrive {:description "Whether the current user can read the shared drive to which this file belongs. Only populated for items in shared drives.", :type "boolean"}, :canMoveItemWithinDrive {:description "Whether the current user can move this item within this shared drive. Note that a request to change the parent of the item may still fail depending on the new parent that is being added. Only populated for items in shared drives.", :type "boolean"}}, :type "object"}, :copyRequiresWriterPermission {:description "Whether the options to copy, print, or download this file, should be disabled for readers and commenters.", :type "boolean"}, :labels {:description "A group of labels for the file.", :properties {:hidden {:description "Deprecated.", :type "boolean"}, :modified {:description "Whether the file has been modified by this user.", :type "boolean"}, :restricted {:description "Deprecated - use copyRequiresWriterPermission instead.", :type "boolean"}, :starred {:description "Whether this file is starred by the user.", :type "boolean"}, :trashed {:description "Whether this file has been trashed. This label applies to all users accessing the file; however, only owners are allowed to see and untrash files.", :type "boolean"}, :viewed {:description "Whether this file has been viewed by this user.", :type "boolean"}}, :type "object"}, :fileSize {:description "The size of the file in bytes. This field is only populated for files with content stored in Google Drive; it is not populated for Google Docs or shortcut files.", :format "int64", :type "string"}, :markedViewedByMeDate {:description "Deprecated.", :format "date-time", :type "string"}, :imageMediaMetadata {:description "Metadata about image media. This will only be present for image types, and its contents will depend on what can be parsed from the image content.", :properties {:focalLength {:description "The focal length used to create the photo, in millimeters.", :format "float", :type "number"}, :date {:description "The date and time the photo was taken (EXIF format timestamp).", :type "string"}, :aperture {:description "The aperture used to create the photo (f-number).", :format "float", :type "number"}, :rotation {:description "The rotation in clockwise degrees from the image's original orientation.", :format "int32", :type "integer"}, :exposureBias {:description "The exposure bias of the photo (APEX value).", :format "float", :type "number"}, :flashUsed {:description "Whether a flash was used to create the photo.", :type "boolean"}, :maxApertureValue {:description "The smallest f-number of the lens at the focal length used to create the photo (APEX value).", :format "float", :type "number"}, :colorSpace {:description "The color space of the photo.", :type "string"}, :width {:description "The width of the image in pixels.", :format "int32", :type "integer"}, :lens {:description "The lens used to create the photo.", :type "string"}, :exposureMode {:description "The exposure mode used to create the photo.", :type "string"}, :cameraModel {:description "The model of the camera used to create the photo.", :type "string"}, :cameraMake {:description "The make of the camera used to create the photo.", :type "string"}, :whiteBalance {:description "The white balance mode used to create the photo.", :type "string"}, :exposureTime {:description "The length of the exposure, in seconds.", :format "float", :type "number"}, :subjectDistance {:description "The distance to the subject of the photo, in meters.", :format "int32", :type "integer"}, :meteringMode {:description "The metering mode used to create the photo.", :type "string"}, :isoSpeed {:description "The ISO speed used to create the photo.", :format "int32", :type "integer"}, :location {:description "Geographic location information stored in the image.", :properties {:altitude {:description "The altitude stored in the image.", :format "double", :type "number"}, :latitude {:description "The latitude stored in the image.", :format "double", :type "number"}, :longitude {:description "The longitude stored in the image.", :format "double", :type "number"}}, :type "object"}, :height {:description "The height of the image in pixels.", :format "int32", :type "integer"}, :sensor {:description "The type of sensor used to create the photo.", :type "string"}}, :type "object"}, :trashedDate {:description "The time that the item was trashed (formatted RFC 3339 timestamp). Only populated for items in shared drives.", :format "date-time", :type "string"}, :indexableText {:description "Indexable text attributes for the file (can only be written)", :properties {:text {:description "The text to be indexed for this file.", :type "string"}}, :type "object"}, :openWithLinks {:additionalProperties {:type "string"}, :description "A map of the id of each of the user's apps to a link to open this file with that app. Only populated when the drive.apps.readonly scope is used.", :type "object"}, :defaultOpenWithLink {:description "A link to open this file with the user's default app for this file. Only populated when the drive.apps.readonly scope is used.", :type "string"}, :permissions {:description "The list of permissions for users with access to this file. Not populated for items in shared drives.", :items {:$ref "#/definitions/Permission"}, :type "array"}, :lastViewedByMeDate {:description "Last time this file was viewed by the user (formatted RFC 3339 timestamp).", :format "date-time", :type "string"}, :owners {:description "The owner(s) of this file. Not populated for items in shared drives.", :items {:$ref "#/definitions/User"}, :type "array"}, :permissionIds {:description "List of permission IDs for users with access to this file.", :items {:type "string"}, :type "array"}, :headRevisionId {:description "The ID of the file's head revision. This field is only populated for files with content stored in Google Drive; it is not populated for Google Docs or shortcut files.", :type "string"}, :editable {:description "Deprecated: use capabilities/canEdit.", :type "boolean"}, :fullFileExtension {:description "The full file extension; extracted from the title. May contain multiple concatenated extensions, such as \"tar.gz\". Removing an extension from the title does not clear this field; however, changing the extension on the title does update this field. This field is only populated for files with content stored in Google Drive; it is not populated for Google Docs or shortcut files.", :type "string"}, :exportLinks {:additionalProperties {:description "A mapping from export format to URL", :type "string"}, :description "Links for exporting Google Docs to specific formats.", :type "object"}, :lastModifyingUserName {:description "Name of the last user to modify this file.", :type "string"}, :copyable {:description "Deprecated: use capabilities/canCopy.", :type "boolean"}, :userPermission {:$ref "#/definitions/Permission", :description "The permissions for the authenticated user on this file."}, :selfLink {:description "A link back to this file.", :type "string"}, :etag {:description "ETag of the file.", :type "string"}, :iconLink {:description "A link to the file's icon.", :type "string"}, :shareable {:description "Deprecated: use capabilities/canShare.", :type "boolean"}, :teamDriveId {:description "Deprecated - use driveId instead.", :type "string"}, :title {:description "The title of this file. Note that for immutable items such as the top level folders of shared drives, My Drive root folder, and Application Data folder the title is constant.", :type "string"}, :embedLink {:description "A link for embedding the file.", :type "string"}, :hasThumbnail {:description "Whether this file has a thumbnail. This does not indicate whether the requesting app has access to the thumbnail. To check access, look for the presence of the thumbnailLink field.", :type "boolean"}, :lastModifyingUser {:$ref "#/definitions/User", :description "The last user to modify this file."}, :ownerNames {:description "Name(s) of the owner(s) of this file. Not populated for items in shared drives.", :items {:type "string"}, :type "array"}, :thumbnailVersion {:description "The thumbnail version for use in thumbnail cache invalidation.", :format "int64", :type "string"}, :folderColorRgb {:description "Folder color as an RGB hex string if the file is a folder. The list of supported colors is available in the folderColorPalette field of the About resource. If an unsupported color is specified, it will be changed to the closest color in the palette. Not populated for items in shared drives.", :type "string"}, :thumbnail {:description "A thumbnail for the file. This will only be used if a standard thumbnail cannot be generated.", :properties {:image {:description "The URL-safe Base64 encoded bytes of the thumbnail image. It should conform to RFC 4648 section 5.", :format "byte", :type "string"}, :mimeType {:description "The MIME type of the thumbnail.", :type "string"}}, :type "object"}, :canReadRevisions {:description "Deprecated: use capabilities/canReadRevisions.", :type "boolean"}, :spaces {:description "The list of spaces which contain the file. Supported values are 'drive', 'appDataFolder' and 'photos'.", :items {:type "string"}, :type "array"}, :fileExtension {:description "The final component of fullFileExtension with trailing text that does not appear to be part of the extension removed. This field is only populated for files with content stored in Google Drive; it is not populated for Google Docs or shortcut files.", :type "string"}, :id {:description "The ID of the file.", :type "string"}, :thumbnailLink {:description "A short-lived link to the file's thumbnail. Typically lasts on the order of hours. Only populated when the requesting app can access the file's content.", :type "string"}, :writersCanShare {:description "Whether writers can share the document with other users. Not populated for items in shared drives.", :type "boolean"}, :explicitlyTrashed {:description "Whether this file has been explicitly trashed, as opposed to recursively trashed.", :type "boolean"}, :kind {:default "drive#file", :description "The type of file. This is always drive#file.", :type "string"}, :appDataContents {:description "Whether this file is in the Application Data folder.", :type "boolean"}, :parents {:description "Collection of parent folders which contain this file.\nIf not specified as part of an insert request, the file will be placed directly in the user's My Drive folder. If not specified as part of a copy request, the file will inherit any discoverable parents of the source file. Update requests can also use the addParents and removeParents parameters to modify the parents list.", :items {:$ref "#/definitions/ParentReference"}, :type "array"}, :driveId {:description "ID of the shared drive the file resides in. Only populated for items in shared drives.", :type "string"}, :canComment {:description "Deprecated: use capabilities/canComment.", :type "boolean"}, :mimeType {:description "The MIME type of the file. This is only mutable on update when uploading new content. This field can be left blank, and the mimetype will be determined from the uploaded content's MIME type.", :type "string"}, :alternateLink {:description "A link for opening the file in a relevant Google editor or viewer.", :type "string"}, :trashingUser {:$ref "#/definitions/User", :description "If the file has been explicitly trashed, the user who trashed it. Only populated for items in shared drives."}, :shared {:description "Whether the file has been shared. Not populated for items in shared drives.", :type "boolean"}, :sharedWithMeDate {:description "Time at which this file was shared with the user (formatted RFC 3339 timestamp).", :format "date-time", :type "string"}, :sharingUser {:$ref "#/definitions/User", :description "User that shared the item with the current user, if available."}, :modifiedDate {:description "Last time this file was modified by anyone (formatted RFC 3339 timestamp). This is only mutable on update when the setModifiedDate parameter is set.", :format "date-time", :type "string"}, :downloadUrl {:description "Short lived download URL for the file. This field is only populated for files with content stored in Google Drive; it is not populated for Google Docs or shortcut files.", :type "string"}, :md5Checksum {:description "An MD5 checksum for the content of this file. This field is only populated for files with content stored in Google Drive; it is not populated for Google Docs or shortcut files.", :type "string"}, :createdDate {:description "Create time for this file (formatted RFC 3339 timestamp).", :format "date-time", :type "string"}, :hasAugmentedPermissions {:description "Whether there are permissions directly on this file. This field is only populated for items in shared drives.", :type "boolean"}, :modifiedByMeDate {:description "Last time this file was modified by the user (formatted RFC 3339 timestamp). Note that setting modifiedDate will also update the modifiedByMe date for the user which set the date.", :format "date-time", :type "string"}, :quotaBytesUsed {:description "The number of quota bytes used by this file.", :format "int64", :type "string"}, :version {:description "A monotonically increasing version number for the file. This reflects every change made to the file on the server, even those not visible to the requesting user.", :format "int64", :type "string"}, :originalFilename {:description "The original filename of the uploaded content if available, or else the original value of the title field. This is only available for files with binary content in Google Drive.", :type "string"}, :webViewLink {:description "A link only available on public folders for viewing their static web assets (HTML, CSS, JS, etc) via Google Drive's Website Hosting.", :type "string"}, :videoMediaMetadata {:description "Metadata about video media. This will only be present for video types.", :properties {:durationMillis {:description "The duration of the video in milliseconds.", :format "int64", :type "string"}, :height {:description "The height of the video in pixels.", :format "int32", :type "integer"}, :width {:description "The width of the video in pixels.", :format "int32", :type "integer"}}, :type "object"}, :ownedByMe {:description "Whether the file is owned by the current user. Not populated for items in shared drives.", :type "boolean"}, :webContentLink {:description "A link for downloading the content of the file in a browser using cookie based authentication. In cases where the content is shared publicly, the content can be downloaded without any credentials.", :type "string"}}, :type "object"}, :GeneratedIds {:description "A list of generated IDs which can be provided in insert requests", :properties {:ids {:description "The IDs generated for the requesting user in the specified space.", :items {:type "string"}, :type "array"}, :kind {:default "drive#generatedIds", :description "This is always drive#generatedIds", :type "string"}, :space {:description "The type of file that can be created with these IDs.", :type "string"}}, :type "object"}, :Change {:description "Representation of a change to a file or shared drive.", :properties {:drive {:$ref "#/definitions/Drive", :description "The updated state of the shared drive. Present if the changeType is drive, the user is still a member of the shared drive, and the shared drive has not been deleted."}, :deleted {:description "Whether the file or shared drive has been removed from this list of changes, for example by deletion or loss of access.", :type "boolean"}, :teamDrive {:$ref "#/definitions/TeamDrive", :description "Deprecated - use drive instead."}, :file {:$ref "#/definitions/File", :description "The updated state of the file. Present if the type is file and the file has not been removed from this list of changes."}, :selfLink {:description "A link back to this change.", :type "string"}, :type {:description "Deprecated - use changeType instead.", :type "string"}, :modificationDate {:description "The time of this modification.", :format "date-time", :type "string"}, :teamDriveId {:description "Deprecated - use driveId instead.", :type "string"}, :id {:description "The ID of the change.", :format "int64", :type "string"}, :kind {:default "drive#change", :description "This is always drive#change.", :type "string"}, :driveId {:description "The ID of the shared drive associated with this change.", :type "string"}, :changeType {:description "The type of the change. Possible values are file and drive.", :type "string"}, :fileId {:description "The ID of the file associated with this change.", :type "string"}}, :type "object"}, :PermissionList {:description "A list of permissions associated with a file.", :properties {:etag {:description "The ETag of the list.", :type "string"}, :items {:description "The list of permissions.", :items {:$ref "#/definitions/Permission"}, :type "array"}, :kind {:default "drive#permissionList", :description "This is always drive#permissionList.", :type "string"}, :nextPageToken {:description "The page token for the next page of permissions. This field will be absent if the end of the permissions list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.", :type "string"}, :selfLink {:description "A link back to this list.", :type "string"}}, :type "object"}, :User {:description "Information about a Drive user.", :properties {:displayName {:description "A plain text displayable name for this user.", :type "string"}, :emailAddress {:description "The email address of the user.", :type "string"}, :isAuthenticatedUser {:description "Whether this user is the same as the authenticated user for whom the request was made.", :type "boolean"}, :kind {:default "drive#user", :description "This is always drive#user.", :type "string"}, :permissionId {:description "The user's ID as visible in the permissions collection.", :type "string"}, :picture {:description "The user's profile picture.", :properties {:url {:description "A URL that points to a profile picture of this user.", :type "string"}}, :type "object"}}, :type "object"}, :ChildReference {:description "A reference to a folder's child.", :properties {:childLink {:description "A link to the child.", :type "string"}, :id {:description "The ID of the child.", :type "string"}, :kind {:default "drive#childReference", :description "This is always drive#childReference.", :type "string"}, :selfLink {:description "A link back to this reference.", :type "string"}}, :type "object"}, :TeamDriveList {:description "A list of Team Drives.", :properties {:items {:description "The list of Team Drives.", :items {:$ref "#/definitions/TeamDrive"}, :type "array"}, :kind {:default "drive#teamDriveList", :description "This is always drive#teamDriveList", :type "string"}, :nextPageToken {:description "The page token for the next page of Team Drives.", :type "string"}}, :type "object"}, :ParentReference {:description "A reference to a file's parent.", :properties {:id {:description "The ID of the parent.", :type "string"}, :isRoot {:description "Whether or not the parent is the root folder.", :type "boolean"}, :kind {:default "drive#parentReference", :description "This is always drive#parentReference.", :type "string"}, :parentLink {:description "A link to the parent.", :type "string"}, :selfLink {:description "A link back to this reference.", :type "string"}}, :type "object"}, :CommentReply {:description "A comment on a file in Google Drive.", :properties {:htmlContent {:description "HTML formatted content for this reply.", :type "string"}, :deleted {:description "Whether this reply has been deleted. If a reply has been deleted the content will be cleared and this will only represent a reply that once existed.", :type "boolean"}, :verb {:description "The action this reply performed to the parent comment. When creating a new reply this is the action to be perform to the parent comment. Possible values are:  \n- \"resolve\" - To resolve a comment. \n- \"reopen\" - To reopen (un-resolve) a comment.", :type "string"}, :content {:description "The plain text content used to create this reply. This is not HTML safe and should only be used as a starting point to make edits to a reply's content. This field is required on inserts if no verb is specified (resolve/reopen).", :type "string"}, :author {:$ref "#/definitions/User", :description "The author of the reply. The author's email address and permission ID will not be populated."}, :replyId {:description "The ID of the reply.", :type "string"}, :kind {:default "drive#commentReply", :description "This is always drive#commentReply.", :type "string"}, :modifiedDate {:description "The date when this reply was last modified.", :format "date-time", :type "string"}, :createdDate {:description "The date when this reply was first created.", :format "date-time", :type "string"}}, :type "object"}, :PropertyList {:description "A collection of properties, key-value pairs that are either public or private to an application.", :properties {:etag {:description "The ETag of the list.", :type "string"}, :items {:description "The list of properties.", :items {:$ref "#/definitions/Property"}, :type "array"}, :kind {:default "drive#propertyList", :description "This is always drive#propertyList.", :type "string"}, :selfLink {:description "The link back to this list.", :type "string"}}, :type "object"}, :App {:description "The apps resource provides a list of the apps that a user has installed, with information about each app's supported MIME types, file extensions, and other details.", :properties {:primaryFileExtensions {:description "The list of primary file extensions.", :items {:type "string"}, :type "array"}, :secondaryFileExtensions {:description "The list of secondary file extensions.", :items {:type "string"}, :type "array"}, :authorized {:description "Whether the app is authorized to access data on the user's Drive.", :type "boolean"}, :productUrl {:description "A link to the product listing for this app.", :type "string"}, :name {:description "The name of the app.", :type "string"}, :supportsCreate {:description "Whether this app supports creating new objects.", :type "boolean"}, :openUrlTemplate {:description "The template url for opening files with this app. The template will contain {ids} and/or {exportIds} to be replaced by the actual file ids. See  Open Files  for the full documentation.", :type "string"}, :supportsOfflineCreate {:description "Whether this app supports creating new files when offline.", :type "boolean"}, :secondaryMimeTypes {:description "The list of secondary mime types.", :items {:type "string"}, :type "array"}, :supportsImport {:description "Whether this app supports importing Google Docs.", :type "boolean"}, :productId {:description "The ID of the product listing for this app.", :type "string"}, :icons {:description "The various icons for the app.", :items {:properties {:category {:description "Category of the icon. Allowed values are:  \n- application - icon for the application \n- document - icon for a file associated with the app \n- documentShared - icon for a shared file associated with the app", :type "string"}, :iconUrl {:description "URL for the icon.", :type "string"}, :size {:description "Size of the icon. Represented as the maximum of the width and height.", :format "int32", :type "integer"}}, :type "object"}, :type "array"}, :shortDescription {:description "A short description of the app.", :type "string"}, :objectType {:description "The type of object this app creates (e.g. Chart). If empty, the app name should be used instead.", :type "string"}, :primaryMimeTypes {:description "The list of primary mime types.", :items {:type "string"}, :type "array"}, :supportsMultiOpen {:description "Whether this app supports opening more than one file.", :type "boolean"}, :createInFolderTemplate {:description "The template url to create a new file with this app in a given folder. The template will contain {folderId} to be replaced by the folder to create the new file in.", :type "string"}, :id {:description "The ID of the app.", :type "string"}, :kind {:default "drive#app", :description "This is always drive#app.", :type "string"}, :createUrl {:description "The url to create a new file with this app.", :type "string"}, :longDescription {:description "A long description of the app.", :type "string"}, :installed {:description "Whether the app is installed.", :type "boolean"}, :useByDefault {:description "Whether the app is selected as the default handler for the types it supports.", :type "boolean"}, :hasDriveWideScope {:description "Whether the app has drive-wide scope. An app with drive-wide scope can access all files in the user's drive.", :type "boolean"}}, :type "object"}, :CommentReplyList {:description "A list of replies to a comment on a file in Google Drive.", :properties {:items {:description "The list of replies. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.", :items {:$ref "#/definitions/CommentReply"}, :type "array"}, :kind {:default "drive#commentReplyList", :description "This is always drive#commentReplyList.", :type "string"}, :nextLink {:description "A link to the next page of replies.", :type "string"}, :nextPageToken {:description "The page token for the next page of replies. This will be absent if the end of the replies list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.", :type "string"}, :selfLink {:description "A link back to this list.", :type "string"}}, :type "object"}, :DriveList {:description "A list of shared drives.", :properties {:items {:description "The list of shared drives. If nextPageToken is populated, then this list may be incomplete and an additional page of results should be fetched.", :items {:$ref "#/definitions/Drive"}, :type "array"}, :kind {:default "drive#driveList", :description "This is always drive#driveList", :type "string"}, :nextPageToken {:description "The page token for the next page of shared drives. This will be absent if the end of the list has been reached. If the token is rejected for any reason, it should be discarded, and pagination should be restarted from the first page of results.", :type "string"}}, :type "object"}, :TeamDrive {:description "Deprecated: use the drive collection instead.", :properties {:capabilities {:description "Capabilities the current user has on this Team Drive.", :properties {:canChangeDomainUsersOnlyRestriction {:description "Whether the current user can change the domainUsersOnly restriction of this Team Drive.", :type "boolean"}, :canCopy {:description "Whether the current user can copy files in this Team Drive.", :type "boolean"}, :canManageMembers {:description "Whether the current user can add members to this Team Drive or remove them or change their role.", :type "boolean"}, :canTrashChildren {:description "Whether the current user can trash children from folders in this Team Drive.", :type "boolean"}, :canChangeTeamDriveBackground {:description "Whether the current user can change the background of this Team Drive.", :type "boolean"}, :canDownload {:description "Whether the current user can download files in this Team Drive.", :type "boolean"}, :canDeleteTeamDrive {:description "Whether the current user can delete this Team Drive. Attempting to delete the Team Drive may still fail if there are untrashed items inside the Team Drive.", :type "boolean"}, :canDeleteChildren {:description "Whether the current user can delete children from folders in this Team Drive.", :type "boolean"}, :canListChildren {:description "Whether the current user can list the children of folders in this Team Drive.", :type "boolean"}, :canRename {:description "Whether the current user can rename files or folders in this Team Drive.", :type "boolean"}, :canRenameTeamDrive {:description "Whether the current user can rename this Team Drive.", :type "boolean"}, :canReadRevisions {:description "Whether the current user can read the revisions resource of files in this Team Drive.", :type "boolean"}, :canChangeCopyRequiresWriterPermissionRestriction {:description "Whether the current user can change the copyRequiresWriterPermission restriction of this Team Drive.", :type "boolean"}, :canEdit {:description "Whether the current user can edit files in this Team Drive", :type "boolean"}, :canComment {:description "Whether the current user can comment on files in this Team Drive.", :type "boolean"}, :canChangeTeamMembersOnlyRestriction {:description "Whether the current user can change the teamMembersOnly restriction of this Team Drive.", :type "boolean"}, :canRemoveChildren {:description "Deprecated - use canDeleteChildren or canTrashChildren instead.", :type "boolean"}, :canAddChildren {:description "Whether the current user can add children to folders in this Team Drive.", :type "boolean"}, :canShare {:description "Whether the current user can share files or folders in this Team Drive.", :type "boolean"}}, :type "object"}, :restrictions {:description "A set of restrictions that apply to this Team Drive or items inside this Team Drive.", :properties {:adminManagedRestrictions {:description "Whether administrative privileges on this Team Drive are required to modify restrictions.", :type "boolean"}, :copyRequiresWriterPermission {:description "Whether the options to copy, print, or download files inside this Team Drive, should be disabled for readers and commenters. When this restriction is set to true, it will override the similarly named field to true for any file inside this Team Drive.", :type "boolean"}, :domainUsersOnly {:description "Whether access to this Team Drive and items inside this Team Drive is restricted to users of the domain to which this Team Drive belongs. This restriction may be overridden by other sharing policies controlled outside of this Team Drive.", :type "boolean"}, :teamMembersOnly {:description "Whether access to items inside this Team Drive is restricted to members of this Team Drive.", :type "boolean"}}, :type "object"}, :themeId {:description "The ID of the theme from which the background image and color will be set. The set of possible teamDriveThemes can be retrieved from a drive.about.get response. When not specified on a drive.teamdrives.insert request, a random theme is chosen from which the background image and color are set. This is a write-only field; it can only be set on requests that don't set colorRgb or backgroundImageFile.", :type "string"}, :backgroundImageFile {:description "An image file and cropping parameters from which a background image for this Team Drive is set. This is a write only field; it can only be set on drive.teamdrives.update requests that don't set themeId. When specified, all fields of the backgroundImageFile must be set.", :properties {:id {:description "The ID of an image file in Drive to use for the background image.", :type "string"}, :width {:description "The width of the cropped image in the closed range of 0 to 1. This value represents the width of the cropped image divided by the width of the entire image. The height is computed by applying a width to height aspect ratio of 80 to 9. The resulting image must be at least 1280 pixels wide and 144 pixels high.", :format "float", :type "number"}, :xCoordinate {:description "The X coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the horizontal distance from the left side of the entire image to the left side of the cropping area divided by the width of the entire image.", :format "float", :type "number"}, :yCoordinate {:description "The Y coordinate of the upper left corner of the cropping area in the background image. This is a value in the closed range of 0 to 1. This value represents the vertical distance from the top side of the entire image to the top side of the cropping area divided by the height of the entire image.", :format "float", :type "number"}}, :type "object"}, :name {:description "The name of this Team Drive.", :type "string"}, :id {:description "The ID of this Team Drive which is also the ID of the top level folder of this Team Drive.", :type "string"}, :kind {:default "drive#teamDrive", :description "This is always drive#teamDrive", :type "string"}, :colorRgb {:description "The color of this Team Drive as an RGB hex string. It can only be set on a drive.teamdrives.update request that does not set themeId.", :type "string"}, :backgroundImageLink {:description "A short-lived link to this Team Drive's background image.", :type "string"}, :createdDate {:description "The time at which the Team Drive was created (RFC 3339 date-time).", :format "date-time", :type "string"}}, :type "object"}, :AppList {:description "A list of third-party applications which the user has installed or given access to Google Drive.", :properties {:defaultAppIds {:description "List of app IDs that the user has specified to use by default. The list is in reverse-priority order (lowest to highest).", :items {:type "string"}, :type "array"}, :etag {:description "The ETag of the list.", :type "string"}, :items {:description "The list of apps.", :items {:$ref "#/definitions/App"}, :type "array"}, :kind {:default "drive#appList", :description "This is always drive#appList.", :type "string"}, :selfLink {:description "A link back to this list.", :type "string"}}, :type "object"}}}