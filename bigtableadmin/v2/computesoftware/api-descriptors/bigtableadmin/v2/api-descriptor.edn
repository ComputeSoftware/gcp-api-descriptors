#:compute.gcp.descriptor{:name "bigtableadmin", :title "Cloud Bigtable Admin API", :api-version "v2", :revision "20210301", :endpoint #:compute.gcp.descriptor{:url "https://bigtableadmin.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"type" "string", "location" "query", "description" "JSONP"}, "uploadType" {"type" "string", "location" "query", "description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."}, "key" {"description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "type" "string", "location" "query"}, "access_token" {"type" "string", "description" "OAuth access token.", "location" "query"}, "oauth_token" {"description" "OAuth 2.0 token for the current user.", "location" "query", "type" "string"}, "prettyPrint" {"default" "true", "type" "boolean", "description" "Returns response with indentations and line breaks.", "location" "query"}, "alt" {"enum" ["json" "media" "proto"], "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "description" "Data format for response.", "type" "string", "default" "json", "location" "query"}, "$.xgafv" {"location" "query", "description" "V1 error format.", "enum" ["1" "2"], "enumDescriptions" ["v1 error format" "v2 error format"], "type" "string"}, "fields" {"description" "Selector specifying which fields to include in a partial response.", "type" "string", "location" "query"}, "upload_protocol" {"type" "string", "location" "query", "description" "Upload protocol for media (e.g. \"raw\", \"multipart\")."}, "quotaUser" {"description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "type" "string", "location" "query"}}, :op->info {"bigtableadmin.operations.cancel" #:compute.gcp.descriptor{:http-method :post, :path "v2/{+name}:cancel", :response {"$ref" "Empty"}, :parameters {"name" {"description" "The name of the operation resource to be cancelled.", "location" "path", "type" "string", "pattern" "^operations/.*$", "required" true}}, :description "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."}, "bigtableadmin.projects.instances.clusters.create" #:compute.gcp.descriptor{:http-method :post, :path "v2/{+parent}/clusters", :request {"$ref" "Cluster"}, :response {"$ref" "Operation"}, :parameters {"parent" {"description" "Required. The unique name of the instance in which to create the new cluster. Values are of the form `projects/{project}/instances/{instance}`.", "required" true, "pattern" "^projects/[^/]+/instances/[^/]+$", "location" "path", "type" "string"}, "clusterId" {"location" "query", "type" "string", "description" "Required. The ID to be used when referring to the new cluster within its instance, e.g., just `mycluster` rather than `projects/myproject/instances/myinstance/clusters/mycluster`."}}, :description "Creates a cluster within an instance."}, "bigtableadmin.projects.instances.getIamPolicy" #:compute.gcp.descriptor{:http-method :post, :path "v2/{+resource}:getIamPolicy", :request {"$ref" "GetIamPolicyRequest"}, :response {"$ref" "Policy"}, :parameters {"resource" {"location" "path", "type" "string", "required" true, "pattern" "^projects/[^/]+/instances/[^/]+$", "description" "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field."}}, :description "Gets the access control policy for an instance resource. Returns an empty policy if an instance exists but does not have a policy set."}, "bigtableadmin.projects.instances.testIamPermissions" #:compute.gcp.descriptor{:http-method :post, :path "v2/{+resource}:testIamPermissions", :request {"$ref" "TestIamPermissionsRequest"}, :response {"$ref" "TestIamPermissionsResponse"}, :parameters {"resource" {"location" "path", "description" "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.", "type" "string", "pattern" "^projects/[^/]+/instances/[^/]+$", "required" true}}, :description "Returns permissions that the caller has on the specified instance resource."}, "bigtableadmin.projects.instances.appProfiles.patch" #:compute.gcp.descriptor{:http-method :patch, :path "v2/{+name}", :request {"$ref" "AppProfile"}, :response {"$ref" "Operation"}, :parameters {"ignoreWarnings" {"type" "boolean", "description" "If true, ignore safety checks when updating the app profile.", "location" "query"}, "name" {"location" "path", "pattern" "^projects/[^/]+/instances/[^/]+/appProfiles/[^/]+$", "type" "string", "description" "The unique name of the app profile. Values are of the form `projects/{project}/instances/{instance}/appProfiles/_a-zA-Z0-9*`.", "required" true}, "updateMask" {"type" "string", "description" "Required. The subset of app profile fields which should be replaced. If unset, all fields will be replaced.", "format" "google-fieldmask", "location" "query"}}, :description "Updates an app profile within an instance."}, "bigtableadmin.projects.instances.tables.generateConsistencyToken" #:compute.gcp.descriptor{:http-method :post, :path "v2/{+name}:generateConsistencyToken", :request {"$ref" "GenerateConsistencyTokenRequest"}, :response {"$ref" "GenerateConsistencyTokenResponse"}, :parameters {"name" {"pattern" "^projects/[^/]+/instances/[^/]+/tables/[^/]+$", "type" "string", "location" "path", "description" "Required. The unique name of the Table for which to create a consistency token. Values are of the form `projects/{project}/instances/{instance}/tables/{table}`.", "required" true}}, :description "Generates a consistency token for a Table, which can be used in CheckConsistency to check whether mutations to the table that finished before this call started have been replicated. The tokens will be available for 90 days."}, "bigtableadmin.projects.instances.clusters.update" #:compute.gcp.descriptor{:http-method :put, :path "v2/{+name}", :request {"$ref" "Cluster"}, :response {"$ref" "Operation"}, :parameters {"name" {"type" "string", "location" "path", "pattern" "^projects/[^/]+/instances/[^/]+/clusters/[^/]+$", "required" true, "description" "The unique name of the cluster. Values are of the form `projects/{project}/instances/{instance}/clusters/a-z*`."}}, :description "Updates a cluster within an instance."}, "bigtableadmin.operations.get" #:compute.gcp.descriptor{:http-method :get, :path "v2/{+name}", :response {"$ref" "Operation"}, :parameters {"name" {"pattern" "^operations/.*$", "location" "path", "description" "The name of the operation resource.", "required" true, "type" "string"}}, :description "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."}, "bigtableadmin.projects.instances.get" #:compute.gcp.descriptor{:http-method :get, :path "v2/{+name}", :response {"$ref" "Instance"}, :parameters {"name" {"location" "path", "required" true, "type" "string", "pattern" "^projects/[^/]+/instances/[^/]+$", "description" "Required. The unique name of the requested instance. Values are of the form `projects/{project}/instances/{instance}`."}}, :description "Gets information about an instance."}, "bigtableadmin.projects.instances.tables.testIamPermissions" #:compute.gcp.descriptor{:http-method :post, :path "v2/{+resource}:testIamPermissions", :request {"$ref" "TestIamPermissionsRequest"}, :response {"$ref" "TestIamPermissionsResponse"}, :parameters {"resource" {"required" true, "pattern" "^projects/[^/]+/instances/[^/]+/tables/[^/]+$", "location" "path", "description" "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.", "type" "string"}}, :description "Returns permissions that the caller has on the specified table resource."}, "bigtableadmin.projects.instances.setIamPolicy" #:compute.gcp.descriptor{:http-method :post, :path "v2/{+resource}:setIamPolicy", :request {"$ref" "SetIamPolicyRequest"}, :response {"$ref" "Policy"}, :parameters {"resource" {"pattern" "^projects/[^/]+/instances/[^/]+$", "location" "path", "description" "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.", "type" "string", "required" true}}, :description "Sets the access control policy on an instance resource. Replaces any existing policy."}, "bigtableadmin.projects.instances.create" #:compute.gcp.descriptor{:http-method :post, :path "v2/{+parent}/instances", :request {"$ref" "CreateInstanceRequest"}, :response {"$ref" "Operation"}, :parameters {"parent" {"required" true, "pattern" "^projects/[^/]+$", "type" "string", "description" "Required. The unique name of the project in which to create the new instance. Values are of the form `projects/{project}`.", "location" "path"}}, :description "Create an instance within a project."}, "bigtableadmin.projects.instances.tables.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v2/{+name}", :response {"$ref" "Empty"}, :parameters {"name" {"location" "path", "type" "string", "required" true, "pattern" "^projects/[^/]+/instances/[^/]+/tables/[^/]+$", "description" "Required. The unique name of the table to be deleted. Values are of the form `projects/{project}/instances/{instance}/tables/{table}`."}}, :description "Permanently deletes a specified table and all of its data."}, "bigtableadmin.projects.instances.appProfiles.create" #:compute.gcp.descriptor{:http-method :post, :path "v2/{+parent}/appProfiles", :request {"$ref" "AppProfile"}, :response {"$ref" "AppProfile"}, :parameters {"parent" {"description" "Required. The unique name of the instance in which to create the new app profile. Values are of the form `projects/{project}/instances/{instance}`.", "required" true, "type" "string", "pattern" "^projects/[^/]+/instances/[^/]+$", "location" "path"}, "ignoreWarnings" {"description" "If true, ignore safety checks when creating the app profile.", "type" "boolean", "location" "query"}, "appProfileId" {"location" "query", "description" "Required. The ID to be used when referring to the new app profile within its instance, e.g., just `myprofile` rather than `projects/myproject/instances/myinstance/appProfiles/myprofile`.", "type" "string"}}, :description "Creates an app profile within an instance."}, "bigtableadmin.projects.instances.clusters.backups.setIamPolicy" #:compute.gcp.descriptor{:http-method :post, :path "v2/{+resource}:setIamPolicy", :request {"$ref" "SetIamPolicyRequest"}, :response {"$ref" "Policy"}, :parameters {"resource" {"type" "string", "required" true, "pattern" "^projects/[^/]+/instances/[^/]+/clusters/[^/]+/backups/[^/]+$", "location" "path", "description" "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field."}}, :description "Sets the access control policy on a Table resource. Replaces any existing policy."}, "bigtableadmin.projects.instances.clusters.backups.list" #:compute.gcp.descriptor{:http-method :get, :path "v2/{+parent}/backups", :response {"$ref" "ListBackupsResponse"}, :parameters {"filter" {"location" "query", "type" "string", "description" "A filter expression that filters backups listed in the response. The expression must specify the field name, a comparison operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The comparison operator must be <, >, <=, >=, !=, =, or :. Colon ':' represents a HAS operator which is roughly synonymous with equality. Filter rules are case insensitive. The fields eligible for filtering are: * `name` * `source_table` * `state` * `start_time` (and values are of the format YYYY-MM-DDTHH:MM:SSZ) * `end_time` (and values are of the format YYYY-MM-DDTHH:MM:SSZ) * `expire_time` (and values are of the format YYYY-MM-DDTHH:MM:SSZ) * `size_bytes` To filter on multiple expressions, provide each separate expression within parentheses. By default, each expression is an AND expression. However, you can include AND, OR, and NOT expressions explicitly. Some examples of using filters are: * `name:\"exact\"` --> The backup's name is the string \"exact\". * `name:howl` --> The backup's name contains the string \"howl\". * `source_table:prod` --> The source_table's name contains the string \"prod\". * `state:CREATING` --> The backup is pending creation. * `state:READY` --> The backup is fully created and ready for use. * `(name:howl) AND (start_time < \\\"2018-03-28T14:50:00Z\\\")` --> The backup name contains the string \"howl\" and start_time of the backup is before 2018-03-28T14:50:00Z. * `size_bytes > 10000000000` --> The backup's size is greater than 10GB"}, "parent" {"required" true, "pattern" "^projects/[^/]+/instances/[^/]+/clusters/[^/]+$", "type" "string", "description" "Required. The cluster to list backups from. Values are of the form `projects/{project}/instances/{instance}/clusters/{cluster}`. Use `{cluster} = '-'` to list backups for all clusters in an instance, e.g., `projects/{project}/instances/{instance}/clusters/-`.", "location" "path"}, "pageSize" {"type" "integer", "description" "Number of backups to be returned in the response. If 0 or less, defaults to the server's maximum allowed page size.", "format" "int32", "location" "query"}, "pageToken" {"location" "query", "type" "string", "description" "If non-empty, `page_token` should contain a next_page_token from a previous ListBackupsResponse to the same `parent` and with the same `filter`."}, "orderBy" {"type" "string", "description" "An expression for specifying the sort order of the results of the request. The string value should specify one or more fields in Backup. The full syntax is described at https://aip.dev/132#ordering. Fields supported are: * name * source_table * expire_time * start_time * end_time * size_bytes * state For example, \"start_time\". The default sorting order is ascending. To specify descending order for the field, a suffix \" desc\" should be appended to the field name. For example, \"start_time desc\". Redundant space characters in the syntax are insigificant. If order_by is empty, results will be sorted by `start_time` in descending order starting from the most recently created backup.", "location" "query"}}, :description "Lists Cloud Bigtable backups. Returns both completed and pending backups."}, "bigtableadmin.projects.instances.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v2/{+name}", :response {"$ref" "Empty"}, :parameters {"name" {"description" "Required. The unique name of the instance to be deleted. Values are of the form `projects/{project}/instances/{instance}`.", "location" "path", "type" "string", "pattern" "^projects/[^/]+/instances/[^/]+$", "required" true}}, :description "Delete an instance from a project."}, "bigtableadmin.projects.instances.clusters.backups.testIamPermissions" #:compute.gcp.descriptor{:http-method :post, :path "v2/{+resource}:testIamPermissions", :request {"$ref" "TestIamPermissionsRequest"}, :response {"$ref" "TestIamPermissionsResponse"}, :parameters {"resource" {"description" "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.", "pattern" "^projects/[^/]+/instances/[^/]+/clusters/[^/]+/backups/[^/]+$", "type" "string", "required" true, "location" "path"}}, :description "Returns permissions that the caller has on the specified table resource."}, "bigtableadmin.projects.locations.get" #:compute.gcp.descriptor{:http-method :get, :path "v2/{+name}", :response {"$ref" "Location"}, :parameters {"name" {"type" "string", "location" "path", "description" "Resource name for the location.", "required" true, "pattern" "^projects/[^/]+/locations/[^/]+$"}}, :description "Gets information about a location."}, "bigtableadmin.projects.locations.list" #:compute.gcp.descriptor{:http-method :get, :path "v2/{+name}/locations", :response {"$ref" "ListLocationsResponse"}, :parameters {"pageToken" {"location" "query", "description" "The standard list page token.", "type" "string"}, "name" {"location" "path", "description" "The resource that owns the locations collection, if applicable.", "type" "string", "required" true, "pattern" "^projects/[^/]+$"}, "pageSize" {"format" "int32", "location" "query", "description" "The standard list page size.", "type" "integer"}, "filter" {"type" "string", "description" "The standard list filter.", "location" "query"}}, :description "Lists information about the supported locations for this service."}, "bigtableadmin.projects.instances.tables.get" #:compute.gcp.descriptor{:http-method :get, :path "v2/{+name}", :response {"$ref" "Table"}, :parameters {"view" {"location" "query", "type" "string", "enum" ["VIEW_UNSPECIFIED" "NAME_ONLY" "SCHEMA_VIEW" "REPLICATION_VIEW" "FULL"], "enumDescriptions" ["Uses the default view for each method as documented in its request." "Only populates `name`." "Only populates `name` and fields related to the table's schema." "Only populates `name` and fields related to the table's replication state." "Populates all fields."], "description" "The view to be applied to the returned table's fields. Defaults to `SCHEMA_VIEW` if unspecified."}, "name" {"required" true, "type" "string", "pattern" "^projects/[^/]+/instances/[^/]+/tables/[^/]+$", "location" "path", "description" "Required. The unique name of the requested table. Values are of the form `projects/{project}/instances/{instance}/tables/{table}`."}}, :description "Gets metadata information about the specified table."}, "bigtableadmin.projects.instances.list" #:compute.gcp.descriptor{:http-method :get, :path "v2/{+parent}/instances", :response {"$ref" "ListInstancesResponse"}, :parameters {"parent" {"required" true, "location" "path", "pattern" "^projects/[^/]+$", "description" "Required. The unique name of the project for which a list of instances is requested. Values are of the form `projects/{project}`.", "type" "string"}, "pageToken" {"type" "string", "location" "query", "description" "DEPRECATED: This field is unused and ignored."}}, :description "Lists information about instances in a project."}, "bigtableadmin.operations.projects.operations.list" #:compute.gcp.descriptor{:http-method :get, :path "v2/{+name}/operations", :response {"$ref" "ListOperationsResponse"}, :parameters {"name" {"description" "The name of the operation's parent resource.", "required" true, "location" "path", "pattern" "^operations/projects/.*$", "type" "string"}, "pageToken" {"type" "string", "description" "The standard list page token.", "location" "query"}, "pageSize" {"type" "integer", "description" "The standard list page size.", "format" "int32", "location" "query"}, "filter" {"location" "query", "description" "The standard list filter.", "type" "string"}}, :description "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."}, "bigtableadmin.projects.instances.clusters.list" #:compute.gcp.descriptor{:http-method :get, :path "v2/{+parent}/clusters", :response {"$ref" "ListClustersResponse"}, :parameters {"pageToken" {"location" "query", "type" "string", "description" "DEPRECATED: This field is unused and ignored."}, "parent" {"pattern" "^projects/[^/]+/instances/[^/]+$", "type" "string", "description" "Required. The unique name of the instance for which a list of clusters is requested. Values are of the form `projects/{project}/instances/{instance}`. Use `{instance} = '-'` to list Clusters for all Instances in a project, e.g., `projects/myproject/instances/-`.", "location" "path", "required" true}}, :description "Lists information about clusters in an instance."}, "bigtableadmin.projects.instances.tables.getIamPolicy" #:compute.gcp.descriptor{:http-method :post, :path "v2/{+resource}:getIamPolicy", :request {"$ref" "GetIamPolicyRequest"}, :response {"$ref" "Policy"}, :parameters {"resource" {"type" "string", "description" "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.", "required" true, "pattern" "^projects/[^/]+/instances/[^/]+/tables/[^/]+$", "location" "path"}}, :description "Gets the access control policy for a Table resource. Returns an empty policy if the resource exists but does not have a policy set."}, "bigtableadmin.projects.instances.partialUpdateInstance" #:compute.gcp.descriptor{:http-method :patch, :path "v2/{+name}", :request {"$ref" "Instance"}, :response {"$ref" "Operation"}, :parameters {"updateMask" {"type" "string", "description" "Required. The subset of Instance fields which should be replaced. Must be explicitly set.", "location" "query", "format" "google-fieldmask"}, "name" {"required" true, "pattern" "^projects/[^/]+/instances/[^/]+$", "type" "string", "description" "The unique name of the instance. Values are of the form `projects/{project}/instances/a-z+[a-z0-9]`.", "location" "path"}}, :description "Partially updates an instance within a project. This method can modify all fields of an Instance and is the preferred way to update an Instance."}, "bigtableadmin.projects.instances.tables.create" #:compute.gcp.descriptor{:http-method :post, :path "v2/{+parent}/tables", :request {"$ref" "CreateTableRequest"}, :response {"$ref" "Table"}, :parameters {"parent" {"required" true, "location" "path", "description" "Required. The unique name of the instance in which to create the table. Values are of the form `projects/{project}/instances/{instance}`.", "type" "string", "pattern" "^projects/[^/]+/instances/[^/]+$"}}, :description "Creates a new table in the specified instance. The table can be created with a full set of initial column families, specified in the request."}, "bigtableadmin.projects.instances.clusters.get" #:compute.gcp.descriptor{:http-method :get, :path "v2/{+name}", :response {"$ref" "Cluster"}, :parameters {"name" {"type" "string", "pattern" "^projects/[^/]+/instances/[^/]+/clusters/[^/]+$", "required" true, "location" "path", "description" "Required. The unique name of the requested cluster. Values are of the form `projects/{project}/instances/{instance}/clusters/{cluster}`."}}, :description "Gets information about a cluster."}, "bigtableadmin.projects.instances.tables.dropRowRange" #:compute.gcp.descriptor{:http-method :post, :path "v2/{+name}:dropRowRange", :request {"$ref" "DropRowRangeRequest"}, :response {"$ref" "Empty"}, :parameters {"name" {"required" true, "pattern" "^projects/[^/]+/instances/[^/]+/tables/[^/]+$", "type" "string", "description" "Required. The unique name of the table on which to drop a range of rows. Values are of the form `projects/{project}/instances/{instance}/tables/{table}`.", "location" "path"}}, :description "Permanently drop/delete a row range from a specified table. The request can specify whether to delete all rows in a table, or only those that match a particular prefix."}, "bigtableadmin.projects.instances.appProfiles.get" #:compute.gcp.descriptor{:http-method :get, :path "v2/{+name}", :response {"$ref" "AppProfile"}, :parameters {"name" {"type" "string", "location" "path", "required" true, "pattern" "^projects/[^/]+/instances/[^/]+/appProfiles/[^/]+$", "description" "Required. The unique name of the requested app profile. Values are of the form `projects/{project}/instances/{instance}/appProfiles/{app_profile}`."}}, :description "Gets information about an app profile."}, "bigtableadmin.projects.instances.update" #:compute.gcp.descriptor{:http-method :put, :path "v2/{+name}", :request {"$ref" "Instance"}, :response {"$ref" "Instance"}, :parameters {"name" {"description" "The unique name of the instance. Values are of the form `projects/{project}/instances/a-z+[a-z0-9]`.", "location" "path", "type" "string", "required" true, "pattern" "^projects/[^/]+/instances/[^/]+$"}}, :description "Updates an instance within a project. This method updates only the display name and type for an Instance. To update other Instance properties, such as labels, use PartialUpdateInstance."}, "bigtableadmin.projects.instances.appProfiles.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v2/{+name}", :response {"$ref" "Empty"}, :parameters {"ignoreWarnings" {"type" "boolean", "description" "Required. If true, ignore safety checks when deleting the app profile.", "location" "query"}, "name" {"description" "Required. The unique name of the app profile to be deleted. Values are of the form `projects/{project}/instances/{instance}/appProfiles/{app_profile}`.", "type" "string", "required" true, "location" "path", "pattern" "^projects/[^/]+/instances/[^/]+/appProfiles/[^/]+$"}}, :description "Deletes an app profile from an instance."}, "bigtableadmin.projects.instances.tables.setIamPolicy" #:compute.gcp.descriptor{:http-method :post, :path "v2/{+resource}:setIamPolicy", :request {"$ref" "SetIamPolicyRequest"}, :response {"$ref" "Policy"}, :parameters {"resource" {"pattern" "^projects/[^/]+/instances/[^/]+/tables/[^/]+$", "location" "path", "description" "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.", "type" "string", "required" true}}, :description "Sets the access control policy on a Table resource. Replaces any existing policy."}, "bigtableadmin.projects.instances.clusters.backups.create" #:compute.gcp.descriptor{:http-method :post, :path "v2/{+parent}/backups", :request {"$ref" "Backup"}, :response {"$ref" "Operation"}, :parameters {"backupId" {"description" "Required. The id of the backup to be created. The `backup_id` along with the parent `parent` are combined as {parent}/backups/{backup_id} to create the full backup name, of the form: `projects/{project}/instances/{instance}/clusters/{cluster}/backups/{backup_id}`. This string must be between 1 and 50 characters in length and match the regex _a-zA-Z0-9*.", "type" "string", "location" "query"}, "parent" {"required" true, "pattern" "^projects/[^/]+/instances/[^/]+/clusters/[^/]+$", "type" "string", "description" "Required. This must be one of the clusters in the instance in which this table is located. The backup will be stored in this cluster. Values are of the form `projects/{project}/instances/{instance}/clusters/{cluster}`.", "location" "path"}}, :description "Starts creating a new Cloud Bigtable Backup. The returned backup long-running operation can be used to track creation of the backup. The metadata field type is CreateBackupMetadata. The response field type is Backup, if successful. Cancelling the returned operation will stop the creation and delete the backup."}, "bigtableadmin.operations.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v2/{+name}", :response {"$ref" "Empty"}, :parameters {"name" {"pattern" "^operations/.*$", "type" "string", "required" true, "location" "path", "description" "The name of the operation resource to be deleted."}}, :description "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."}, "bigtableadmin.projects.instances.clusters.backups.patch" #:compute.gcp.descriptor{:http-method :patch, :path "v2/{+name}", :request {"$ref" "Backup"}, :response {"$ref" "Backup"}, :parameters {"updateMask" {"type" "string", "description" "Required. A mask specifying which fields (e.g. `expire_time`) in the Backup resource should be updated. This mask is relative to the Backup resource, not to the request message. The field mask must always be specified; this prevents any future fields from being erased accidentally by clients that do not know about them.", "format" "google-fieldmask", "location" "query"}, "name" {"description" "A globally unique identifier for the backup which cannot be changed. Values are of the form `projects/{project}/instances/{instance}/clusters/{cluster}/ backups/_a-zA-Z0-9*` The final segment of the name must be between 1 and 50 characters in length. The backup is stored in the cluster identified by the prefix of the backup name of the form `projects/{project}/instances/{instance}/clusters/{cluster}`.", "pattern" "^projects/[^/]+/instances/[^/]+/clusters/[^/]+/backups/[^/]+$", "required" true, "location" "path", "type" "string"}}, :description "Updates a pending or completed Cloud Bigtable Backup."}, "bigtableadmin.projects.instances.appProfiles.list" #:compute.gcp.descriptor{:http-method :get, :path "v2/{+parent}/appProfiles", :response {"$ref" "ListAppProfilesResponse"}, :parameters {"pageToken" {"description" "The value of `next_page_token` returned by a previous call.", "location" "query", "type" "string"}, "parent" {"pattern" "^projects/[^/]+/instances/[^/]+$", "required" true, "description" "Required. The unique name of the instance for which a list of app profiles is requested. Values are of the form `projects/{project}/instances/{instance}`. Use `{instance} = '-'` to list AppProfiles for all Instances in a project, e.g., `projects/myproject/instances/-`.", "type" "string", "location" "path"}, "pageSize" {"description" "Maximum number of results per page. A page_size of zero lets the server choose the number of items to return. A page_size which is strictly positive will return at most that many items. A negative page_size will cause an error. Following the first request, subsequent paginated calls are not required to pass a page_size. If a page_size is set in subsequent calls, it must match the page_size given in the first request.", "location" "query", "format" "int32", "type" "integer"}}, :description "Lists information about app profiles in an instance."}, "bigtableadmin.projects.instances.tables.restore" #:compute.gcp.descriptor{:http-method :post, :path "v2/{+parent}/tables:restore", :request {"$ref" "RestoreTableRequest"}, :response {"$ref" "Operation"}, :parameters {"parent" {"pattern" "^projects/[^/]+/instances/[^/]+$", "description" "Required. The name of the instance in which to create the restored table. This instance must be the parent of the source backup. Values are of the form `projects//instances/`.", "type" "string", "required" true, "location" "path"}}, :description "Create a new table by restoring from a completed backup. The new table must be in the same instance as the instance containing the backup. The returned table long-running operation can be used to track the progress of the operation, and to cancel it. The metadata field type is RestoreTableMetadata. The response type is Table, if successful."}, "bigtableadmin.projects.instances.tables.list" #:compute.gcp.descriptor{:http-method :get, :path "v2/{+parent}/tables", :response {"$ref" "ListTablesResponse"}, :parameters {"parent" {"location" "path", "pattern" "^projects/[^/]+/instances/[^/]+$", "type" "string", "description" "Required. The unique name of the instance for which tables should be listed. Values are of the form `projects/{project}/instances/{instance}`.", "required" true}, "pageSize" {"format" "int32", "type" "integer", "location" "query", "description" "Maximum number of results per page. A page_size of zero lets the server choose the number of items to return. A page_size which is strictly positive will return at most that many items. A negative page_size will cause an error. Following the first request, subsequent paginated calls are not required to pass a page_size. If a page_size is set in subsequent calls, it must match the page_size given in the first request."}, "pageToken" {"description" "The value of `next_page_token` returned by a previous call.", "type" "string", "location" "query"}, "view" {"enumDescriptions" ["Uses the default view for each method as documented in its request." "Only populates `name`." "Only populates `name` and fields related to the table's schema." "Only populates `name` and fields related to the table's replication state." "Populates all fields."], "enum" ["VIEW_UNSPECIFIED" "NAME_ONLY" "SCHEMA_VIEW" "REPLICATION_VIEW" "FULL"], "location" "query", "description" "The view to be applied to the returned tables' fields. Only NAME_ONLY view (default) and REPLICATION_VIEW are supported.", "type" "string"}}, :description "Lists all tables served from a specified instance."}, "bigtableadmin.projects.instances.clusters.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v2/{+name}", :response {"$ref" "Empty"}, :parameters {"name" {"required" true, "pattern" "^projects/[^/]+/instances/[^/]+/clusters/[^/]+$", "type" "string", "location" "path", "description" "Required. The unique name of the cluster to be deleted. Values are of the form `projects/{project}/instances/{instance}/clusters/{cluster}`."}}, :description "Deletes a cluster from an instance."}, "bigtableadmin.projects.instances.clusters.backups.get" #:compute.gcp.descriptor{:http-method :get, :path "v2/{+name}", :response {"$ref" "Backup"}, :parameters {"name" {"type" "string", "location" "path", "description" "Required. Name of the backup. Values are of the form `projects/{project}/instances/{instance}/clusters/{cluster}/backups/{backup}`.", "pattern" "^projects/[^/]+/instances/[^/]+/clusters/[^/]+/backups/[^/]+$", "required" true}}, :description "Gets metadata on a pending or completed Cloud Bigtable Backup."}, "bigtableadmin.projects.instances.tables.checkConsistency" #:compute.gcp.descriptor{:http-method :post, :path "v2/{+name}:checkConsistency", :request {"$ref" "CheckConsistencyRequest"}, :response {"$ref" "CheckConsistencyResponse"}, :parameters {"name" {"location" "path", "required" true, "type" "string", "pattern" "^projects/[^/]+/instances/[^/]+/tables/[^/]+$", "description" "Required. The unique name of the Table for which to check replication consistency. Values are of the form `projects/{project}/instances/{instance}/tables/{table}`."}}, :description "Checks replication consistency based on a consistency token, that is, if replication has caught up based on the conditions specified in the token and the check request."}, "bigtableadmin.projects.instances.clusters.backups.getIamPolicy" #:compute.gcp.descriptor{:http-method :post, :path "v2/{+resource}:getIamPolicy", :request {"$ref" "GetIamPolicyRequest"}, :response {"$ref" "Policy"}, :parameters {"resource" {"required" true, "location" "path", "description" "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.", "type" "string", "pattern" "^projects/[^/]+/instances/[^/]+/clusters/[^/]+/backups/[^/]+$"}}, :description "Gets the access control policy for a Table resource. Returns an empty policy if the resource exists but does not have a policy set."}, "bigtableadmin.projects.instances.tables.modifyColumnFamilies" #:compute.gcp.descriptor{:http-method :post, :path "v2/{+name}:modifyColumnFamilies", :request {"$ref" "ModifyColumnFamiliesRequest"}, :response {"$ref" "Table"}, :parameters {"name" {"type" "string", "required" true, "location" "path", "pattern" "^projects/[^/]+/instances/[^/]+/tables/[^/]+$", "description" "Required. The unique name of the table whose families should be modified. Values are of the form `projects/{project}/instances/{instance}/tables/{table}`."}}, :description "Performs a series of column family modifications on the specified table. Either all or none of the modifications will occur before this method returns, but data requests received prior to that point may see a table where only some modifications have taken effect."}, "bigtableadmin.projects.instances.clusters.backups.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v2/{+name}", :response {"$ref" "Empty"}, :parameters {"name" {"pattern" "^projects/[^/]+/instances/[^/]+/clusters/[^/]+/backups/[^/]+$", "type" "string", "description" "Required. Name of the backup to delete. Values are of the form `projects/{project}/instances/{instance}/clusters/{cluster}/backups/{backup}`.", "required" true, "location" "path"}}, :description "Deletes a pending or completed Cloud Bigtable backup."}}, :schemas {"TestIamPermissionsRequest" {"description" "Request message for `TestIamPermissions` method.", "type" "object", "id" "TestIamPermissionsRequest", "properties" {"permissions" {"description" "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).", "type" "array", "items" {"type" "string"}}}}, "UpdateClusterMetadata" {"id" "UpdateClusterMetadata", "type" "object", "properties" {"requestTime" {"description" "The time at which the original request was received.", "type" "string", "format" "google-datetime"}, "originalRequest" {"description" "The request that prompted the initiation of this UpdateCluster operation.", "$ref" "Cluster"}, "finishTime" {"type" "string", "description" "The time at which the operation failed or was completed successfully.", "format" "google-datetime"}}, "description" "The metadata for the Operation returned by UpdateCluster."}, "TableProgress" {"properties" {"estimatedSizeBytes" {"type" "string", "description" "Estimate of the size of the table to be copied.", "format" "int64"}, "state" {"enumDescriptions" ["" "The table has not yet begun copying to the new cluster." "The table is actively being copied to the new cluster." "The table has been fully copied to the new cluster." "The table was deleted before it finished copying to the new cluster. Note that tables deleted after completion will stay marked as COMPLETED, not CANCELLED."], "enum" ["STATE_UNSPECIFIED" "PENDING" "COPYING" "COMPLETED" "CANCELLED"], "type" "string"}, "estimatedCopiedBytes" {"description" "Estimate of the number of bytes copied so far for this table. This will eventually reach 'estimated_size_bytes' unless the table copy is CANCELLED.", "type" "string", "format" "int64"}}, "description" "Progress info for copying a table's data to the new cluster.", "id" "TableProgress", "type" "object"}, "CheckConsistencyRequest" {"id" "CheckConsistencyRequest", "properties" {"consistencyToken" {"description" "Required. The token created using GenerateConsistencyToken for the Table.", "type" "string"}}, "description" "Request message for google.bigtable.admin.v2.BigtableTableAdmin.CheckConsistency", "type" "object"}, "Empty" {"description" "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.", "properties" {}, "id" "Empty", "type" "object"}, "Expr" {"type" "object", "properties" {"location" {"description" "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.", "type" "string"}, "description" {"description" "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.", "type" "string"}, "title" {"description" "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.", "type" "string"}, "expression" {"description" "Textual representation of an expression in Common Expression Language syntax.", "type" "string"}}, "description" "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.", "id" "Expr"}, "Union" {"properties" {"rules" {"type" "array", "items" {"$ref" "GcRule"}, "description" "Delete cells which would be deleted by any element of `rules`."}}, "type" "object", "description" "A GcRule which deletes cells matching any of the given rules.", "id" "Union"}, "CreateBackupMetadata" {"properties" {"startTime" {"type" "string", "description" "The time at which this operation started.", "format" "google-datetime"}, "sourceTable" {"type" "string", "description" "The name of the table the backup is created from."}, "name" {"description" "The name of the backup being created.", "type" "string"}, "endTime" {"type" "string", "description" "If set, the time at which this operation finished or was cancelled.", "format" "google-datetime"}}, "description" "Metadata type for the operation returned by CreateBackup.", "id" "CreateBackupMetadata", "type" "object"}, "CheckConsistencyResponse" {"description" "Response message for google.bigtable.admin.v2.BigtableTableAdmin.CheckConsistency", "id" "CheckConsistencyResponse", "type" "object", "properties" {"consistent" {"description" "True only if the token is consistent. A token is consistent if replication has caught up with the restrictions specified in the request.", "type" "boolean"}}}, "ListOperationsResponse" {"properties" {"nextPageToken" {"type" "string", "description" "The standard List next-page token."}, "operations" {"description" "A list of operations that matches the specified filter in the request.", "items" {"$ref" "Operation"}, "type" "array"}}, "description" "The response message for Operations.ListOperations.", "id" "ListOperationsResponse", "type" "object"}, "ListTablesResponse" {"id" "ListTablesResponse", "type" "object", "properties" {"nextPageToken" {"description" "Set if not all tables could be returned in a single response. Pass this value to `page_token` in another request to get the next page of results.", "type" "string"}, "tables" {"items" {"$ref" "Table"}, "description" "The tables present in the requested instance.", "type" "array"}}, "description" "Response message for google.bigtable.admin.v2.BigtableTableAdmin.ListTables"}, "ListClustersResponse" {"properties" {"clusters" {"type" "array", "items" {"$ref" "Cluster"}, "description" "The list of requested clusters."}, "failedLocations" {"description" "Locations from which Cluster information could not be retrieved, due to an outage or some other transient condition. Clusters from these locations may be missing from `clusters`, or may only have partial information returned. Values are of the form `projects//locations/`", "type" "array", "items" {"type" "string"}}, "nextPageToken" {"description" "DEPRECATED: This field is unused and ignored.", "type" "string"}}, "description" "Response message for BigtableInstanceAdmin.ListClusters.", "id" "ListClustersResponse", "type" "object"}, "Modification" {"type" "object", "id" "Modification", "properties" {"id" {"type" "string", "description" "The ID of the column family to be modified."}, "update" {"$ref" "ColumnFamily", "description" "Update an existing column family to the specified schema, or fail if no column family exists with the given ID."}, "create" {"$ref" "ColumnFamily", "description" "Create a new column family with the specified schema, or fail if one already exists with the given ID."}, "drop" {"type" "boolean", "description" "Drop (delete) the column family with the given ID, or fail if no such family exists."}}, "description" "A create, update, or delete of a particular column family."}, "UpdateAppProfileMetadata" {"id" "UpdateAppProfileMetadata", "type" "object", "properties" {}, "description" "The metadata for the Operation returned by UpdateAppProfile."}, "Binding" {"id" "Binding", "description" "Associates `members` with a `role`.", "type" "object", "properties" {"role" {"type" "string", "description" "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."}, "condition" {"description" "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).", "$ref" "Expr"}, "members" {"type" "array", "description" "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ", "items" {"type" "string"}}}}, "BackupInfo" {"id" "BackupInfo", "description" "Information about a backup.", "properties" {"startTime" {"type" "string", "description" "Output only. The time that the backup was started. Row data in the backup will be no older than this timestamp.", "readOnly" true, "format" "google-datetime"}, "endTime" {"format" "google-datetime", "readOnly" true, "type" "string", "description" "Output only. This time that the backup was finished. Row data in the backup will be no newer than this timestamp."}, "backup" {"description" "Output only. Name of the backup.", "type" "string", "readOnly" true}, "sourceTable" {"readOnly" true, "description" "Output only. Name of the table the backup was created from.", "type" "string"}}, "type" "object"}, "GenerateConsistencyTokenRequest" {"properties" {}, "id" "GenerateConsistencyTokenRequest", "description" "Request message for google.bigtable.admin.v2.BigtableTableAdmin.GenerateConsistencyToken", "type" "object"}, "OperationProgress" {"id" "OperationProgress", "properties" {"progressPercent" {"description" "Percent completion of the operation. Values are between 0 and 100 inclusive.", "format" "int32", "type" "integer"}, "startTime" {"description" "Time the request was received.", "type" "string", "format" "google-datetime"}, "endTime" {"type" "string", "format" "google-datetime", "description" "If set, the time at which this operation failed or was completed successfully."}}, "type" "object", "description" "Encapsulates progress related information for a Cloud Bigtable long running operation."}, "GcRule" {"type" "object", "id" "GcRule", "properties" {"union" {"$ref" "Union", "description" "Delete cells that would be deleted by any nested rule."}, "maxNumVersions" {"description" "Delete all cells in a column except the most recent N.", "type" "integer", "format" "int32"}, "intersection" {"$ref" "Intersection", "description" "Delete cells that would be deleted by every nested rule."}, "maxAge" {"format" "google-duration", "type" "string", "description" "Delete cells in a column older than the given age. Values must be at least one millisecond, and will be truncated to microsecond granularity."}}, "description" "Rule for determining which cells to delete during garbage collection."}, "Location" {"properties" {"displayName" {"type" "string", "description" "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."}, "labels" {"type" "object", "description" "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}", "additionalProperties" {"type" "string"}}, "metadata" {"description" "Service-specific metadata. For example the available capacity at the given location.", "additionalProperties" {"type" "any", "description" "Properties of the object. Contains field @type with type URL."}, "type" "object"}, "name" {"type" "string", "description" "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"}, "locationId" {"description" "The canonical id for this location. For example: `\"us-east1\"`.", "type" "string"}}, "description" "A resource that represents Google Cloud Platform location.", "id" "Location", "type" "object"}, "RestoreTableMetadata" {"properties" {"optimizeTableOperationName" {"description" "If exists, the name of the long-running operation that will be used to track the post-restore optimization process to optimize the performance of the restored table. The metadata type of the long-running operation is OptimizeRestoreTableMetadata. The response type is Empty. This long-running operation may be automatically created by the system if applicable after the RestoreTable long-running operation completes successfully. This operation may not be created if the table is already optimized or the restore was not successful.", "type" "string"}, "progress" {"$ref" "OperationProgress", "description" "The progress of the RestoreTable operation."}, "name" {"type" "string", "description" "Name of the table being created and restored to."}, "backupInfo" {"$ref" "BackupInfo"}, "sourceType" {"enum" ["RESTORE_SOURCE_TYPE_UNSPECIFIED" "BACKUP"], "enumDescriptions" ["No restore associated." "A backup was used as the source of the restore."], "description" "The type of the restore source.", "type" "string"}}, "type" "object", "id" "RestoreTableMetadata", "description" "Metadata type for the long-running operation returned by RestoreTable."}, "Operation" {"type" "object", "properties" {"error" {"$ref" "Status", "description" "The error result of the operation in case of failure or cancellation."}, "done" {"description" "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.", "type" "boolean"}, "response" {"type" "object", "additionalProperties" {"description" "Properties of the object. Contains field @type with type URL.", "type" "any"}, "description" "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."}, "name" {"type" "string", "description" "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."}, "metadata" {"description" "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.", "additionalProperties" {"type" "any", "description" "Properties of the object. Contains field @type with type URL."}, "type" "object"}}, "description" "This resource represents a long-running operation that is the result of a network API call.", "id" "Operation"}, "DropRowRangeRequest" {"properties" {"deleteAllDataFromTable" {"description" "Delete all rows in the table. Setting this to false is a no-op.", "type" "boolean"}, "rowKeyPrefix" {"description" "Delete all rows that start with this row key prefix. Prefix cannot be zero length.", "type" "string", "format" "byte"}}, "type" "object", "id" "DropRowRangeRequest", "description" "Request message for google.bigtable.admin.v2.BigtableTableAdmin.DropRowRange"}, "RestoreInfo" {"description" "Information about a table restore.", "id" "RestoreInfo", "type" "object", "properties" {"backupInfo" {"$ref" "BackupInfo", "description" "Information about the backup used to restore the table. The backup may no longer exist."}, "sourceType" {"description" "The type of the restore source.", "type" "string", "enumDescriptions" ["No restore associated." "A backup was used as the source of the restore."], "enum" ["RESTORE_SOURCE_TYPE_UNSPECIFIED" "BACKUP"]}}}, "Status" {"properties" {"code" {"format" "int32", "type" "integer", "description" "The status code, which should be an enum value of google.rpc.Code."}, "message" {"type" "string", "description" "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."}, "details" {"items" {"additionalProperties" {"type" "any", "description" "Properties of the object. Contains field @type with type URL."}, "type" "object"}, "type" "array", "description" "A list of messages that carry the error details. There is a common set of message types for APIs to use."}}, "id" "Status", "description" "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).", "type" "object"}, "ListLocationsResponse" {"type" "object", "properties" {"locations" {"items" {"$ref" "Location"}, "description" "A list of locations that matches the specified filter in the request.", "type" "array"}, "nextPageToken" {"type" "string", "description" "The standard List next-page token."}}, "description" "The response message for Locations.ListLocations.", "id" "ListLocationsResponse"}, "ListAppProfilesResponse" {"id" "ListAppProfilesResponse", "description" "Response message for BigtableInstanceAdmin.ListAppProfiles.", "type" "object", "properties" {"failedLocations" {"items" {"type" "string"}, "type" "array", "description" "Locations from which AppProfile information could not be retrieved, due to an outage or some other transient condition. AppProfiles from these locations may be missing from `app_profiles`. Values are of the form `projects//locations/`"}, "nextPageToken" {"type" "string", "description" "Set if not all app profiles could be returned in a single response. Pass this value to `page_token` in another request to get the next page of results."}, "appProfiles" {"items" {"$ref" "AppProfile"}, "type" "array", "description" "The list of requested app profiles."}}}, "RestoreTableRequest" {"properties" {"backup" {"description" "Name of the backup from which to restore. Values are of the form `projects//instances//clusters//backups/`.", "type" "string"}, "tableId" {"description" "Required. The id of the table to create and restore to. This table must not already exist. The `table_id` appended to `parent` forms the full table name of the form `projects//instances//tables/`.", "type" "string"}}, "id" "RestoreTableRequest", "type" "object", "description" "The request for RestoreTable."}, "GetPolicyOptions" {"description" "Encapsulates settings provided to GetIamPolicy.", "id" "GetPolicyOptions", "type" "object", "properties" {"requestedPolicyVersion" {"format" "int32", "description" "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).", "type" "integer"}}}, "OptimizeRestoredTableMetadata" {"description" "Metadata type for the long-running operation used to track the progress of optimizations performed on a newly restored table. This long-running operation is automatically created by the system after the successful completion of a table restore, and cannot be cancelled.", "id" "OptimizeRestoredTableMetadata", "type" "object", "properties" {"progress" {"$ref" "OperationProgress", "description" "The progress of the post-restore optimizations."}, "name" {"type" "string", "description" "Name of the restored table being optimized."}}}, "ClusterState" {"description" "The state of a table's data in a particular cluster.", "properties" {"replicationState" {"type" "string", "enumDescriptions" ["The replication state of the table is unknown in this cluster." "The cluster was recently created, and the table must finish copying over pre-existing data from other clusters before it can begin receiving live replication updates and serving Data API requests." "The table is temporarily unable to serve Data API requests from this cluster due to planned internal maintenance." "The table is temporarily unable to serve Data API requests from this cluster due to unplanned or emergency maintenance." "The table can serve Data API requests from this cluster. Depending on replication delay, reads may not immediately reflect the state of the table in other clusters." "The table is fully created and ready for use after a restore, and is being optimized for performance. When optimizations are complete, the table will transition to `READY` state."], "enum" ["STATE_NOT_KNOWN" "INITIALIZING" "PLANNED_MAINTENANCE" "UNPLANNED_MAINTENANCE" "READY" "READY_OPTIMIZING"], "readOnly" true, "description" "Output only. The state of replication for the table in this cluster."}}, "type" "object", "id" "ClusterState"}, "Cluster" {"properties" {"defaultStorageType" {"type" "string", "description" "Immutable. The type of storage used by this cluster to serve its parent instance's tables, unless explicitly overridden.", "enum" ["STORAGE_TYPE_UNSPECIFIED" "SSD" "HDD"], "enumDescriptions" ["The user did not specify a storage type." "Flash (SSD) storage should be used." "Magnetic drive (HDD) storage should be used."]}, "name" {"description" "The unique name of the cluster. Values are of the form `projects/{project}/instances/{instance}/clusters/a-z*`.", "type" "string"}, "state" {"type" "string", "readOnly" true, "description" "Output only. The current state of the cluster.", "enum" ["STATE_NOT_KNOWN" "READY" "CREATING" "RESIZING" "DISABLED"], "enumDescriptions" ["The state of the cluster could not be determined." "The cluster has been successfully created and is ready to serve requests." "The cluster is currently being created, and may be destroyed if the creation process encounters an error. A cluster may not be able to serve requests while being created." "The cluster is currently being resized, and may revert to its previous node count if the process encounters an error. A cluster is still capable of serving requests while being resized, but may exhibit performance as if its number of allocated nodes is between the starting and requested states." "The cluster has no backing nodes. The data (tables) still exist, but no operations can be performed on the cluster."]}, "serveNodes" {"type" "integer", "format" "int32", "description" "Required. The number of nodes allocated to this cluster. More nodes enable higher throughput and more consistent performance."}, "location" {"type" "string", "description" "Immutable. The location where this cluster's nodes and storage reside. For best performance, clients should be located as close as possible to this cluster. Currently only zones are supported, so values should be of the form `projects/{project}/locations/{zone}`."}}, "type" "object", "description" "A resizable group of nodes in a particular cloud location, capable of serving all Tables in the parent Instance.", "id" "Cluster"}, "TestIamPermissionsResponse" {"type" "object", "id" "TestIamPermissionsResponse", "description" "Response message for `TestIamPermissions` method.", "properties" {"permissions" {"type" "array", "items" {"type" "string"}, "description" "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."}}}, "MultiClusterRoutingUseAny" {"type" "object", "id" "MultiClusterRoutingUseAny", "properties" {}, "description" "Read/write requests are routed to the nearest cluster in the instance, and will fail over to the nearest cluster that is available in the event of transient errors or delays. Clusters in a region are considered equidistant. Choosing this option sacrifices read-your-writes consistency to improve availability."}, "ListBackupsResponse" {"type" "object", "id" "ListBackupsResponse", "properties" {"nextPageToken" {"type" "string", "description" "`next_page_token` can be sent in a subsequent ListBackups call to fetch more of the matching backups."}, "backups" {"description" "The list of matching backups.", "type" "array", "items" {"$ref" "Backup"}}}, "description" "The response for ListBackups."}, "ListInstancesResponse" {"type" "object", "id" "ListInstancesResponse", "description" "Response message for BigtableInstanceAdmin.ListInstances.", "properties" {"nextPageToken" {"description" "DEPRECATED: This field is unused and ignored.", "type" "string"}, "failedLocations" {"items" {"type" "string"}, "type" "array", "description" "Locations from which Instance information could not be retrieved, due to an outage or some other transient condition. Instances whose Clusters are all in one of the failed locations may be missing from `instances`, and Instances with at least one Cluster in a failed location may only have partial information returned. Values are of the form `projects//locations/`"}, "instances" {"items" {"$ref" "Instance"}, "description" "The list of requested instances.", "type" "array"}}}, "Backup" {"properties" {"endTime" {"readOnly" true, "format" "google-datetime", "type" "string", "description" "Output only. `end_time` is the time that the backup was finished. The row data in the backup will be no newer than this timestamp."}, "state" {"readOnly" true, "enumDescriptions" ["Not specified." "The pending backup is still being created. Operations on the backup may fail with `FAILED_PRECONDITION` in this state." "The backup is complete and ready for use."], "type" "string", "enum" ["STATE_UNSPECIFIED" "CREATING" "READY"], "description" "Output only. The current state of the backup."}, "name" {"type" "string", "description" "A globally unique identifier for the backup which cannot be changed. Values are of the form `projects/{project}/instances/{instance}/clusters/{cluster}/ backups/_a-zA-Z0-9*` The final segment of the name must be between 1 and 50 characters in length. The backup is stored in the cluster identified by the prefix of the backup name of the form `projects/{project}/instances/{instance}/clusters/{cluster}`."}, "expireTime" {"type" "string", "description" "Required. The expiration time of the backup, with microseconds granularity that must be at least 6 hours and at most 30 days from the time the request is received. Once the `expire_time` has passed, Cloud Bigtable will delete the backup and free the resources used by the backup.", "format" "google-datetime"}, "startTime" {"type" "string", "format" "google-datetime", "readOnly" true, "description" "Output only. `start_time` is the time that the backup was started (i.e. approximately the time the CreateBackup request is received). The row data in this backup will be no older than this timestamp."}, "sourceTable" {"description" "Required. Immutable. Name of the table from which this backup was created. This needs to be in the same instance as the backup. Values are of the form `projects/{project}/instances/{instance}/tables/{source_table}`.", "type" "string"}, "sizeBytes" {"description" "Output only. Size of the backup in bytes.", "format" "int64", "type" "string", "readOnly" true}}, "type" "object", "id" "Backup", "description" "A backup of a Cloud Bigtable table."}, "ModifyColumnFamiliesRequest" {"description" "Request message for google.bigtable.admin.v2.BigtableTableAdmin.ModifyColumnFamilies", "id" "ModifyColumnFamiliesRequest", "properties" {"modifications" {"items" {"$ref" "Modification"}, "type" "array", "description" "Required. Modifications to be atomically applied to the specified table's families. Entries are applied in order, meaning that earlier modifications can be masked by later ones (in the case of repeated updates to the same family, for example)."}}, "type" "object"}, "Intersection" {"id" "Intersection", "description" "A GcRule which deletes cells matching all of the given rules.", "properties" {"rules" {"type" "array", "description" "Only delete cells which would be deleted by every element of `rules`.", "items" {"$ref" "GcRule"}}}, "type" "object"}, "UpdateInstanceMetadata" {"properties" {"requestTime" {"description" "The time at which the original request was received.", "type" "string", "format" "google-datetime"}, "finishTime" {"type" "string", "format" "google-datetime", "description" "The time at which the operation failed or was completed successfully."}, "originalRequest" {"$ref" "PartialUpdateInstanceRequest", "description" "The request that prompted the initiation of this UpdateInstance operation."}}, "description" "The metadata for the Operation returned by UpdateInstance.", "type" "object", "id" "UpdateInstanceMetadata"}, "SetIamPolicyRequest" {"id" "SetIamPolicyRequest", "properties" {"updateMask" {"format" "google-fieldmask", "type" "string", "description" "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"}, "policy" {"$ref" "Policy", "description" "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them."}}, "description" "Request message for `SetIamPolicy` method.", "type" "object"}, "CreateClusterRequest" {"description" "Request message for BigtableInstanceAdmin.CreateCluster.", "properties" {"cluster" {"$ref" "Cluster", "description" "Required. The cluster to be created. Fields marked `OutputOnly` must be left blank."}, "clusterId" {"type" "string", "description" "Required. The ID to be used when referring to the new cluster within its instance, e.g., just `mycluster` rather than `projects/myproject/instances/myinstance/clusters/mycluster`."}, "parent" {"description" "Required. The unique name of the instance in which to create the new cluster. Values are of the form `projects/{project}/instances/{instance}`.", "type" "string"}}, "id" "CreateClusterRequest", "type" "object"}, "CreateClusterMetadata" {"description" "The metadata for the Operation returned by CreateCluster.", "type" "object", "properties" {"tables" {"type" "object", "description" "Keys: the full `name` of each table that existed in the instance when CreateCluster was first called, i.e. `projects//instances//tables/`. Any table added to the instance by a later API call will be created in the new cluster by that API call, not this one. Values: information on how much of a table's data has been copied to the newly-created cluster so far.", "additionalProperties" {"$ref" "TableProgress"}}, "requestTime" {"type" "string", "description" "The time at which the original request was received.", "format" "google-datetime"}, "originalRequest" {"description" "The request that prompted the initiation of this CreateCluster operation.", "$ref" "CreateClusterRequest"}, "finishTime" {"format" "google-datetime", "type" "string", "description" "The time at which the operation failed or was completed successfully."}}, "id" "CreateClusterMetadata"}, "GetIamPolicyRequest" {"type" "object", "description" "Request message for `GetIamPolicy` method.", "id" "GetIamPolicyRequest", "properties" {"options" {"description" "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`.", "$ref" "GetPolicyOptions"}}}, "AuditLogConfig" {"type" "object", "properties" {"logType" {"enum" ["LOG_TYPE_UNSPECIFIED" "ADMIN_READ" "DATA_WRITE" "DATA_READ"], "description" "The log type that this config enables.", "enumDescriptions" ["Default case. Should never be this." "Admin reads. Example: CloudIAM getIamPolicy" "Data writes. Example: CloudSQL Users create" "Data reads. Example: CloudSQL Users list"], "type" "string"}, "exemptedMembers" {"description" "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.", "type" "array", "items" {"type" "string"}}}, "id" "AuditLogConfig", "description" "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."}, "Frame" {"properties" {"targetName" {"type" "string"}, "workflowGuid" {"type" "string"}, "zoneId" {"type" "string"}}, "type" "object", "id" "Frame"}, "CreateInstanceRequest" {"id" "CreateInstanceRequest", "properties" {"instance" {"description" "Required. The instance to create. Fields marked `OutputOnly` must be left blank.", "$ref" "Instance"}, "clusters" {"description" "Required. The clusters to be created within the instance, mapped by desired cluster ID, e.g., just `mycluster` rather than `projects/myproject/instances/myinstance/clusters/mycluster`. Fields marked `OutputOnly` must be left blank. Currently, at most four clusters can be specified.", "additionalProperties" {"$ref" "Cluster"}, "type" "object"}, "parent" {"type" "string", "description" "Required. The unique name of the project in which to create the new instance. Values are of the form `projects/{project}`."}, "instanceId" {"description" "Required. The ID to be used when referring to the new instance within its project, e.g., just `myinstance` rather than `projects/myproject/instances/myinstance`.", "type" "string"}}, "description" "Request message for BigtableInstanceAdmin.CreateInstance.", "type" "object"}, "Policy" {"properties" {"auditConfigs" {"type" "array", "items" {"$ref" "AuditConfig"}, "description" "Specifies cloud audit logging configuration for this policy."}, "etag" {"type" "string", "description" "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.", "format" "byte"}, "bindings" {"type" "array", "description" "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member.", "items" {"$ref" "Binding"}}, "version" {"format" "int32", "type" "integer", "description" "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."}}, "description" "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).", "type" "object", "id" "Policy"}, "AppProfile" {"type" "object", "description" "A configuration object describing how Cloud Bigtable should treat traffic from a particular end user application.", "id" "AppProfile", "properties" {"multiClusterRoutingUseAny" {"$ref" "MultiClusterRoutingUseAny", "description" "Use a multi-cluster routing policy."}, "name" {"type" "string", "description" "The unique name of the app profile. Values are of the form `projects/{project}/instances/{instance}/appProfiles/_a-zA-Z0-9*`."}, "etag" {"description" "Strongly validated etag for optimistic concurrency control. Preserve the value returned from `GetAppProfile` when calling `UpdateAppProfile` to fail the request if there has been a modification in the mean time. The `update_mask` of the request need not include `etag` for this protection to apply. See [Wikipedia](https://en.wikipedia.org/wiki/HTTP_ETag) and [RFC 7232](https://tools.ietf.org/html/rfc7232#section-2.3) for more details.", "type" "string"}, "singleClusterRouting" {"$ref" "SingleClusterRouting", "description" "Use a single-cluster routing policy."}, "description" {"type" "string", "description" "Long form description of the use case for this AppProfile."}}}, "CreateInstanceMetadata" {"id" "CreateInstanceMetadata", "description" "The metadata for the Operation returned by CreateInstance.", "properties" {"originalRequest" {"description" "The request that prompted the initiation of this CreateInstance operation.", "$ref" "CreateInstanceRequest"}, "requestTime" {"type" "string", "format" "google-datetime", "description" "The time at which the original request was received."}, "finishTime" {"description" "The time at which the operation failed or was completed successfully.", "format" "google-datetime", "type" "string"}}, "type" "object"}, "Instance" {"description" "A collection of Bigtable Tables and the resources that serve them. All tables in an instance are served from all Clusters in the instance.", "properties" {"name" {"description" "The unique name of the instance. Values are of the form `projects/{project}/instances/a-z+[a-z0-9]`.", "type" "string"}, "state" {"enumDescriptions" ["The state of the instance could not be determined." "The instance has been successfully created and can serve requests to its tables." "The instance is currently being created, and may be destroyed if the creation process encounters an error."], "readOnly" true, "type" "string", "enum" ["STATE_NOT_KNOWN" "READY" "CREATING"], "description" "Output only. The current state of the instance."}, "displayName" {"type" "string", "description" "Required. The descriptive name for this instance as it appears in UIs. Can be changed at any time, but should be kept globally unique to avoid confusion."}, "labels" {"additionalProperties" {"type" "string"}, "type" "object", "description" "Required. Labels are a flexible and lightweight mechanism for organizing cloud resources into groups that reflect a customer's organizational needs and deployment strategies. They can be used to filter resources and aggregate metrics. * Label keys must be between 1 and 63 characters long and must conform to the regular expression: `\\p{Ll}\\p{Lo}{0,62}`. * Label values must be between 0 and 63 characters long and must conform to the regular expression: `[\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}`. * No more than 64 labels can be associated with a given resource. * Keys and values must both be under 128 bytes."}, "type" {"enum" ["TYPE_UNSPECIFIED" "PRODUCTION" "DEVELOPMENT"], "type" "string", "enumDescriptions" ["The type of the instance is unspecified. If set when creating an instance, a `PRODUCTION` instance will be created. If set when updating an instance, the type will be left unchanged." "An instance meant for production use. `serve_nodes` must be set on the cluster." "DEPRECATED: Prefer PRODUCTION for all use cases, as it no longer enforces a higher minimum node count than DEVELOPMENT."], "description" "Required. The type of the instance. Defaults to `PRODUCTION`."}}, "type" "object", "id" "Instance"}, "AuditConfig" {"id" "AuditConfig", "description" "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.", "type" "object", "properties" {"auditLogConfigs" {"type" "array", "items" {"$ref" "AuditLogConfig"}, "description" "The configuration for logging of each type of permission."}, "service" {"type" "string", "description" "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."}}}, "Split" {"properties" {"key" {"format" "byte", "type" "string", "description" "Row key to use as an initial tablet boundary."}}, "type" "object", "description" "An initial split point for a newly created table.", "id" "Split"}, "Table" {"type" "object", "id" "Table", "properties" {"name" {"description" "The unique name of the table. Values are of the form `projects/{project}/instances/{instance}/tables/_a-zA-Z0-9*`. Views: `NAME_ONLY`, `SCHEMA_VIEW`, `REPLICATION_VIEW`, `FULL`", "type" "string"}, "columnFamilies" {"additionalProperties" {"$ref" "ColumnFamily"}, "description" "The column families configured for this table, mapped by column family ID. Views: `SCHEMA_VIEW`, `FULL`", "type" "object"}, "clusterStates" {"description" "Output only. Map from cluster ID to per-cluster table state. If it could not be determined whether or not the table has data in a particular cluster (for example, if its zone is unavailable), then there will be an entry for the cluster with UNKNOWN `replication_status`. Views: `REPLICATION_VIEW`, `FULL`", "additionalProperties" {"$ref" "ClusterState"}, "readOnly" true, "type" "object"}, "restoreInfo" {"readOnly" true, "description" "Output only. If this table was restored from another data source (e.g. a backup), this field will be populated with information about the restore.", "$ref" "RestoreInfo"}, "granularity" {"enumDescriptions" ["The user did not specify a granularity. Should not be returned. When specified during table creation, MILLIS will be used." "The table keeps data versioned at a granularity of 1ms."], "enum" ["TIMESTAMP_GRANULARITY_UNSPECIFIED" "MILLIS"], "description" "Immutable. The granularity (i.e. `MILLIS`) at which timestamps are stored in this table. Timestamps not matching the granularity will be rejected. If unspecified at creation time, the value will be set to `MILLIS`. Views: `SCHEMA_VIEW`, `FULL`.", "type" "string"}}, "description" "A collection of user data indexed by row, column, and timestamp. Each table is served using the resources of its parent cluster."}, "PartialUpdateInstanceRequest" {"description" "Request message for BigtableInstanceAdmin.PartialUpdateInstance.", "id" "PartialUpdateInstanceRequest", "properties" {"updateMask" {"format" "google-fieldmask", "description" "Required. The subset of Instance fields which should be replaced. Must be explicitly set.", "type" "string"}, "instance" {"description" "Required. The Instance which will (partially) replace the current value.", "$ref" "Instance"}}, "type" "object"}, "ColumnFamily" {"description" "A set of columns within a table which share a common configuration.", "type" "object", "properties" {"gcRule" {"description" "Garbage collection rule specified as a protobuf. Must serialize to at most 500 bytes. NOTE: Garbage collection executes opportunistically in the background, and so it's possible for reads to return a cell even if it matches the active GC expression for its family.", "$ref" "GcRule"}}, "id" "ColumnFamily"}, "CreateTableRequest" {"id" "CreateTableRequest", "properties" {"initialSplits" {"type" "array", "items" {"$ref" "Split"}, "description" "The optional list of row keys that will be used to initially split the table into several tablets (tablets are similar to HBase regions). Given two split keys, `s1` and `s2`, three tablets will be created, spanning the key ranges: `[, s1), [s1, s2), [s2, )`. Example: * Row keys := `[\"a\", \"apple\", \"custom\", \"customer_1\", \"customer_2\",` `\"other\", \"zz\"]` * initial_split_keys := `[\"apple\", \"customer_1\", \"customer_2\", \"other\"]` * Key assignment: - Tablet 1 `[, apple) => {\"a\"}.` - Tablet 2 `[apple, customer_1) => {\"apple\", \"custom\"}.` - Tablet 3 `[customer_1, customer_2) => {\"customer_1\"}.` - Tablet 4 `[customer_2, other) => {\"customer_2\"}.` - Tablet 5 `[other, ) => {\"other\", \"zz\"}.`"}, "table" {"description" "Required. The Table to create.", "$ref" "Table"}, "tableId" {"description" "Required. The name by which the new table should be referred to within the parent instance, e.g., `foobar` rather than `{parent}/tables/foobar`. Maximum 50 characters.", "type" "string"}}, "description" "Request message for google.bigtable.admin.v2.BigtableTableAdmin.CreateTable", "type" "object"}, "FailureTrace" {"type" "object", "id" "FailureTrace", "properties" {"frames" {"type" "array", "items" {"$ref" "Frame"}}}, "description" "Added to the error payload."}, "GenerateConsistencyTokenResponse" {"id" "GenerateConsistencyTokenResponse", "properties" {"consistencyToken" {"type" "string", "description" "The generated consistency token."}}, "type" "object", "description" "Response message for google.bigtable.admin.v2.BigtableTableAdmin.GenerateConsistencyToken"}, "SingleClusterRouting" {"description" "Unconditionally routes all read/write requests to a specific cluster. This option preserves read-your-writes consistency but does not improve availability.", "properties" {"clusterId" {"description" "The cluster to which read/write requests should be routed.", "type" "string"}, "allowTransactionalWrites" {"type" "boolean", "description" "Whether or not `CheckAndMutateRow` and `ReadModifyWriteRow` requests are allowed by this app profile. It is unsafe to send these requests to the same table/row/column in multiple clusters."}}, "type" "object", "id" "SingleClusterRouting"}}}