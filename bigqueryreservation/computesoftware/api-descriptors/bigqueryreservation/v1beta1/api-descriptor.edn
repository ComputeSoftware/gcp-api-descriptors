#:compute.api-descriptor{:endpoint {:schemes ["https"], :host "bigqueryreservation.googleapis.com", :base-path "/"}, :op->spec {"bigqueryreservation.projects.locations.reservations.create" {:description "Creates a new reservation resource.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Reservation"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Reservation"}} {:description "Project, location. E.g.,\n   projects/myproject/locations/US", :in "path", :name "parent", :required true, :type "string", :x-reservedExpansion true} {:description "The reservation ID. This field must only contain lower case alphanumeric\ncharacters or dash.", :in "query", :name "reservationId", :type "string"}], :operationId "bigqueryreservation.projects.locations.reservations.create", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1beta1/{parent}/reservations", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "bigqueryreservation.projects.locations.searchAssignments" {:description "Looks up assignments for a specified resource for a particular region.\nIf the request is about a project:\n  1) Assignments created on the project will be returned if they exist.\n  2) Otherwise assignments created on the closest ancestor will be\n  returned. 3) Assignments for different JobTypes will all be returned.\nSame logic applies if the request is about a folder.\nIf the request is about an organization, then assignments created on the\norganization will be returned (organization doesn't have ancestors).\nComparing to ListAssignments, there are some behavior\ndifferences:\n  1) permission on the assignee will be verified in this API.\n  2) Hierarchy lookup (project->folder->organization) happens in this API.\n  3) Parent here is projects/*/locations/*, instead of\n  projects/*/locations/*reservations/*.\nNote \"-\" cannot be used for projects\nnor locations.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/SearchAssignmentsResponse"}}}, :parameters [{:description "The maximum number of items to return.", :in "query", :name "pageSize", :type "integer"} {:description "The next_page_token value returned from a previous List request, if any.", :in "query", :name "pageToken", :type "string"} {:description "The resource name of the admin project(containing project and location),\ne.g.:\n  \"projects/myproject/locations/US\".", :in "path", :name "parent", :required true, :type "string", :x-reservedExpansion true} {:description "Please specify resource name as assignee in the query.\ne.g., \"assignee=projects/myproject\"\n      \"assignee=folders/123\"\n      \"assignee=organizations/456\"", :in "query", :name "query", :type "string"}], :operationId "bigqueryreservation.projects.locations.searchAssignments", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v1beta1/{parent}:searchAssignments", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "bigqueryreservation.projects.locations.reservations.assignments.move" {:description "Moves a assignment under a new reservation. Customers can do this by\ndeleting the existing assignment followed by creating another assignment\nunder the new reservation, but this method provides a transactional way to\ndo so, to make sure the assignee always has an associated reservation.\nWithout the method customers might see some queries run on-demand which\nmight be unexpected.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Assignment"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/MoveAssignmentRequest"}} {:description "The resource name of the assignment,\ne.g.:\n  projects/myproject/locations/US/reservations/team1-prod/assignments/123", :in "path", :name "name", :required true, :type "string", :x-reservedExpansion true}], :operationId "bigqueryreservation.projects.locations.reservations.assignments.move", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1beta1/{name}:move", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "bigqueryreservation.projects.locations.reservations.assignments.create" {:description "Returns `google.rpc.Code.PERMISSION_DENIED` if user does not have\n'bigquery.admin' permissions on the project using the reservation\nand the project that owns this reservation.\nReturns `google.rpc.Code.INVALID_ARGUMENT` when location of the assignment\ndoes not match location of the reservation.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Assignment"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Assignment"}} {:description "The parent resource name of the assignment\nE.g.: projects/myproject/locations/US/reservations/team1-prod", :in "path", :name "parent", :required true, :type "string", :x-reservedExpansion true}], :operationId "bigqueryreservation.projects.locations.reservations.assignments.create", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1beta1/{parent}/assignments", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "bigqueryreservation.projects.locations.capacityCommitments.list" {:description "Lists all the capacity commitments for the admin project.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ListCapacityCommitmentsResponse"}}}, :parameters [{:description "The maximum number of items to return.", :in "query", :name "pageSize", :type "integer"} {:description "The next_page_token value returned from a previous List request, if any.", :in "query", :name "pageToken", :type "string"} {:description "Resource name of the parent reservation. E.g.,\n   projects/myproject/locations/US", :in "path", :name "parent", :required true, :type "string", :x-reservedExpansion true}], :operationId "bigqueryreservation.projects.locations.capacityCommitments.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v1beta1/{parent}/capacityCommitments", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "bigqueryreservation.projects.locations.reservations.get" {:description "Returns information about the reservation.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Reservation"}}}, :parameters [{:description "Resource name of the reservation to retrieve. E.g.,\n   projects/myproject/locations/US/reservations/team1-prod", :in "path", :name "name", :required true, :type "string", :x-reservedExpansion true}], :operationId "bigqueryreservation.projects.locations.reservations.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v1beta1/{name}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "bigqueryreservation.projects.locations.capacityCommitments.create" {:description "Creates a new capacity commitment resource.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/CapacityCommitment"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/CapacityCommitment"}} {:description "Resource name of the parent reservation. E.g.,\n   projects/myproject/locations/US", :in "path", :name "parent", :required true, :type "string", :x-reservedExpansion true}], :operationId "bigqueryreservation.projects.locations.capacityCommitments.create", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1beta1/{parent}/capacityCommitments", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "bigqueryreservation.projects.locations.list" {:description "Lists information about the supported locations for this service.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ListLocationsResponse"}}}, :parameters [{:description "The standard list filter.", :in "query", :name "filter", :type "string"} {:description "The resource that owns the locations collection, if applicable.", :in "path", :name "name", :required true, :type "string", :x-reservedExpansion true} {:description "The standard list page size.", :in "query", :name "pageSize", :type "integer"} {:description "The standard list page token.", :in "query", :name "pageToken", :type "string"}], :operationId "bigqueryreservation.projects.locations.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v1beta1/{name}/locations", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "bigqueryreservation.projects.locations.reservations.assignments.list" {:description "Lists assignments.\nOnly explicitly created assignments will be returned. E.g:\norganizationA contains project1 and project2. Reservation res1 exists.\nCreateAssignment was invoked previously and following assignments were\ncreated explicitly:\n  <organizationA, res1>\n  <project1, res1>\nThen this API will just return the above two assignments for reservation\nres1, and no expansion/merge will happen. Wildcard \"-\" can be used for\nreservations in the request. In that case all assignments belongs to the\nspecified project and location will be listed. Note\n\"-\" cannot be used for projects nor locations.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ListAssignmentsResponse"}}}, :parameters [{:description "The maximum number of items to return.", :in "query", :name "pageSize", :type "integer"} {:description "The next_page_token value returned from a previous List request, if any.", :in "query", :name "pageToken", :type "string"} {:description "The parent resource name e.g.:\nprojects/myproject/locations/US/reservations/team1-prod\nOr:\nprojects/myproject/locations/US/reservations/-", :in "path", :name "parent", :required true, :type "string", :x-reservedExpansion true}], :operationId "bigqueryreservation.projects.locations.reservations.assignments.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v1beta1/{parent}/assignments", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "bigqueryreservation.projects.locations.reservations.patch" {:description "Updates an existing reservation resource.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Reservation"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Reservation"}} {:description "The resource name of the reservation, e.g.,\n\"projects/*/locations/*/reservations/team1-prod\".", :in "path", :name "name", :required true, :type "string", :x-reservedExpansion true} {:description "Standard field mask for the set of fields to be updated.", :in "query", :name "updateMask", :type "string"}], :operationId "bigqueryreservation.projects.locations.reservations.patch", :compute.gcp.impl.descriptor/http-method :patch, :compute.gcp.impl.descriptor/http-path "/v1beta1/{name}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "bigqueryreservation.projects.locations.reservations.assignments.delete" {:description "Deletes a assignment. No expansion will happen.\nE.g:\norganizationA contains project1 and project2. Reservation res1 exists.\nCreateAssignment was invoked previously and following assignments were\ncreated explicitly:\n  <organizationA, res1>\n  <project1, res1>\nThen deletion of <organizationA, res1> won't affect <project1, res1>. After\ndeletion of <organizationA, res1>, queries from project1 will still use\nres1, while queries from project2 will use on-demand mode.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Empty"}}}, :parameters [{:description "Name of the resource, e.g.:\n  projects/myproject/locations/US/reservations/team1-prod/assignments/123", :in "path", :name "name", :required true, :type "string", :x-reservedExpansion true}], :operationId "bigqueryreservation.projects.locations.reservations.assignments.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/v1beta1/{name}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "bigqueryreservation.projects.locations.reservations.list" {:description "Lists all the reservations for the project in the specified location.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ListReservationsResponse"}}}, :parameters [{:description "Can be used to filter out reservations based on names, capacity, etc, e.g.:\nfilter=\"reservation.slot_capacity > 200\"\nfilter=\"reservation.name = \\\"*dev/*\\\"\"\nAdvanced filtering syntax can be\n[here](https://cloud.google.com/logging/docs/view/advanced-filters).", :in "query", :name "filter", :type "string"} {:description "The maximum number of items to return.", :in "query", :name "pageSize", :type "integer"} {:description "The next_page_token value returned from a previous List request, if any.", :in "query", :name "pageToken", :type "string"} {:description "The parent resource name containing project and location, e.g.:\n  \"projects/myproject/locations/US\"", :in "path", :name "parent", :required true, :type "string", :x-reservedExpansion true}], :operationId "bigqueryreservation.projects.locations.reservations.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v1beta1/{parent}/reservations", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}}, :parameters {:quotaUser {:description "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", :in "query", :name "quotaUser", :type "string"}, :key {:description "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", :in "query", :name "key", :type "string"}, :alt {:default "json", :description "Data format for response.", :enum ["json" "media" "proto"], :in "query", :name "alt", :type "string"}, :access_token {:description "OAuth access token.", :in "query", :name "access_token", :type "string"}, :fields {:description "Selector specifying which fields to include in a partial response.", :in "query", :name "fields", :type "string"}, :upload_protocol {:description "Upload protocol for media (e.g. \"raw\", \"multipart\").", :in "query", :name "upload_protocol", :type "string"}, :uploadType {:description "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", :in "query", :name "uploadType", :type "string"}, :oauth_token {:description "OAuth 2.0 token for the current user.", :in "query", :name "oauth_token", :type "string"}, :prettyPrint {:default true, :description "Returns response with indentations and line breaks.", :in "query", :name "prettyPrint", :type "boolean"}, "$.xgafv" {:description "V1 error format.", :enum ["1" "2"], :in "query", :name "$.xgafv", :type "string"}, :callback {:description "JSONP", :in "query", :name "callback", :type "string"}}, :definitions {:ListReservationsResponse {:description "The response for ReservationService.ListReservations.", :properties {:nextPageToken {:description "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.", :type "string"}, :reservations {:description "List of reservations visible to the user.", :items {:$ref "#/definitions/Reservation"}, :type "array"}}, :type "object"}, :Assignment {:description "A Assignment allows a project to submit jobs\nof a certain type using slots from the specified reservation.", :properties {:assignee {:description "The resource which will use the reservation. E.g.\nprojects/myproject, folders/123, organizations/456.", :type "string"}, :jobType {:description "Which type of jobs will use the reservation.", :enum ["JOB_TYPE_UNSPECIFIED" "PIPELINE" "QUERY"], :type "string"}, :name {:description "Output only. Name of the resource. E.g.:\nprojects/myproject/locations/US/reservations/team1-prod/assignments/123.", :type "string"}}, :type "object"}, :MoveAssignmentRequest {:description "The request for\nReservationService.MoveAssignment.\nNote: \"bigquery.reservationAssignments.create\" permission is required on the\ndestination_id. Note: \"bigquery.reservationAssignments.create\" and\n\"bigquery.reservationAssignments.delete\" permission is required on the\nrelated assignee.", :properties {:destinationId {:description "The new reservation ID, e.g.:\n  projects/myotherproject/locations/US/reservations/team2-prod", :type "string"}}, :type "object"}, :CapacityCommitment {:description "Capacity commitment is a way to purchase compute capacity for BigQuery jobs\n(in the form of slots) with some minimum committed period of usage. Capacity\ncommitment is immutable and cannot be deleted until the end of the commitment\nperiod. After the end of the commitment period, slots are still available but\ncan be freely removed any time. Annual commitments will automatically be\ndowngraded to monthly after the commitment ends.\n\nA capacity commitment resource exists as a child resource of the admin\nproject.", :properties {:commitmentEndTime {:description "Output only. The end of the commitment period. Capacity commitment cannot be\nremoved before commitment_end_time. It is applicable only for ACTIVE\ncapacity commitments and is computed as a combination of the plan and the\ntime when the capacity commitment became ACTIVE.", :format "google-datetime", :type "string"}, :failureStatus {:$ref "#/definitions/Status", :description "Output only. For FAILED commitment plan, provides the reason of failure."}, :name {:description "Output only. The resource name of the capacity commitment, e.g.,\n   projects/myproject/locations/US/capacityCommitments/123", :type "string"}, :plan {:description "Capacity commitment commitment plan.", :enum ["COMMITMENT_PLAN_UNSPECIFIED" "MONTHLY" "ANNUAL"], :type "string"}, :slotCount {:description "Number of slots in this commitment.", :format "int64", :type "string"}, :state {:description "Output only. State of the commitment.", :enum ["STATE_UNSPECIFIED" "PENDING" "ACTIVE" "FAILED"], :type "string"}}, :type "object"}, :Empty {:description "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.", :properties {}, :type "object"}, :ListCapacityCommitmentsResponse {:description "The response for ReservationService.ListCapacityCommitments.", :properties {:capacityCommitments {:description "List of capacity commitments visible to the user.", :items {:$ref "#/definitions/CapacityCommitment"}, :type "array"}, :nextPageToken {:description "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.", :type "string"}}, :type "object"}, :ListLocationsResponse {:description "The response message for Locations.ListLocations.", :properties {:locations {:description "A list of locations that matches the specified filter in the request.", :items {:$ref "#/definitions/Location"}, :type "array"}, :nextPageToken {:description "The standard List next-page token.", :type "string"}}, :type "object"}, :Reservation {:description "A reservation is a mechanism used to guarantee slots to users.", :properties {:ignoreIdleSlots {:description "If false, any query using this reservation will use idle slots from other\nreservations within the same admin project. If true, a query using this\nreservation will execute with the maximum slot capacity as specified above.", :type "boolean"}, :name {:description "The resource name of the reservation, e.g.,\n\"projects/*/locations/*/reservations/team1-prod\".", :type "string"}, :slotCapacity {:description "Maximum slots available to this reservation. A slot is a unit of\ncomputational power in BigQuery, and serves as the unit of parallelism. In\na scan of a multi-partitioned table, a single slot operates on a single\npartition of the table.\nIf the new reservation's slot capacity exceed the parent's slot capacity or\nif total slot capacity of the new reservation and its siblings exceeds the\nparent's slot capacity, the request will fail with\n`google.rpc.Code.RESOURCE_EXHAUSTED`.", :format "int64", :type "string"}}, :type "object"}, :SearchAssignmentsResponse {:description "The response for ReservationService.SearchAssignments.", :properties {:assignments {:description "List of assignments visible to the user.", :items {:$ref "#/definitions/Assignment"}, :type "array"}, :nextPageToken {:description "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.", :type "string"}}, :type "object"}, :LocationMetadata {:description "BigQuery-specific metadata about a location. This will be set on\ngoogle.cloud.location.Location.metadata in Cloud Location API\nresponses.", :properties {:legacyLocationId {:description "The legacy BigQuery location ID, e.g. “EU” for the “europe” location.\nThis is for any API consumers that need the legacy “US” and “EU” locations.", :type "string"}}, :type "object"}, :Location {:description "A resource that represents Google Cloud Platform location.", :properties {:displayName {:description "The friendly name for this location, typically a nearby city name.\nFor example, \"Tokyo\".", :type "string"}, :labels {:additionalProperties {:type "string"}, :description "Cross-service attributes for the location. For example\n\n    {\"cloud.googleapis.com/region\": \"us-east1\"}", :type "object"}, :locationId {:description "The canonical id for this location. For example: `\"us-east1\"`.", :type "string"}, :metadata {:additionalProperties {:description "Properties of the object. Contains field @type with type URL."}, :description "Service-specific metadata. For example the available capacity at the given\nlocation.", :type "object"}, :name {:description "Resource name for the location, which may vary between implementations.\nFor example: `\"projects/example-project/locations/us-east1\"`", :type "string"}}, :type "object"}, :ListAssignmentsResponse {:description "The response for ReservationService.ListAssignments.", :properties {:assignments {:description "List of assignments visible to the user.", :items {:$ref "#/definitions/Assignment"}, :type "array"}, :nextPageToken {:description "Token to retrieve the next page of results, or empty if there are no\nmore results in the list.", :type "string"}}, :type "object"}, :BiReservation {:description "Represents a BI Reservation.", :properties {:name {:description "The resource name of the singleton BI reservation.\nReservation names have the form\n`projects/{project_id}/locations/{location_id}/bireservation`.", :type "string"}, :size {:description "Size of a reservation, in bytes.", :format "int64", :type "string"}, :updateTime {:description "Output only. The last update timestamp of a reservation.", :format "google-datetime", :type "string"}}, :type "object"}, :Status {:description "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).", :properties {:code {:description "The status code, which should be an enum value of google.rpc.Code.", :format "int32", :type "integer"}, :details {:description "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.", :items {:additionalProperties {:description "Properties of the object. Contains field @type with type URL."}, :type "object"}, :type "array"}, :message {:description "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.", :type "string"}}, :type "object"}}}