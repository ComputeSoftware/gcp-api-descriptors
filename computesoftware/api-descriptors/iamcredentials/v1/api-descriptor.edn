#:compute.gcp.descriptor{:name "iamcredentials", :title "IAM Service Account Credentials API", :api-version "v1", :revision "20200327", :endpoint #:compute.gcp.descriptor{:url "https://iamcredentials.googleapis.com/", :batch-path "batch"}, :parameters {"callback" {"description" "JSONP", "type" "string", "location" "query"}, "uploadType" {"description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "type" "string", "location" "query"}, "key" {"location" "query", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "type" "string"}, "access_token" {"description" "OAuth access token.", "type" "string", "location" "query"}, "oauth_token" {"location" "query", "description" "OAuth 2.0 token for the current user.", "type" "string"}, "prettyPrint" {"location" "query", "description" "Returns response with indentations and line breaks.", "type" "boolean", "default" "true"}, "alt" {"enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "location" "query", "description" "Data format for response.", "default" "json", "enum" ["json" "media" "proto"], "type" "string"}, "$.xgafv" {"enum" ["1" "2"], "description" "V1 error format.", "type" "string", "enumDescriptions" ["v1 error format" "v2 error format"], "location" "query"}, "fields" {"location" "query", "description" "Selector specifying which fields to include in a partial response.", "type" "string"}, "upload_protocol" {"description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "type" "string", "location" "query"}, "quotaUser" {"type" "string", "location" "query", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."}}, :op->info {}, :schemas {"GenerateAccessTokenResponse" {"type" "object", "properties" {"expireTime" {"description" "Token expiration time.\nThe expiration time is always set.", "format" "google-datetime", "type" "string"}, "accessToken" {"description" "The OAuth 2.0 access token.", "type" "string"}}, "id" "GenerateAccessTokenResponse"}, "GenerateAccessTokenRequest" {"type" "object", "properties" {"delegates" {"type" "array", "items" {"type" "string"}, "description" "The sequence of service accounts in a delegation chain. Each service\naccount must be granted the `roles/iam.serviceAccountTokenCreator` role\non its next service account in the chain. The last service account in the\nchain must be granted the `roles/iam.serviceAccountTokenCreator` role\non the service account that is specified in the `name` field of the\nrequest.\n\nThe delegates must have the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard\ncharacter is required; replacing it with a project ID is invalid."}, "lifetime" {"description" "The desired lifetime duration of the access token in seconds.\nMust be set to a value less than or equal to 3600 (1 hour). If a value is\nnot specified, the token's lifetime will be set to a default value of one\nhour.", "format" "google-duration", "type" "string"}, "scope" {"description" "Required. Code to identify the scopes to be included in the OAuth 2.0 access token.\nSee https://developers.google.com/identity/protocols/googlescopes for more\ninformation.\nAt least one value required.", "type" "array", "items" {"type" "string"}}}, "id" "GenerateAccessTokenRequest"}, "SignBlobRequest" {"type" "object", "properties" {"payload" {"description" "Required. The bytes to sign.", "format" "byte", "type" "string"}, "delegates" {"description" "The sequence of service accounts in a delegation chain. Each service\naccount must be granted the `roles/iam.serviceAccountTokenCreator` role\non its next service account in the chain. The last service account in the\nchain must be granted the `roles/iam.serviceAccountTokenCreator` role\non the service account that is specified in the `name` field of the\nrequest.\n\nThe delegates must have the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard\ncharacter is required; replacing it with a project ID is invalid.", "type" "array", "items" {"type" "string"}}}, "id" "SignBlobRequest"}, "SignJwtResponse" {"type" "object", "properties" {"keyId" {"description" "The ID of the key used to sign the JWT.", "type" "string"}, "signedJwt" {"description" "The signed JWT.", "type" "string"}}, "id" "SignJwtResponse"}, "SignBlobResponse" {"type" "object", "properties" {"keyId" {"description" "The ID of the key used to sign the blob.", "type" "string"}, "signedBlob" {"description" "The signed blob.", "format" "byte", "type" "string"}}, "id" "SignBlobResponse"}, "SignJwtRequest" {"type" "object", "properties" {"payload" {"description" "Required. The JWT payload to sign: a JSON object that contains a JWT Claims Set.", "type" "string"}, "delegates" {"description" "The sequence of service accounts in a delegation chain. Each service\naccount must be granted the `roles/iam.serviceAccountTokenCreator` role\non its next service account in the chain. The last service account in the\nchain must be granted the `roles/iam.serviceAccountTokenCreator` role\non the service account that is specified in the `name` field of the\nrequest.\n\nThe delegates must have the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard\ncharacter is required; replacing it with a project ID is invalid.", "type" "array", "items" {"type" "string"}}}, "id" "SignJwtRequest"}, "GenerateIdTokenRequest" {"type" "object", "properties" {"includeEmail" {"description" "Include the service account email in the token. If set to `true`, the\ntoken will contain `email` and `email_verified` claims.", "type" "boolean"}, "delegates" {"description" "The sequence of service accounts in a delegation chain. Each service\naccount must be granted the `roles/iam.serviceAccountTokenCreator` role\non its next service account in the chain. The last service account in the\nchain must be granted the `roles/iam.serviceAccountTokenCreator` role\non the service account that is specified in the `name` field of the\nrequest.\n\nThe delegates must have the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard\ncharacter is required; replacing it with a project ID is invalid.", "type" "array", "items" {"type" "string"}}, "audience" {"description" "Required. The audience for the token, such as the API or account that this token\ngrants access to.", "type" "string"}}, "id" "GenerateIdTokenRequest"}, "GenerateIdTokenResponse" {"type" "object", "properties" {"token" {"description" "The OpenId Connect ID token.", "type" "string"}}, "id" "GenerateIdTokenResponse"}}}