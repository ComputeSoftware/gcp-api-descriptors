#:compute.gcp.descriptor{:name "servicedirectory", :title "Service Directory API", :api-version "v1beta1", :revision "20200408", :endpoint #:compute.gcp.descriptor{:url "https://servicedirectory.googleapis.com/", :batch-path "batch"}, :parameters {"callback" {"description" "JSONP", "type" "string", "location" "query"}, "uploadType" {"location" "query", "description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "type" "string"}, "key" {"location" "query", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "type" "string"}, "access_token" {"location" "query", "description" "OAuth access token.", "type" "string"}, "oauth_token" {"description" "OAuth 2.0 token for the current user.", "type" "string", "location" "query"}, "prettyPrint" {"location" "query", "description" "Returns response with indentations and line breaks.", "type" "boolean", "default" "true"}, "alt" {"enum" ["json" "media" "proto"], "type" "string", "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "location" "query", "description" "Data format for response.", "default" "json"}, "$.xgafv" {"description" "V1 error format.", "type" "string", "enumDescriptions" ["v1 error format" "v2 error format"], "location" "query", "enum" ["1" "2"]}, "fields" {"location" "query", "description" "Selector specifying which fields to include in a partial response.", "type" "string"}, "upload_protocol" {"location" "query", "description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "type" "string"}, "quotaUser" {"location" "query", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "type" "string"}}, :op->info {}, :schemas {"TestIamPermissionsRequest" {"type" "object", "properties" {"permissions" {"description" "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).", "type" "array", "items" {"type" "string"}}}, "id" "TestIamPermissionsRequest", "description" "Request message for `TestIamPermissions` method."}, "Empty" {"description" "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.", "type" "object", "properties" {}, "id" "Empty"}, "Expr" {"id" "Expr", "description" "Represents a textual expression in the Common Expression Language (CEL)\nsyntax. CEL is a C-like expression language. The syntax and semantics of CEL\nare documented at https://github.com/google/cel-spec.\n\nExample (Comparison):\n\n    title: \"Summary size limit\"\n    description: \"Determines if a summary is less than 100 chars\"\n    expression: \"document.summary.size() < 100\"\n\nExample (Equality):\n\n    title: \"Requestor is owner\"\n    description: \"Determines if requestor is the document owner\"\n    expression: \"document.owner == request.auth.claims.email\"\n\nExample (Logic):\n\n    title: \"Public documents\"\n    description: \"Determine whether the document should be publicly visible\"\n    expression: \"document.type != 'private' && document.type != 'internal'\"\n\nExample (Data Manipulation):\n\n    title: \"Notification string\"\n    description: \"Create a notification string with a timestamp.\"\n    expression: \"'New message received at ' + string(document.create_time)\"\n\nThe exact variables and functions that may be referenced within an expression\nare determined by the service that evaluates it. See the service\ndocumentation for additional information.", "type" "object", "properties" {"expression" {"description" "Textual representation of an expression in Common Expression Language\nsyntax.", "type" "string"}, "title" {"type" "string", "description" "Optional. Title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression."}, "location" {"description" "Optional. String indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.", "type" "string"}, "description" {"description" "Optional. Description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.", "type" "string"}}}, "Binding" {"description" "Associates `members` with a `role`.", "type" "object", "properties" {"condition" {"$ref" "Expr", "description" "The condition that is associated with this binding.\nNOTE: An unsatisfied condition will not allow user access via current\nbinding. Different bindings, including their conditions, are examined\nindependently."}, "members" {"description" "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@example.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n* `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a user that has been recently deleted. For\n   example, `alice@example.com?uid=123456789012345678901`. If the user is\n   recovered, this value reverts to `user:{emailid}` and the recovered user\n   retains the role in the binding.\n\n* `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus\n   unique identifier) representing a service account that has been recently\n   deleted. For example,\n   `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.\n   If the service account is undeleted, this value reverts to\n   `serviceAccount:{emailid}` and the undeleted service account retains the\n   role in the binding.\n\n* `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a Google group that has been recently\n   deleted. For example, `admins@example.com?uid=123456789012345678901`. If\n   the group is recovered, this value reverts to `group:{emailid}` and the\n   recovered group retains the role in the binding.\n\n\n* `domain:{domain}`: The G Suite domain (primary) that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n", "type" "array", "items" {"type" "string"}}, "role" {"description" "Role that is assigned to `members`.\nFor example, `roles/viewer`, `roles/editor`, or `roles/owner`.", "type" "string"}}, "id" "Binding"}, "Location" {"type" "object", "properties" {"metadata" {"additionalProperties" {"description" "Properties of the object. Contains field @type with type URL.", "type" "any"}, "description" "Service-specific metadata. For example the available capacity at the given\nlocation.", "type" "object"}, "labels" {"type" "object", "additionalProperties" {"type" "string"}, "description" "Cross-service attributes for the location. For example\n\n    {\"cloud.googleapis.com/region\": \"us-east1\"}"}, "name" {"description" "Resource name for the location, which may vary between implementations.\nFor example: `\"projects/example-project/locations/us-east1\"`", "type" "string"}, "locationId" {"description" "The canonical id for this location. For example: `\"us-east1\"`.", "type" "string"}, "displayName" {"description" "The friendly name for this location, typically a nearby city name.\nFor example, \"Tokyo\".", "type" "string"}}, "id" "Location", "description" "A resource that represents Google Cloud Platform location."}, "ListLocationsResponse" {"id" "ListLocationsResponse", "description" "The response message for Locations.ListLocations.", "type" "object", "properties" {"locations" {"description" "A list of locations that matches the specified filter in the request.", "type" "array", "items" {"$ref" "Location"}}, "nextPageToken" {"description" "The standard List next-page token.", "type" "string"}}}, "GetPolicyOptions" {"description" "Encapsulates settings provided to GetIamPolicy.", "type" "object", "properties" {"requestedPolicyVersion" {"description" "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.", "format" "int32", "type" "integer"}}, "id" "GetPolicyOptions"}, "TestIamPermissionsResponse" {"type" "object", "properties" {"permissions" {"description" "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.", "type" "array", "items" {"type" "string"}}}, "id" "TestIamPermissionsResponse", "description" "Response message for `TestIamPermissions` method."}, "Namespace" {"description" "A container for services.\nNamespaces allow administrators to group services together and define\npermissions for a collection of services.", "type" "object", "properties" {"name" {"description" "Immutable. The resource name for the namespace in the format\n'projects/*/locations/*/namespaces/*'.", "type" "string"}, "labels" {"additionalProperties" {"type" "string"}, "description" "Optional. Resource labels associated with this Namespace.\nNo more than 64 user labels can be associated with a given resource.  Label\nkeys and values can be no longer than 63 characters.", "type" "object"}}, "id" "Namespace"}, "SetIamPolicyRequest" {"description" "Request message for `SetIamPolicy` method.", "type" "object", "properties" {"policy" {"$ref" "Policy", "description" "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them."}}, "id" "SetIamPolicyRequest"}, "ResolveServiceRequest" {"description" "The request message for LookupService.ResolveService.\nLooks up a service by its name, returns the service and its endpoints.", "type" "object", "properties" {"endpointFilter" {"description" "Optional. The filter applied to the endpoints of the resolved service.\n\nGeneral filter string syntax:\n<field> <operator> <value> (<logical connector>)\n<field> can be \"name\" or \"metadata.<key>\" for map field.\n<operator> can be \"<, >, <=, >=, !=, =, :\". Of which \":\" means HAS and is\nroughly the same as \"=\".\n<value> must be the same data type as the field.\n<logical connector> can be \"AND, OR, NOT\".\n\nExamples of valid filters:\n* \"metadata.owner\" returns Endpoints that have a label with the\n  key \"owner\", this is the same as \"metadata:owner\"\n* \"metadata.protocol=gRPC\" returns Endpoints that have key/value\n  \"protocol=gRPC\"\n* \"metadata.owner!=sd AND metadata.foo=bar\" returns\n  Endpoints that have \"owner\" field in metadata with a value that is not\n  \"sd\" AND have the key/value foo=bar.", "type" "string"}, "maxEndpoints" {"description" "Optional. The maximum number of endpoints to return. Defaults to 25. Maximum is 100.\nIf a value less than one is specified, the Default is used.\nIf a value greater than the Maximum is specified, the Maximum is used.", "format" "int32", "type" "integer"}}, "id" "ResolveServiceRequest"}, "ListServicesResponse" {"type" "object", "properties" {"services" {"type" "array", "items" {"$ref" "Service"}, "description" "The list of services."}, "nextPageToken" {"type" "string", "description" "Token to retrieve the next page of results, or empty if there are no\nmore results in the list."}}, "id" "ListServicesResponse", "description" "The response message for RegistrationService.ListServices."}, "Endpoint" {"description" "An individual endpoint that provides a\nservice. The service must\nalready exist to create an endpoint.", "type" "object", "properties" {"metadata" {"additionalProperties" {"type" "string"}, "description" "Optional. Metadata for the endpoint. This data can be consumed by service\nclients.  The entire metadata dictionary may contain up to 512 characters,\nspread accoss all key-value pairs. Metadata that goes beyond any these\nlimits will be rejected.", "type" "object"}, "address" {"description" "Optional. An IPv4 or IPv6 address. Service Directory will reject bad\naddresses like:\n  \"8.8.8\"\n  \"8.8.8.8:53\"\n  \"test:bad:address\"\n  \"[::1]\"\n  \"[::1]:8080\"\nLimited to 45 characters.", "type" "string"}, "port" {"type" "integer", "description" "Optional. Service Directory will reject values outside of [0, 65535].", "format" "int32"}, "name" {"type" "string", "description" "Immutable. The resource name for the endpoint in the format\n'projects/*/locations/*/namespaces/*/services/*/endpoints/*'."}}, "id" "Endpoint"}, "GetIamPolicyRequest" {"type" "object", "properties" {"options" {"$ref" "GetPolicyOptions", "description" "OPTIONAL: A `GetPolicyOptions` object for specifying options to\n`GetIamPolicy`. This field is only used by Cloud IAM."}}, "id" "GetIamPolicyRequest", "description" "Request message for `GetIamPolicy` method."}, "Policy" {"id" "Policy", "description" "An Identity and Access Management (IAM) policy, which specifies access\ncontrols for Google Cloud resources.\n\n\nA `Policy` is a collection of `bindings`. A `binding` binds one or more\n`members` to a single `role`. Members can be user accounts, service accounts,\nGoogle groups, and domains (such as G Suite). A `role` is a named list of\npermissions; each `role` can be an IAM predefined role or a user-created\ncustom role.\n\nOptionally, a `binding` can specify a `condition`, which is a logical\nexpression that allows access to a resource only if the expression evaluates\nto `true`. A condition can add constraints based on attributes of the\nrequest, the resource, or both.\n\n**JSON example:**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles/resourcemanager.organizationAdmin\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles/resourcemanager.organizationViewer\",\n          \"members\": [\"user:eve@example.com\"],\n          \"condition\": {\n            \"title\": \"expirable access\",\n            \"description\": \"Does not grant access after Sep 2020\",\n            \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\",\n          }\n        }\n      ],\n      \"etag\": \"BwWWja0YfJA=\",\n      \"version\": 3\n    }\n\n**YAML example:**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-project-id@appspot.gserviceaccount.com\n      role: roles/resourcemanager.organizationAdmin\n    - members:\n      - user:eve@example.com\n      role: roles/resourcemanager.organizationViewer\n      condition:\n        title: expirable access\n        description: Does not grant access after Sep 2020\n        expression: request.time < timestamp('2020-10-01T00:00:00.000Z')\n    - etag: BwWWja0YfJA=\n    - version: 3\n\nFor a description of IAM and its features, see the\n[IAM documentation](https://cloud.google.com/iam/docs/).", "type" "object", "properties" {"etag" {"description" "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.", "format" "byte", "type" "string"}, "version" {"type" "integer", "description" "Specifies the format of the policy.\n\nValid values are `0`, `1`, and `3`. Requests that specify an invalid value\nare rejected.\n\nAny operation that affects conditional role bindings must specify version\n`3`. This requirement applies to the following operations:\n\n* Getting a policy that includes a conditional role binding\n* Adding a conditional role binding to a policy\n* Changing a conditional role binding in a policy\n* Removing any role binding, with or without a condition, from a policy\n  that includes conditions\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.\n\nIf a policy does not include any conditions, operations on that policy may\nspecify any valid version or leave the field unset.", "format" "int32"}, "bindings" {"description" "Associates a list of `members` to a `role`. Optionally, may specify a\n`condition` that determines how and when the `bindings` are applied. Each\nof the `bindings` must contain at least one member.", "type" "array", "items" {"$ref" "Binding"}}}}, "ListNamespacesResponse" {"id" "ListNamespacesResponse", "description" "The response message for RegistrationService.ListNamespaces.", "type" "object", "properties" {"namespaces" {"type" "array", "items" {"$ref" "Namespace"}, "description" "The list of namespaces."}, "nextPageToken" {"type" "string", "description" "Token to retrieve the next page of results, or empty if there are no\nmore results in the list."}}}, "Service" {"description" "An individual service. A service contains a name and optional metadata.\nA service must exist before\nendpoints can be\nadded to it.", "type" "object", "properties" {"name" {"description" "Immutable. The resource name for the service in the format\n'projects/*/locations/*/namespaces/*/services/*'.", "type" "string"}, "endpoints" {"type" "array", "items" {"$ref" "Endpoint"}, "description" "Output only. Endpoints associated with this service. Returned on LookupService.Resolve.\nControl plane clients should use RegistrationService.ListEndpoints."}, "metadata" {"description" "Optional. Metadata for the service. This data can be consumed by service\nclients.  The entire metadata dictionary may contain up to 2000 characters,\nspread across all key-value pairs. Metadata that goes beyond any these\nlimits will be rejected.", "type" "object", "additionalProperties" {"type" "string"}}}, "id" "Service"}, "ResolveServiceResponse" {"description" "The response message for LookupService.ResolveService.", "type" "object", "properties" {"service" {"$ref" "Service"}}, "id" "ResolveServiceResponse"}, "ListEndpointsResponse" {"type" "object", "properties" {"nextPageToken" {"type" "string", "description" "Token to retrieve the next page of results, or empty if there are no\nmore results in the list."}, "endpoints" {"description" "The list of endpoints.", "type" "array", "items" {"$ref" "Endpoint"}}}, "id" "ListEndpointsResponse", "description" "The response message for RegistrationService.ListEndpoints."}}}