#:compute.gcp.descriptor{:name "youtubereporting", :title "YouTube Reporting API", :api-version "v1", :revision "20200415", :endpoint #:compute.gcp.descriptor{:url "https://youtubereporting.googleapis.com/", :batch-path "batch"}, :parameters {"callback" {"location" "query", "description" "JSONP", "type" "string"}, "uploadType" {"type" "string", "location" "query", "description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."}, "key" {"type" "string", "location" "query", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."}, "access_token" {"description" "OAuth access token.", "type" "string", "location" "query"}, "oauth_token" {"location" "query", "description" "OAuth 2.0 token for the current user.", "type" "string"}, "prettyPrint" {"description" "Returns response with indentations and line breaks.", "type" "boolean", "default" "true", "location" "query"}, "alt" {"default" "json", "enum" ["json" "media" "proto"], "type" "string", "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "location" "query", "description" "Data format for response."}, "$.xgafv" {"location" "query", "enum" ["1" "2"], "description" "V1 error format.", "type" "string", "enumDescriptions" ["v1 error format" "v2 error format"]}, "fields" {"location" "query", "description" "Selector specifying which fields to include in a partial response.", "type" "string"}, "upload_protocol" {"type" "string", "location" "query", "description" "Upload protocol for media (e.g. \"raw\", \"multipart\")."}, "quotaUser" {"location" "query", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "type" "string"}}, :op->info {"youtubereporting.jobs.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1/jobs/{jobId}", :response {"$ref" "Empty"}, :parameters {"jobId" {"location" "path", "description" "The ID of the job to delete.", "required" true, "type" "string"}, "onBehalfOfContentOwner" {"description" "The content owner's external ID on which behalf the user is acting on. If\nnot set, the user is acting for himself (his own channel).", "type" "string", "location" "query"}}, :description "Deletes a job."}, "youtubereporting.jobs.list" #:compute.gcp.descriptor{:http-method :get, :path "v1/jobs", :response {"$ref" "ListJobsResponse"}, :parameters {"pageToken" {"location" "query", "description" "A token identifying a page of results the server should return. Typically,\nthis is the value of\nListReportTypesResponse.next_page_token\nreturned in response to the previous call to the `ListJobs` method.", "type" "string"}, "includeSystemManaged" {"description" "If set to true, also system-managed jobs will be returned; otherwise only\nuser-created jobs will be returned. System-managed jobs can neither be\nmodified nor deleted.", "type" "boolean", "location" "query"}, "pageSize" {"description" "Requested page size. Server may return fewer jobs than requested.\nIf unspecified, server will pick an appropriate default.", "format" "int32", "type" "integer", "location" "query"}, "onBehalfOfContentOwner" {"location" "query", "description" "The content owner's external ID on which behalf the user is acting on. If\nnot set, the user is acting for himself (his own channel).", "type" "string"}}, :description "Lists jobs."}, "youtubereporting.jobs.get" #:compute.gcp.descriptor{:http-method :get, :path "v1/jobs/{jobId}", :response {"$ref" "Job"}, :parameters {"jobId" {"location" "path", "description" "The ID of the job to retrieve.", "required" true, "type" "string"}, "onBehalfOfContentOwner" {"location" "query", "description" "The content owner's external ID on which behalf the user is acting on. If\nnot set, the user is acting for himself (his own channel).", "type" "string"}}, :description "Gets a job."}, "youtubereporting.jobs.create" #:compute.gcp.descriptor{:http-method :post, :path "v1/jobs", :request {"$ref" "Job"}, :response {"$ref" "Job"}, :parameters {"onBehalfOfContentOwner" {"location" "query", "description" "The content owner's external ID on which behalf the user is acting on. If\nnot set, the user is acting for himself (his own channel).", "type" "string"}}, :description "Creates a job and returns it."}, "youtubereporting.reportTypes.list" #:compute.gcp.descriptor{:http-method :get, :path "v1/reportTypes", :response {"$ref" "ListReportTypesResponse"}, :parameters {"pageToken" {"location" "query", "description" "A token identifying a page of results the server should return. Typically,\nthis is the value of\nListReportTypesResponse.next_page_token\nreturned in response to the previous call to the `ListReportTypes` method.", "type" "string"}, "includeSystemManaged" {"location" "query", "description" "If set to true, also system-managed report types will be returned;\notherwise only the report types that can be used to create new reporting\njobs will be returned.", "type" "boolean"}, "pageSize" {"location" "query", "description" "Requested page size. Server may return fewer report types than requested.\nIf unspecified, server will pick an appropriate default.", "format" "int32", "type" "integer"}, "onBehalfOfContentOwner" {"location" "query", "description" "The content owner's external ID on which behalf the user is acting on. If\nnot set, the user is acting for himself (his own channel).", "type" "string"}}, :description "Lists report types."}, "youtubereporting.media.download" #:compute.gcp.descriptor{:http-method :get, :path "v1/media/{mediaId}", :response {"$ref" "GdataMedia"}, :parameters {"resourceName" {"location" "path", "description" "Name of the media that is being downloaded.", "required" true, "type" "string", "pattern" "^.*$"}}, :description "Method for media download. Download is supported\non the URI `/v1/media/{+name}?alt=media`."}}, :schemas {"GdataDiffUploadResponse" {"id" "GdataDiffUploadResponse", "description" "gdata", "type" "object", "properties" {"originalObject" {"$ref" "GdataCompositeMedia", "description" "gdata"}, "objectVersion" {"description" "gdata", "type" "string"}}}, "Empty" {"type" "object", "properties" {}, "id" "Empty", "description" "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`."}, "GdataMedia" {"description" "gdata", "type" "object", "properties" {"blobRef" {"description" "gdata", "format" "byte", "type" "string"}, "md5Hash" {"description" "gdata", "format" "byte", "type" "string"}, "cosmoBinaryReference" {"description" "gdata", "format" "byte", "type" "string"}, "objectId" {"$ref" "GdataObjectId", "description" "gdata"}, "compositeMedia" {"type" "array", "items" {"$ref" "GdataCompositeMedia"}, "description" "gdata"}, "token" {"type" "string", "description" "gdata"}, "diffDownloadResponse" {"description" "gdata", "$ref" "GdataDiffDownloadResponse"}, "hash" {"description" "gdata", "type" "string"}, "diffVersionResponse" {"$ref" "GdataDiffVersionResponse", "description" "gdata"}, "downloadParameters" {"$ref" "GdataDownloadParameters", "description" "gdata"}, "inline" {"description" "gdata", "format" "byte", "type" "string"}, "diffUploadRequest" {"$ref" "GdataDiffUploadRequest", "description" "gdata"}, "path" {"description" "gdata", "type" "string"}, "timestamp" {"description" "gdata", "format" "uint64", "type" "string"}, "sha256Hash" {"description" "gdata", "format" "byte", "type" "string"}, "algorithm" {"description" "gdata", "type" "string"}, "referenceType" {"description" "gdata", "type" "string", "enumDescriptions" ["gdata" "gdata" "gdata" "gdata" "gdata" "gdata" "gdata" "gdata" "gdata" "gdata" "gdata" "gdata" "gdata"], "enum" ["PATH" "BLOB_REF" "INLINE" "GET_MEDIA" "COMPOSITE_MEDIA" "BIGSTORE_REF" "DIFF_VERSION_RESPONSE" "DIFF_CHECKSUMS_RESPONSE" "DIFF_DOWNLOAD_RESPONSE" "DIFF_UPLOAD_REQUEST" "DIFF_UPLOAD_RESPONSE" "COSMO_BINARY_REFERENCE" "ARBITRARY_BYTES"]}, "sha1Hash" {"type" "string", "description" "gdata", "format" "byte"}, "diffChecksumsResponse" {"$ref" "GdataDiffChecksumsResponse", "description" "gdata"}, "hashVerified" {"description" "gdata", "type" "boolean"}, "length" {"description" "gdata", "format" "int64", "type" "string"}, "diffUploadResponse" {"$ref" "GdataDiffUploadResponse", "description" "gdata"}, "bigstoreObjectRef" {"description" "gdata", "format" "byte", "type" "string"}, "mediaId" {"description" "gdata", "format" "byte", "type" "string"}, "blobstore2Info" {"description" "gdata", "$ref" "GdataBlobstore2Info"}, "isPotentialRetry" {"description" "gdata", "type" "boolean"}, "contentType" {"type" "string", "description" "gdata"}, "contentTypeInfo" {"description" "gdata", "$ref" "GdataContentTypeInfo"}, "crc32cHash" {"description" "gdata", "format" "uint32", "type" "integer"}, "filename" {"description" "gdata", "type" "string"}}, "id" "GdataMedia"}, "ListReportTypesResponse" {"properties" {"reportTypes" {"type" "array", "items" {"$ref" "ReportType"}, "description" "The list of report types."}, "nextPageToken" {"description" "A token to retrieve next page of results.\nPass this value in the\nListReportTypesRequest.page_token\nfield in the subsequent call to `ListReportTypes` method to retrieve the\nnext page of results.", "type" "string"}}, "id" "ListReportTypesResponse", "description" "Response message for ReportingService.ListReportTypes.", "type" "object"}, "GdataBlobstore2Info" {"properties" {"blobId" {"description" "gdata", "type" "string"}, "downloadReadHandle" {"description" "gdata", "format" "byte", "type" "string"}, "readToken" {"type" "string", "description" "gdata"}, "uploadMetadataContainer" {"description" "gdata", "format" "byte", "type" "string"}, "blobGeneration" {"description" "gdata", "format" "int64", "type" "string"}}, "id" "GdataBlobstore2Info", "description" "gdata", "type" "object"}, "GdataCompositeMedia" {"description" "gdata", "type" "object", "properties" {"blobRef" {"description" "gdata", "format" "byte", "type" "string"}, "md5Hash" {"description" "gdata", "format" "byte", "type" "string"}, "cosmoBinaryReference" {"description" "gdata", "format" "byte", "type" "string"}, "objectId" {"$ref" "GdataObjectId", "description" "gdata"}, "inline" {"description" "gdata", "format" "byte", "type" "string"}, "path" {"description" "gdata", "type" "string"}, "referenceType" {"enumDescriptions" ["gdata" "gdata" "gdata" "gdata" "gdata"], "enum" ["PATH" "BLOB_REF" "INLINE" "BIGSTORE_REF" "COSMO_BINARY_REFERENCE"], "description" "gdata", "type" "string"}, "sha1Hash" {"type" "string", "description" "gdata", "format" "byte"}, "length" {"type" "string", "description" "gdata", "format" "int64"}, "blobstore2Info" {"$ref" "GdataBlobstore2Info", "description" "gdata"}, "crc32cHash" {"description" "gdata", "format" "uint32", "type" "integer"}}, "id" "GdataCompositeMedia"}, "GdataDiffVersionResponse" {"properties" {"objectVersion" {"description" "gdata", "type" "string"}, "objectSizeBytes" {"description" "gdata", "format" "int64", "type" "string"}}, "id" "GdataDiffVersionResponse", "description" "gdata", "type" "object"}, "Report" {"type" "object", "properties" {"jobId" {"description" "The ID of the job that created this report.", "type" "string"}, "id" {"description" "The server-generated ID of the report.", "type" "string"}, "jobExpireTime" {"description" "The date/time when the job this report belongs to will expire/expired.", "format" "google-datetime", "type" "string"}, "endTime" {"description" "The end of the time period that the report instance covers. The value is\nexclusive.", "format" "google-datetime", "type" "string"}, "downloadUrl" {"description" "The URL from which the report can be downloaded (max. 1000 characters).", "type" "string"}, "startTime" {"type" "string", "description" "The start of the time period that the report instance covers. The value is\ninclusive.", "format" "google-datetime"}, "createTime" {"description" "The date/time when this report was created.", "format" "google-datetime", "type" "string"}}, "id" "Report", "description" "A report's metadata including the URL from which the report itself can be\ndownloaded."}, "GdataContentTypeInfo" {"id" "GdataContentTypeInfo", "description" "gdata", "type" "object", "properties" {"bestGuess" {"description" "gdata", "type" "string"}, "fromUrlPath" {"type" "string", "description" "gdata"}, "fromHeader" {"description" "gdata", "type" "string"}, "fromBytes" {"description" "gdata", "type" "string"}, "fromFileName" {"description" "gdata", "type" "string"}}}, "ReportType" {"properties" {"name" {"description" "The name of the report type (max. 100 characters).", "type" "string"}, "id" {"description" "The ID of the report type (max. 100 characters).", "type" "string"}, "systemManaged" {"description" "True if this a system-managed report type; otherwise false. Reporting jobs\nfor system-managed report types are created automatically and can thus not\nbe used in the `CreateJob` method.", "type" "boolean"}, "deprecateTime" {"description" "The date/time when this report type was/will be deprecated.", "format" "google-datetime", "type" "string"}}, "id" "ReportType", "description" "A report type.", "type" "object"}, "ListReportsResponse" {"type" "object", "properties" {"reports" {"description" "The list of report types.", "type" "array", "items" {"$ref" "Report"}}, "nextPageToken" {"description" "A token to retrieve next page of results.\nPass this value in the\nListReportsRequest.page_token\nfield in the subsequent call to `ListReports` method to retrieve the next\npage of results.", "type" "string"}}, "id" "ListReportsResponse", "description" "Response message for ReportingService.ListReports."}, "GdataDiffUploadRequest" {"description" "gdata", "type" "object", "properties" {"objectVersion" {"description" "gdata", "type" "string"}, "objectInfo" {"description" "gdata", "$ref" "GdataCompositeMedia"}, "checksumsInfo" {"$ref" "GdataCompositeMedia", "description" "gdata"}}, "id" "GdataDiffUploadRequest"}, "GdataDiffDownloadResponse" {"description" "gdata", "type" "object", "properties" {"objectLocation" {"$ref" "GdataCompositeMedia", "description" "gdata"}}, "id" "GdataDiffDownloadResponse"}, "GdataObjectId" {"id" "GdataObjectId", "description" "gdata", "type" "object", "properties" {"bucketName" {"description" "gdata", "type" "string"}, "generation" {"description" "gdata", "format" "int64", "type" "string"}, "objectName" {"description" "gdata", "type" "string"}}}, "Job" {"type" "object", "properties" {"createTime" {"description" "The creation date/time of the job.", "format" "google-datetime", "type" "string"}, "reportTypeId" {"type" "string", "description" "The type of reports this job creates. Corresponds to the ID of a\nReportType."}, "expireTime" {"description" "The date/time when this job will expire/expired. After a job expired, no\nnew reports are generated.", "format" "google-datetime", "type" "string"}, "name" {"description" "The name of the job (max. 100 characters).", "type" "string"}, "id" {"description" "The server-generated ID of the job (max. 40 characters).", "type" "string"}, "systemManaged" {"description" "True if this a system-managed job that cannot be modified by the user;\notherwise false.", "type" "boolean"}}, "id" "Job", "description" "A job creating reports of a specific type."}, "GdataDiffChecksumsResponse" {"id" "GdataDiffChecksumsResponse", "description" "gdata", "type" "object", "properties" {"chunkSizeBytes" {"description" "gdata", "format" "int64", "type" "string"}, "checksumsLocation" {"$ref" "GdataCompositeMedia", "description" "gdata"}, "objectSizeBytes" {"description" "gdata", "format" "int64", "type" "string"}, "objectLocation" {"description" "gdata", "$ref" "GdataCompositeMedia"}, "objectVersion" {"description" "gdata", "type" "string"}}}, "ListJobsResponse" {"description" "Response message for ReportingService.ListJobs.", "type" "object", "properties" {"jobs" {"description" "The list of jobs.", "type" "array", "items" {"$ref" "Job"}}, "nextPageToken" {"description" "A token to retrieve next page of results.\nPass this value in the\nListJobsRequest.page_token\nfield in the subsequent call to `ListJobs` method to retrieve the next\npage of results.", "type" "string"}}, "id" "ListJobsResponse"}, "GdataDownloadParameters" {"type" "object", "properties" {"ignoreRange" {"description" "gdata", "type" "boolean"}, "allowGzipCompression" {"description" "gdata", "type" "boolean"}}, "id" "GdataDownloadParameters", "description" "gdata"}}}