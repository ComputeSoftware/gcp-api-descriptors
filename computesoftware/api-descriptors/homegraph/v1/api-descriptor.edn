#:compute.gcp.descriptor{:name "homegraph", :title "HomeGraph API", :api-version "v1", :revision "20200415", :endpoint #:compute.gcp.descriptor{:url "https://homegraph.googleapis.com/", :batch-path "batch"}, :parameters {"callback" {"location" "query", "description" "JSONP", "type" "string"}, "uploadType" {"location" "query", "description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "type" "string"}, "key" {"location" "query", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "type" "string"}, "access_token" {"location" "query", "description" "OAuth access token.", "type" "string"}, "oauth_token" {"description" "OAuth 2.0 token for the current user.", "type" "string", "location" "query"}, "prettyPrint" {"location" "query", "description" "Returns response with indentations and line breaks.", "type" "boolean", "default" "true"}, "alt" {"location" "query", "description" "Data format for response.", "default" "json", "enum" ["json" "media" "proto"], "type" "string", "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"]}, "$.xgafv" {"enumDescriptions" ["v1 error format" "v2 error format"], "location" "query", "enum" ["1" "2"], "description" "V1 error format.", "type" "string"}, "fields" {"location" "query", "description" "Selector specifying which fields to include in a partial response.", "type" "string"}, "upload_protocol" {"description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "type" "string", "location" "query"}, "quotaUser" {"location" "query", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "type" "string"}}, :op->info {"homegraph.agentUsers.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1/agentUsers/{agentUsersId}", :response {"$ref" "Empty"}, :parameters {"requestId" {"location" "query", "description" "Request ID used for debugging.", "type" "string"}, "agentUserId" {"required" true, "type" "string", "pattern" "^agentUsers/.*$", "location" "path", "description" "Required. Third-party user ID."}}, :description "Unlinks the given third-party user from your smart home Action.\nAll data related to this user will be deleted.\n\nFor more details on how users link their accounts, see\n[fulfillment and\nauthentication](https://developers.google.com/assistant/smarthome/concepts/fulfillment-authentication).\n\nThe third-party user's identity is passed in via the `agent_user_id`\n(see DeleteAgentUserRequest).\nThis request must be authorized using service account credentials from your\nActions console project."}, "homegraph.devices.reportStateAndNotification" #:compute.gcp.descriptor{:http-method :post, :path "v1/devices:reportStateAndNotification", :request {"$ref" "ReportStateAndNotificationRequest"}, :response {"$ref" "ReportStateAndNotificationResponse"}, :parameters {}, :description "Reports device state and optionally sends device notifications.\nCalled by your smart home Action when the state of a third-party device\nchanges or you need to send a notification about the device.\nSee [Implement Report\nState](https://developers.google.com/assistant/smarthome/develop/report-state)\nfor more information.\n\nThis method updates the device state according to its declared\n[traits](https://developers.google.com/assistant/smarthome/concepts/devices-traits).\nPublishing a new state value outside of these traits will result in an\n`INVALID_ARGUMENT` error response.\n\nThe third-party user's identity is passed in via the `agent_user_id`\n(see ReportStateAndNotificationRequest).\nThis request must be authorized using service account credentials from your\nActions console project."}, "homegraph.devices.requestSync" #:compute.gcp.descriptor{:http-method :post, :path "v1/devices:requestSync", :request {"$ref" "RequestSyncDevicesRequest"}, :response {"$ref" "RequestSyncDevicesResponse"}, :parameters {}, :description "Requests Google to send an `action.devices.SYNC`\n[intent](https://developers.google.com/assistant/smarthome/reference/intent/sync)\nto your smart home Action to update device metadata for the given user.\n\n\nThe third-party user's identity is passed via the `agent_user_id`\n(see RequestSyncDevicesRequest).\nThis request must be authorized using service account credentials from your\nActions console project."}, "homegraph.devices.query" #:compute.gcp.descriptor{:http-method :post, :path "v1/devices:query", :request {"$ref" "QueryRequest"}, :response {"$ref" "QueryResponse"}, :parameters {}, :description "Gets the current states in Home Graph for the given set of the third-party\nuser's devices.\n\nThe third-party user's identity is passed in via the `agent_user_id`\n(see QueryRequest).\nThis request must be authorized using service account credentials from your\nActions console project."}, "homegraph.devices.sync" #:compute.gcp.descriptor{:http-method :post, :path "v1/devices:sync", :request {"$ref" "SyncRequest"}, :response {"$ref" "SyncResponse"}, :parameters {}, :description "Gets all the devices associated with the given third-party user.\n\nThe third-party user's identity is passed in via the `agent_user_id`\n(see SyncRequest).\nThis request must be authorized using service account credentials from your\nActions console project."}}, :schemas {"DeviceNames" {"description" "Identifiers used to describe the device.", "type" "object", "properties" {"name" {"description" "Primary name of the device, generally provided by the user.", "type" "string"}, "nicknames" {"description" "Additional names provided by the user for the device.", "type" "array", "items" {"type" "string"}}, "defaultNames" {"description" "List of names provided by the manufacturer rather than the user, such as\nserial numbers, SKUs, etc.", "type" "array", "items" {"type" "string"}}}, "id" "DeviceNames"}, "Empty" {"description" "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.", "type" "object", "properties" {}, "id" "Empty"}, "QueryResponse" {"type" "object", "properties" {"payload" {"$ref" "QueryResponsePayload", "description" "Device states for the devices given in the request."}, "requestId" {"description" "Request ID used for debugging. Copied from the request.", "type" "string"}}, "id" "QueryResponse", "description" "Response type for the\n[`Query`](#google.home.graph.v1.HomeGraphApiService.Query) call.\nThis should follow the same format as the Google smart home\n`action.devices.QUERY`\n[response](https://developers.google.com/assistant/smarthome/reference/intent/query).\n# Example\n\n```json\n{\n  \"requestId\": \"ff36a3cc-ec34-11e6-b1a0-64510650abcf\",\n  \"payload\": {\n    \"devices\": {\n      \"123\": {\n        \"on\": true,\n        \"online\": true\n      },\n      \"456\": {\n        \"on\": true,\n        \"online\": true,\n        \"brightness\": 80,\n        \"color\": {\n          \"name\": \"cerulean\",\n          \"spectrumRGB\": 31655\n        }\n      }\n    }\n  }\n}\n```"}, "StateAndNotificationPayload" {"description" "Payload containing the state and notification information for devices.", "type" "object", "properties" {"devices" {"description" "The devices for updating state and sending notifications.", "$ref" "ReportStateAndNotificationDevice"}}, "id" "StateAndNotificationPayload"}, "SyncResponse" {"type" "object", "properties" {"payload" {"$ref" "SyncResponsePayload", "description" "Devices associated with the third-party user."}, "requestId" {"description" "Request ID used for debugging. Copied from the request.", "type" "string"}}, "id" "SyncResponse", "description" "Response type for the\n[`Sync`](#google.home.graph.v1.HomeGraphApiService.Sync) call.\nThis should follow the same format as the Google smart home\n`action.devices.SYNC`\n[response](https://developers.google.com/assistant/smarthome/reference/intent/sync).\n# Example\n\n```json\n{\n  \"requestId\": \"ff36a3cc-ec34-11e6-b1a0-64510650abcf\",\n  \"payload\": {\n    \"agentUserId\": \"1836.15267389\",\n    \"devices\": [{\n      \"id\": \"123\",\n      \"type\": \"action.devices.types.OUTLET\",\n      \"traits\": [\n        \"action.devices.traits.OnOff\"\n      ],\n      \"name\": {\n        \"defaultNames\": [\"My Outlet 1234\"],\n        \"name\": \"Night light\",\n        \"nicknames\": [\"wall plug\"]\n      },\n      \"willReportState\": false,\n      \"deviceInfo\": {\n        \"manufacturer\": \"lights-out-inc\",\n        \"model\": \"hs1234\",\n        \"hwVersion\": \"3.2\",\n        \"swVersion\": \"11.4\"\n      },\n      \"customData\": {\n        \"fooValue\": 74,\n        \"barValue\": true,\n        \"bazValue\": \"foo\"\n      }\n    }]\n  }\n}\n```"}, "QueryRequestPayload" {"description" "Payload containing device IDs.", "type" "object", "properties" {"devices" {"description" "Third-party device IDs for which to get the device states.", "type" "array", "items" {"$ref" "AgentDeviceId"}}}, "id" "QueryRequestPayload"}, "ReportStateAndNotificationDevice" {"description" "The states and notifications specific to a device.", "type" "object", "properties" {"notifications" {"additionalProperties" {"type" "any", "description" "Properties of the object."}, "description" "Notifications metadata for devices. See the **Device NOTIFICATIONS**\nsection of the individual trait [reference\nguides](https://developers.google.com/assistant/smarthome/traits).", "type" "object"}, "states" {"additionalProperties" {"description" "Properties of the object.", "type" "any"}, "description" "States of devices to update. See the **Device STATES** section\nof the individual trait [reference\nguides](https://developers.google.com/assistant/smarthome/traits).", "type" "object"}}, "id" "ReportStateAndNotificationDevice"}, "RequestSyncDevicesResponse" {"description" "Response type for the\n[`RequestSyncDevices`](#google.home.graph.v1.HomeGraphApiService.RequestSyncDevices)\ncall.\n\nIntentionally empty upon success. An HTTP response code is returned\nwith more details upon failure.", "type" "object", "properties" {}, "id" "RequestSyncDevicesResponse"}, "SyncResponsePayload" {"description" "Payload containing device information.", "type" "object", "properties" {"devices" {"description" "Devices associated with the third-party user.", "type" "array", "items" {"$ref" "Device"}}, "agentUserId" {"description" "Third-party user ID", "type" "string"}}, "id" "SyncResponsePayload"}, "ReportStateAndNotificationRequest" {"description" "Request type for the\n[`ReportStateAndNotification`](#google.home.graph.v1.HomeGraphApiService.ReportStateAndNotification)\ncall. It may include states, notifications, or both. States and notifications\nare defined per `device_id` (for example, \"123\" and \"456\" in the following\nexample).\n# Example\n\n```json\n{\n  \"requestId\": \"ff36a3cc-ec34-11e6-b1a0-64510650abcf\",\n  \"agentUserId\": \"1234\",\n  \"payload\": {\n    \"devices\": {\n      \"states\": {\n        \"123\": {\n          \"on\": true\n        },\n        \"456\": {\n          \"on\": true,\n          \"brightness\": 10\n        }\n      },\n    }\n  }\n}\n```", "type" "object", "properties" {"requestId" {"description" "Request ID used for debugging.", "type" "string"}, "followUpToken" {"description" "Token to maintain state in the follow up notification response.", "type" "string"}, "eventId" {"description" "Unique identifier per event (for example, a doorbell press).", "type" "string"}, "agentUserId" {"type" "string", "description" "Required. Third-party user ID."}, "payload" {"description" "Required. State of devices to update and notification metadata for devices.", "$ref" "StateAndNotificationPayload"}}, "id" "ReportStateAndNotificationRequest"}, "AgentDeviceId" {"description" "Third-party device ID for one device.", "type" "object", "properties" {"id" {"description" "Third-party device ID.", "type" "string"}}, "id" "AgentDeviceId"}, "SyncRequest" {"description" "Request type for the [`Sync`](#google.home.graph.v1.HomeGraphApiService.Sync)\ncall.", "type" "object", "properties" {"agentUserId" {"description" "Required. Third-party user ID.", "type" "string"}, "requestId" {"description" "Request ID used for debugging.", "type" "string"}}, "id" "SyncRequest"}, "RequestSyncDevicesRequest" {"description" "Request type for the\n[`RequestSyncDevices`](#google.home.graph.v1.HomeGraphApiService.RequestSyncDevices)\ncall.", "type" "object", "properties" {"agentUserId" {"description" "Required. Third-party user ID.", "type" "string"}, "async" {"description" "Optional. If set, the request will be added to a queue and a response will\nbe returned immediately. This enables concurrent requests for the given\n`agent_user_id`, but the caller will not receive any error responses.", "type" "boolean"}}, "id" "RequestSyncDevicesRequest"}, "QueryRequestInput" {"description" "Device ID inputs to QueryRequest.", "type" "object", "properties" {"payload" {"description" "Payload containing third-party device IDs.", "$ref" "QueryRequestPayload"}}, "id" "QueryRequestInput"}, "AgentOtherDeviceId" {"description" "Alternate third-party device ID.", "type" "object", "properties" {"agentId" {"description" "Project ID for your smart home Action.", "type" "string"}, "deviceId" {"description" "Unique third-party device ID.", "type" "string"}}, "id" "AgentOtherDeviceId"}, "DeviceInfo" {"description" "Device information.", "type" "object", "properties" {"manufacturer" {"description" "Device manufacturer.", "type" "string"}, "hwVersion" {"description" "Device hardware version.", "type" "string"}, "model" {"type" "string", "description" "Device model."}, "swVersion" {"description" "Device software version.", "type" "string"}}, "id" "DeviceInfo"}, "QueryResponsePayload" {"properties" {"devices" {"additionalProperties" {"additionalProperties" {"description" "Properties of the object.", "type" "any"}, "type" "object"}, "description" "States of the devices. Map of third-party device ID to struct of device\nstates.", "type" "object"}}, "id" "QueryResponsePayload", "description" "Payload containing device states information.", "type" "object"}, "Device" {"description" "Third-party device definition.", "type" "object", "properties" {"customData" {"description" "Custom device attributes stored in Home Graph and provided to your\nsmart home Action in each\n[QUERY](https://developers.google.com/assistant/smarthome/reference/intent/query)\nand\n[EXECUTE](https://developers.google.com/assistant/smarthome/reference/intent/execute)\nintent.", "type" "object", "additionalProperties" {"type" "any", "description" "Properties of the object."}}, "structureHint" {"description" "Suggested name for the structure where this device is installed.\nGoogle attempts to use this value during user setup.", "type" "string"}, "traits" {"description" "Traits supported by the device.\nSee [device\ntraits](https://developers.google.com/assistant/smarthome/traits).", "type" "array", "items" {"type" "string"}}, "id" {"description" "Third-party device ID.", "type" "string"}, "name" {"$ref" "DeviceNames", "description" "Names given to this device by your smart home Action."}, "willReportState" {"description" "Indicates whether your smart home Action will report state of this device\nto Google via\nReportStateAndNotification.", "type" "boolean"}, "attributes" {"description" "Attributes for the traits supported by the device.", "type" "object", "additionalProperties" {"type" "any", "description" "Properties of the object."}}, "type" {"description" "Hardware type of the device.\nSee [device\ntypes](https://developers.google.com/assistant/smarthome/guides).", "type" "string"}, "notificationSupportedByAgent" {"description" "Indicates whether your smart home Action will report notifications\nto Google for this device via\nReportStateAndNotification.\n\nIf your smart home Action enables users to control device notifications,\nyou should update this field and call\nRequestSyncDevices.", "type" "boolean"}, "otherDeviceIds" {"description" "Alternate IDs associated with this device.\nThis is used to identify cloud synced devices enabled for [local\nfulfillment](https://developers.google.com/assistant/smarthome/concepts/local).", "type" "array", "items" {"$ref" "AgentOtherDeviceId"}}, "deviceInfo" {"description" "Device manufacturer, model, hardware version, and software version.", "$ref" "DeviceInfo"}, "roomHint" {"description" "Suggested name for the room where this device is installed.\nGoogle attempts to use this value during user setup.", "type" "string"}}, "id" "Device"}, "QueryRequest" {"description" "Request type for the\n[`Query`](#google.home.graph.v1.HomeGraphApiService.Query) call.", "type" "object", "properties" {"agentUserId" {"description" "Required. Third-party user ID.", "type" "string"}, "requestId" {"description" "Request ID used for debugging.", "type" "string"}, "inputs" {"description" "Required. Inputs containing third-party device IDs for which to\nget the device states.", "type" "array", "items" {"$ref" "QueryRequestInput"}}}, "id" "QueryRequest"}, "ReportStateAndNotificationResponse" {"id" "ReportStateAndNotificationResponse", "description" "Response type for the\n[`ReportStateAndNotification`](#google.home.graph.v1.HomeGraphApiService.ReportStateAndNotification)\ncall.", "type" "object", "properties" {"requestId" {"description" "Request ID copied from ReportStateAndNotificationRequest.", "type" "string"}}}}}