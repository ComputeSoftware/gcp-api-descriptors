#:compute.api-descriptor{:endpoint {:schemes ["https"], :host "www.googleapis.com", :base-path "/"}, :op->spec {"oauth2.tokeninfo" {:description "Get token info", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Tokeninfo"}}}, :parameters [{:description "The oauth2 access token", :in "query", :name "access_token", :type "string"} {:description "The ID token", :in "query", :name "id_token", :type "string"}], :operationId "oauth2.tokeninfo", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/oauth2/v1/tokeninfo", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "oauth2.userinfo.get" {:description "Get user info", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Userinfoplus"}}}, :operationId "oauth2.userinfo.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/oauth2/v1/userinfo", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "oauth2.userinfo.v2.me.get" {:description "Get user info", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Userinfoplus"}}}, :operationId "oauth2.userinfo.v2.me.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/userinfo/v2/me", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}}, :parameters {:alt {:default "json", :description "Data format for the response.", :enum ["json"], :in "query", :name "alt", :type "string"}, :fields {:description "Selector specifying which fields to include in a partial response.", :in "query", :name "fields", :type "string"}, :key {:description "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", :in "query", :name "key", :type "string"}, :oauth_token {:description "OAuth 2.0 token for the current user.", :in "query", :name "oauth_token", :type "string"}, :prettyPrint {:default true, :description "Returns response with indentations and line breaks.", :in "query", :name "prettyPrint", :type "boolean"}, :quotaUser {:description "An opaque string that represents a user for quota purposes. Must not exceed 40 characters.", :in "query", :name "quotaUser", :type "string"}, :userIp {:description "Deprecated. Please use quotaUser instead.", :in "query", :name "userIp", :type "string"}}, :definitions {:Tokeninfo {:properties {:email {:description "The email address of the user. Present only if the email scope is present in the request.", :type "string"}, :issued_to {:description "To whom was the token issued to. In general the same as audience.", :type "string"}, :scope {:description "The space separated list of scopes granted to this token.", :type "string"}, :email_verified {:description "Boolean flag which is true if the email address is verified. Present only if the email scope is present in the request.", :type "boolean"}, :access_type {:description "The access type granted with this token. It can be offline or online.", :type "string"}, :verified_email {:description "Boolean flag which is true if the email address is verified. Present only if the email scope is present in the request.", :type "boolean"}, :audience {:description "Who is the intended audience for this token. In general the same as issued_to.", :type "string"}, :issuer {:description "Who issued the token.", :type "string"}, :expires_in {:description "The expiry time of the token, as number of seconds left until expiry.", :format "int32", :type "integer"}, :user_id {:description "The obfuscated user id.", :type "string"}, :issued_at {:description "The issue time of the token, as number of seconds.", :format "int32", :type "integer"}, :nonce {:description "Nonce of the id token.", :type "string"}}, :type "object"}, :Userinfoplus {:properties {:given_name {:description "The user's first name.", :type "string"}, :email {:description "The user's email address.", :type "string"}, :locale {:description "The user's preferred locale.", :type "string"}, :name {:description "The user's full name.", :type "string"}, :family_name {:description "The user's last name.", :type "string"}, :link {:description "URL of the profile page.", :type "string"}, :id {:description "The obfuscated ID of the user.", :type "string"}, :picture {:description "URL of the user's picture image.", :type "string"}, :verified_email {:default true, :description "Boolean flag which is true if the email address is verified. Always verified because we only return the user's primary email address.", :type "boolean"}, :gender {:description "The user's gender.", :type "string"}, :hd {:description "The hosted domain e.g. example.com if the user is Google apps user.", :type "string"}}, :type "object"}}}