#:compute.api-descriptor{:endpoint {:schemes ["https"], :host "kgsearch.googleapis.com", :base-path "/"}, :op->spec {"kgsearch.entities.search" {:description "Searches Knowledge Graph for entities that match the constraints.\nA list of matched entities will be returned in response, which will be in\nJSON-LD format and compatible with http://schema.org", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/SearchResponse"}}}, :parameters [{:collectionFormat "multi", :description "The list of entity id to be used for search instead of query string.\nTo specify multiple ids in the HTTP request, repeat the parameter in the\nURL as in ...?ids=A&ids=B", :in "query", :items {:type "string"}, :name "ids", :type "array"} {:description "Enables indenting of json results.", :in "query", :name "indent", :type "boolean"} {:collectionFormat "multi", :description "The list of language codes (defined in ISO 693) to run the query with,\ne.g. 'en'.", :in "query", :items {:type "string"}, :name "languages", :type "array"} {:description "Limits the number of entities to be returned.", :in "query", :name "limit", :type "integer"} {:description "Enables prefix match against names and aliases of entities", :in "query", :name "prefix", :type "boolean"} {:description "The literal query string for search.", :in "query", :name "query", :type "string"} {:collectionFormat "multi", :description "Restricts returned entities with these types, e.g. Person\n(as defined in http://schema.org/Person). If multiple types are specified,\nreturned entities will contain one or more of these types.", :in "query", :items {:type "string"}, :name "types", :type "array"}], :operationId "kgsearch.entities.search", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v1/entities:search", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}}, :parameters {:quotaUser {:description "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", :in "query", :name "quotaUser", :type "string"}, :key {:description "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", :in "query", :name "key", :type "string"}, :alt {:default "json", :description "Data format for response.", :enum ["json" "media" "proto"], :in "query", :name "alt", :type "string"}, :access_token {:description "OAuth access token.", :in "query", :name "access_token", :type "string"}, :fields {:description "Selector specifying which fields to include in a partial response.", :in "query", :name "fields", :type "string"}, :upload_protocol {:description "Upload protocol for media (e.g. \"raw\", \"multipart\").", :in "query", :name "upload_protocol", :type "string"}, :uploadType {:description "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", :in "query", :name "uploadType", :type "string"}, :oauth_token {:description "OAuth 2.0 token for the current user.", :in "query", :name "oauth_token", :type "string"}, :prettyPrint {:default true, :description "Returns response with indentations and line breaks.", :in "query", :name "prettyPrint", :type "boolean"}, "$.xgafv" {:description "V1 error format.", :enum ["1" "2"], :in "query", :name "$.xgafv", :type "string"}, :callback {:description "JSONP", :in "query", :name "callback", :type "string"}}, :definitions {:SearchResponse {:description "Response message includes the context and a list of matching results\nwhich contain the detail of associated entities.", :properties {"@context" {:description "The local context applicable for the response. See more details at\nhttp://www.w3.org/TR/json-ld/#context-definitions."}, "@type" {:description "The schema type of top-level JSON-LD object, e.g. ItemList."}, :itemListElement {:description "The item list of search results.", :items {}, :type "array"}}, :type "object"}}}