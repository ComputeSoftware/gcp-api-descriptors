#:compute.gcp.descriptor{:name "kgsearch", :title "Knowledge Graph Search API", :api-version "v1", :revision "20200405", :endpoint #:compute.gcp.descriptor{:url "https://kgsearch.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"type" "string", "location" "query", "description" "JSONP"}, "uploadType" {"location" "query", "description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "type" "string"}, "key" {"location" "query", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "type" "string"}, "access_token" {"description" "OAuth access token.", "type" "string", "location" "query"}, "oauth_token" {"location" "query", "description" "OAuth 2.0 token for the current user.", "type" "string"}, "prettyPrint" {"location" "query", "description" "Returns response with indentations and line breaks.", "type" "boolean", "default" "true"}, "alt" {"enum" ["json" "media" "proto"], "type" "string", "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "location" "query", "description" "Data format for response.", "default" "json"}, "$.xgafv" {"type" "string", "enumDescriptions" ["v1 error format" "v2 error format"], "location" "query", "enum" ["1" "2"], "description" "V1 error format."}, "fields" {"description" "Selector specifying which fields to include in a partial response.", "type" "string", "location" "query"}, "upload_protocol" {"location" "query", "description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "type" "string"}, "quotaUser" {"type" "string", "location" "query", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."}}, :op->info {"kgsearch.entities.search" #:compute.gcp.descriptor{:http-method :get, :path "v1/entities:search", :response {"$ref" "SearchResponse"}, :parameters {"query" {"location" "query", "description" "The literal query string for search.", "type" "string"}, "types" {"type" "string", "repeated" true, "location" "query", "description" "Restricts returned entities with these types, e.g. Person\n(as defined in http://schema.org/Person). If multiple types are specified,\nreturned entities will contain one or more of these types."}, "indent" {"location" "query", "description" "Enables indenting of json results.", "type" "boolean"}, "languages" {"type" "string", "repeated" true, "location" "query", "description" "The list of language codes (defined in ISO 693) to run the query with,\ne.g. 'en'."}, "ids" {"type" "string", "repeated" true, "location" "query", "description" "The list of entity id to be used for search instead of query string.\nTo specify multiple ids in the HTTP request, repeat the parameter in the\nURL as in ...?ids=A&ids=B"}, "limit" {"type" "integer", "location" "query", "description" "Limits the number of entities to be returned.", "format" "int32"}, "prefix" {"type" "boolean", "location" "query", "description" "Enables prefix match against names and aliases of entities"}}, :description "Searches Knowledge Graph for entities that match the constraints.\nA list of matched entities will be returned in response, which will be in\nJSON-LD format and compatible with http://schema.org"}}, :schemas {"SearchResponse" {"description" "Response message includes the context and a list of matching results\nwhich contain the detail of associated entities.", "type" "object", "properties" {"@context" {"description" "The local context applicable for the response. See more details at\nhttp://www.w3.org/TR/json-ld/#context-definitions.", "type" "any"}, "itemListElement" {"description" "The item list of search results.", "type" "array", "items" {"type" "any"}}, "@type" {"description" "The schema type of top-level JSON-LD object, e.g. ItemList.", "type" "any"}}, "id" "SearchResponse"}}}