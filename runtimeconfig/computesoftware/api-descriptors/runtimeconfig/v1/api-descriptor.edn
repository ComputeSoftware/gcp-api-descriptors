#:compute.api-descriptor{:endpoint {:schemes ["https"], :host "runtimeconfig.googleapis.com", :base-path "/"}, :op->spec {"runtimeconfig.operations.delete" {:description "Deletes a long-running operation. This method indicates that the client is\nno longer interested in the operation result. It does not cancel the\noperation. If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Empty"}}}, :parameters [{:description "The name of the operation resource to be deleted.", :in "path", :name "name", :required true, :type "string", :x-reservedExpansion true}], :operationId "runtimeconfig.operations.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/v1/{name}", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "runtimeconfig.operations.list" {:description "Lists operations that match the specified filter in the request. If the\nserver doesn't support this method, it returns `UNIMPLEMENTED`.\n\nNOTE: the `name` binding allows API services to override the binding\nto use different resource name schemes, such as `users/*/operations`. To\noverride the binding, API services can add a binding such as\n`\"/v1/{name=users/*}/operations\"` to their service configuration.\nFor backwards compatibility, the default name includes the operations\ncollection id, however overriding users must ensure the name binding\nis the parent resource, without the operations collection id.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/ListOperationsResponse"}}}, :parameters [{:description "The standard list filter.", :in "query", :name "filter", :type "string"} {:description "The name of the operation's parent resource.", :in "path", :name "name", :required true, :type "string", :x-reservedExpansion true} {:description "The standard list page size.", :in "query", :name "pageSize", :type "integer"} {:description "The standard list page token.", :in "query", :name "pageToken", :type "string"}], :operationId "runtimeconfig.operations.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v1/{name}", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "runtimeconfig.operations.cancel" {:description "Starts asynchronous cancellation on a long-running operation.  The server\nmakes a best effort to cancel the operation, but success is not\nguaranteed.  If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`.  Clients can use\nOperations.GetOperation or\nother methods to check whether the cancellation succeeded or whether the\noperation completed despite cancellation. On successful cancellation,\nthe operation is not deleted; instead, it becomes an operation with\nan Operation.error value with a google.rpc.Status.code of 1,\ncorresponding to `Code.CANCELLED`.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Empty"}}}, :parameters [{:in "body", :name "body", :schema {"$ref" "#/definitions/CancelOperationRequest"}} {:description "The name of the operation resource to be cancelled.", :in "path", :name "name", :required true, :type "string", :x-reservedExpansion true}], :operationId "runtimeconfig.operations.cancel", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/{name}:cancel", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}}, :parameters {:quotaUser {:description "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", :in "query", :name "quotaUser", :type "string"}, :key {:description "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", :in "query", :name "key", :type "string"}, :alt {:default "json", :description "Data format for response.", :enum ["json" "media" "proto"], :in "query", :name "alt", :type "string"}, :access_token {:description "OAuth access token.", :in "query", :name "access_token", :type "string"}, :fields {:description "Selector specifying which fields to include in a partial response.", :in "query", :name "fields", :type "string"}, :upload_protocol {:description "Upload protocol for media (e.g. \"raw\", \"multipart\").", :in "query", :name "upload_protocol", :type "string"}, :uploadType {:description "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", :in "query", :name "uploadType", :type "string"}, :oauth_token {:description "OAuth 2.0 token for the current user.", :in "query", :name "oauth_token", :type "string"}, :prettyPrint {:default true, :description "Returns response with indentations and line breaks.", :in "query", :name "prettyPrint", :type "boolean"}, "$.xgafv" {:description "V1 error format.", :enum ["1" "2"], :in "query", :name "$.xgafv", :type "string"}, :callback {:description "JSONP", :in "query", :name "callback", :type "string"}}, :definitions {:CancelOperationRequest {:description "The request message for Operations.CancelOperation.", :properties {}, :type "object"}, :Empty {:description "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.", :properties {}, :type "object"}, :ListOperationsResponse {:description "The response message for Operations.ListOperations.", :properties {:nextPageToken {:description "The standard List next-page token.", :type "string"}, :operations {:description "A list of operations that matches the specified filter in the request.", :items {"$ref" "#/definitions/Operation"}, :type "array"}}, :type "object"}, :Operation {:description "This resource represents a long-running operation that is the result of a\nnetwork API call.", :properties {:done {:description "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.", :type "boolean"}, :error {"$ref" "#/definitions/Status", :description "The error result of the operation in case of failure or cancellation."}, :metadata {:additionalProperties {:description "Properties of the object. Contains field @type with type URL."}, :description "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.", :type "object"}, :name {:description "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`.", :type "string"}, :response {:additionalProperties {:description "Properties of the object. Contains field @type with type URL."}, :description "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.", :type "object"}}, :type "object"}, :Status {:description "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).", :properties {:code {:description "The status code, which should be an enum value of google.rpc.Code.", :format "int32", :type "integer"}, :details {:description "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.", :items {:additionalProperties {:description "Properties of the object. Contains field @type with type URL."}, :type "object"}, :type "array"}, :message {:description "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.", :type "string"}}, :type "object"}}}