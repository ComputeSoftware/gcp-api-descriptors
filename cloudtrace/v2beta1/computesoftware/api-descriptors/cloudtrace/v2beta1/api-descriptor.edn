#:compute.gcp.descriptor{:name "cloudtrace", :title "Cloud Trace API", :api-version "v2beta1", :revision "20220310", :endpoint #:compute.gcp.descriptor{:url "https://cloudtrace.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"location" "query", "type" "string", "description" "JSONP"}, "uploadType" {"location" "query", "type" "string", "description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."}, "key" {"location" "query", "type" "string", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."}, "access_token" {"type" "string", "description" "OAuth access token.", "location" "query"}, "oauth_token" {"description" "OAuth 2.0 token for the current user.", "location" "query", "type" "string"}, "prettyPrint" {"location" "query", "description" "Returns response with indentations and line breaks.", "default" "true", "type" "boolean"}, "alt" {"default" "json", "type" "string", "location" "query", "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "enum" ["json" "media" "proto"], "description" "Data format for response."}, "$.xgafv" {"enumDescriptions" ["v1 error format" "v2 error format"], "type" "string", "description" "V1 error format.", "location" "query", "enum" ["1" "2"]}, "fields" {"type" "string", "description" "Selector specifying which fields to include in a partial response.", "location" "query"}, "upload_protocol" {"description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "type" "string", "location" "query"}, "quotaUser" {"location" "query", "type" "string", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."}}, :op->info {"cloudtrace.projects.traceSinks.create" #:compute.gcp.descriptor{:http-method :post, :path "v2beta1/{+parent}/traceSinks", :request {"$ref" "TraceSink"}, :response {"$ref" "TraceSink"}, :parameters {"parent" {"pattern" "^projects/[^/]+$", "description" "Required. The resource in which to create the sink (currently only project sinks are supported): \"projects/[PROJECT_ID]\" Examples: `\"projects/my-trace-project\"`, `\"projects/123456789\"`.", "location" "path", "type" "string", "required" true}}, :description "Creates a sink that exports trace spans to a destination. The export of newly-ingested traces begins immediately, unless the sink's `writer_identity` is not permitted to write to the destination. A sink can export traces only from the resource owning the sink (the 'parent')."}, "cloudtrace.projects.traceSinks.patch" #:compute.gcp.descriptor{:http-method :patch, :path "v2beta1/{+name}", :request {"$ref" "TraceSink"}, :response {"$ref" "TraceSink"}, :parameters {"name" {"type" "string", "pattern" "^projects/[^/]+/traceSinks/[^/]+$", "location" "path", "description" "Required. The full resource name of the sink to update, including the parent resource and the sink identifier: \"projects/[PROJECT_NUMBER]/traceSinks/[SINK_ID]\" Example: `\"projects/12345/traceSinks/my-sink-id\"`.", "required" true}, "updateMask" {"description" "Required. Field mask that specifies the fields in `trace_sink` that are to be updated. A sink field is overwritten if, and only if, it is in the update mask. `name` and `writer_identity` fields cannot be updated. An empty `update_mask` is considered an error. For a detailed `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask Example: `updateMask=output_config`.", "location" "query", "format" "google-fieldmask", "type" "string"}}, :description "Updates a sink. This method updates fields in the existing sink according to the provided update mask. The sink's name cannot be changed nor any output-only fields (e.g. the writer_identity)."}, "cloudtrace.projects.traceSinks.list" #:compute.gcp.descriptor{:http-method :get, :path "v2beta1/{+parent}/traceSinks", :response {"$ref" "ListTraceSinksResponse"}, :parameters {"pageSize" {"location" "query", "description" "Optional. The maximum number of results to return from this request. Non-positive values are ignored. The presence of `next_page_token` in the response indicates that more results might be available.", "format" "int32", "type" "integer"}, "pageToken" {"location" "query", "description" "Optional. If present, then retrieve the next batch of results from the preceding call to this method. `page_token` must be the value of `next_page_token` from the previous response. The values of other method parameters should be identical to those in the previous call.", "type" "string"}, "parent" {"required" true, "description" "Required. The parent resource whose sinks are to be listed (currently only project parent resources are supported): \"projects/[PROJECT_ID]\"", "pattern" "^projects/[^/]+$", "location" "path", "type" "string"}}, :description "List all sinks for the parent resource (GCP project)."}, "cloudtrace.projects.traceSinks.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v2beta1/{+name}", :response {"$ref" "Empty"}, :parameters {"name" {"location" "path", "type" "string", "description" "Required. The full resource name of the sink to delete, including the parent resource and the sink identifier: \"projects/[PROJECT_NUMBER]/traceSinks/[SINK_ID]\" Example: `\"projects/12345/traceSinks/my-sink-id\"`.", "pattern" "^projects/[^/]+/traceSinks/[^/]+$", "required" true}}, :description "Deletes a sink."}, "cloudtrace.projects.traceSinks.get" #:compute.gcp.descriptor{:http-method :get, :path "v2beta1/{+name}", :response {"$ref" "TraceSink"}, :parameters {"name" {"pattern" "^projects/[^/]+/traceSinks/[^/]+$", "type" "string", "required" true, "location" "path", "description" "Required. The resource name of the sink: \"projects/[PROJECT_NUMBER]/traceSinks/[SINK_ID]\" Example: `\"projects/12345/traceSinks/my-sink-id\"`."}}, :description "Get a trace sink by name under the parent resource (GCP project)."}}, :schemas {"Empty" {"description" "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.", "id" "Empty", "properties" {}, "type" "object"}, "TraceSink" {"properties" {"name" {"type" "string", "description" "Required. The canonical sink resource name, unique within the project. Must be of the form: projects/[PROJECT_NUMBER]/traceSinks/[SINK_ID]. E.g.: `\"projects/12345/traceSinks/my-project-trace-sink\"`. Sink identifiers are limited to 256 characters and can include only the following characters: upper and lower-case alphanumeric characters, underscores, hyphens, and periods."}, "writerIdentity" {"description" "Output only. A service account name for exporting the data. This field is set by sinks.create and sinks.update. The service account will need to be granted write access to the destination specified in the output configuration, see [Granting access for a resource](/iam/docs/granting-roles-to-service-accounts#granting_access_to_a_service_account_for_a_resource). To create tables and to write data, this account needs the `dataEditor` role. Read more about roles in the [BigQuery documentation](https://cloud.google.com/bigquery/docs/access-control). E.g.: \"service-00000001@00000002.iam.gserviceaccount.com\"", "readOnly" true, "type" "string"}, "outputConfig" {"description" "Required. The export destination.", "$ref" "OutputConfig"}}, "description" "Describes a sink used to export traces to a BigQuery dataset. The sink must be created within a project.", "id" "TraceSink", "type" "object"}, "OutputConfig" {"properties" {"destination" {"type" "string", "description" "The destination for writing trace data. Currently only BigQuery is supported. E.g.: \"bigquery.googleapis.com/projects/[PROJECT_ID]/datasets/[DATASET]\""}}, "id" "OutputConfig", "description" "OutputConfig contains a destination for writing trace data.", "type" "object"}, "ListTraceSinksResponse" {"type" "object", "properties" {"sinks" {"items" {"$ref" "TraceSink"}, "type" "array", "description" "A list of sinks."}, "nextPageToken" {"description" "A paginated response where more pages might be available has `next_page_token` set. To get the next set of results, call the same method again using the value of `next_page_token` as `page_token`.", "type" "string"}}, "description" "Result returned from `ListTraceSinks`.", "id" "ListTraceSinksResponse"}}}