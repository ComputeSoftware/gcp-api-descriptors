#:compute.gcp.descriptor{:name "gkehub", :title "GKE Hub API", :api-version "v2alpha", :revision "20220318", :endpoint #:compute.gcp.descriptor{:url "https://gkehub.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"description" "JSONP", "type" "string", "location" "query"}, "uploadType" {"description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "location" "query", "type" "string"}, "key" {"location" "query", "type" "string", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."}, "access_token" {"description" "OAuth access token.", "type" "string", "location" "query"}, "oauth_token" {"location" "query", "description" "OAuth 2.0 token for the current user.", "type" "string"}, "prettyPrint" {"type" "boolean", "description" "Returns response with indentations and line breaks.", "default" "true", "location" "query"}, "alt" {"location" "query", "type" "string", "enum" ["json" "media" "proto"], "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "default" "json", "description" "Data format for response."}, "$.xgafv" {"enumDescriptions" ["v1 error format" "v2 error format"], "type" "string", "enum" ["1" "2"], "description" "V1 error format.", "location" "query"}, "fields" {"type" "string", "description" "Selector specifying which fields to include in a partial response.", "location" "query"}, "upload_protocol" {"type" "string", "description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "location" "query"}, "quotaUser" {"type" "string", "location" "query", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."}}, :op->info {"gkehub.projects.locations.operations.list" #:compute.gcp.descriptor{:http-method :get, :path "v2alpha/{+name}/operations", :response {"$ref" "ListOperationsResponse"}, :parameters {"name" {"type" "string", "description" "The name of the operation's parent resource.", "required" true, "location" "path", "pattern" "^projects/[^/]+/locations/[^/]+$"}, "pageToken" {"description" "The standard list page token.", "location" "query", "type" "string"}, "pageSize" {"location" "query", "description" "The standard list page size.", "format" "int32", "type" "integer"}, "filter" {"type" "string", "location" "query", "description" "The standard list filter."}}, :description "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."}, "gkehub.projects.locations.operations.get" #:compute.gcp.descriptor{:http-method :get, :path "v2alpha/{+name}", :response {"$ref" "Operation"}, :parameters {"name" {"type" "string", "description" "The name of the operation resource.", "pattern" "^projects/[^/]+/locations/[^/]+/operations/[^/]+$", "location" "path", "required" true}}, :description "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."}, "gkehub.projects.locations.operations.cancel" #:compute.gcp.descriptor{:http-method :post, :path "v2alpha/{+name}:cancel", :request {"$ref" "CancelOperationRequest"}, :response {"$ref" "Empty"}, :parameters {"name" {"description" "The name of the operation resource to be cancelled.", "pattern" "^projects/[^/]+/locations/[^/]+/operations/[^/]+$", "location" "path", "required" true, "type" "string"}}, :description "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."}, "gkehub.projects.locations.get" #:compute.gcp.descriptor{:http-method :get, :path "v2alpha/{+name}", :response {"$ref" "Location"}, :parameters {"name" {"pattern" "^projects/[^/]+/locations/[^/]+$", "description" "Resource name for the location.", "required" true, "location" "path", "type" "string"}}, :description "Gets information about a location."}, "gkehub.projects.locations.list" #:compute.gcp.descriptor{:http-method :get, :path "v2alpha/{+name}/locations", :response {"$ref" "ListLocationsResponse"}, :parameters {"filter" {"type" "string", "location" "query", "description" "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in [AIP-160](https://google.aip.dev/160)."}, "pageToken" {"description" "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.", "location" "query", "type" "string"}, "pageSize" {"description" "The maximum number of results to return. If not set, the service selects a default.", "location" "query", "format" "int32", "type" "integer"}, "name" {"required" true, "type" "string", "pattern" "^projects/[^/]+$", "description" "The resource that owns the locations collection, if applicable.", "location" "path"}}, :description "Lists information about the supported locations for this service."}}, :schemas {"ListLocationsResponse" {"properties" {"locations" {"description" "A list of locations that matches the specified filter in the request.", "items" {"$ref" "Location"}, "type" "array"}, "nextPageToken" {"description" "The standard List next-page token.", "type" "string"}}, "id" "ListLocationsResponse", "type" "object", "description" "The response message for Locations.ListLocations."}, "Empty" {"type" "object", "description" "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }", "properties" {}, "id" "Empty"}, "Operation" {"id" "Operation", "type" "object", "properties" {"metadata" {"additionalProperties" {"description" "Properties of the object. Contains field @type with type URL.", "type" "any"}, "type" "object", "description" "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."}, "done" {"description" "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.", "type" "boolean"}, "name" {"description" "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.", "type" "string"}, "error" {"description" "The error result of the operation in case of failure or cancellation.", "$ref" "GoogleRpcStatus"}, "response" {"additionalProperties" {"description" "Properties of the object. Contains field @type with type URL.", "type" "any"}, "description" "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.", "type" "object"}}, "description" "This resource represents a long-running operation that is the result of a network API call."}, "GoogleRpcStatus" {"type" "object", "properties" {"code" {"format" "int32", "type" "integer", "description" "The status code, which should be an enum value of google.rpc.Code."}, "message" {"description" "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.", "type" "string"}, "details" {"items" {"type" "object", "additionalProperties" {"type" "any", "description" "Properties of the object. Contains field @type with type URL."}}, "type" "array", "description" "A list of messages that carry the error details. There is a common set of message types for APIs to use."}}, "description" "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).", "id" "GoogleRpcStatus"}, "Location" {"id" "Location", "type" "object", "description" "A resource that represents Google Cloud Platform location.", "properties" {"labels" {"type" "object", "description" "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}", "additionalProperties" {"type" "string"}}, "displayName" {"description" "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".", "type" "string"}, "metadata" {"type" "object", "additionalProperties" {"type" "any", "description" "Properties of the object. Contains field @type with type URL."}, "description" "Service-specific metadata. For example the available capacity at the given location."}, "name" {"type" "string", "description" "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"}, "locationId" {"type" "string", "description" "The canonical id for this location. For example: `\"us-east1\"`."}}}, "CancelOperationRequest" {"properties" {}, "id" "CancelOperationRequest", "type" "object", "description" "The request message for Operations.CancelOperation."}, "ListOperationsResponse" {"properties" {"nextPageToken" {"type" "string", "description" "The standard List next-page token."}, "operations" {"description" "A list of operations that matches the specified filter in the request.", "type" "array", "items" {"$ref" "Operation"}}}, "description" "The response message for Operations.ListOperations.", "id" "ListOperationsResponse", "type" "object"}}}