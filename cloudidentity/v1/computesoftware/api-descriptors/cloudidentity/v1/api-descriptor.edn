#:compute.gcp.descriptor{:name "cloudidentity", :title "Cloud Identity API", :api-version "v1", :revision "20200411", :endpoint #:compute.gcp.descriptor{:url "https://cloudidentity.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"location" "query", "description" "JSONP", "type" "string"}, "uploadType" {"location" "query", "description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "type" "string"}, "key" {"location" "query", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "type" "string"}, "access_token" {"description" "OAuth access token.", "type" "string", "location" "query"}, "oauth_token" {"location" "query", "description" "OAuth 2.0 token for the current user.", "type" "string"}, "prettyPrint" {"type" "boolean", "default" "true", "location" "query", "description" "Returns response with indentations and line breaks."}, "alt" {"enum" ["json" "media" "proto"], "type" "string", "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "location" "query", "description" "Data format for response.", "default" "json"}, "$.xgafv" {"enumDescriptions" ["v1 error format" "v2 error format"], "location" "query", "enum" ["1" "2"], "description" "V1 error format.", "type" "string"}, "fields" {"description" "Selector specifying which fields to include in a partial response.", "type" "string", "location" "query"}, "upload_protocol" {"location" "query", "description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "type" "string"}, "quotaUser" {"location" "query", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "type" "string"}}, :op->info {"cloudidentity.groups.patch" #:compute.gcp.descriptor{:http-method :patch, :path "v1/groups/{groupsId}", :request {"$ref" "Group"}, :response {"$ref" "Operation"}, :parameters {"name" {"pattern" "^groups/[^/]+$", "location" "path", "description" "Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the\nGroup in the format: `groups/{group_id}`, where group_id is the unique ID\nassigned to the Group.\n\nMust be left blank while creating a Group.", "required" true, "type" "string"}, "updateMask" {"type" "string", "location" "query", "description" "Required. Editable fields: `display_name`, `description`", "format" "google-fieldmask"}}, :description "Updates a Group."}, "cloudidentity.groups.get" #:compute.gcp.descriptor{:http-method :get, :path "v1/groups/{groupsId}", :response {"$ref" "Group"}, :parameters {"name" {"pattern" "^groups/[^/]+$", "location" "path", "description" "Required. [Resource name](https://cloud.google.com/apis/design/resource_names) of the\nGroup in the format: `groups/{group_id}`, where `group_id` is the unique ID\nassigned to the Group.", "required" true, "type" "string"}}, :description "Retrieves a Group."}, "cloudidentity.groups.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1/groups/{groupsId}", :response {"$ref" "Operation"}, :parameters {"name" {"required" true, "type" "string", "pattern" "^groups/[^/]+$", "location" "path", "description" "Required. [Resource name](https://cloud.google.com/apis/design/resource_names) of the\nGroup in the format: `groups/{group_id}`, where `group_id` is the unique ID\nassigned to the Group."}}, :description "Deletes a Group."}, "cloudidentity.groups.list" #:compute.gcp.descriptor{:http-method :get, :path "v1/groups", :response {"$ref" "ListGroupsResponse"}, :parameters {"pageToken" {"description" "The next_page_token value returned from a previous list request, if any.", "type" "string", "location" "query"}, "pageSize" {"location" "query", "description" "The default page size is 200 (max 1000) for the BASIC view, and 50\n(max 500) for the FULL view.", "format" "int32", "type" "integer"}, "view" {"location" "query", "enum" ["VIEW_UNSPECIFIED" "BASIC" "FULL"], "description" "Group resource view to be returned. Defaults to [View.BASIC]().", "type" "string"}, "parent" {"description" "Required. Customer ID to list all groups from.", "type" "string", "location" "query"}}, :description "Lists groups within a customer or a domain."}, "cloudidentity.groups.create" #:compute.gcp.descriptor{:http-method :post, :path "v1/groups", :request {"$ref" "Group"}, :response {"$ref" "Operation"}, :parameters {}, :description "Creates a Group."}, "cloudidentity.groups.lookup" #:compute.gcp.descriptor{:http-method :get, :path "v1/groups:lookup", :response {"$ref" "LookupGroupNameResponse"}, :parameters {"groupKey.id" {"description" "The ID of the entity within the given namespace. The ID must be unique\nwithin its namespace.", "type" "string", "location" "query"}, "groupKey.namespace" {"type" "string", "location" "query", "description" "Namespaces provide isolation for IDs, so an ID only needs to be unique\nwithin its namespace.\n\nNamespaces are currently only created as part of IdentitySource creation\nfrom Admin Console. A namespace `\"identitysources/{identity_source_id}\"` is\ncreated corresponding to every Identity Source `identity_source_id`."}}, :description "Looks up [resource\nname](https://cloud.google.com/apis/design/resource_names) of a Group by\nits EntityKey."}, "cloudidentity.groups.search" #:compute.gcp.descriptor{:http-method :get, :path "v1/groups:search", :response {"$ref" "SearchGroupsResponse"}, :parameters {"pageToken" {"type" "string", "location" "query", "description" "The next_page_token value returned from a previous search request, if any."}, "pageSize" {"description" "The default page size is 200 (max 1000) for the BASIC view, and 50\n(max 500) for the FULL view.", "format" "int32", "type" "integer", "location" "query"}, "query" {"description" "Required. `Required`. Query string for performing search on groups. Users can search\non parent and label attributes of groups.\nEXACT match ('==') is supported on parent, and CONTAINS match ('in') is\nsupported on labels.", "type" "string", "location" "query"}, "view" {"description" "Group resource view to be returned. Defaults to [View.BASIC]().", "type" "string", "location" "query", "enum" ["VIEW_UNSPECIFIED" "BASIC" "FULL"]}}, :description "Searches for Groups."}}, :schemas {"Membership" {"description" "Resource representing a Membership within a Group", "type" "object", "properties" {"preferredMemberKey" {"$ref" "EntityKey", "description" "Required. Immutable. EntityKey of the entity to be added as the member. Must be set while\ncreating a Membership, read-only afterwards.\n\nCurrently allowed entity types: `Users`, `Groups`."}, "createTime" {"type" "string", "description" "Output only. Creation timestamp of the Membership. Output only.", "format" "google-datetime"}, "updateTime" {"description" "Output only. Last updated timestamp of the Membership. Output only.", "format" "google-datetime", "type" "string"}, "roles" {"type" "array", "items" {"$ref" "MembershipRole"}, "description" "Roles for a member within the Group.\n\nCurrently supported MembershipRoles: `\"MEMBER\"`."}, "name" {"type" "string", "description" "Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the\nMembership in the format: `groups/{group_id}/memberships/{member_id}`,\nwhere group_id is the unique ID assigned to the Group to which Membership\nbelongs to, and member_id is the unique ID assigned to the member\n\nMust be left blank while creating a Membership."}}, "id" "Membership"}, "LookupGroupNameResponse" {"type" "object", "properties" {"name" {"description" "[Resource name](https://cloud.google.com/apis/design/resource_names) of the\nGroup in the format: `groups/{group_id}`, where `group_id` is the unique ID\nassigned to the Group.", "type" "string"}}, "id" "LookupGroupNameResponse"}, "ListGroupsResponse" {"type" "object", "properties" {"groups" {"description" "Groups returned in response to list request.\nThe results are not sorted.", "type" "array", "items" {"$ref" "Group"}}, "nextPageToken" {"description" "Token to retrieve the next page of results, or empty if there are no\nmore results available for listing.", "type" "string"}}, "id" "ListGroupsResponse", "description" "Response message for ListGroups operation."}, "Operation" {"description" "This resource represents a long-running operation that is the result of a\nnetwork API call.", "type" "object", "properties" {"done" {"description" "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.", "type" "boolean"}, "response" {"additionalProperties" {"type" "any", "description" "Properties of the object. Contains field @type with type URL."}, "description" "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.", "type" "object"}, "name" {"description" "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`.", "type" "string"}, "error" {"$ref" "Status", "description" "The error result of the operation in case of failure or cancellation."}, "metadata" {"additionalProperties" {"description" "Properties of the object. Contains field @type with type URL.", "type" "any"}, "description" "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.", "type" "object"}}, "id" "Operation"}, "Status" {"description" "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).", "type" "object", "properties" {"code" {"type" "integer", "description" "The status code, which should be an enum value of google.rpc.Code.", "format" "int32"}, "message" {"description" "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.", "type" "string"}, "details" {"type" "array", "items" {"type" "object", "additionalProperties" {"description" "Properties of the object. Contains field @type with type URL.", "type" "any"}}, "description" "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."}}, "id" "Status"}, "LookupMembershipNameResponse" {"type" "object", "properties" {"name" {"type" "string", "description" "[Resource name](https://cloud.google.com/apis/design/resource_names) of the\nMembership being looked up.\n\nFormat: `groups/{group_id}/memberships/{member_id}`, where `group_id` is\nthe unique ID assigned to the Group to which Membership belongs to, and\n`member_id` is the unique ID assigned to the member."}}, "id" "LookupMembershipNameResponse"}, "MembershipRole" {"description" "Resource representing a role within a Membership.", "type" "object", "properties" {"name" {"description" "MembershipRole in string format.\n\nCurrently supported MembershipRoles: `\"MEMBER\"`.", "type" "string"}}, "id" "MembershipRole"}, "ListMembershipsResponse" {"type" "object", "properties" {"memberships" {"description" "List of Memberships.", "type" "array", "items" {"$ref" "Membership"}}, "nextPageToken" {"description" "Token to retrieve the next page of results, or empty if there are no\nmore results available for listing.", "type" "string"}}, "id" "ListMembershipsResponse"}, "Group" {"type" "object", "properties" {"displayName" {"description" "The Group's display name.", "type" "string"}, "description" {"description" "An extended description to help users determine the purpose of a Group. For\nexample, you can include information about who should join the Group, the\ntypes of messages to send to the Group, links to FAQs about the Group, or\nrelated Groups. Maximum length is 4,096 characters.", "type" "string"}, "parent" {"description" "Required. Immutable. The entity under which this Group resides in Cloud Identity resource\nhierarchy. Must be set when creating a Group, read-only afterwards.\n\nCurrently allowed types: `identitysources`.", "type" "string"}, "createTime" {"description" "Output only. The time when the Group was created.\nOutput only.", "format" "google-datetime", "type" "string"}, "labels" {"additionalProperties" {"type" "string"}, "description" "Required. `Required`. Labels for Group resource.\nFor creating Groups under a namespace, set label key to\n'labels/system/groups/external' and label value as empty.", "type" "object"}, "updateTime" {"description" "Output only. The time when the Group was last updated.\nOutput only.", "format" "google-datetime", "type" "string"}, "name" {"description" "Output only. [Resource name](https://cloud.google.com/apis/design/resource_names) of the\nGroup in the format: `groups/{group_id}`, where group_id is the unique ID\nassigned to the Group.\n\nMust be left blank while creating a Group.", "type" "string"}, "groupKey" {"description" "Required. Immutable. EntityKey of the Group.\n\nMust be set when creating a Group, read-only afterwards.", "$ref" "EntityKey"}}, "id" "Group", "description" "Resource representing a Group."}, "EntityKey" {"id" "EntityKey", "description" "An EntityKey uniquely identifies an Entity. Namespaces are used to provide\nisolation for IDs. A single ID can be reused across namespaces but the\ncombination of a namespace and an ID must be unique.", "type" "object", "properties" {"id" {"description" "The ID of the entity within the given namespace. The ID must be unique\nwithin its namespace.", "type" "string"}, "namespace" {"description" "Namespaces provide isolation for IDs, so an ID only needs to be unique\nwithin its namespace.\n\nNamespaces are currently only created as part of IdentitySource creation\nfrom Admin Console. A namespace `\"identitysources/{identity_source_id}\"` is\ncreated corresponding to every Identity Source `identity_source_id`.", "type" "string"}}}, "SearchGroupsResponse" {"type" "object", "properties" {"groups" {"type" "array", "items" {"$ref" "Group"}, "description" "List of Groups satisfying the search query."}, "nextPageToken" {"description" "Token to retrieve the next page of results, or empty if there are no\nmore results available for specified query.", "type" "string"}}, "id" "SearchGroupsResponse"}}}