#:compute.gcp.descriptor{:name "libraryagent", :title "Library Agent API", :api-version "v1", :revision "20200426", :endpoint #:compute.gcp.descriptor{:url "https://libraryagent.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"location" "query", "description" "JSONP", "type" "string"}, "uploadType" {"description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "type" "string", "location" "query"}, "key" {"type" "string", "location" "query", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."}, "access_token" {"location" "query", "description" "OAuth access token.", "type" "string"}, "oauth_token" {"location" "query", "description" "OAuth 2.0 token for the current user.", "type" "string"}, "prettyPrint" {"description" "Returns response with indentations and line breaks.", "default" "true", "type" "boolean", "location" "query"}, "alt" {"enum" ["json" "media" "proto"], "type" "string", "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "location" "query", "description" "Data format for response.", "default" "json"}, "$.xgafv" {"enumDescriptions" ["v1 error format" "v2 error format"], "location" "query", "enum" ["1" "2"], "description" "V1 error format.", "type" "string"}, "fields" {"description" "Selector specifying which fields to include in a partial response.", "type" "string", "location" "query"}, "upload_protocol" {"description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "type" "string", "location" "query"}, "quotaUser" {"type" "string", "location" "query", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."}}, :op->info {"libraryagent.shelves.list" #:compute.gcp.descriptor{:http-method :get, :path "v1/shelves", :response {"$ref" "GoogleExampleLibraryagentV1ListShelvesResponse"}, :parameters {"pageToken" {"location" "query", "description" "A token identifying a page of results the server should return.\nTypically, this is the value of\nListShelvesResponse.next_page_token\nreturned from the previous call to `ListShelves` method.", "type" "string"}, "pageSize" {"format" "int32", "description" "Requested page size. Server may return fewer shelves than requested.\nIf unspecified, server will pick an appropriate default.", "type" "integer", "location" "query"}}, :description "Lists shelves. The order is unspecified but deterministic. Newly created\nshelves will not necessarily be added to the end of this list."}, "libraryagent.shelves.get" #:compute.gcp.descriptor{:http-method :get, :path "v1/shelves/{shelvesId}", :response {"$ref" "GoogleExampleLibraryagentV1Shelf"}, :parameters {"name" {"location" "path", "description" "Required. The name of the shelf to retrieve.", "type" "string", "required" true, "pattern" "^shelves/[^/]+$"}}, :description "Gets a shelf. Returns NOT_FOUND if the shelf does not exist."}, "libraryagent.shelves.books.borrow" #:compute.gcp.descriptor{:http-method :post, :path "v1/shelves/{shelvesId}/books/{booksId}:borrow", :response {"$ref" "GoogleExampleLibraryagentV1Book"}, :parameters {"name" {"location" "path", "description" "Required. The name of the book to borrow.", "type" "string", "required" true, "pattern" "^shelves/[^/]+/books/[^/]+$"}}, :description "Borrow a book from the library. Returns the book if it is borrowed\nsuccessfully. Returns NOT_FOUND if the book does not exist in the library.\nReturns quota exceeded error if the amount of books borrowed exceeds\nallocation quota in any dimensions."}, "libraryagent.shelves.books.list" #:compute.gcp.descriptor{:http-method :get, :path "v1/shelves/{shelvesId}/books", :response {"$ref" "GoogleExampleLibraryagentV1ListBooksResponse"}, :parameters {"pageToken" {"location" "query", "description" "A token identifying a page of results the server should return.\nTypically, this is the value of\nListBooksResponse.next_page_token.\nreturned from the previous call to `ListBooks` method.", "type" "string"}, "pageSize" {"location" "query", "format" "int32", "description" "Requested page size. Server may return fewer books than requested.\nIf unspecified, server will pick an appropriate default.", "type" "integer"}, "parent" {"description" "Required. The name of the shelf whose books we'd like to list.", "type" "string", "required" true, "pattern" "^shelves/[^/]+$", "location" "path"}}, :description "Lists books in a shelf. The order is unspecified but deterministic. Newly\ncreated books will not necessarily be added to the end of this list.\nReturns NOT_FOUND if the shelf does not exist."}, "libraryagent.shelves.books.get" #:compute.gcp.descriptor{:http-method :get, :path "v1/shelves/{shelvesId}/books/{booksId}", :response {"$ref" "GoogleExampleLibraryagentV1Book"}, :parameters {"name" {"description" "Required. The name of the book to retrieve.", "type" "string", "required" true, "pattern" "^shelves/[^/]+/books/[^/]+$", "location" "path"}}, :description "Gets a book. Returns NOT_FOUND if the book does not exist."}, "libraryagent.shelves.books.return" #:compute.gcp.descriptor{:http-method :post, :path "v1/shelves/{shelvesId}/books/{booksId}:return", :response {"$ref" "GoogleExampleLibraryagentV1Book"}, :parameters {"name" {"pattern" "^shelves/[^/]+/books/[^/]+$", "location" "path", "description" "Required. The name of the book to return.", "type" "string", "required" true}}, :description "Return a book to the library. Returns the book if it is returned to the\nlibrary successfully.\nReturns error if the book does not belong to the library\nor the users didn't borrow before."}}, :schemas {"GoogleExampleLibraryagentV1ListShelvesResponse" {"description" "Response message for LibraryAgent.ListShelves.", "type" "object", "properties" {"shelves" {"description" "The list of shelves.", "items" {"$ref" "GoogleExampleLibraryagentV1Shelf"}, "type" "array"}, "nextPageToken" {"description" "A token to retrieve next page of results.\nPass this value in the\nListShelvesRequest.page_token\nfield in the subsequent call to `ListShelves` method to retrieve the next\npage of results.", "type" "string"}}, "id" "GoogleExampleLibraryagentV1ListShelvesResponse"}, "GoogleExampleLibraryagentV1Book" {"properties" {"title" {"description" "The title of the book.", "type" "string"}, "name" {"description" "The resource name of the book.\nBook names have the form `shelves/{shelf_id}/books/{book_id}`.\nThe name is ignored when creating a book.", "type" "string"}, "read" {"description" "Value indicating whether the book has been read.", "type" "boolean"}, "author" {"description" "The name of the book author.", "type" "string"}}, "id" "GoogleExampleLibraryagentV1Book", "description" "A single book in the library.", "type" "object"}, "GoogleExampleLibraryagentV1Shelf" {"description" "A Shelf contains a collection of books with a theme.", "type" "object", "properties" {"name" {"description" "Output only. The resource name of the shelf.\nShelf names have the form `shelves/{shelf_id}`.\nThe name is ignored when creating a shelf.", "type" "string"}, "theme" {"description" "The theme of the shelf", "type" "string"}}, "id" "GoogleExampleLibraryagentV1Shelf"}, "GoogleExampleLibraryagentV1ListBooksResponse" {"id" "GoogleExampleLibraryagentV1ListBooksResponse", "description" "Response message for LibraryAgent.ListBooks.", "type" "object", "properties" {"books" {"description" "The list of books.", "items" {"$ref" "GoogleExampleLibraryagentV1Book"}, "type" "array"}, "nextPageToken" {"type" "string", "description" "A token to retrieve next page of results.\nPass this value in the\nListBooksRequest.page_token\nfield in the subsequent call to `ListBooks` method to retrieve the next\npage of results."}}}}}