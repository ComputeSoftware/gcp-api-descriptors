#:compute.api-descriptor{:endpoint #:compute.gcp.impl.descriptor{:url "https://libraryagent.googleapis.com/"}, :op->spec {"libraryagent.shelves.list" {:operationId "libraryagent.shelves.list", :description "Lists shelves. The order is unspecified but deterministic. Newly created\nshelves will not necessarily be added to the end of this list.", :parameters [{:description "Requested page size. Server may return fewer shelves than requested.\nIf unspecified, server will pick an appropriate default.", :in "query", :name "pageSize", :schema {:type "integer"}} {:description "A token identifying a page of results the server should return.\nTypically, this is the value of\nListShelvesResponse.next_page_token\nreturned from the previous call to `ListShelves` method.", :in "query", :name "pageToken", :schema {:type "string"}}], :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v1/shelves"}, "libraryagent.shelves.books.get" {:operationId "libraryagent.shelves.books.get", :description "Gets a book. Returns NOT_FOUND if the book does not exist.", :parameters [{:description "Required. The name of the book to retrieve.", :in "path", :name "name", :required true, :schema {:type "string"}, :x-reservedExpansion true}], :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v1/{name}"}, "libraryagent.shelves.books.borrow" {:operationId "libraryagent.shelves.books.borrow", :description "Borrow a book from the library. Returns the book if it is borrowed\nsuccessfully. Returns NOT_FOUND if the book does not exist in the library.\nReturns quota exceeded error if the amount of books borrowed exceeds\nallocation quota in any dimensions.", :parameters [{:description "Required. The name of the book to borrow.", :in "path", :name "name", :required true, :schema {:type "string"}, :x-reservedExpansion true}], :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/{name}:borrow"}, "libraryagent.shelves.books.return" {:operationId "libraryagent.shelves.books.return", :description "Return a book to the library. Returns the book if it is returned to the\nlibrary successfully.\nReturns error if the book does not belong to the library\nor the users didn't borrow before.", :parameters [{:description "Required. The name of the book to return.", :in "path", :name "name", :required true, :schema {:type "string"}, :x-reservedExpansion true}], :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/{name}:return"}, "libraryagent.shelves.books.list" {:operationId "libraryagent.shelves.books.list", :description "Lists books in a shelf. The order is unspecified but deterministic. Newly\ncreated books will not necessarily be added to the end of this list.\nReturns NOT_FOUND if the shelf does not exist.", :parameters [{:description "Required. The name of the shelf whose books we'd like to list.", :in "path", :name "parent", :required true, :schema {:type "string"}, :x-reservedExpansion true} {:description "Requested page size. Server may return fewer books than requested.\nIf unspecified, server will pick an appropriate default.", :in "query", :name "pageSize", :schema {:type "integer"}} {:description "A token identifying a page of results the server should return.\nTypically, this is the value of\nListBooksResponse.next_page_token.\nreturned from the previous call to `ListBooks` method.", :in "query", :name "pageToken", :schema {:type "string"}}], :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v1/{parent}/books"}}, :resolve {:components {:parameters {:quotaUser {:description "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", :in "query", :name "quotaUser", :schema {:type "string"}}, :key {:description "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", :in "query", :name "key", :schema {:type "string"}}, :alt {:description "Data format for response.", :in "query", :name "alt", :schema {:default "json", :enum ["json" "media" "proto"], :type "string"}}, :access_token {:description "OAuth access token.", :in "query", :name "access_token", :schema {:type "string"}}, :fields {:description "Selector specifying which fields to include in a partial response.", :in "query", :name "fields", :schema {:type "string"}}, :upload_protocol {:description "Upload protocol for media (e.g. \"raw\", \"multipart\").", :in "query", :name "upload_protocol", :schema {:type "string"}}, :uploadType {:description "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", :in "query", :name "uploadType", :schema {:type "string"}}, :oauth_token {:description "OAuth 2.0 token for the current user.", :in "query", :name "oauth_token", :schema {:type "string"}}, "_.xgafv" {:description "V1 error format.", :in "query", :name "$.xgafv", :schema {:enum ["1" "2"], :type "string"}}, :prettyPrint {:description "Returns response with indentations and line breaks.", :in "query", :name "prettyPrint", :schema {:default true, :type "boolean"}}, :callback {:description "JSONP", :in "query", :name "callback", :schema {:type "string"}}}, :schemas {:GoogleExampleLibraryagentV1Book {:description "A single book in the library.", :properties {:author {:description "The name of the book author.", :type "string"}, :name {:description "The resource name of the book.\nBook names have the form `shelves/{shelf_id}/books/{book_id}`.\nThe name is ignored when creating a book.", :type "string"}, :read {:description "Value indicating whether the book has been read.", :type "boolean"}, :title {:description "The title of the book.", :type "string"}}, :type "object"}, :GoogleExampleLibraryagentV1ListBooksResponse {:description "Response message for LibraryAgent.ListBooks.", :properties {:books {:description "The list of books.", :items {:$ref "#/components/schemas/GoogleExampleLibraryagentV1Book"}, :type "array"}, :nextPageToken {:description "A token to retrieve next page of results.\nPass this value in the\nListBooksRequest.page_token\nfield in the subsequent call to `ListBooks` method to retrieve the next\npage of results.", :type "string"}}, :type "object"}, :GoogleExampleLibraryagentV1ListShelvesResponse {:description "Response message for LibraryAgent.ListShelves.", :properties {:nextPageToken {:description "A token to retrieve next page of results.\nPass this value in the\nListShelvesRequest.page_token\nfield in the subsequent call to `ListShelves` method to retrieve the next\npage of results.", :type "string"}, :shelves {:description "The list of shelves.", :items {:$ref "#/components/schemas/GoogleExampleLibraryagentV1Shelf"}, :type "array"}}, :type "object"}, :GoogleExampleLibraryagentV1Shelf {:description "A Shelf contains a collection of books with a theme.", :properties {:name {:description "Output only. The resource name of the shelf.\nShelf names have the form `shelves/{shelf_id}`.\nThe name is ignored when creating a shelf.", :type "string"}, :theme {:description "The theme of the shelf", :type "string"}}, :type "object"}}, :securitySchemes {:Oauth2 {:description "Oauth 2.0 implicit authentication", :flows {:implicit {:authorizationUrl "https://accounts.google.com/o/oauth2/auth", :scopes {"https://www.googleapis.com/auth/cloud-platform" "View and manage your data across Google Cloud Platform services"}}}, :type "oauth2"}, :Oauth2c {:description "Oauth 2.0 accessCode authentication", :flows {:authorizationCode {:authorizationUrl "https://accounts.google.com/o/oauth2/auth", :scopes {"https://www.googleapis.com/auth/cloud-platform" "View and manage your data across Google Cloud Platform services"}, :tokenUrl "https://accounts.google.com/o/oauth2/token"}}, :type "oauth2"}}}}}