#:compute.gcp.descriptor{:name "discovery", :title "API Discovery Service", :api-version "v1", :revision "20200806", :endpoint #:compute.gcp.descriptor{:url "https://www.googleapis.com/", :batch-path "batch/discovery/v1", :service-path "discovery/v1/"}, :parameters {"oauth_token" {"location" "query", "description" "OAuth 2.0 token for the current user.", "type" "string"}, "prettyPrint" {"type" "boolean", "description" "Returns response with indentations and line breaks.", "location" "query", "default" "true"}, "userIp" {"description" "Deprecated. Please use quotaUser instead.", "location" "query", "type" "string"}, "fields" {"type" "string", "location" "query", "description" "Selector specifying which fields to include in a partial response."}, "quotaUser" {"location" "query", "description" "An opaque string that represents a user for quota purposes. Must not exceed 40 characters.", "type" "string"}, "alt" {"type" "string", "enum" ["json"], "description" "Data format for the response.", "default" "json", "enumDescriptions" ["Responses with Content-Type of application/json"], "location" "query"}, "key" {"location" "query", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "type" "string"}}, :op->info {"discovery.apis.getRest" #:compute.gcp.descriptor{:http-method :get, :path "apis/{api}/{version}/rest", :response {"$ref" "RestDescription"}, :parameters {"api" {"required" true, "location" "path", "type" "string", "description" "The name of the API."}, "version" {"type" "string", "required" true, "location" "path", "description" "The version of the API."}}, :description "Retrieve the description of a particular version of an api."}, "discovery.apis.list" #:compute.gcp.descriptor{:http-method :get, :path "apis", :response {"$ref" "DirectoryList"}, :parameters {"name" {"location" "query", "description" "Only include APIs with the given name.", "type" "string"}, "preferred" {"location" "query", "type" "boolean", "default" "false", "description" "Return only the preferred version of an API."}}, :description "Retrieve the list of APIs supported at this endpoint."}}, :schemas {"RestMethod" {"properties" {"useMediaDownloadService" {"description" "Indicates that downloads from this method should use the download service URL (i.e. \"/download\"). Only applies if the method supports media download.", "type" "boolean"}, "path" {"type" "string", "description" "The URI path of this REST method. Should be used in conjunction with the basePath property at the api-level."}, "id" {"description" "A unique ID for this method. This property can be used to match methods between different versions of Discovery.", "type" "string"}, "httpMethod" {"description" "HTTP method used by this method.", "type" "string"}, "scopes" {"items" {"type" "string"}, "type" "array", "description" "OAuth 2.0 scopes applicable to this method."}, "mediaUpload" {"type" "object", "properties" {"protocols" {"properties" {"simple" {"type" "object", "properties" {"multipart" {"description" "True if this endpoint supports upload multipart media.", "type" "boolean", "default" "true"}, "path" {"description" "The URI path to be used for upload. Should be used in conjunction with the basePath property at the api-level.", "type" "string"}}, "description" "Supports uploading as a single HTTP request."}, "resumable" {"description" "Supports the Resumable Media Upload protocol.", "type" "object", "properties" {"multipart" {"type" "boolean", "default" "true", "description" "True if this endpoint supports uploading multipart media."}, "path" {"description" "The URI path to be used for upload. Should be used in conjunction with the basePath property at the api-level.", "type" "string"}}}}, "description" "Supported upload protocols.", "type" "object"}, "accept" {"description" "MIME Media Ranges for acceptable media uploads to this method.", "items" {"type" "string"}, "type" "array"}, "maxSize" {"description" "Maximum size of a media upload, such as \"1MB\", \"2GB\" or \"3TB\".", "type" "string"}}, "description" "Media upload parameters."}, "request" {"type" "object", "properties" {"$ref" {"type" "string", "description" "Schema ID for the request schema."}, "parameterName" {"type" "string", "description" "parameter name."}}, "description" "The schema for the request."}, "supportsSubscription" {"description" "Whether this method supports subscriptions.", "type" "boolean"}, "supportsMediaUpload" {"description" "Whether this method supports media uploads.", "type" "boolean"}, "response" {"description" "The schema for the response.", "type" "object", "properties" {"$ref" {"type" "string", "description" "Schema ID for the response schema."}}}, "etagRequired" {"description" "Whether this method requires an ETag to be specified. The ETag is sent as an HTTP If-Match or If-None-Match header.", "type" "boolean"}, "parameters" {"additionalProperties" {"description" "Details for a single parameter in this method.", "$ref" "JsonSchema"}, "description" "Details for all parameters in this method.", "type" "object"}, "description" {"description" "Description of this method.", "type" "string"}, "parameterOrder" {"type" "array", "description" "Ordered list of required parameters, serves as a hint to clients on how to structure their method signatures. The array is ordered such that the \"most-significant\" parameter appears first.", "items" {"type" "string"}}, "supportsMediaDownload" {"type" "boolean", "description" "Whether this method supports media downloads."}}, "id" "RestMethod", "type" "object"}, "RestDescription" {"type" "object", "id" "RestDescription", "properties" {"protocol" {"type" "string", "default" "rest", "description" "The protocol described by this document."}, "packagePath" {"type" "string", "description" "The package of the owner of this API. See ownerDomain."}, "schemas" {"additionalProperties" {"description" "An individual schema description.", "$ref" "JsonSchema"}, "description" "The schemas for this API.", "type" "object"}, "documentationLink" {"type" "string", "description" "A link to human readable documentation for the API."}, "batchPath" {"type" "string", "description" "The path for REST batch requests."}, "basePath" {"type" "string", "description" "[DEPRECATED] The base path for REST requests."}, "discoveryVersion" {"description" "Indicate the version of the Discovery API used to generate this doc.", "type" "string", "default" "v1"}, "servicePath" {"description" "The base path for all REST requests.", "type" "string"}, "rootUrl" {"description" "The root URL under which all API services live.", "type" "string"}, "ownerName" {"description" "The name of the owner of this API. See ownerDomain.", "type" "string"}, "methods" {"description" "API-level methods for this API.", "type" "object", "additionalProperties" {"$ref" "RestMethod", "description" "An individual method description."}}, "auth" {"properties" {"oauth2" {"type" "object", "properties" {"scopes" {"description" "Available OAuth 2.0 scopes.", "type" "object", "additionalProperties" {"description" "The scope value.", "type" "object", "properties" {"description" {"description" "Description of scope.", "type" "string"}}}}}, "description" "OAuth 2.0 authentication information."}}, "description" "Authentication information.", "type" "object"}, "id" {"description" "The ID of this API.", "type" "string"}, "revision" {"type" "string", "description" "The version of this API."}, "icons" {"type" "object", "properties" {"x32" {"description" "The URL of the 32x32 icon.", "type" "string"}, "x16" {"description" "The URL of the 16x16 icon.", "type" "string"}}, "description" "Links to 16x16 and 32x32 icons representing the API."}, "exponentialBackoffDefault" {"description" "Enable exponential backoff for suitable methods in the generated clients.", "type" "boolean"}, "name" {"type" "string", "description" "The name of this API."}, "ownerDomain" {"description" "The domain of the owner of this API. Together with the ownerName and a packagePath values, this can be used to generate a library for this API which would have a unique fully qualified name.", "type" "string"}, "labels" {"description" "Labels for the status of this API, such as labs or deprecated.", "items" {"type" "string"}, "type" "array"}, "baseUrl" {"type" "string", "description" "[DEPRECATED] The base URL for REST requests."}, "etag" {"readOnly" true, "description" "The ETag for this response.", "type" "string"}, "kind" {"default" "discovery#restDescription", "type" "string", "description" "The kind for this response."}, "title" {"description" "The title of this API.", "type" "string"}, "version" {"description" "The version of this API.", "type" "string"}, "canonicalName" {"description" "Indicates how the API name should be capitalized and split into various parts. Useful for generating pretty class names.", "type" "string"}, "features" {"description" "A list of supported features for this API.", "type" "array", "items" {"type" "string"}}, "parameters" {"description" "Common parameters that apply across all apis.", "additionalProperties" {"$ref" "JsonSchema", "description" "Description of a single parameter."}, "type" "object"}, "version_module" {"type" "boolean"}, "resources" {"additionalProperties" {"description" "An individual resource description. Contains methods and sub-resources related to this resource.", "$ref" "RestResource"}, "description" "The resources in this API.", "type" "object"}, "description" {"type" "string", "description" "The description of this API."}}}, "RestResource" {"id" "RestResource", "properties" {"resources" {"additionalProperties" {"$ref" "RestResource", "description" "Description for any sub-resources on this resource."}, "description" "Sub-resources on this resource.", "type" "object"}, "methods" {"additionalProperties" {"description" "Description for any methods on this resource.", "$ref" "RestMethod"}, "description" "Methods on this resource.", "type" "object"}}, "type" "object"}, "DirectoryList" {"id" "DirectoryList", "type" "object", "properties" {"discoveryVersion" {"default" "v1", "description" "Indicate the version of the Discovery API used to generate this doc.", "type" "string"}, "kind" {"type" "string", "description" "The kind for this response.", "default" "discovery#directoryList"}, "items" {"description" "The individual directory entries. One entry per api/version pair.", "type" "array", "items" {"properties" {"documentationLink" {"description" "A link to human readable documentation for the API.", "type" "string"}, "discoveryLink" {"description" "A link to the discovery document.", "type" "string"}, "id" {"type" "string", "description" "The id of this API."}, "icons" {"properties" {"x32" {"type" "string", "description" "The URL of the 32x32 icon."}, "x16" {"type" "string", "description" "The URL of the 16x16 icon."}}, "description" "Links to 16x16 and 32x32 icons representing the API.", "type" "object"}, "name" {"description" "The name of the API.", "type" "string"}, "labels" {"description" "Labels for the status of this API, such as labs or deprecated.", "items" {"type" "string"}, "type" "array"}, "kind" {"default" "discovery#directoryItem", "type" "string", "description" "The kind for this response."}, "preferred" {"description" "True if this version is the preferred version to use.", "type" "boolean"}, "title" {"description" "The title of this API.", "type" "string"}, "version" {"type" "string", "description" "The version of the API."}, "discoveryRestUrl" {"type" "string", "description" "The URL for the discovery REST document."}, "description" {"description" "The description of this API.", "type" "string"}}, "type" "object"}}}}, "JsonSchema" {"type" "object", "properties" {"properties" {"description" "If this is a schema for an object, list the schema for each property of this object.", "additionalProperties" {"description" "A single property of this object. The value is itself a JSON Schema object describing this property.", "$ref" "JsonSchema"}, "type" "object"}, "maximum" {"type" "string", "description" "The maximum value of this parameter."}, "id" {"type" "string", "description" "Unique identifier for this schema."}, "minimum" {"description" "The minimum value of this parameter.", "type" "string"}, "repeated" {"type" "boolean", "description" "Whether this parameter may appear multiple times."}, "$ref" {"type" "string", "description" "A reference to another schema. The value of this property is the \"id\" of another schema."}, "items" {"$ref" "JsonSchema", "description" "If this is a schema for an array, this property is the schema for each element in the array."}, "location" {"description" "Whether this parameter goes in the query or the path for REST requests.", "type" "string"}, "readOnly" {"description" "The value is read-only, generated by the service. The value cannot be modified by the client. If the value is included in a POST, PUT, or PATCH request, it is ignored by the service.", "type" "boolean"}, "annotations" {"description" "Additional information about this property.", "type" "object", "properties" {"required" {"description" "A list of methods for which this property is required on requests.", "type" "array", "items" {"type" "string"}}}}, "required" {"description" "Whether the parameter is required.", "type" "boolean"}, "pattern" {"description" "The regular expression this parameter must conform to. Uses Java 6 regex format: http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html", "type" "string"}, "type" {"type" "string", "description" "The value type for this schema. A list of values can be found here: http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.1"}, "enumDescriptions" {"type" "array", "items" {"type" "string"}, "description" "The descriptions for the enums. Each position maps to the corresponding value in the \"enum\" array."}, "additionalProperties" {"description" "If this is a schema for an object, this property is the schema for any additional properties with dynamic keys on this object.", "$ref" "JsonSchema"}, "default" {"type" "string", "description" "The default value of this property (if one exists)."}, "description" {"type" "string", "description" "A description of this object."}, "variant" {"description" "In a variant data type, the value of one property is used to determine how to interpret the entire entity. Its value must exist in a map of descriminant values to schema names.", "properties" {"map" {"type" "array", "items" {"type" "object", "properties" {"$ref" {"type" "string"}, "type_value" {"type" "string"}}}, "description" "The map of discriminant value to schema to use for parsing.."}, "discriminant" {"type" "string", "description" "The name of the type discriminant property."}}, "type" "object"}, "format" {"description" "An additional regular expression or key that helps constrain the value. For more details see: http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.23", "type" "string"}, "enum" {"description" "Values this parameter may take (if it is an enum).", "type" "array", "items" {"type" "string"}}}, "id" "JsonSchema"}}}