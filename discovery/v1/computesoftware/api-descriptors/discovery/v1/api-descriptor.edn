#:compute.gcp.descriptor{:name "discovery", :title "API Discovery Service", :api-version "v1", :revision "20200806", :endpoint #:compute.gcp.descriptor{:url "https://www.googleapis.com/", :batch-path "batch/discovery/v1", :service-path "discovery/v1/"}, :parameters {"oauth_token" {"location" "query", "description" "OAuth 2.0 token for the current user.", "type" "string"}, "key" {"type" "string", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "location" "query"}, "fields" {"description" "Selector specifying which fields to include in a partial response.", "type" "string", "location" "query"}, "prettyPrint" {"default" "true", "location" "query", "description" "Returns response with indentations and line breaks.", "type" "boolean"}, "userIp" {"type" "string", "location" "query", "description" "Deprecated. Please use quotaUser instead."}, "alt" {"enum" ["json"], "enumDescriptions" ["Responses with Content-Type of application/json"], "default" "json", "description" "Data format for the response.", "location" "query", "type" "string"}, "quotaUser" {"type" "string", "description" "An opaque string that represents a user for quota purposes. Must not exceed 40 characters.", "location" "query"}}, :op->info {"discovery.apis.list" #:compute.gcp.descriptor{:http-method :get, :path "apis", :response {"$ref" "DirectoryList"}, :parameters {"preferred" {"description" "Return only the preferred version of an API.", "type" "boolean", "location" "query", "default" "false"}, "name" {"description" "Only include APIs with the given name.", "type" "string", "location" "query"}}, :description "Retrieve the list of APIs supported at this endpoint."}, "discovery.apis.getRest" #:compute.gcp.descriptor{:http-method :get, :path "apis/{api}/{version}/rest", :response {"$ref" "RestDescription"}, :parameters {"version" {"location" "path", "required" true, "description" "The version of the API.", "type" "string"}, "api" {"location" "path", "description" "The name of the API.", "type" "string", "required" true}}, :description "Retrieve the description of a particular version of an api."}}, :schemas {"RestMethod" {"type" "object", "id" "RestMethod", "properties" {"useMediaDownloadService" {"description" "Indicates that downloads from this method should use the download service URL (i.e. \"/download\"). Only applies if the method supports media download.", "type" "boolean"}, "path" {"type" "string", "description" "The URI path of this REST method. Should be used in conjunction with the basePath property at the api-level."}, "id" {"type" "string", "description" "A unique ID for this method. This property can be used to match methods between different versions of Discovery."}, "httpMethod" {"description" "HTTP method used by this method.", "type" "string"}, "scopes" {"items" {"type" "string"}, "description" "OAuth 2.0 scopes applicable to this method.", "type" "array"}, "mediaUpload" {"type" "object", "description" "Media upload parameters.", "properties" {"protocols" {"type" "object", "description" "Supported upload protocols.", "properties" {"resumable" {"description" "Supports the Resumable Media Upload protocol.", "type" "object", "properties" {"multipart" {"type" "boolean", "default" "true", "description" "True if this endpoint supports uploading multipart media."}, "path" {"type" "string", "description" "The URI path to be used for upload. Should be used in conjunction with the basePath property at the api-level."}}}, "simple" {"properties" {"path" {"description" "The URI path to be used for upload. Should be used in conjunction with the basePath property at the api-level.", "type" "string"}, "multipart" {"type" "boolean", "description" "True if this endpoint supports upload multipart media.", "default" "true"}}, "description" "Supports uploading as a single HTTP request.", "type" "object"}}}, "accept" {"type" "array", "description" "MIME Media Ranges for acceptable media uploads to this method.", "items" {"type" "string"}}, "maxSize" {"type" "string", "description" "Maximum size of a media upload, such as \"1MB\", \"2GB\" or \"3TB\"."}}}, "request" {"description" "The schema for the request.", "type" "object", "properties" {"$ref" {"description" "Schema ID for the request schema.", "type" "string"}, "parameterName" {"description" "parameter name.", "type" "string"}}}, "supportsSubscription" {"description" "Whether this method supports subscriptions.", "type" "boolean"}, "supportsMediaUpload" {"description" "Whether this method supports media uploads.", "type" "boolean"}, "response" {"properties" {"$ref" {"type" "string", "description" "Schema ID for the response schema."}}, "description" "The schema for the response.", "type" "object"}, "etagRequired" {"type" "boolean", "description" "Whether this method requires an ETag to be specified. The ETag is sent as an HTTP If-Match or If-None-Match header."}, "parameters" {"description" "Details for all parameters in this method.", "type" "object", "additionalProperties" {"$ref" "JsonSchema", "description" "Details for a single parameter in this method."}}, "description" {"type" "string", "description" "Description of this method."}, "parameterOrder" {"type" "array", "description" "Ordered list of required parameters, serves as a hint to clients on how to structure their method signatures. The array is ordered such that the \"most-significant\" parameter appears first.", "items" {"type" "string"}}, "supportsMediaDownload" {"type" "boolean", "description" "Whether this method supports media downloads."}}}, "JsonSchema" {"properties" {"properties" {"description" "If this is a schema for an object, list the schema for each property of this object.", "additionalProperties" {"description" "A single property of this object. The value is itself a JSON Schema object describing this property.", "$ref" "JsonSchema"}, "type" "object"}, "maximum" {"type" "string", "description" "The maximum value of this parameter."}, "id" {"description" "Unique identifier for this schema.", "type" "string"}, "minimum" {"type" "string", "description" "The minimum value of this parameter."}, "repeated" {"description" "Whether this parameter may appear multiple times.", "type" "boolean"}, "$ref" {"type" "string", "description" "A reference to another schema. The value of this property is the \"id\" of another schema."}, "items" {"description" "If this is a schema for an array, this property is the schema for each element in the array.", "$ref" "JsonSchema"}, "location" {"description" "Whether this parameter goes in the query or the path for REST requests.", "type" "string"}, "readOnly" {"type" "boolean", "description" "The value is read-only, generated by the service. The value cannot be modified by the client. If the value is included in a POST, PUT, or PATCH request, it is ignored by the service."}, "annotations" {"description" "Additional information about this property.", "properties" {"required" {"items" {"type" "string"}, "type" "array", "description" "A list of methods for which this property is required on requests."}}, "type" "object"}, "required" {"type" "boolean", "description" "Whether the parameter is required."}, "pattern" {"type" "string", "description" "The regular expression this parameter must conform to. Uses Java 6 regex format: http://docs.oracle.com/javase/6/docs/api/java/util/regex/Pattern.html"}, "type" {"description" "The value type for this schema. A list of values can be found here: http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.1", "type" "string"}, "enumDescriptions" {"type" "array", "description" "The descriptions for the enums. Each position maps to the corresponding value in the \"enum\" array.", "items" {"type" "string"}}, "additionalProperties" {"$ref" "JsonSchema", "description" "If this is a schema for an object, this property is the schema for any additional properties with dynamic keys on this object."}, "default" {"type" "string", "description" "The default value of this property (if one exists)."}, "description" {"description" "A description of this object.", "type" "string"}, "variant" {"properties" {"map" {"description" "The map of discriminant value to schema to use for parsing..", "items" {"properties" {"$ref" {"type" "string"}, "type_value" {"type" "string"}}, "type" "object"}, "type" "array"}, "discriminant" {"type" "string", "description" "The name of the type discriminant property."}}, "description" "In a variant data type, the value of one property is used to determine how to interpret the entire entity. Its value must exist in a map of descriminant values to schema names.", "type" "object"}, "format" {"type" "string", "description" "An additional regular expression or key that helps constrain the value. For more details see: http://tools.ietf.org/html/draft-zyp-json-schema-03#section-5.23"}, "enum" {"description" "Values this parameter may take (if it is an enum).", "type" "array", "items" {"type" "string"}}}, "id" "JsonSchema", "type" "object"}, "DirectoryList" {"type" "object", "id" "DirectoryList", "properties" {"items" {"items" {"properties" {"documentationLink" {"description" "A link to human readable documentation for the API.", "type" "string"}, "discoveryLink" {"type" "string", "description" "A link to the discovery document."}, "id" {"description" "The id of this API.", "type" "string"}, "icons" {"description" "Links to 16x16 and 32x32 icons representing the API.", "type" "object", "properties" {"x32" {"description" "The URL of the 32x32 icon.", "type" "string"}, "x16" {"type" "string", "description" "The URL of the 16x16 icon."}}}, "name" {"type" "string", "description" "The name of the API."}, "labels" {"items" {"type" "string"}, "type" "array", "description" "Labels for the status of this API, such as labs or deprecated."}, "kind" {"description" "The kind for this response.", "default" "discovery#directoryItem", "type" "string"}, "preferred" {"type" "boolean", "description" "True if this version is the preferred version to use."}, "title" {"type" "string", "description" "The title of this API."}, "version" {"type" "string", "description" "The version of the API."}, "discoveryRestUrl" {"description" "The URL for the discovery REST document.", "type" "string"}, "description" {"type" "string", "description" "The description of this API."}}, "type" "object"}, "type" "array", "description" "The individual directory entries. One entry per api/version pair."}, "discoveryVersion" {"description" "Indicate the version of the Discovery API used to generate this doc.", "type" "string", "default" "v1"}, "kind" {"default" "discovery#directoryList", "description" "The kind for this response.", "type" "string"}}}, "RestResource" {"properties" {"methods" {"description" "Methods on this resource.", "type" "object", "additionalProperties" {"description" "Description for any methods on this resource.", "$ref" "RestMethod"}}, "resources" {"type" "object", "additionalProperties" {"$ref" "RestResource", "description" "Description for any sub-resources on this resource."}, "description" "Sub-resources on this resource."}}, "id" "RestResource", "type" "object"}, "RestDescription" {"id" "RestDescription", "properties" {"protocol" {"description" "The protocol described by this document.", "type" "string", "default" "rest"}, "packagePath" {"type" "string", "description" "The package of the owner of this API. See ownerDomain."}, "schemas" {"type" "object", "description" "The schemas for this API.", "additionalProperties" {"description" "An individual schema description.", "$ref" "JsonSchema"}}, "documentationLink" {"type" "string", "description" "A link to human readable documentation for the API."}, "batchPath" {"description" "The path for REST batch requests.", "type" "string"}, "basePath" {"type" "string", "description" "[DEPRECATED] The base path for REST requests."}, "discoveryVersion" {"default" "v1", "type" "string", "description" "Indicate the version of the Discovery API used to generate this doc."}, "servicePath" {"description" "The base path for all REST requests.", "type" "string"}, "rootUrl" {"description" "The root URL under which all API services live.", "type" "string"}, "ownerName" {"description" "The name of the owner of this API. See ownerDomain.", "type" "string"}, "methods" {"description" "API-level methods for this API.", "additionalProperties" {"$ref" "RestMethod", "description" "An individual method description."}, "type" "object"}, "auth" {"properties" {"oauth2" {"description" "OAuth 2.0 authentication information.", "properties" {"scopes" {"type" "object", "additionalProperties" {"description" "The scope value.", "properties" {"description" {"description" "Description of scope.", "type" "string"}}, "type" "object"}, "description" "Available OAuth 2.0 scopes."}}, "type" "object"}}, "description" "Authentication information.", "type" "object"}, "id" {"type" "string", "description" "The ID of this API."}, "revision" {"type" "string", "description" "The version of this API."}, "icons" {"properties" {"x32" {"description" "The URL of the 32x32 icon.", "type" "string"}, "x16" {"type" "string", "description" "The URL of the 16x16 icon."}}, "description" "Links to 16x16 and 32x32 icons representing the API.", "type" "object"}, "exponentialBackoffDefault" {"type" "boolean", "description" "Enable exponential backoff for suitable methods in the generated clients."}, "name" {"description" "The name of this API.", "type" "string"}, "ownerDomain" {"description" "The domain of the owner of this API. Together with the ownerName and a packagePath values, this can be used to generate a library for this API which would have a unique fully qualified name.", "type" "string"}, "labels" {"items" {"type" "string"}, "description" "Labels for the status of this API, such as labs or deprecated.", "type" "array"}, "baseUrl" {"type" "string", "description" "[DEPRECATED] The base URL for REST requests."}, "etag" {"readOnly" true, "type" "string", "description" "The ETag for this response."}, "kind" {"type" "string", "description" "The kind for this response.", "default" "discovery#restDescription"}, "title" {"type" "string", "description" "The title of this API."}, "version" {"type" "string", "description" "The version of this API."}, "canonicalName" {"type" "string", "description" "Indicates how the API name should be capitalized and split into various parts. Useful for generating pretty class names."}, "features" {"description" "A list of supported features for this API.", "items" {"type" "string"}, "type" "array"}, "parameters" {"additionalProperties" {"description" "Description of a single parameter.", "$ref" "JsonSchema"}, "description" "Common parameters that apply across all apis.", "type" "object"}, "version_module" {"type" "boolean"}, "resources" {"additionalProperties" {"description" "An individual resource description. Contains methods and sub-resources related to this resource.", "$ref" "RestResource"}, "type" "object", "description" "The resources in this API."}, "description" {"type" "string", "description" "The description of this API."}}, "type" "object"}}}