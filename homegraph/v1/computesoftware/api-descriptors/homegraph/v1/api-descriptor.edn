#:compute.gcp.descriptor{:name "homegraph", :title "HomeGraph API", :api-version "v1", :revision "20200504", :endpoint #:compute.gcp.descriptor{:url "https://homegraph.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"location" "query", "type" "string", "description" "JSONP"}, "uploadType" {"location" "query", "type" "string", "description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."}, "key" {"location" "query", "type" "string", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."}, "access_token" {"location" "query", "type" "string", "description" "OAuth access token."}, "oauth_token" {"location" "query", "type" "string", "description" "OAuth 2.0 token for the current user."}, "prettyPrint" {"location" "query", "default" "true", "type" "boolean", "description" "Returns response with indentations and line breaks."}, "alt" {"enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "enum" ["json" "media" "proto"], "location" "query", "type" "string", "default" "json", "description" "Data format for response."}, "$.xgafv" {"enumDescriptions" ["v1 error format" "v2 error format"], "enum" ["1" "2"], "location" "query", "type" "string", "description" "V1 error format."}, "fields" {"location" "query", "type" "string", "description" "Selector specifying which fields to include in a partial response."}, "upload_protocol" {"location" "query", "type" "string", "description" "Upload protocol for media (e.g. \"raw\", \"multipart\")."}, "quotaUser" {"location" "query", "type" "string", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."}}, :op->info {"homegraph.agentUsers.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1/{+agentUserId}", :response {"$ref" "Empty"}, :parameters {"agentUserId" {"pattern" "^agentUsers/.*$", "required" true, "type" "string", "location" "path", "description" "Required. Third-party user ID."}, "requestId" {"description" "Request ID used for debugging.", "type" "string", "location" "query"}}, :description "Unlinks the given third-party user from your smart home Action.\nAll data related to this user will be deleted.\n\nFor more details on how users link their accounts, see\n[fulfillment and\nauthentication](https://developers.google.com/assistant/smarthome/concepts/fulfillment-authentication).\n\nThe third-party user's identity is passed in via the `agent_user_id`\n(see DeleteAgentUserRequest).\nThis request must be authorized using service account credentials from your\nActions console project."}, "homegraph.devices.reportStateAndNotification" #:compute.gcp.descriptor{:http-method :post, :path "v1/devices:reportStateAndNotification", :request {"$ref" "ReportStateAndNotificationRequest"}, :response {"$ref" "ReportStateAndNotificationResponse"}, :parameters {}, :description "Reports device state and optionally sends device notifications.\nCalled by your smart home Action when the state of a third-party device\nchanges or you need to send a notification about the device.\nSee [Implement Report\nState](https://developers.google.com/assistant/smarthome/develop/report-state)\nfor more information.\n\nThis method updates the device state according to its declared\n[traits](https://developers.google.com/assistant/smarthome/concepts/devices-traits).\nPublishing a new state value outside of these traits will result in an\n`INVALID_ARGUMENT` error response.\n\nThe third-party user's identity is passed in via the `agent_user_id`\n(see ReportStateAndNotificationRequest).\nThis request must be authorized using service account credentials from your\nActions console project."}, "homegraph.devices.sync" #:compute.gcp.descriptor{:http-method :post, :path "v1/devices:sync", :request {"$ref" "SyncRequest"}, :response {"$ref" "SyncResponse"}, :parameters {}, :description "Gets all the devices associated with the given third-party user.\n\nThe third-party user's identity is passed in via the `agent_user_id`\n(see SyncRequest).\nThis request must be authorized using service account credentials from your\nActions console project."}, "homegraph.devices.requestSync" #:compute.gcp.descriptor{:http-method :post, :path "v1/devices:requestSync", :request {"$ref" "RequestSyncDevicesRequest"}, :response {"$ref" "RequestSyncDevicesResponse"}, :parameters {}, :description "Requests Google to send an `action.devices.SYNC`\n[intent](https://developers.google.com/assistant/smarthome/reference/intent/sync)\nto your smart home Action to update device metadata for the given user.\n\n\nThe third-party user's identity is passed via the `agent_user_id`\n(see RequestSyncDevicesRequest).\nThis request must be authorized using service account credentials from your\nActions console project."}, "homegraph.devices.query" #:compute.gcp.descriptor{:http-method :post, :path "v1/devices:query", :request {"$ref" "QueryRequest"}, :response {"$ref" "QueryResponse"}, :parameters {}, :description "Gets the current states in Home Graph for the given set of the third-party\nuser's devices.\n\nThe third-party user's identity is passed in via the `agent_user_id`\n(see QueryRequest).\nThis request must be authorized using service account credentials from your\nActions console project."}}, :schemas {"DeviceNames" {"properties" {"defaultNames" {"items" {"type" "string"}, "type" "array", "description" "List of names provided by the manufacturer rather than the user, such as\nserial numbers, SKUs, etc."}, "nicknames" {"description" "Additional names provided by the user for the device.", "items" {"type" "string"}, "type" "array"}, "name" {"type" "string", "description" "Primary name of the device, generally provided by the user."}}, "type" "object", "id" "DeviceNames", "description" "Identifiers used to describe the device."}, "Empty" {"type" "object", "id" "Empty", "description" "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.", "properties" {}}, "QueryResponse" {"type" "object", "id" "QueryResponse", "description" "Response type for the\n[`Query`](#google.home.graph.v1.HomeGraphApiService.Query) call.\nThis should follow the same format as the Google smart home\n`action.devices.QUERY`\n[response](https://developers.google.com/assistant/smarthome/reference/intent/query).\n# Example\n\n```json\n{\n  \"requestId\": \"ff36a3cc-ec34-11e6-b1a0-64510650abcf\",\n  \"payload\": {\n    \"devices\": {\n      \"123\": {\n        \"on\": true,\n        \"online\": true\n      },\n      \"456\": {\n        \"on\": true,\n        \"online\": true,\n        \"brightness\": 80,\n        \"color\": {\n          \"name\": \"cerulean\",\n          \"spectrumRGB\": 31655\n        }\n      }\n    }\n  }\n}\n```", "properties" {"payload" {"description" "Device states for the devices given in the request.", "$ref" "QueryResponsePayload"}, "requestId" {"type" "string", "description" "Request ID used for debugging. Copied from the request."}}}, "StateAndNotificationPayload" {"type" "object", "id" "StateAndNotificationPayload", "description" "Payload containing the state and notification information for devices.", "properties" {"devices" {"description" "The devices for updating state and sending notifications.", "$ref" "ReportStateAndNotificationDevice"}}}, "SyncResponse" {"type" "object", "id" "SyncResponse", "description" "Response type for the\n[`Sync`](#google.home.graph.v1.HomeGraphApiService.Sync) call.\nThis should follow the same format as the Google smart home\n`action.devices.SYNC`\n[response](https://developers.google.com/assistant/smarthome/reference/intent/sync).\n# Example\n\n```json\n{\n  \"requestId\": \"ff36a3cc-ec34-11e6-b1a0-64510650abcf\",\n  \"payload\": {\n    \"agentUserId\": \"1836.15267389\",\n    \"devices\": [{\n      \"id\": \"123\",\n      \"type\": \"action.devices.types.OUTLET\",\n      \"traits\": [\n        \"action.devices.traits.OnOff\"\n      ],\n      \"name\": {\n        \"defaultNames\": [\"My Outlet 1234\"],\n        \"name\": \"Night light\",\n        \"nicknames\": [\"wall plug\"]\n      },\n      \"willReportState\": false,\n      \"deviceInfo\": {\n        \"manufacturer\": \"lights-out-inc\",\n        \"model\": \"hs1234\",\n        \"hwVersion\": \"3.2\",\n        \"swVersion\": \"11.4\"\n      },\n      \"customData\": {\n        \"fooValue\": 74,\n        \"barValue\": true,\n        \"bazValue\": \"foo\"\n      }\n    }]\n  }\n}\n```", "properties" {"payload" {"description" "Devices associated with the third-party user.", "$ref" "SyncResponsePayload"}, "requestId" {"type" "string", "description" "Request ID used for debugging. Copied from the request."}}}, "QueryRequestPayload" {"type" "object", "id" "QueryRequestPayload", "description" "Payload containing device IDs.", "properties" {"devices" {"items" {"$ref" "AgentDeviceId"}, "type" "array", "description" "Third-party device IDs for which to get the device states."}}}, "ReportStateAndNotificationDevice" {"type" "object", "id" "ReportStateAndNotificationDevice", "description" "The states and notifications specific to a device.", "properties" {"notifications" {"description" "Notifications metadata for devices. See the **Device NOTIFICATIONS**\nsection of the individual trait [reference\nguides](https://developers.google.com/assistant/smarthome/traits).", "additionalProperties" {"type" "any", "description" "Properties of the object."}, "type" "object"}, "states" {"description" "States of devices to update. See the **Device STATES** section\nof the individual trait [reference\nguides](https://developers.google.com/assistant/smarthome/traits).", "additionalProperties" {"type" "any", "description" "Properties of the object."}, "type" "object"}}}, "RequestSyncDevicesResponse" {"properties" {}, "type" "object", "id" "RequestSyncDevicesResponse", "description" "Response type for the\n[`RequestSyncDevices`](#google.home.graph.v1.HomeGraphApiService.RequestSyncDevices)\ncall.\n\nIntentionally empty upon success. An HTTP response code is returned\nwith more details upon failure."}, "SyncResponsePayload" {"type" "object", "id" "SyncResponsePayload", "description" "Payload containing device information.", "properties" {"agentUserId" {"description" "Third-party user ID", "type" "string"}, "devices" {"items" {"$ref" "Device"}, "type" "array", "description" "Devices associated with the third-party user."}}}, "ReportStateAndNotificationRequest" {"properties" {"payload" {"description" "Required. State of devices to update and notification metadata for devices.", "$ref" "StateAndNotificationPayload"}, "eventId" {"type" "string", "description" "Unique identifier per event (for example, a doorbell press)."}, "agentUserId" {"type" "string", "description" "Required. Third-party user ID."}, "followUpToken" {"type" "string", "description" "Token to maintain state in the follow up notification response."}, "requestId" {"type" "string", "description" "Request ID used for debugging."}}, "type" "object", "id" "ReportStateAndNotificationRequest", "description" "Request type for the\n[`ReportStateAndNotification`](#google.home.graph.v1.HomeGraphApiService.ReportStateAndNotification)\ncall. It may include states, notifications, or both. States and notifications\nare defined per `device_id` (for example, \"123\" and \"456\" in the following\nexample).\n# Example\n\n```json\n{\n  \"requestId\": \"ff36a3cc-ec34-11e6-b1a0-64510650abcf\",\n  \"agentUserId\": \"1234\",\n  \"payload\": {\n    \"devices\": {\n      \"states\": {\n        \"123\": {\n          \"on\": true\n        },\n        \"456\": {\n          \"on\": true,\n          \"brightness\": 10\n        }\n      },\n    }\n  }\n}\n```"}, "AgentDeviceId" {"description" "Third-party device ID for one device.", "properties" {"id" {"type" "string", "description" "Third-party device ID."}}, "type" "object", "id" "AgentDeviceId"}, "SyncRequest" {"description" "Request type for the [`Sync`](#google.home.graph.v1.HomeGraphApiService.Sync)\ncall.", "properties" {"agentUserId" {"type" "string", "description" "Required. Third-party user ID."}, "requestId" {"type" "string", "description" "Request ID used for debugging."}}, "type" "object", "id" "SyncRequest"}, "RequestSyncDevicesRequest" {"description" "Request type for the\n[`RequestSyncDevices`](#google.home.graph.v1.HomeGraphApiService.RequestSyncDevices)\ncall.", "properties" {"agentUserId" {"type" "string", "description" "Required. Third-party user ID."}, "async" {"description" "Optional. If set, the request will be added to a queue and a response will\nbe returned immediately. This enables concurrent requests for the given\n`agent_user_id`, but the caller will not receive any error responses.", "type" "boolean"}}, "type" "object", "id" "RequestSyncDevicesRequest"}, "QueryRequestInput" {"properties" {"payload" {"description" "Payload containing third-party device IDs.", "$ref" "QueryRequestPayload"}}, "type" "object", "id" "QueryRequestInput", "description" "Device ID inputs to QueryRequest."}, "AgentOtherDeviceId" {"properties" {"agentId" {"type" "string", "description" "Project ID for your smart home Action."}, "deviceId" {"type" "string", "description" "Unique third-party device ID."}}, "type" "object", "id" "AgentOtherDeviceId", "description" "Alternate third-party device ID."}, "DeviceInfo" {"type" "object", "id" "DeviceInfo", "description" "Device information.", "properties" {"manufacturer" {"description" "Device manufacturer.", "type" "string"}, "hwVersion" {"description" "Device hardware version.", "type" "string"}, "swVersion" {"type" "string", "description" "Device software version."}, "model" {"type" "string", "description" "Device model."}}}, "QueryResponsePayload" {"properties" {"devices" {"description" "States of the devices. Map of third-party device ID to struct of device\nstates.", "additionalProperties" {"additionalProperties" {"type" "any", "description" "Properties of the object."}, "type" "object"}, "type" "object"}}, "type" "object", "id" "QueryResponsePayload", "description" "Payload containing device states information."}, "Device" {"type" "object", "id" "Device", "description" "Third-party device definition.", "properties" {"customData" {"additionalProperties" {"type" "any", "description" "Properties of the object."}, "type" "object", "description" "Custom device attributes stored in Home Graph and provided to your\nsmart home Action in each\n[QUERY](https://developers.google.com/assistant/smarthome/reference/intent/query)\nand\n[EXECUTE](https://developers.google.com/assistant/smarthome/reference/intent/execute)\nintent."}, "structureHint" {"type" "string", "description" "Suggested name for the structure where this device is installed.\nGoogle attempts to use this value during user setup."}, "traits" {"items" {"type" "string"}, "type" "array", "description" "Traits supported by the device.\nSee [device\ntraits](https://developers.google.com/assistant/smarthome/traits)."}, "id" {"type" "string", "description" "Third-party device ID."}, "name" {"description" "Names given to this device by your smart home Action.", "$ref" "DeviceNames"}, "willReportState" {"type" "boolean", "description" "Indicates whether your smart home Action will report state of this device\nto Google via\nReportStateAndNotification."}, "attributes" {"additionalProperties" {"type" "any", "description" "Properties of the object."}, "type" "object", "description" "Attributes for the traits supported by the device."}, "type" {"type" "string", "description" "Hardware type of the device.\nSee [device\ntypes](https://developers.google.com/assistant/smarthome/guides)."}, "notificationSupportedByAgent" {"type" "boolean", "description" "Indicates whether your smart home Action will report notifications\nto Google for this device via\nReportStateAndNotification.\n\nIf your smart home Action enables users to control device notifications,\nyou should update this field and call\nRequestSyncDevices."}, "otherDeviceIds" {"items" {"$ref" "AgentOtherDeviceId"}, "type" "array", "description" "Alternate IDs associated with this device.\nThis is used to identify cloud synced devices enabled for [local\nfulfillment](https://developers.google.com/assistant/smarthome/concepts/local)."}, "deviceInfo" {"description" "Device manufacturer, model, hardware version, and software version.", "$ref" "DeviceInfo"}, "roomHint" {"type" "string", "description" "Suggested name for the room where this device is installed.\nGoogle attempts to use this value during user setup."}}}, "QueryRequest" {"type" "object", "id" "QueryRequest", "description" "Request type for the\n[`Query`](#google.home.graph.v1.HomeGraphApiService.Query) call.", "properties" {"requestId" {"type" "string", "description" "Request ID used for debugging."}, "inputs" {"items" {"$ref" "QueryRequestInput"}, "type" "array", "description" "Required. Inputs containing third-party device IDs for which to\nget the device states."}, "agentUserId" {"type" "string", "description" "Required. Third-party user ID."}}}, "ReportStateAndNotificationResponse" {"type" "object", "id" "ReportStateAndNotificationResponse", "description" "Response type for the\n[`ReportStateAndNotification`](#google.home.graph.v1.HomeGraphApiService.ReportStateAndNotification)\ncall.", "properties" {"requestId" {"type" "string", "description" "Request ID copied from ReportStateAndNotificationRequest."}}}}}