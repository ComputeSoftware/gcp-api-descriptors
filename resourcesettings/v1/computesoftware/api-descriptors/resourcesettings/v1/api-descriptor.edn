#:compute.gcp.descriptor{:name "resourcesettings", :title "Resource Settings API", :api-version "v1", :revision "20220324", :endpoint #:compute.gcp.descriptor{:url "https://resourcesettings.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"description" "JSONP", "location" "query", "type" "string"}, "uploadType" {"type" "string", "description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "location" "query"}, "key" {"description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "location" "query", "type" "string"}, "access_token" {"location" "query", "type" "string", "description" "OAuth access token."}, "oauth_token" {"type" "string", "description" "OAuth 2.0 token for the current user.", "location" "query"}, "prettyPrint" {"description" "Returns response with indentations and line breaks.", "default" "true", "location" "query", "type" "boolean"}, "alt" {"default" "json", "type" "string", "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "enum" ["json" "media" "proto"], "location" "query", "description" "Data format for response."}, "$.xgafv" {"location" "query", "enumDescriptions" ["v1 error format" "v2 error format"], "enum" ["1" "2"], "description" "V1 error format.", "type" "string"}, "fields" {"description" "Selector specifying which fields to include in a partial response.", "type" "string", "location" "query"}, "upload_protocol" {"location" "query", "description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "type" "string"}, "quotaUser" {"location" "query", "type" "string", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."}}, :op->info {"resourcesettings.folders.settings.get" #:compute.gcp.descriptor{:http-method :get, :path "v1/{+name}", :response {"$ref" "GoogleCloudResourcesettingsV1Setting"}, :parameters {"view" {"location" "query", "description" "The SettingView for this request.", "enum" ["SETTING_VIEW_UNSPECIFIED" "SETTING_VIEW_BASIC" "SETTING_VIEW_EFFECTIVE_VALUE" "SETTING_VIEW_LOCAL_VALUE"], "enumDescriptions" ["The default / unset value. The API will default to the SETTING_VIEW_BASIC view." "Include Setting.metadata, but nothing else. This is the default value (for both ListSettings and GetSetting)." "Include Setting.effective_value, but nothing else." "Include Setting.local_value, but nothing else."], "type" "string"}, "name" {"pattern" "^folders/[^/]+/settings/[^/]+$", "type" "string", "description" "Required. The name of the setting to get. See Setting for naming requirements.", "location" "path", "required" true}}, :description "Returns a specified setting. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting does not exist."}, "resourcesettings.organizations.settings.patch" #:compute.gcp.descriptor{:http-method :patch, :path "v1/{+name}", :request {"$ref" "GoogleCloudResourcesettingsV1Setting"}, :response {"$ref" "GoogleCloudResourcesettingsV1Setting"}, :parameters {"name" {"pattern" "^organizations/[^/]+/settings/[^/]+$", "type" "string", "description" "The resource name of the setting. Must be in one of the following forms: * `projects/{project_number}/settings/{setting_name}` * `folders/{folder_id}/settings/{setting_name}` * `organizations/{organization_id}/settings/{setting_name}` For example, \"/projects/123/settings/gcp-enableMyFeature\"", "location" "path", "required" true}}, :description "Updates a specified setting. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.FAILED_PRECONDITION` if the setting is flagged as read only. Returns a `google.rpc.Status` with `google.rpc.Code.ABORTED` if the etag supplied in the request does not match the persisted etag of the setting value. On success, the response will contain only `name`, `local_value` and `etag`. The `metadata` and `effective_value` cannot be updated through this API. Note: the supplied setting will perform a full overwrite of the `local_value` field."}, "resourcesettings.projects.settings.list" #:compute.gcp.descriptor{:http-method :get, :path "v1/{+parent}/settings", :response {"$ref" "GoogleCloudResourcesettingsV1ListSettingsResponse"}, :parameters {"pageToken" {"type" "string", "description" "Unused. A page token used to retrieve the next page.", "location" "query"}, "parent" {"location" "path", "pattern" "^projects/[^/]+$", "type" "string", "required" true, "description" "Required. The project, folder, or organization that is the parent resource for this setting. Must be in one of the following forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` * `organizations/{organization_id}`"}, "view" {"enum" ["SETTING_VIEW_UNSPECIFIED" "SETTING_VIEW_BASIC" "SETTING_VIEW_EFFECTIVE_VALUE" "SETTING_VIEW_LOCAL_VALUE"], "type" "string", "description" "The SettingView for this request.", "enumDescriptions" ["The default / unset value. The API will default to the SETTING_VIEW_BASIC view." "Include Setting.metadata, but nothing else. This is the default value (for both ListSettings and GetSetting)." "Include Setting.effective_value, but nothing else." "Include Setting.local_value, but nothing else."], "location" "query"}, "pageSize" {"description" "Unused. The size of the page to be returned.", "format" "int32", "location" "query", "type" "integer"}}, :description "Lists all the settings that are available on the Cloud resource `parent`."}, "resourcesettings.folders.settings.list" #:compute.gcp.descriptor{:http-method :get, :path "v1/{+parent}/settings", :response {"$ref" "GoogleCloudResourcesettingsV1ListSettingsResponse"}, :parameters {"pageSize" {"location" "query", "format" "int32", "type" "integer", "description" "Unused. The size of the page to be returned."}, "view" {"description" "The SettingView for this request.", "enum" ["SETTING_VIEW_UNSPECIFIED" "SETTING_VIEW_BASIC" "SETTING_VIEW_EFFECTIVE_VALUE" "SETTING_VIEW_LOCAL_VALUE"], "type" "string", "location" "query", "enumDescriptions" ["The default / unset value. The API will default to the SETTING_VIEW_BASIC view." "Include Setting.metadata, but nothing else. This is the default value (for both ListSettings and GetSetting)." "Include Setting.effective_value, but nothing else." "Include Setting.local_value, but nothing else."]}, "parent" {"type" "string", "pattern" "^folders/[^/]+$", "location" "path", "required" true, "description" "Required. The project, folder, or organization that is the parent resource for this setting. Must be in one of the following forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` * `organizations/{organization_id}`"}, "pageToken" {"description" "Unused. A page token used to retrieve the next page.", "type" "string", "location" "query"}}, :description "Lists all the settings that are available on the Cloud resource `parent`."}, "resourcesettings.organizations.settings.list" #:compute.gcp.descriptor{:http-method :get, :path "v1/{+parent}/settings", :response {"$ref" "GoogleCloudResourcesettingsV1ListSettingsResponse"}, :parameters {"parent" {"required" true, "location" "path", "description" "Required. The project, folder, or organization that is the parent resource for this setting. Must be in one of the following forms: * `projects/{project_number}` * `projects/{project_id}` * `folders/{folder_id}` * `organizations/{organization_id}`", "type" "string", "pattern" "^organizations/[^/]+$"}, "pageSize" {"location" "query", "format" "int32", "type" "integer", "description" "Unused. The size of the page to be returned."}, "pageToken" {"type" "string", "description" "Unused. A page token used to retrieve the next page.", "location" "query"}, "view" {"enumDescriptions" ["The default / unset value. The API will default to the SETTING_VIEW_BASIC view." "Include Setting.metadata, but nothing else. This is the default value (for both ListSettings and GetSetting)." "Include Setting.effective_value, but nothing else." "Include Setting.local_value, but nothing else."], "location" "query", "enum" ["SETTING_VIEW_UNSPECIFIED" "SETTING_VIEW_BASIC" "SETTING_VIEW_EFFECTIVE_VALUE" "SETTING_VIEW_LOCAL_VALUE"], "description" "The SettingView for this request.", "type" "string"}}, :description "Lists all the settings that are available on the Cloud resource `parent`."}, "resourcesettings.organizations.settings.get" #:compute.gcp.descriptor{:http-method :get, :path "v1/{+name}", :response {"$ref" "GoogleCloudResourcesettingsV1Setting"}, :parameters {"view" {"location" "query", "type" "string", "description" "The SettingView for this request.", "enumDescriptions" ["The default / unset value. The API will default to the SETTING_VIEW_BASIC view." "Include Setting.metadata, but nothing else. This is the default value (for both ListSettings and GetSetting)." "Include Setting.effective_value, but nothing else." "Include Setting.local_value, but nothing else."], "enum" ["SETTING_VIEW_UNSPECIFIED" "SETTING_VIEW_BASIC" "SETTING_VIEW_EFFECTIVE_VALUE" "SETTING_VIEW_LOCAL_VALUE"]}, "name" {"location" "path", "type" "string", "required" true, "description" "Required. The name of the setting to get. See Setting for naming requirements.", "pattern" "^organizations/[^/]+/settings/[^/]+$"}}, :description "Returns a specified setting. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting does not exist."}, "resourcesettings.projects.settings.get" #:compute.gcp.descriptor{:http-method :get, :path "v1/{+name}", :response {"$ref" "GoogleCloudResourcesettingsV1Setting"}, :parameters {"view" {"type" "string", "enum" ["SETTING_VIEW_UNSPECIFIED" "SETTING_VIEW_BASIC" "SETTING_VIEW_EFFECTIVE_VALUE" "SETTING_VIEW_LOCAL_VALUE"], "location" "query", "description" "The SettingView for this request.", "enumDescriptions" ["The default / unset value. The API will default to the SETTING_VIEW_BASIC view." "Include Setting.metadata, but nothing else. This is the default value (for both ListSettings and GetSetting)." "Include Setting.effective_value, but nothing else." "Include Setting.local_value, but nothing else."]}, "name" {"location" "path", "pattern" "^projects/[^/]+/settings/[^/]+$", "description" "Required. The name of the setting to get. See Setting for naming requirements.", "type" "string", "required" true}}, :description "Returns a specified setting. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting does not exist."}, "resourcesettings.projects.settings.patch" #:compute.gcp.descriptor{:http-method :patch, :path "v1/{+name}", :request {"$ref" "GoogleCloudResourcesettingsV1Setting"}, :response {"$ref" "GoogleCloudResourcesettingsV1Setting"}, :parameters {"name" {"type" "string", "pattern" "^projects/[^/]+/settings/[^/]+$", "location" "path", "required" true, "description" "The resource name of the setting. Must be in one of the following forms: * `projects/{project_number}/settings/{setting_name}` * `folders/{folder_id}/settings/{setting_name}` * `organizations/{organization_id}/settings/{setting_name}` For example, \"/projects/123/settings/gcp-enableMyFeature\""}}, :description "Updates a specified setting. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.FAILED_PRECONDITION` if the setting is flagged as read only. Returns a `google.rpc.Status` with `google.rpc.Code.ABORTED` if the etag supplied in the request does not match the persisted etag of the setting value. On success, the response will contain only `name`, `local_value` and `etag`. The `metadata` and `effective_value` cannot be updated through this API. Note: the supplied setting will perform a full overwrite of the `local_value` field."}, "resourcesettings.folders.settings.patch" #:compute.gcp.descriptor{:http-method :patch, :path "v1/{+name}", :request {"$ref" "GoogleCloudResourcesettingsV1Setting"}, :response {"$ref" "GoogleCloudResourcesettingsV1Setting"}, :parameters {"name" {"description" "The resource name of the setting. Must be in one of the following forms: * `projects/{project_number}/settings/{setting_name}` * `folders/{folder_id}/settings/{setting_name}` * `organizations/{organization_id}/settings/{setting_name}` For example, \"/projects/123/settings/gcp-enableMyFeature\"", "location" "path", "pattern" "^folders/[^/]+/settings/[^/]+$", "type" "string", "required" true}}, :description "Updates a specified setting. Returns a `google.rpc.Status` with `google.rpc.Code.NOT_FOUND` if the setting does not exist. Returns a `google.rpc.Status` with `google.rpc.Code.FAILED_PRECONDITION` if the setting is flagged as read only. Returns a `google.rpc.Status` with `google.rpc.Code.ABORTED` if the etag supplied in the request does not match the persisted etag of the setting value. On success, the response will contain only `name`, `local_value` and `etag`. The `metadata` and `effective_value` cannot be updated through this API. Note: the supplied setting will perform a full overwrite of the `local_value` field."}}, :schemas {"GoogleCloudResourcesettingsV1ValueStringSet" {"properties" {"values" {"items" {"type" "string"}, "description" "The strings in the set", "type" "array"}}, "description" "A string set value that can hold a set of strings. The maximum length of each string is 200 characters and there can be a maximum of 50 strings in the string set.", "type" "object", "id" "GoogleCloudResourcesettingsV1ValueStringSet"}, "GoogleCloudResourcesettingsV1ValueEnumValue" {"id" "GoogleCloudResourcesettingsV1ValueEnumValue", "description" "A enum value that can hold any enum type setting values. Each enum type is represented by a number, this representation is stored in the definitions.", "type" "object", "properties" {"value" {"type" "string", "description" "The value of this enum"}}}, "GoogleCloudResourcesettingsV1ValueStringMap" {"properties" {"mappings" {"additionalProperties" {"type" "string"}, "description" "The key-value pairs in the map", "type" "object"}}, "id" "GoogleCloudResourcesettingsV1ValueStringMap", "description" "A string->string map value that can hold a map of string keys to string values. The maximum length of each string is 200 characters and there can be a maximum of 50 key-value pairs in the map.", "type" "object"}, "GoogleCloudResourcesettingsV1SettingMetadata" {"id" "GoogleCloudResourcesettingsV1SettingMetadata", "properties" {"readOnly" {"type" "boolean", "description" "A flag indicating that values of this setting cannot be modified. See documentation for the specific setting for updates and reasons."}, "displayName" {"description" "The human readable name for this setting.", "type" "string"}, "description" {"description" "A detailed description of what this setting does.", "type" "string"}, "dataType" {"enumDescriptions" ["Unspecified data type." "A boolean setting." "A string setting." "A string set setting." "A Enum setting" "A Duration setting" "A string->string map setting"], "enum" ["DATA_TYPE_UNSPECIFIED" "BOOLEAN" "STRING" "STRING_SET" "ENUM_VALUE" "DURATION_VALUE" "STRING_MAP"], "type" "string", "description" "The data type for this setting."}, "defaultValue" {"description" "The value provided by Setting.effective_value if no setting value is explicitly set. Note: not all settings have a default value.", "$ref" "GoogleCloudResourcesettingsV1Value"}}, "type" "object", "description" "Metadata about a setting which is not editable by the end user."}, "GoogleCloudResourcesettingsV1Setting" {"description" "The schema for settings.", "id" "GoogleCloudResourcesettingsV1Setting", "type" "object", "properties" {"metadata" {"$ref" "GoogleCloudResourcesettingsV1SettingMetadata", "description" "Output only. Metadata about a setting which is not editable by the end user.", "readOnly" true}, "name" {"description" "The resource name of the setting. Must be in one of the following forms: * `projects/{project_number}/settings/{setting_name}` * `folders/{folder_id}/settings/{setting_name}` * `organizations/{organization_id}/settings/{setting_name}` For example, \"/projects/123/settings/gcp-enableMyFeature\"", "type" "string"}, "localValue" {"$ref" "GoogleCloudResourcesettingsV1Value", "description" "The configured value of the setting at the given parent resource, ignoring the resource hierarchy. The data type of Value must always be consistent with the data type defined in Setting.metadata."}, "etag" {"description" "A fingerprint used for optimistic concurrency. See UpdateSetting for more details.", "type" "string"}, "effectiveValue" {"readOnly" true, "description" "Output only. The effective value of the setting at the given parent resource, evaluated based on the resource hierarchy The effective value evaluates to one of the following options, in this order. If an option is not valid or doesn't exist, then the next option is used: 1. The local setting value on the given resource: Setting.local_value 2. If one of the given resource's ancestors in the resource hierarchy have a local setting value, the local value at the nearest such ancestor. 3. The setting's default value: SettingMetadata.default_value 4. An empty value, defined as a `Value` with all fields unset. The data type of Value must always be consistent with the data type defined in Setting.metadata.", "$ref" "GoogleCloudResourcesettingsV1Value"}}}, "GoogleCloudResourcesettingsV1ListSettingsResponse" {"description" "The response from ListSettings.", "properties" {"settings" {"type" "array", "items" {"$ref" "GoogleCloudResourcesettingsV1Setting"}, "description" "A list of settings that are available at the specified Cloud resource."}, "nextPageToken" {"type" "string", "description" "Unused. A page token used to retrieve the next page."}}, "id" "GoogleCloudResourcesettingsV1ListSettingsResponse", "type" "object"}, "GoogleCloudResourcesettingsV1Value" {"type" "object", "properties" {"booleanValue" {"type" "boolean", "description" "Defines this value as being a boolean value."}, "durationValue" {"description" "Defines this value as being a Duration.", "format" "google-duration", "type" "string"}, "stringMapValue" {"$ref" "GoogleCloudResourcesettingsV1ValueStringMap", "description" "Defines this value as being a StringMap."}, "enumValue" {"description" "Defines this value as being a Enum.", "$ref" "GoogleCloudResourcesettingsV1ValueEnumValue"}, "stringSetValue" {"$ref" "GoogleCloudResourcesettingsV1ValueStringSet", "description" "Defines this value as being a StringSet."}, "stringValue" {"description" "Defines this value as being a string value.", "type" "string"}}, "description" "The data in a setting value.", "id" "GoogleCloudResourcesettingsV1Value"}}}