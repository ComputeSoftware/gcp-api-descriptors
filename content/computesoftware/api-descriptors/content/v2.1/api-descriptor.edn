#:compute.api-descriptor{:endpoint {:schemes ["https"], :host "www.googleapis.com", :base-path "/content/v2.1"}, :op->spec {"content.pos.delete" {:description "Deletes a store for the given merchant.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "The ID of the POS or inventory data provider.", :in "path", :name "merchantId", :required true, :type "string"} {:description "A store code that is unique per merchant.", :in "path", :name "storeCode", :required true, :type "string"} {:description "The ID of the target merchant.", :in "path", :name "targetMerchantId", :required true, :type "string"}], :operationId "content.pos.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/{merchantId}/pos/{targetMerchantId}/store/{storeCode}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.orderinvoices.createrefundinvoice" {:description "Creates a refund invoice for one or more shipment groups, and triggers a refund for orderinvoice enabled orders. This can only be used for line items that have previously been charged using createChargeInvoice. All amounts (except for the summary) are incremental with respect to the previous invoice.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/OrderinvoicesCreateRefundInvoiceResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/OrderinvoicesCreateRefundInvoiceRequest"}} {:description "The ID of the account that manages the order. This cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The ID of the order.", :in "path", :name "orderId", :required true, :type "string"}], :operationId "content.orderinvoices.createrefundinvoice", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/orderinvoices/{orderId}/createRefundInvoice", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.datafeeds.update" {:description "Updates a datafeed configuration of your Merchant Center account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Datafeed"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Datafeed"}} {:description "The ID of the datafeed.", :in "path", :name "datafeedId", :required true, :type "string"} {:description "The ID of the account that manages the datafeed. This account cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"}], :operationId "content.datafeeds.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/{merchantId}/datafeeds/{datafeedId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.accounts.update" {:description "Updates a Merchant Center account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Account"}}}, :parameters [{:description "The ID of the account.", :in "path", :name "accountId", :required true, :type "string"} {:in "body", :name "body", :schema {:$ref "#/definitions/Account"}} {:description "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.", :in "path", :name "merchantId", :required true, :type "string"}], :operationId "content.accounts.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/{merchantId}/accounts/{accountId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.liasettings.listposdataproviders" {:description "Retrieves the list of POS data providers that have active settings for the all eiligible countries.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/LiasettingsListPosDataProvidersResponse"}}}, :operationId "content.liasettings.listposdataproviders", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/liasettings/posdataproviders", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.orders.gettestordertemplate" {:description "Sandbox only. Retrieves an order template that can be used to quickly create a new order in sandbox.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/OrdersGetTestOrderTemplateResponse"}}}, :parameters [{:description "The country of the template to retrieve. Defaults to US.", :in "query", :name "country", :type "string"} {:description "The ID of the account that should manage the order. This cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The name of the template to retrieve.", :enum ["template1" "template1a" "template1b" "template2"], :in "path", :name "templateName", :required true, :type "string"}], :operationId "content.orders.gettestordertemplate", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/testordertemplates/{templateName}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.orderinvoices.createchargeinvoice" {:description "Creates a charge invoice for a shipment group, and triggers a charge capture for orderinvoice enabled orders.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/OrderinvoicesCreateChargeInvoiceResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/OrderinvoicesCreateChargeInvoiceRequest"}} {:description "The ID of the account that manages the order. This cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The ID of the order.", :in "path", :name "orderId", :required true, :type "string"}], :operationId "content.orderinvoices.createchargeinvoice", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/orderinvoices/{orderId}/createChargeInvoice", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.pos.list" {:description "Lists the stores of the target merchant.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/PosListResponse"}}}, :parameters [{:description "The ID of the POS or inventory data provider.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The ID of the target merchant.", :in "path", :name "targetMerchantId", :required true, :type "string"}], :operationId "content.pos.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/pos/{targetMerchantId}/store", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.liasettings.list" {:description "Lists the LIA settings of the sub-accounts in your Merchant Center account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/LiasettingsListResponse"}}}, :parameters [{:description "The maximum number of LIA settings to return in the response, used for paging.", :in "query", :name "maxResults", :type "integer"} {:description "The ID of the managing account. This must be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The token returned by the previous request.", :in "query", :name "pageToken", :type "string"}], :operationId "content.liasettings.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/liasettings", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.orders.canceltestorderbycustomer" {:description "Sandbox only. Cancels a test order for customer-initiated cancellation.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/OrdersCancelTestOrderByCustomerResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/OrdersCancelTestOrderByCustomerRequest"}} {:description "The ID of the account that manages the order. This cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The ID of the test order to cancel.", :in "path", :name "orderId", :required true, :type "string"}], :operationId "content.orders.canceltestorderbycustomer", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/testorders/{orderId}/cancelByCustomer", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.accounts.custombatch" {:description "Retrieves, inserts, updates, and deletes multiple Merchant Center (sub-)accounts in a single request.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/AccountsCustomBatchResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/AccountsCustomBatchRequest"}}], :operationId "content.accounts.custombatch", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/accounts/batch", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.orders.acknowledge" {:description "Marks an order as acknowledged.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/OrdersAcknowledgeResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/OrdersAcknowledgeRequest"}} {:description "The ID of the account that manages the order. This cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The ID of the order.", :in "path", :name "orderId", :required true, :type "string"}], :operationId "content.orders.acknowledge", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/orders/{orderId}/acknowledge", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.datafeedstatuses.list" {:description "Lists the statuses of the datafeeds in your Merchant Center account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/DatafeedstatusesListResponse"}}}, :parameters [{:description "The maximum number of products to return in the response, used for paging.", :in "query", :name "maxResults", :type "integer"} {:description "The ID of the account that manages the datafeeds. This account cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The token returned by the previous request.", :in "query", :name "pageToken", :type "string"}], :operationId "content.datafeedstatuses.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/datafeedstatuses", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.pos.sale" {:description "Submit a sale event for the given merchant.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/PosSaleResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/PosSaleRequest"}} {:description "The ID of the POS or inventory data provider.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The ID of the target merchant.", :in "path", :name "targetMerchantId", :required true, :type "string"}], :operationId "content.pos.sale", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/pos/{targetMerchantId}/sale", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.products.get" {:description "Retrieves a product from your Merchant Center account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Product"}}}, :parameters [{:description "The ID of the account that contains the product. This account cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The REST ID of the product.", :in "path", :name "productId", :required true, :type "string"}], :operationId "content.products.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/products/{productId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.orders.get" {:description "Retrieves an order from your Merchant Center account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Order"}}}, :parameters [{:description "The ID of the account that manages the order. This cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The ID of the order.", :in "path", :name "orderId", :required true, :type "string"}], :operationId "content.orders.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/orders/{orderId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.shippingsettings.custombatch" {:description "Retrieves and updates the shipping settings of multiple accounts in a single request.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ShippingsettingsCustomBatchResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/ShippingsettingsCustomBatchRequest"}}], :operationId "content.shippingsettings.custombatch", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/shippingsettings/batch", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.products.custombatch" {:description "Retrieves, inserts, and deletes multiple products in a single request.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ProductsCustomBatchResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/ProductsCustomBatchRequest"}}], :operationId "content.products.custombatch", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/products/batch", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.accounts.insert" {:description "Creates a Merchant Center sub-account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Account"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Account"}} {:description "The ID of the managing account. This must be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"}], :operationId "content.accounts.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/accounts", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.accounttax.list" {:description "Lists the tax settings of the sub-accounts in your Merchant Center account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/AccounttaxListResponse"}}}, :parameters [{:description "The maximum number of tax settings to return in the response, used for paging.", :in "query", :name "maxResults", :type "integer"} {:description "The ID of the managing account. This must be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The token returned by the previous request.", :in "query", :name "pageToken", :type "string"}], :operationId "content.accounttax.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/accounttax", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.orders.list" {:description "Lists the orders in your Merchant Center account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/OrdersListResponse"}}}, :parameters [{:description "Obtains orders that match the acknowledgement status. When set to true, obtains orders that have been acknowledged. When false, obtains orders that have not been acknowledged.\nWe recommend using this filter set to false, in conjunction with the acknowledge call, such that only un-acknowledged orders are returned.", :in "query", :name "acknowledged", :type "boolean"} {:description "The maximum number of orders to return in the response, used for paging. The default value is 25 orders per page, and the maximum allowed value is 250 orders per page.", :in "query", :name "maxResults", :type "integer"} {:description "The ID of the account that manages the order. This cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "Order results by placement date in descending or ascending order.\n\nAcceptable values are:\n- placedDateAsc\n- placedDateDesc", :in "query", :name "orderBy", :type "string"} {:description "The token returned by the previous request.", :in "query", :name "pageToken", :type "string"} {:description "Obtains orders placed before this date (exclusively), in ISO 8601 format.", :in "query", :name "placedDateEnd", :type "string"} {:description "Obtains orders placed after this date (inclusively), in ISO 8601 format.", :in "query", :name "placedDateStart", :type "string"} {:collectionFormat "multi", :description "Obtains orders that match any of the specified statuses. Please note that active is a shortcut for pendingShipment and partiallyShipped, and completed is a shortcut for shipped, partiallyDelivered, delivered, partiallyReturned, returned, and canceled.", :in "query", :items {:enum ["active" "canceled" "completed" "delivered" "inProgress" "partiallyDelivered" "partiallyReturned" "partiallyShipped" "pendingShipment" "returned" "shipped"], :type "string"}, :name "statuses", :type "array"}], :operationId "content.orders.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/orders", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.returnpolicy.custombatch" {:description "Batches multiple return policy related calls in a single request.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ReturnpolicyCustomBatchResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/ReturnpolicyCustomBatchRequest"}}], :operationId "content.returnpolicy.custombatch", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/returnpolicy/batch", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.accountstatuses.list" {:description "Lists the statuses of the sub-accounts in your Merchant Center account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/AccountstatusesListResponse"}}}, :parameters [{:collectionFormat "multi", :description "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.", :in "query", :items {:type "string"}, :name "destinations", :type "array"} {:description "The maximum number of account statuses to return in the response, used for paging.", :in "query", :name "maxResults", :type "integer"} {:description "The ID of the managing account. This must be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The token returned by the previous request.", :in "query", :name "pageToken", :type "string"}], :operationId "content.accountstatuses.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/accountstatuses", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.datafeeds.fetchnow" {:description "Invokes a fetch for the datafeed in your Merchant Center account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/DatafeedsFetchNowResponse"}}}, :parameters [{:description "The ID of the datafeed to be fetched.", :in "path", :name "datafeedId", :required true, :type "string"} {:description "The ID of the account that manages the datafeed. This account cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"}], :operationId "content.datafeeds.fetchnow", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/datafeeds/{datafeedId}/fetchNow", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.orderreports.listtransactions" {:description "Retrieves a list of transactions for a disbursement from your Merchant Center account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/OrderreportsListTransactionsResponse"}}}, :parameters [{:description "The Google-provided ID of the disbursement (found in Wallet).", :in "path", :name "disbursementId", :required true, :type "string"} {:description "The maximum number of disbursements to return in the response, used for paging.", :in "query", :name "maxResults", :type "integer"} {:description "The ID of the account that manages the order. This cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The token returned by the previous request.", :in "query", :name "pageToken", :type "string"} {:description "The last date in which transaction occurred. In ISO 8601 format. Default: current date.", :in "query", :name "transactionEndDate", :type "string"} {:description "The first date in which transaction occurred. In ISO 8601 format.", :in "query", :name "transactionStartDate", :required true, :type "string"}], :operationId "content.orderreports.listtransactions", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/orderreports/disbursements/{disbursementId}/transactions", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.orderreturns.list" {:description "Lists order returns in your Merchant Center account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/OrderreturnsListResponse"}}}, :parameters [{:description "Obtains order returns created before this date (inclusively), in ISO 8601 format.", :in "query", :name "createdEndDate", :type "string"} {:description "Obtains order returns created after this date (inclusively), in ISO 8601 format.", :in "query", :name "createdStartDate", :type "string"} {:description "The maximum number of order returns to return in the response, used for paging. The default value is 25 returns per page, and the maximum allowed value is 250 returns per page.", :in "query", :name "maxResults", :type "integer"} {:description "The ID of the account that manages the order. This cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "Return the results in the specified order.", :enum ["returnCreationTimeAsc" "returnCreationTimeDesc"], :in "query", :name "orderBy", :type "string"} {:description "The token returned by the previous request.", :in "query", :name "pageToken", :type "string"}], :operationId "content.orderreturns.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/orderreturns", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.orders.createtestorder" {:description "Sandbox only. Creates a test order.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/OrdersCreateTestOrderResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/OrdersCreateTestOrderRequest"}} {:description "The ID of the account that should manage the order. This cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"}], :operationId "content.orders.createtestorder", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/testorders", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.datafeedstatuses.get" {:description "Retrieves the status of a datafeed from your Merchant Center account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/DatafeedStatus"}}}, :parameters [{:description "The country for which to get the datafeed status. If this parameter is provided then language must also be provided. Note that this parameter is required for feeds targeting multiple countries and languages, since a feed may have a different status for each target.", :in "query", :name "country", :type "string"} {:description "The ID of the datafeed.", :in "path", :name "datafeedId", :required true, :type "string"} {:description "The language for which to get the datafeed status. If this parameter is provided then country must also be provided. Note that this parameter is required for feeds targeting multiple countries and languages, since a feed may have a different status for each target.", :in "query", :name "language", :type "string"} {:description "The ID of the account that manages the datafeed. This account cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"}], :operationId "content.datafeedstatuses.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/datafeedstatuses/{datafeedId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.orders.getbymerchantorderid" {:description "Retrieves an order using merchant order ID.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/OrdersGetByMerchantOrderIdResponse"}}}, :parameters [{:description "The ID of the account that manages the order. This cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The merchant order ID to be looked for.", :in "path", :name "merchantOrderId", :required true, :type "string"}], :operationId "content.orders.getbymerchantorderid", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/ordersbymerchantid/{merchantOrderId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.returnpolicy.list" {:description "Lists the return policies of the Merchant Center account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ReturnpolicyListResponse"}}}, :parameters [{:description "The Merchant Center account to list return policies for.", :in "path", :name "merchantId", :required true, :type "string"}], :operationId "content.returnpolicy.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/returnpolicy", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.datafeedstatuses.custombatch" {:description "Gets multiple Merchant Center datafeed statuses in a single request.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/DatafeedstatusesCustomBatchResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/DatafeedstatusesCustomBatchRequest"}}], :operationId "content.datafeedstatuses.custombatch", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/datafeedstatuses/batch", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.accounts.authinfo" {:description "Returns information about the authenticated user.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/AccountsAuthInfoResponse"}}}, :operationId "content.accounts.authinfo", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/accounts/authinfo", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.orders.createtestreturn" {:description "Sandbox only. Creates a test return.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/OrdersCreateTestReturnResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/OrdersCreateTestReturnRequest"}} {:description "The ID of the account that manages the order. This cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The ID of the order.", :in "path", :name "orderId", :required true, :type "string"}], :operationId "content.orders.createtestreturn", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/orders/{orderId}/testreturn", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.returnaddress.delete" {:description "Deletes a return address for the given Merchant Center account.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "The Merchant Center account from which to delete the given return address.", :in "path", :name "merchantId", :required true, :type "string"} {:description "Return address ID generated by Google.", :in "path", :name "returnAddressId", :required true, :type "string"}], :operationId "content.returnaddress.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/{merchantId}/returnaddress/{returnAddressId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.shippingsettings.update" {:description "Updates the shipping settings of the account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ShippingSettings"}}}, :parameters [{:description "The ID of the account for which to get/update shipping settings.", :in "path", :name "accountId", :required true, :type "string"} {:in "body", :name "body", :schema {:$ref "#/definitions/ShippingSettings"}} {:description "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.", :in "path", :name "merchantId", :required true, :type "string"}], :operationId "content.shippingsettings.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/{merchantId}/shippingsettings/{accountId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.accounts.delete" {:description "Deletes a Merchant Center sub-account.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "The ID of the account.", :in "path", :name "accountId", :required true, :type "string"} {:default false, :description "Flag to delete sub-accounts with products. The default value is false.", :in "query", :name "force", :type "boolean"} {:description "The ID of the managing account. This must be a multi-client account, and accountId must be the ID of a sub-account of this account.", :in "path", :name "merchantId", :required true, :type "string"}], :operationId "content.accounts.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/{merchantId}/accounts/{accountId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.pos.inventory" {:description "Submit inventory for the given merchant.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/PosInventoryResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/PosInventoryRequest"}} {:description "The ID of the POS or inventory data provider.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The ID of the target merchant.", :in "path", :name "targetMerchantId", :required true, :type "string"}], :operationId "content.pos.inventory", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/pos/{targetMerchantId}/inventory", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.shippingsettings.get" {:description "Retrieves the shipping settings of the account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ShippingSettings"}}}, :parameters [{:description "The ID of the account for which to get/update shipping settings.", :in "path", :name "accountId", :required true, :type "string"} {:description "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.", :in "path", :name "merchantId", :required true, :type "string"}], :operationId "content.shippingsettings.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/shippingsettings/{accountId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.accounts.get" {:description "Retrieves a Merchant Center account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Account"}}}, :parameters [{:description "The ID of the account.", :in "path", :name "accountId", :required true, :type "string"} {:description "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.", :in "path", :name "merchantId", :required true, :type "string"}], :operationId "content.accounts.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/accounts/{accountId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.shippingsettings.getsupportedcarriers" {:description "Retrieves supported carriers and carrier services for an account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ShippingsettingsGetSupportedCarriersResponse"}}}, :parameters [{:description "The ID of the account for which to retrieve the supported carriers.", :in "path", :name "merchantId", :required true, :type "string"}], :operationId "content.shippingsettings.getsupportedcarriers", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/supportedCarriers", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.orders.instorerefundlineitem" {:description "Deprecated. Notifies that item return and refund was handled directly by merchant outside of Google payments processing (e.g. cash refund done in store).\nNote: We recommend calling the returnrefundlineitem method to refund in-store returns. We will issue the refund directly to the customer. This helps to prevent possible differences arising between merchant and Google transaction records. We also recommend having the point of sale system communicate with Google to ensure that customers do not receive a double refund by first refunding via Google then via an in-store return.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/OrdersInStoreRefundLineItemResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/OrdersInStoreRefundLineItemRequest"}} {:description "The ID of the account that manages the order. This cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The ID of the order.", :in "path", :name "orderId", :required true, :type "string"}], :operationId "content.orders.instorerefundlineitem", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/orders/{orderId}/inStoreRefundLineItem", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.liasettings.update" {:description "Updates the LIA settings of the account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/LiaSettings"}}}, :parameters [{:description "The ID of the account for which to get or update LIA settings.", :in "path", :name "accountId", :required true, :type "string"} {:in "body", :name "body", :schema {:$ref "#/definitions/LiaSettings"}} {:description "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.", :in "path", :name "merchantId", :required true, :type "string"}], :operationId "content.liasettings.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/{merchantId}/liasettings/{accountId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.liasettings.custombatch" {:description "Retrieves and/or updates the LIA settings of multiple accounts in a single request.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/LiasettingsCustomBatchResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/LiasettingsCustomBatchRequest"}}], :operationId "content.liasettings.custombatch", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/liasettings/batch", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.liasettings.setinventoryverificationcontact" {:description "Sets the inventory verification contract for the specified country.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/LiasettingsSetInventoryVerificationContactResponse"}}}, :parameters [{:description "The ID of the account that manages the order. This cannot be a multi-client account.", :in "path", :name "accountId", :required true, :type "string"} {:description "The email of the inventory verification contact.", :in "query", :name "contactEmail", :required true, :type "string"} {:description "The name of the inventory verification contact.", :in "query", :name "contactName", :required true, :type "string"} {:description "The country for which inventory verification is requested.", :in "query", :name "country", :required true, :type "string"} {:description "The language for which inventory verification is requested.", :in "query", :name "language", :required true, :type "string"} {:description "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.", :in "path", :name "merchantId", :required true, :type "string"}], :operationId "content.liasettings.setinventoryverificationcontact", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/liasettings/{accountId}/setinventoryverificationcontact", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.accountstatuses.get" {:description "Retrieves the status of a Merchant Center account. No itemLevelIssues are returned for multi-client accounts.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/AccountStatus"}}}, :parameters [{:description "The ID of the account.", :in "path", :name "accountId", :required true, :type "string"} {:collectionFormat "multi", :description "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.", :in "query", :items {:type "string"}, :name "destinations", :type "array"} {:description "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.", :in "path", :name "merchantId", :required true, :type "string"}], :operationId "content.accountstatuses.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/accountstatuses/{accountId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.productstatuses.get" {:description "Gets the status of a product from your Merchant Center account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ProductStatus"}}}, :parameters [{:collectionFormat "multi", :description "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.", :in "query", :items {:type "string"}, :name "destinations", :type "array"} {:description "The ID of the account that contains the product. This account cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The REST ID of the product.", :in "path", :name "productId", :required true, :type "string"}], :operationId "content.productstatuses.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/productstatuses/{productId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.returnpolicy.insert" {:description "Inserts a return policy for the Merchant Center account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ReturnPolicy"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/ReturnPolicy"}} {:description "The Merchant Center account to insert a return policy for.", :in "path", :name "merchantId", :required true, :type "string"}], :operationId "content.returnpolicy.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/returnpolicy", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.productstatuses.list" {:description "Lists the statuses of the products in your Merchant Center account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ProductstatusesListResponse"}}}, :parameters [{:collectionFormat "multi", :description "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.", :in "query", :items {:type "string"}, :name "destinations", :type "array"} {:description "The maximum number of product statuses to return in the response, used for paging.", :in "query", :name "maxResults", :type "integer"} {:description "The ID of the account that contains the products. This account cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The token returned by the previous request.", :in "query", :name "pageToken", :type "string"}], :operationId "content.productstatuses.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/productstatuses", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.orders.updatemerchantorderid" {:description "Updates the merchant order ID for a given order.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/OrdersUpdateMerchantOrderIdResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/OrdersUpdateMerchantOrderIdRequest"}} {:description "The ID of the account that manages the order. This cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The ID of the order.", :in "path", :name "orderId", :required true, :type "string"}], :operationId "content.orders.updatemerchantorderid", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/orders/{orderId}/updateMerchantOrderId", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.returnpolicy.get" {:description "Gets a return policy of the Merchant Center account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ReturnPolicy"}}}, :parameters [{:description "The Merchant Center account to get a return policy for.", :in "path", :name "merchantId", :required true, :type "string"} {:description "Return policy ID generated by Google.", :in "path", :name "returnPolicyId", :required true, :type "string"}], :operationId "content.returnpolicy.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/returnpolicy/{returnPolicyId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.accounttax.custombatch" {:description "Retrieves and updates tax settings of multiple accounts in a single request.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/AccounttaxCustomBatchResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/AccounttaxCustomBatchRequest"}}], :operationId "content.accounttax.custombatch", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/accounttax/batch", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.productstatuses.custombatch" {:description "Gets the statuses of multiple products in a single request.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ProductstatusesCustomBatchResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/ProductstatusesCustomBatchRequest"}}], :operationId "content.productstatuses.custombatch", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/productstatuses/batch", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.returnpolicy.delete" {:description "Deletes a return policy for the given Merchant Center account.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "The Merchant Center account from which to delete the given return policy.", :in "path", :name "merchantId", :required true, :type "string"} {:description "Return policy ID generated by Google.", :in "path", :name "returnPolicyId", :required true, :type "string"}], :operationId "content.returnpolicy.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/{merchantId}/returnpolicy/{returnPolicyId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.datafeeds.get" {:description "Retrieves a datafeed configuration from your Merchant Center account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Datafeed"}}}, :parameters [{:description "The ID of the datafeed.", :in "path", :name "datafeedId", :required true, :type "string"} {:description "The ID of the account that manages the datafeed. This account cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"}], :operationId "content.datafeeds.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/datafeeds/{datafeedId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.orders.updateshipment" {:description "Updates a shipment's status, carrier, and/or tracking ID.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/OrdersUpdateShipmentResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/OrdersUpdateShipmentRequest"}} {:description "The ID of the account that manages the order. This cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The ID of the order.", :in "path", :name "orderId", :required true, :type "string"}], :operationId "content.orders.updateshipment", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/orders/{orderId}/updateShipment", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.shippingsettings.getsupportedholidays" {:description "Retrieves supported holidays for an account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ShippingsettingsGetSupportedHolidaysResponse"}}}, :parameters [{:description "The ID of the account for which to retrieve the supported holidays.", :in "path", :name "merchantId", :required true, :type "string"}], :operationId "content.shippingsettings.getsupportedholidays", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/supportedHolidays", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.liasettings.requestinventoryverification" {:description "Requests inventory validation for the specified country.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/LiasettingsRequestInventoryVerificationResponse"}}}, :parameters [{:description "The ID of the account that manages the order. This cannot be a multi-client account.", :in "path", :name "accountId", :required true, :type "string"} {:description "The country for which inventory validation is requested.", :in "path", :name "country", :required true, :type "string"} {:description "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.", :in "path", :name "merchantId", :required true, :type "string"}], :operationId "content.liasettings.requestinventoryverification", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/liasettings/{accountId}/requestinventoryverification/{country}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.products.insert" {:description "Uploads a product to your Merchant Center account. If an item with the same channel, contentLanguage, offerId, and targetCountry already exists, this method updates that entry.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Product"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Product"}} {:description "The Content API Supplemental Feed ID.", :in "query", :name "feedId", :type "string"} {:description "The ID of the account that contains the product. This account cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"}], :operationId "content.products.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/products", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.pos.get" {:description "Retrieves information about the given store.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/PosStore"}}}, :parameters [{:description "The ID of the POS or inventory data provider.", :in "path", :name "merchantId", :required true, :type "string"} {:description "A store code that is unique per merchant.", :in "path", :name "storeCode", :required true, :type "string"} {:description "The ID of the target merchant.", :in "path", :name "targetMerchantId", :required true, :type "string"}], :operationId "content.pos.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/pos/{targetMerchantId}/store/{storeCode}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.accountstatuses.custombatch" {:description "Retrieves multiple Merchant Center account statuses in a single request.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/AccountstatusesCustomBatchResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/AccountstatusesCustomBatchRequest"}}], :operationId "content.accountstatuses.custombatch", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/accountstatuses/batch", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.orderreturns.get" {:description "Retrieves an order return from your Merchant Center account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/MerchantOrderReturn"}}}, :parameters [{:description "The ID of the account that manages the order. This cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "Merchant order return ID generated by Google.", :in "path", :name "returnId", :required true, :type "string"}], :operationId "content.orderreturns.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/orderreturns/{returnId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.orders.setlineitemmetadata" {:description "Sets (or overrides if it already exists) merchant provided annotations in the form of key-value pairs. A common use case would be to supply us with additional structured information about a line item that cannot be provided via other methods. Submitted key-value pairs can be retrieved as part of the orders resource.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/OrdersSetLineItemMetadataResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/OrdersSetLineItemMetadataRequest"}} {:description "The ID of the account that manages the order. This cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The ID of the order.", :in "path", :name "orderId", :required true, :type "string"}], :operationId "content.orders.setlineitemmetadata", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/orders/{orderId}/setLineItemMetadata", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.datafeeds.insert" {:description "Registers a datafeed configuration with your Merchant Center account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Datafeed"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Datafeed"}} {:description "The ID of the account that manages the datafeed. This account cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"}], :operationId "content.datafeeds.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/datafeeds", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.orders.cancel" {:description "Cancels all line items in an order, making a full refund.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/OrdersCancelResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/OrdersCancelRequest"}} {:description "The ID of the account that manages the order. This cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The ID of the order to cancel.", :in "path", :name "orderId", :required true, :type "string"}], :operationId "content.orders.cancel", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/orders/{orderId}/cancel", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.returnaddress.insert" {:description "Inserts a return address for the Merchant Center account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ReturnAddress"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/ReturnAddress"}} {:description "The Merchant Center account to insert a return address for.", :in "path", :name "merchantId", :required true, :type "string"}], :operationId "content.returnaddress.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/returnaddress", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.shippingsettings.list" {:description "Lists the shipping settings of the sub-accounts in your Merchant Center account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ShippingsettingsListResponse"}}}, :parameters [{:description "The maximum number of shipping settings to return in the response, used for paging.", :in "query", :name "maxResults", :type "integer"} {:description "The ID of the managing account. This must be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The token returned by the previous request.", :in "query", :name "pageToken", :type "string"}], :operationId "content.shippingsettings.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/shippingsettings", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.orders.advancetestorder" {:description "Sandbox only. Moves a test order from state \"inProgress\" to state \"pendingShipment\".", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/OrdersAdvanceTestOrderResponse"}}}, :parameters [{:description "The ID of the account that manages the order. This cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The ID of the test order to modify.", :in "path", :name "orderId", :required true, :type "string"}], :operationId "content.orders.advancetestorder", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/testorders/{orderId}/advance", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.returnaddress.list" {:description "Lists the return addresses of the Merchant Center account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ReturnaddressListResponse"}}}, :parameters [{:description "List only return addresses applicable to the given country of sale. When omitted, all return addresses are listed.", :in "query", :name "country", :type "string"} {:description "The maximum number of addresses in the response, used for paging.", :in "query", :name "maxResults", :type "integer"} {:description "The Merchant Center account to list return addresses for.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The token returned by the previous request.", :in "query", :name "pageToken", :type "string"}], :operationId "content.returnaddress.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/returnaddress", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.datafeeds.custombatch" {:description "Deletes, fetches, gets, inserts and updates multiple datafeeds in a single request.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/DatafeedsCustomBatchResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/DatafeedsCustomBatchRequest"}}], :operationId "content.datafeeds.custombatch", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/datafeeds/batch", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.products.list" {:description "Lists the products in your Merchant Center account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ProductsListResponse"}}}, :parameters [{:description "The maximum number of products to return in the response, used for paging.", :in "query", :name "maxResults", :type "integer"} {:description "The ID of the account that contains the products. This account cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The token returned by the previous request.", :in "query", :name "pageToken", :type "string"}], :operationId "content.products.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/products", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.regionalinventory.insert" {:description "Update the regional inventory of a product in your Merchant Center account. If a regional inventory with the same region ID already exists, this method updates that entry.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/RegionalInventory"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/RegionalInventory"}} {:description "The ID of the account that contains the product. This account cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The REST ID of the product for which to update the regional inventory.", :in "path", :name "productId", :required true, :type "string"}], :operationId "content.regionalinventory.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/products/{productId}/regionalinventory", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.products.delete" {:description "Deletes a product from your Merchant Center account.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "The Content API Supplemental Feed ID.", :in "query", :name "feedId", :type "string"} {:description "The ID of the account that contains the product. This account cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The REST ID of the product.", :in "path", :name "productId", :required true, :type "string"}], :operationId "content.products.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/{merchantId}/products/{productId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.datafeeds.list" {:description "Lists the configurations for datafeeds in your Merchant Center account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/DatafeedsListResponse"}}}, :parameters [{:description "The maximum number of products to return in the response, used for paging.", :in "query", :name "maxResults", :type "integer"} {:description "The ID of the account that manages the datafeeds. This account cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The token returned by the previous request.", :in "query", :name "pageToken", :type "string"}], :operationId "content.datafeeds.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/datafeeds", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.orders.updatelineitemshippingdetails" {:description "Updates ship by and delivery by dates for a line item.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/OrdersUpdateLineItemShippingDetailsResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/OrdersUpdateLineItemShippingDetailsRequest"}} {:description "The ID of the account that manages the order. This cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The ID of the order.", :in "path", :name "orderId", :required true, :type "string"}], :operationId "content.orders.updatelineitemshippingdetails", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/orders/{orderId}/updateLineItemShippingDetails", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.orders.rejectreturnlineitem" {:description "Rejects return on an line item.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/OrdersRejectReturnLineItemResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/OrdersRejectReturnLineItemRequest"}} {:description "The ID of the account that manages the order. This cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The ID of the order.", :in "path", :name "orderId", :required true, :type "string"}], :operationId "content.orders.rejectreturnlineitem", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/orders/{orderId}/rejectReturnLineItem", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.liasettings.setposdataprovider" {:description "Sets the POS data provider for the specified country.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/LiasettingsSetPosDataProviderResponse"}}}, :parameters [{:description "The ID of the account for which to retrieve accessible Google My Business accounts.", :in "path", :name "accountId", :required true, :type "string"} {:description "The country for which the POS data provider is selected.", :in "query", :name "country", :required true, :type "string"} {:description "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The ID of POS data provider.", :in "query", :name "posDataProviderId", :type "string"} {:description "The account ID by which this merchant is known to the POS data provider.", :in "query", :name "posExternalAccountId", :type "string"}], :operationId "content.liasettings.setposdataprovider", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/liasettings/{accountId}/setposdataprovider", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.accounttax.update" {:description "Updates the tax settings of the account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/AccountTax"}}}, :parameters [{:description "The ID of the account for which to get/update account tax settings.", :in "path", :name "accountId", :required true, :type "string"} {:in "body", :name "body", :schema {:$ref "#/definitions/AccountTax"}} {:description "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.", :in "path", :name "merchantId", :required true, :type "string"}], :operationId "content.accounttax.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/{merchantId}/accounttax/{accountId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.orders.shiplineitems" {:description "Marks line item(s) as shipped.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/OrdersShipLineItemsResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/OrdersShipLineItemsRequest"}} {:description "The ID of the account that manages the order. This cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The ID of the order.", :in "path", :name "orderId", :required true, :type "string"}], :operationId "content.orders.shiplineitems", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/orders/{orderId}/shipLineItems", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.regionalinventory.custombatch" {:description "Updates regional inventory for multiple products or regions in a single request.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/RegionalinventoryCustomBatchResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/RegionalinventoryCustomBatchRequest"}}], :operationId "content.regionalinventory.custombatch", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/regionalinventory/batch", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.returnaddress.custombatch" {:description "Batches multiple return address related calls in a single request.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ReturnaddressCustomBatchResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/ReturnaddressCustomBatchRequest"}}], :operationId "content.returnaddress.custombatch", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/returnaddress/batch", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.returnaddress.get" {:description "Gets a return address of the Merchant Center account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ReturnAddress"}}}, :parameters [{:description "The Merchant Center account to get a return address for.", :in "path", :name "merchantId", :required true, :type "string"} {:description "Return address ID generated by Google.", :in "path", :name "returnAddressId", :required true, :type "string"}], :operationId "content.returnaddress.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/returnaddress/{returnAddressId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.orders.returnrefundlineitem" {:description "Returns and refunds a line item. Note that this method can only be called on fully shipped orders.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/OrdersReturnRefundLineItemResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/OrdersReturnRefundLineItemRequest"}} {:description "The ID of the account that manages the order. This cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The ID of the order.", :in "path", :name "orderId", :required true, :type "string"}], :operationId "content.orders.returnrefundlineitem", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/orders/{orderId}/returnRefundLineItem", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.accounts.list" {:description "Lists the sub-accounts in your Merchant Center account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/AccountsListResponse"}}}, :parameters [{:description "The maximum number of accounts to return in the response, used for paging.", :in "query", :name "maxResults", :type "integer"} {:description "The ID of the managing account. This must be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The token returned by the previous request.", :in "query", :name "pageToken", :type "string"}], :operationId "content.accounts.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/accounts", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.pos.custombatch" {:description "Batches multiple POS-related calls in a single request.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/PosCustomBatchResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/PosCustomBatchRequest"}}], :operationId "content.pos.custombatch", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/pos/batch", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.pos.insert" {:description "Creates a store for the given merchant.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/PosStore"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/PosStore"}} {:description "The ID of the POS or inventory data provider.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The ID of the target merchant.", :in "path", :name "targetMerchantId", :required true, :type "string"}], :operationId "content.pos.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/pos/{targetMerchantId}/store", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.accounts.claimwebsite" {:description "Claims the website of a Merchant Center sub-account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/AccountsClaimWebsiteResponse"}}}, :parameters [{:description "The ID of the account whose website is claimed.", :in "path", :name "accountId", :required true, :type "string"} {:description "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "Only available to selected merchants. When set to True, this flag removes any existing claim on the requested website by another account and replaces it with a claim from this account.", :in "query", :name "overwrite", :type "boolean"}], :operationId "content.accounts.claimwebsite", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/accounts/{accountId}/claimwebsite", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.datafeeds.delete" {:description "Deletes a datafeed configuration from your Merchant Center account.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "The ID of the datafeed.", :in "path", :name "datafeedId", :required true, :type "string"} {:description "The ID of the account that manages the datafeed. This account cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"}], :operationId "content.datafeeds.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/{merchantId}/datafeeds/{datafeedId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.liasettings.requestgmbaccess" {:description "Requests access to a specified Google My Business account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/LiasettingsRequestGmbAccessResponse"}}}, :parameters [{:description "The ID of the account for which GMB access is requested.", :in "path", :name "accountId", :required true, :type "string"} {:description "The email of the Google My Business account.", :in "query", :name "gmbEmail", :required true, :type "string"} {:description "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.", :in "path", :name "merchantId", :required true, :type "string"}], :operationId "content.liasettings.requestgmbaccess", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/liasettings/{accountId}/requestgmbaccess", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.orderreports.listdisbursements" {:description "Retrieves a report for disbursements from your Merchant Center account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/OrderreportsListDisbursementsResponse"}}}, :parameters [{:description "The last date which disbursements occurred. In ISO 8601 format. Default: current date.", :in "query", :name "disbursementEndDate", :type "string"} {:description "The first date which disbursements occurred. In ISO 8601 format.", :in "query", :name "disbursementStartDate", :required true, :type "string"} {:description "The maximum number of disbursements to return in the response, used for paging.", :in "query", :name "maxResults", :type "integer"} {:description "The ID of the account that manages the order. This cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The token returned by the previous request.", :in "query", :name "pageToken", :type "string"}], :operationId "content.orderreports.listdisbursements", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/orderreports/disbursements", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.accounts.link" {:description "Performs an action on a link between two Merchant Center accounts, namely accountId and linkedAccountId.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/AccountsLinkResponse"}}}, :parameters [{:description "The ID of the account that should be linked.", :in "path", :name "accountId", :required true, :type "string"} {:in "body", :name "body", :schema {:$ref "#/definitions/AccountsLinkRequest"}} {:description "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.", :in "path", :name "merchantId", :required true, :type "string"}], :operationId "content.accounts.link", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/accounts/{accountId}/link", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.orders.cancellineitem" {:description "Cancels a line item, making a full refund.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/OrdersCancelLineItemResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/OrdersCancelLineItemRequest"}} {:description "The ID of the account that manages the order. This cannot be a multi-client account.", :in "path", :name "merchantId", :required true, :type "string"} {:description "The ID of the order.", :in "path", :name "orderId", :required true, :type "string"}], :operationId "content.orders.cancellineitem", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/{merchantId}/orders/{orderId}/cancelLineItem", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.accounttax.get" {:description "Retrieves the tax settings of the account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/AccountTax"}}}, :parameters [{:description "The ID of the account for which to get/update account tax settings.", :in "path", :name "accountId", :required true, :type "string"} {:description "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.", :in "path", :name "merchantId", :required true, :type "string"}], :operationId "content.accounttax.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/accounttax/{accountId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.liasettings.getaccessiblegmbaccounts" {:description "Retrieves the list of accessible Google My Business accounts.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/LiasettingsGetAccessibleGmbAccountsResponse"}}}, :parameters [{:description "The ID of the account for which to retrieve accessible Google My Business accounts.", :in "path", :name "accountId", :required true, :type "string"} {:description "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.", :in "path", :name "merchantId", :required true, :type "string"}], :operationId "content.liasettings.getaccessiblegmbaccounts", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/liasettings/{accountId}/accessiblegmbaccounts", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "content.liasettings.get" {:description "Retrieves the LIA settings of the account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/LiaSettings"}}}, :parameters [{:description "The ID of the account for which to get or update LIA settings.", :in "path", :name "accountId", :required true, :type "string"} {:description "The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.", :in "path", :name "merchantId", :required true, :type "string"}], :operationId "content.liasettings.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/{merchantId}/liasettings/{accountId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}}, :parameters {:alt {:default "json", :description "Data format for the response.", :enum ["json"], :in "query", :name "alt", :type "string"}, :fields {:description "Selector specifying which fields to include in a partial response.", :in "query", :name "fields", :type "string"}, :key {:description "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", :in "query", :name "key", :type "string"}, :oauth_token {:description "OAuth 2.0 token for the current user.", :in "query", :name "oauth_token", :type "string"}, :prettyPrint {:default true, :description "Returns response with indentations and line breaks.", :in "query", :name "prettyPrint", :type "boolean"}, :quotaUser {:description "An opaque string that represents a user for quota purposes. Must not exceed 40 characters.", :in "query", :name "quotaUser", :type "string"}, :userIp {:description "Deprecated. Please use quotaUser instead.", :in "query", :name "userIp", :type "string"}}, :definitions {:ProductAmount {:properties {:priceAmount {:$ref "#/definitions/Price", :description "The pre-tax or post-tax price depending on the location of the order."}, :remittedTaxAmount {:$ref "#/definitions/Price", :description "Remitted tax value."}, :taxAmount {:$ref "#/definitions/Price", :description "Tax value."}}, :type "object"}, :OrderLineItemProductVariantAttribute {:properties {:dimension {:description "The dimension of the variant.", :type "string"}, :value {:description "The value for the dimension.", :type "string"}}, :type "object"}, :RegionalInventory {:description "Regional inventory resource. contains the regional name and all attributes which are overridden for the specified region.", :properties {:availability {:description "The availability of the product.", :type "string"}, :customAttributes {:description "A list of custom (merchant-provided) attributes. It can also be used for submitting any attribute of the feed specification in its generic form.", :items {:$ref "#/definitions/CustomAttribute"}, :type "array"}, :kind {:default "content#regionalInventory", :description "Identifies what kind of resource this is. Value: the fixed string \"content#regionalInventory\".", :type "string"}, :price {:$ref "#/definitions/Price", :description "The price of the product."}, :regionId {:description "The ID (name) of the region.", :type "string"}, :salePrice {:$ref "#/definitions/Price", :description "The sale price of the product. Mandatory if sale_price_effective_date is defined."}, :salePriceEffectiveDate {:description "A date range represented by a pair of ISO 8601 dates separated by a space, comma, or slash. Both dates might be specified as 'null' if undecided.", :type "string"}}, :type "object"}, :OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption {:properties {:description {:description "Optional description of the refund reason.", :type "string"}, :reason {:description "[required] Reason for the refund.", :type "string"}}, :type "object"}, :ShipmentInvoice {:properties {:invoiceSummary {:$ref "#/definitions/InvoiceSummary", :description "[required] Invoice summary."}, :lineItemInvoices {:description "[required] Invoice details per line item.", :items {:$ref "#/definitions/ShipmentInvoiceLineItemInvoice"}, :type "array"}, :shipmentGroupId {:description "[required] ID of the shipment group. It is assigned by the merchant in the shipLineItems method and is used to group multiple line items that have the same kind of shipping charges.", :type "string"}}, :type "object"}, :AccountsCustomBatchRequestEntryLinkRequest {:properties {:action {:description "Action to perform for this link. The \"request\" action is only available to select merchants.", :type "string"}, :linkType {:description "Type of the link between the two accounts.", :type "string"}, :linkedAccountId {:description "The ID of the linked account.", :type "string"}}, :type "object"}, :Service {:properties {:active {:description "A boolean exposing the active status of the shipping service. Required.", :type "boolean"}, :currency {:description "The CLDR code of the currency to which this service applies. Must match that of the prices in rate groups.", :type "string"}, :deliveryCountry {:description "The CLDR territory code of the country to which the service applies. Required.", :type "string"}, :deliveryTime {:$ref "#/definitions/DeliveryTime", :description "Time spent in various aspects from order to the delivery of the product. Required."}, :eligibility {:description "Eligibility for this service.", :type "string"}, :minimumOrderValue {:$ref "#/definitions/Price", :description "Minimum order value for this service. If set, indicates that customers will have to spend at least this amount. All prices within a service must have the same currency."}, :name {:description "Free-form name of the service. Must be unique within target account. Required.", :type "string"}, :rateGroups {:description "Shipping rate group definitions. Only the last one is allowed to have an empty applicableShippingLabels, which means \"everything else\". The other applicableShippingLabels must not overlap.", :items {:$ref "#/definitions/RateGroup"}, :type "array"}}, :type "object"}, :ProductsListResponse {:properties {:kind {:default "content#productsListResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#productsListResponse\".", :type "string"}, :nextPageToken {:description "The token for the retrieval of the next page of products.", :type "string"}, :resources {:items {:$ref "#/definitions/Product"}, :type "array"}}, :type "object"}, :ShipmentTrackingInfo {:properties {:carrier {:type "string"}, :trackingNumber {:type "string"}}, :type "object"}, :PosDataProvidersPosDataProvider {:properties {:displayName {:description "The display name of Pos data Provider.", :type "string"}, :fullName {:description "The full name of this POS data Provider.", :type "string"}, :providerId {:description "The ID of the account.", :format "uint64", :type "string"}}, :type "object"}, :OrdersCreateTestReturnResponse {:properties {:kind {:default "content#ordersCreateTestReturnResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#ordersCreateTestReturnResponse\".", :type "string"}, :returnId {:description "The ID of the newly created test order return.", :type "string"}}, :type "object"}, :ShippingSettings {:description "The merchant account's shipping settings. All methods except getsupportedcarriers and getsupportedholidays require the admin role.", :properties {:accountId {:description "The ID of the account to which these account shipping settings belong. Ignored upon update, always present in get request responses.", :format "uint64", :type "string"}, :postalCodeGroups {:description "A list of postal code groups that can be referred to in services. Optional.", :items {:$ref "#/definitions/PostalCodeGroup"}, :type "array"}, :services {:description "The target account's list of services. Optional.", :items {:$ref "#/definitions/Service"}, :type "array"}}, :type "object"}, :PosInventoryRequest {:properties {:contentLanguage {:description "The two-letter ISO 639-1 language code for the item.", :type "string"}, :gtin {:description "Global Trade Item Number.", :type "string"}, :itemId {:description "A unique identifier for the item.", :type "string"}, :price {:$ref "#/definitions/Price", :description "The current price of the item."}, :quantity {:description "The available quantity of the item.", :format "int64", :type "string"}, :storeCode {:description "The identifier of the merchant's store. Either a storeCode inserted via the API or the code of the store in Google My Business.", :type "string"}, :targetCountry {:description "The CLDR territory code for the item.", :type "string"}, :timestamp {:description "The inventory timestamp, in ISO 8601 format.", :type "string"}}, :type "object"}, :Installment {:properties {:amount {:$ref "#/definitions/Price", :description "The amount the buyer has to pay per month."}, :months {:description "The number of installments the buyer has to pay.", :format "int64", :type "string"}}, :type "object"}, :OrderLineItemProductFee {:properties {:amount {:$ref "#/definitions/Price", :description "Amount of the fee."}, :name {:description "Name of the fee.", :type "string"}}, :type "object"}, :CarriersCarrier {:properties {:country {:description "The CLDR country code of the carrier (e.g., \"US\"). Always present.", :type "string"}, :name {:description "The name of the carrier (e.g., \"UPS\"). Always present.", :type "string"}, :services {:description "A list of supported services (e.g., \"ground\") for that carrier. Contains at least one service.", :items {:type "string"}, :type "array"}}, :type "object"}, :AccountCustomerService {:properties {:email {:description "Customer service email.", :type "string"}, :phoneNumber {:description "Customer service phone number.", :type "string"}, :url {:description "Customer service URL.", :type "string"}}, :type "object"}, :OrderLineItem {:properties {:quantityReadyForPickup {:description "Number of items ready for pickup.", :format "uint32", :type "integer"}, :quantityUndeliverable {:description "Number of items undeliverable.", :format "uint32", :type "integer"}, :quantityDelivered {:description "Number of items delivered.", :format "uint32", :type "integer"}, :returnInfo {:$ref "#/definitions/OrderLineItemReturnInfo", :description "Details of the return policy for the line item."}, :quantityReturned {:description "Number of items returned.", :format "uint32", :type "integer"}, :tax {:$ref "#/definitions/Price", :description "Total tax amount for the line item. For example, if two items are purchased, and each have a cost tax of $2, the total tax amount will be $4."}, :adjustments {:description "Price and tax adjustments applied on the line item.", :items {:$ref "#/definitions/OrderLineItemAdjustment"}, :type "array"}, :quantityShipped {:description "Number of items shipped.", :format "uint32", :type "integer"}, :quantityCanceled {:description "Number of items canceled.", :format "uint32", :type "integer"}, :quantityPending {:description "Number of items pending.", :format "uint32", :type "integer"}, :product {:$ref "#/definitions/OrderLineItemProduct", :description "Product data as seen by customer from the time of the order placement. Note that certain attributes values (e.g. title or gtin) might be reformatted and no longer match values submitted via product feed."}, :id {:description "The ID of the line item.", :type "string"}, :annotations {:description "Annotations that are attached to the line item.", :items {:$ref "#/definitions/OrderMerchantProvidedAnnotation"}, :type "array"}, :quantityOrdered {:description "Number of items ordered.", :format "uint32", :type "integer"}, :shippingDetails {:$ref "#/definitions/OrderLineItemShippingDetails", :description "Details of the requested shipping for the line item."}, :price {:$ref "#/definitions/Price", :description "Total price for the line item. For example, if two items for $10 are purchased, the total price will be $20."}, :returns {:description "Returns of the line item.", :items {:$ref "#/definitions/OrderReturn"}, :type "array"}, :cancellations {:description "Cancellations of the line item.", :items {:$ref "#/definitions/OrderCancellation"}, :type "array"}}, :type "object"}, :ReturnpolicyCustomBatchResponseEntry {:properties {:batchId {:description "The ID of the request entry to which this entry responds.", :format "uint32", :type "integer"}, :errors {:$ref "#/definitions/Errors", :description "A list of errors defined if, and only if, the request failed."}, :kind {:default "content#returnpolicyCustomBatchResponseEntry", :description "Identifies what kind of resource this is. Value: the fixed string \"content#returnpolicyCustomBatchResponseEntry\".", :type "string"}, :returnPolicy {:$ref "#/definitions/ReturnPolicy", :description "The retrieved return policy."}}, :type "object"}, :TransitTableTransitTimeRowTransitTimeValue {:properties {:maxTransitTimeInDays {:description "Must be greater than or equal to minTransitTimeInDays.", :format "uint32", :type "integer"}, :minTransitTimeInDays {:description "Transit time range (min-max) in business days. 0 means same day delivery, 1 means next day delivery.", :format "uint32", :type "integer"}}, :type "object"}, :LiasettingsGetAccessibleGmbAccountsResponse {:properties {:accountId {:description "The ID of the account.", :format "uint64", :type "string"}, :gmbAccounts {:description "A list of GMB accounts which are available to the merchant.", :items {:$ref "#/definitions/GmbAccountsGmbAccount"}, :type "array"}, :kind {:default "content#liasettingsGetAccessibleGmbAccountsResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsGetAccessibleGmbAccountsResponse\".", :type "string"}}, :type "object"}, :Errors {:description "A list of errors returned by a failed batch entry.", :properties {:code {:description "The HTTP status of the first error in errors.", :format "uint32", :type "integer"}, :errors {:description "A list of errors.", :items {:$ref "#/definitions/Error"}, :type "array"}, :message {:description "The message of the first error in errors.", :type "string"}}, :type "object"}, :Product {:description "Product data. After inserting, updating, or deleting a product, it may take several minutes before changes take effect.", :properties {:description {:description "Description of the item.", :type "string"}, :mpn {:description "Manufacturer Part Number (MPN) of the item.", :type "string"}, :customLabel0 {:description "Custom label 0 for custom grouping of items in a Shopping campaign.", :type "string"}, :transitTimeLabel {:description "The transit time label of the product, used to group product in account-level transit time tables.", :type "string"}, :shippingWeight {:$ref "#/definitions/ProductShippingWeight", :description "Weight of the item for shipping."}, :availability {:description "Availability status of the item.", :type "string"}, :sizes {:description "Size of the item. Only one value is allowed. For variants with different sizes, insert a separate product for each size with the same itemGroupId value (see size definition).", :items {:type "string"}, :type "array"}, :shippingHeight {:$ref "#/definitions/ProductShippingDimension", :description "Height of the item for shipping."}, :taxCategory {:description "The tax category of the product, used to configure detailed tax nexus in account-level tax settings.", :type "string"}, :ageGroup {:description "Target age group of the item.", :type "string"}, :sizeSystem {:description "System in which the size is specified. Recommended for apparel items.", :type "string"}, :customLabel3 {:description "Custom label 3 for custom grouping of items in a Shopping campaign.", :type "string"}, :displayAdsTitle {:description "Title of an item for dynamic remarketing campaigns.", :type "string"}, :color {:description "Color of the item.", :type "string"}, :salePrice {:$ref "#/definitions/Price", :description "Advertised sale price of the item."}, :maxEnergyEfficiencyClass {:description "The energy efficiency class as defined in EU directive 2010/30/EU.", :type "string"}, :taxes {:description "Tax information.", :items {:$ref "#/definitions/ProductTax"}, :type "array"}, :displayAdsId {:description "An identifier for an item for dynamic remarketing campaigns.", :type "string"}, :adsRedirect {:description "Allows advertisers to override the item URL when the product is shown within the context of Product Ads.", :type "string"}, :additionalImageLinks {:description "Additional URLs of images of the item.", :items {:type "string"}, :type "array"}, :energyEfficiencyClass {:description "The energy efficiency class as defined in EU directive 2010/30/EU.", :type "string"}, :isBundle {:description "Whether the item is a merchant-defined bundle. A bundle is a custom grouping of different products sold by a merchant for a single price.", :type "boolean"}, :maxHandlingTime {:description "Maximal product handling time (in business days).", :format "int64", :type "string"}, :adsLabels {:description "Similar to ads_grouping, but only works on CPC.", :items {:type "string"}, :type "array"}, :customAttributes {:description "A list of custom (merchant-provided) attributes. It can also be used for submitting any attribute of the feed specification in its generic form (e.g., { \"name\": \"size type\", \"value\": \"regular\" }). This is useful for submitting attributes not explicitly exposed by the API.", :items {:$ref "#/definitions/CustomAttribute"}, :type "array"}, :displayAdsLink {:description "URL directly to your item's landing page for dynamic remarketing campaigns.", :type "string"}, :displayAdsValue {:description "Offer margin for dynamic remarketing campaigns.", :format "double", :type "number"}, :channel {:description "The item's channel (online or local).", :type "string"}, :contentLanguage {:description "The two-letter ISO 639-1 language code for the item.", :type "string"}, :shippingWidth {:$ref "#/definitions/ProductShippingDimension", :description "Width of the item for shipping."}, :mobileLink {:description "Link to a mobile-optimized version of the landing page.", :type "string"}, :shippingLabel {:description "The shipping label of the product, used to group product in account-level shipping rules.", :type "string"}, :shippingLength {:$ref "#/definitions/ProductShippingDimension", :description "Length of the item for shipping."}, :sizeType {:description "The cut of the item. Recommended for apparel items.", :type "string"}, :source {:description "The source of the offer, i.e., how the offer was created.", :type "string"}, :googleProductCategory {:description "Google's category of the item (see Google product taxonomy).", :type "string"}, :brand {:description "Brand of the item.", :type "string"}, :title {:description "Title of the item.", :type "string"}, :unitPricingBaseMeasure {:$ref "#/definitions/ProductUnitPricingBaseMeasure", :description "The preference of the denominator of the unit price."}, :loyaltyPoints {:$ref "#/definitions/LoyaltyPoints", :description "Loyalty points that users receive after purchasing the item. Japan only."}, :offerId {:description "A unique identifier for the item. Leading and trailing whitespaces are stripped and multiple whitespaces are replaced by a single whitespace upon submission. Only valid unicode characters are accepted. See the products feed specification for details.\nNote: Content API methods that operate on products take the REST ID of the product, not this identifier.", :type "string"}, :installment {:$ref "#/definitions/Installment", :description "Number and amount of installments to pay for an item. Brazil only."}, :identifierExists {:description "False when the item does not have unique product identifiers appropriate to its category, such as GTIN, MPN, and brand. Required according to the Unique Product Identifier Rules for all target countries except for Canada.", :type "boolean"}, :excludedDestinations {:description "The list of destinations to exclude for this target (corresponds to unchecked check boxes in Merchant Center).", :items {:type "string"}, :type "array"}, :adult {:description "Set to true if the item is targeted towards adults.", :type "boolean"}, :itemGroupId {:description "Shared identifier for all variants of the same product.", :type "string"}, :customLabel2 {:description "Custom label 2 for custom grouping of items in a Shopping campaign.", :type "string"}, :link {:description "URL directly linking to your item's page on your website.", :type "string"}, :id {:description "The REST ID of the product. Content API methods that operate on products take this as their productId parameter.\nThe REST ID for a product is of the form channel:contentLanguage:targetCountry:offerId.", :type "string"}, :condition {:description "Condition or state of the item.", :type "string"}, :kind {:default "content#product", :description "Identifies what kind of resource this is. Value: the fixed string \"content#product\".", :type "string"}, :material {:description "The material of which the item is made.", :type "string"}, :customLabel4 {:description "Custom label 4 for custom grouping of items in a Shopping campaign.", :type "string"}, :displayAdsSimilarIds {:description "Advertiser-specified recommendations.", :items {:type "string"}, :type "array"}, :customLabel1 {:description "Custom label 1 for custom grouping of items in a Shopping campaign.", :type "string"}, :sellOnGoogleQuantity {:description "The quantity of the product that is available for selling on Google. Supported only for online products.", :format "int64", :type "string"}, :availabilityDate {:description "The day a pre-ordered product becomes available for delivery, in ISO 8601 format.", :type "string"}, :minHandlingTime {:description "Minimal product handling time (in business days).", :format "int64", :type "string"}, :costOfGoodsSold {:$ref "#/definitions/Price", :description "Cost of goods sold. Used for gross profit reporting."}, :gtin {:description "Global Trade Item Number (GTIN) of the item.", :type "string"}, :multipack {:description "The number of identical products in a merchant-defined multipack.", :format "int64", :type "string"}, :unitPricingMeasure {:$ref "#/definitions/ProductUnitPricingMeasure", :description "The measure and dimension of an item."}, :shipping {:description "Shipping rules.", :items {:$ref "#/definitions/ProductShipping"}, :type "array"}, :gender {:description "Target gender of the item.", :type "string"}, :targetCountry {:description "The CLDR territory code for the item.", :type "string"}, :minEnergyEfficiencyClass {:description "The energy efficiency class as defined in EU directive 2010/30/EU.", :type "string"}, :promotionIds {:description "The unique ID of a promotion.", :items {:type "string"}, :type "array"}, :price {:$ref "#/definitions/Price", :description "Price of the item."}, :adsGrouping {:description "Used to group items in an arbitrary way. Only for CPA%, discouraged otherwise.", :type "string"}, :imageLink {:description "URL of an image of the item.", :type "string"}, :expirationDate {:description "Date on which the item should expire, as specified upon insertion, in ISO 8601 format. The actual expiration date in Google Shopping is exposed in productstatuses as googleExpirationDate and might be earlier if expirationDate is too far in the future.", :type "string"}, :pattern {:description "The item's pattern (e.g. polka dots).", :type "string"}, :includedDestinations {:description "The list of destinations to include for this target (corresponds to checked check boxes in Merchant Center). Default destinations are always included unless provided in excludedDestinations.", :items {:type "string"}, :type "array"}, :productTypes {:description "Categories of the item (formatted as in products data specification).", :items {:type "string"}, :type "array"}, :salePriceEffectiveDate {:description "Date range during which the item is on sale (see products data specification).", :type "string"}}, :type "object"}, :OrdersInStoreRefundLineItemRequest {:properties {:lineItemId {:description "The ID of the line item to return. Either lineItemId or productId is required.", :type "string"}, :operationId {:description "The ID of the operation. Unique across all operations for a given order.", :type "string"}, :priceAmount {:$ref "#/definitions/Price", :description "The amount to be refunded. This may be pre-tax or post-tax depending on the location of the order. Required."}, :productId {:description "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.", :type "string"}, :quantity {:description "The quantity to return and refund.", :format "uint32", :type "integer"}, :reason {:description "The reason for the return.", :type "string"}, :reasonText {:description "The explanation of the reason.", :type "string"}, :taxAmount {:$ref "#/definitions/Price", :description "The amount of tax to be refunded. Required."}}, :type "object"}, :PosCustomBatchResponseEntry {:properties {:batchId {:description "The ID of the request entry to which this entry responds.", :format "uint32", :type "integer"}, :errors {:$ref "#/definitions/Errors", :description "A list of errors defined if, and only if, the request failed."}, :inventory {:$ref "#/definitions/PosInventory", :description "The updated inventory information."}, :kind {:default "content#posCustomBatchResponseEntry", :description "Identifies what kind of resource this is. Value: the fixed string \"content#posCustomBatchResponseEntry\".", :type "string"}, :sale {:$ref "#/definitions/PosSale", :description "The updated sale information."}, :store {:$ref "#/definitions/PosStore", :description "The retrieved or updated store information."}}, :type "object"}, :InvoiceSummaryAdditionalChargeSummary {:properties {:totalAmount {:$ref "#/definitions/Amount", :description "[required] Total additional charge for this type."}, :type {:description "[required] Type of the additional charge.", :type "string"}}, :type "object"}, :RegionalinventoryCustomBatchResponseEntry {:description "A batch entry encoding a single non-batch regional inventory response.", :properties {:batchId {:description "The ID of the request entry this entry responds to.", :format "uint32", :type "integer"}, :errors {:$ref "#/definitions/Errors", :description "A list of errors defined if and only if the request failed."}, :kind {:default "content#regionalinventoryCustomBatchResponseEntry", :description "Identifies what kind of resource this is. Value: the fixed string \"content#regionalinventoryCustomBatchResponseEntry\".", :type "string"}, :regionalInventory {:$ref "#/definitions/RegionalInventory", :description "Price and availability of the product."}}, :type "object"}, :LiaInventorySettings {:properties {:inventoryVerificationContactEmail {:description "The email of the contact for the inventory verification process.", :type "string"}, :inventoryVerificationContactName {:description "The name of the contact for the inventory verification process.", :type "string"}, :inventoryVerificationContactStatus {:description "The status of the verification contact.", :type "string"}, :status {:description "The status of the inventory verification process.", :type "string"}}, :type "object"}, :LiasettingsSetPosDataProviderResponse {:properties {:kind {:default "content#liasettingsSetPosDataProviderResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsSetPosDataProviderResponse\".", :type "string"}}, :type "object"}, :ProductShippingWeight {:properties {:unit {:description "The unit of value.", :type "string"}, :value {:description "The weight of the product used to calculate the shipping cost of the item.", :format "double", :type "number"}}, :type "object"}, :LiasettingsCustomBatchResponseEntry {:properties {:batchId {:description "The ID of the request entry to which this entry responds.", :format "uint32", :type "integer"}, :errors {:$ref "#/definitions/Errors", :description "A list of errors defined if, and only if, the request failed."}, :gmbAccounts {:$ref "#/definitions/GmbAccounts", :description "The the list of accessible GMB accounts."}, :kind {:default "content#liasettingsCustomBatchResponseEntry", :description "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsCustomBatchResponseEntry\".", :type "string"}, :liaSettings {:$ref "#/definitions/LiaSettings", :description "The retrieved or updated Lia settings."}, :posDataProviders {:description "The list of POS data providers.", :items {:$ref "#/definitions/PosDataProviders"}, :type "array"}}, :type "object"}, :ProductUnitPricingBaseMeasure {:properties {:unit {:description "The unit of the denominator.", :type "string"}, :value {:description "The denominator of the unit price.", :format "int64", :type "string"}}, :type "object"}, :Table {:properties {:columnHeaders {:$ref "#/definitions/Headers", :description "Headers of the table's columns. Optional: if not set then the table has only one dimension."}, :name {:description "Name of the table. Required for subtables, ignored for the main table.", :type "string"}, :rowHeaders {:$ref "#/definitions/Headers", :description "Headers of the table's rows. Required."}, :rows {:description "The list of rows that constitute the table. Must have the same length as rowHeaders. Required.", :items {:$ref "#/definitions/Row"}, :type "array"}}, :type "object"}, :OrdersCustomBatchRequestEntryCreateTestReturnReturnItem {:properties {:lineItemId {:description "The ID of the line item to return.", :type "string"}, :quantity {:description "Quantity that is returned.", :format "uint32", :type "integer"}}, :type "object"}, :ProductUnitPricingMeasure {:properties {:unit {:description "The unit of the measure.", :type "string"}, :value {:description "The measure of an item.", :format "double", :type "number"}}, :type "object"}, :OrdersAdvanceTestOrderResponse {:properties {:kind {:default "content#ordersAdvanceTestOrderResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#ordersAdvanceTestOrderResponse\".", :type "string"}}, :type "object"}, :CustomAttribute {:properties {:groupValues {:description "Subattributes within this attribute group. Exactly one of value or groupValues must be provided.", :items {:$ref "#/definitions/CustomAttribute"}, :type "array"}, :name {:description "The name of the attribute. Underscores will be replaced by spaces upon insertion.", :type "string"}, :value {:description "The value of the attribute.", :type "string"}}, :type "object"}, :ProductstatusesCustomBatchRequestEntry {:description "A batch entry encoding a single non-batch productstatuses request.", :properties {:batchId {:description "An entry ID, unique within the batch request.", :format "uint32", :type "integer"}, :destinations {:description "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.", :items {:type "string"}, :type "array"}, :includeAttributes {:type "boolean"}, :merchantId {:description "The ID of the managing account.", :format "uint64", :type "string"}, :method {:type "string"}, :productId {:description "The ID of the product whose status to get.", :type "string"}}, :type "object"}, :OrderRefund {:properties {:actor {:description "The actor that created the refund.", :type "string"}, :amount {:$ref "#/definitions/Price", :description "The amount that is refunded."}, :creationDate {:description "Date on which the item has been created, in ISO 8601 format.", :type "string"}, :reason {:description "The reason for the refund.", :type "string"}, :reasonText {:description "The explanation of the reason.", :type "string"}}, :type "object"}, :ReturnpolicyCustomBatchRequestEntry {:properties {:batchId {:description "An entry ID, unique within the batch request.", :format "uint32", :type "integer"}, :merchantId {:description "The Merchant Center account ID.", :format "uint64", :type "string"}, :method {:type "string"}, :returnPolicy {:$ref "#/definitions/ReturnPolicy", :description "The return policy to submit. Set this only if the method is insert."}, :returnPolicyId {:description "The return policy ID. Set this only if the method is delete or get.", :type "string"}}, :type "object"}, :OrdersGetTestOrderTemplateResponse {:properties {:kind {:default "content#ordersGetTestOrderTemplateResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#ordersGetTestOrderTemplateResponse\".", :type "string"}, :template {:$ref "#/definitions/TestOrder", :description "The requested test order template."}}, :type "object"}, :OrderreturnsListResponse {:properties {:kind {:default "content#orderreturnsListResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#orderreturnsListResponse\".", :type "string"}, :nextPageToken {:description "The token for the retrieval of the next page of returns.", :type "string"}, :resources {:items {:$ref "#/definitions/MerchantOrderReturn"}, :type "array"}}, :type "object"}, :OrdersCancelRequest {:properties {:operationId {:description "The ID of the operation. Unique across all operations for a given order.", :type "string"}, :reason {:description "The reason for the cancellation.", :type "string"}, :reasonText {:description "The explanation of the reason.", :type "string"}}, :type "object"}, :ReturnaddressListResponse {:properties {:kind {:default "content#returnaddressListResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#returnaddressListResponse\".", :type "string"}, :nextPageToken {:description "The token for the retrieval of the next page of addresses.", :type "string"}, :resources {:items {:$ref "#/definitions/ReturnAddress"}, :type "array"}}, :type "object"}, :DatafeedsCustomBatchResponseEntry {:description "A batch entry encoding a single non-batch datafeeds response.", :properties {:batchId {:description "The ID of the request entry this entry responds to.", :format "uint32", :type "integer"}, :datafeed {:$ref "#/definitions/Datafeed", :description "The requested data feed. Defined if and only if the request was successful."}, :errors {:$ref "#/definitions/Errors", :description "A list of errors defined if and only if the request failed."}}, :type "object"}, :PosCustomBatchRequest {:properties {:entries {:description "The request entries to be processed in the batch.", :items {:$ref "#/definitions/PosCustomBatchRequestEntry"}, :type "array"}}, :type "object"}, :PostalCodeGroup {:properties {:country {:description "The CLDR territory code of the country the postal code group applies to. Required.", :type "string"}, :name {:description "The name of the postal code group, referred to in headers. Required.", :type "string"}, :postalCodeRanges {:description "A range of postal codes. Required.", :items {:$ref "#/definitions/PostalCodeRange"}, :type "array"}}, :type "object"}, :OrdersInStoreRefundLineItemResponse {:properties {:executionStatus {:description "The status of the execution.", :type "string"}, :kind {:default "content#ordersInStoreRefundLineItemResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#ordersInStoreRefundLineItemResponse\".", :type "string"}}, :type "object"}, :OrdersShipLineItemsResponse {:properties {:executionStatus {:description "The status of the execution.", :type "string"}, :kind {:default "content#ordersShipLineItemsResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#ordersShipLineItemsResponse\".", :type "string"}}, :type "object"}, :LiaSettings {:description "Local Inventory ads (LIA) settings. All methods except listposdataproviders require the admin role.", :properties {:accountId {:description "The ID of the account to which these LIA settings belong. Ignored upon update, always present in get request responses.", :format "uint64", :type "string"}, :countrySettings {:description "The LIA settings for each country.", :items {:$ref "#/definitions/LiaCountrySettings"}, :type "array"}, :kind {:default "content#liaSettings", :description "Identifies what kind of resource this is. Value: the fixed string \"content#liaSettings\".", :type "string"}}, :type "object"}, :OrderReturn {:properties {:actor {:description "The actor that created the refund.", :type "string"}, :creationDate {:description "Date on which the item has been created, in ISO 8601 format.", :type "string"}, :quantity {:description "Quantity that is returned.", :format "uint32", :type "integer"}, :reason {:description "The reason for the return.", :type "string"}, :reasonText {:description "The explanation of the reason.", :type "string"}}, :type "object"}, :OrdersCreateTestOrderRequest {:properties {:country {:description "The  CLDR territory code of the country of the test order to create. Affects the currency and addresses of orders created via template_name, or the addresses of orders created via test_order.\n\nAcceptable values are:  \n- \"US\" \n- \"FR\"  Defaults to US.", :type "string"}, :templateName {:description "The test order template to use. Specify as an alternative to testOrder as a shortcut for retrieving a template and then creating an order using that template.", :type "string"}, :testOrder {:$ref "#/definitions/TestOrder", :description "The test order to create."}}, :type "object"}, :PosSale {:description "The change of the available quantity of an item at the given store.", :properties {:saleId {:description "A unique ID to group items from the same sale event.", :type "string"}, :contentLanguage {:description "The two-letter ISO 639-1 language code for the item.", :type "string"}, :kind {:default "content#posSale", :description "Identifies what kind of resource this is. Value: the fixed string \"content#posSale\".", :type "string"}, :storeCode {:description "The identifier of the merchant's store. Either a storeCode inserted via the API or the code of the store in Google My Business.", :type "string"}, :gtin {:description "Global Trade Item Number.", :type "string"}, :quantity {:description "The relative change of the available quantity. Negative for items returned.", :format "int64", :type "string"}, :targetCountry {:description "The CLDR territory code for the item.", :type "string"}, :timestamp {:description "The inventory timestamp, in ISO 8601 format.", :type "string"}, :price {:$ref "#/definitions/Price", :description "The price of the item."}, :itemId {:description "A unique identifier for the item.", :type "string"}}, :type "object"}, :AccountsClaimWebsiteResponse {:properties {:kind {:default "content#accountsClaimWebsiteResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#accountsClaimWebsiteResponse\".", :type "string"}}, :type "object"}, :ReturnpolicyListResponse {:properties {:kind {:default "content#returnpolicyListResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#returnpolicyListResponse\".", :type "string"}, :resources {:items {:$ref "#/definitions/ReturnPolicy"}, :type "array"}}, :type "object"}, :InvoiceSummary {:properties {:additionalChargeSummaries {:description "Summary of the total amounts of the additional charges.", :items {:$ref "#/definitions/InvoiceSummaryAdditionalChargeSummary"}, :type "array"}, :productTotal {:$ref "#/definitions/Amount", :description "[required] Total price for the product."}}, :type "object"}, :OrderShipmentLineItemShipment {:properties {:lineItemId {:description "The ID of the line item that is shipped. Either lineItemId or productId is required.", :type "string"}, :productId {:description "The ID of the product to ship. This is the REST ID used in the products service. Either lineItemId or productId is required.", :type "string"}, :quantity {:description "The quantity that is shipped.", :format "uint32", :type "integer"}}, :type "object"}, :OrdersGetByMerchantOrderIdResponse {:properties {:kind {:default "content#ordersGetByMerchantOrderIdResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#ordersGetByMerchantOrderIdResponse\".", :type "string"}, :order {:$ref "#/definitions/Order", :description "The requested order."}}, :type "object"}, :TransitTable {:properties {:postalCodeGroupNames {:description "A list of postal group names. The last value can be \"all other locations\". Example: [\"zone 1\", \"zone 2\", \"all other locations\"]. The referred postal code groups must match the delivery country of the service.", :items {:type "string"}, :type "array"}, :rows {:items {:$ref "#/definitions/TransitTableTransitTimeRow"}, :type "array"}, :transitTimeLabels {:description "A list of transit time labels. The last value can be \"all other labels\". Example: [\"food\", \"electronics\", \"all other labels\"].", :items {:type "string"}, :type "array"}}, :type "object"}, :AccountsCustomBatchRequestEntry {:description "A batch entry encoding a single non-batch accounts request.", :properties {:account {:$ref "#/definitions/Account", :description "The account to create or update. Only defined if the method is insert or update."}, :accountId {:description "The ID of the targeted account. Only defined if the method is not insert.", :format "uint64", :type "string"}, :batchId {:description "An entry ID, unique within the batch request.", :format "uint32", :type "integer"}, :force {:description "Whether the account should be deleted if the account has offers. Only applicable if the method is delete.", :type "boolean"}, :linkRequest {:$ref "#/definitions/AccountsCustomBatchRequestEntryLinkRequest", :description "Details about the link request."}, :merchantId {:description "The ID of the managing account.", :format "uint64", :type "string"}, :method {:description "The method of the batch entry.", :type "string"}, :overwrite {:description "Only applicable if the method is claimwebsite. Indicates whether or not to take the claim from another account in case there is a conflict.", :type "boolean"}}, :type "object"}, :AccountstatusesCustomBatchRequest {:properties {:entries {:description "The request entries to be processed in the batch.", :items {:$ref "#/definitions/AccountstatusesCustomBatchRequestEntry"}, :type "array"}}, :type "object"}, :DatafeedsListResponse {:properties {:kind {:default "content#datafeedsListResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#datafeedsListResponse\".", :type "string"}, :nextPageToken {:description "The token for the retrieval of the next page of datafeeds.", :type "string"}, :resources {:items {:$ref "#/definitions/Datafeed"}, :type "array"}}, :type "object"}, :LiaOnDisplayToOrderSettings {:properties {:shippingCostPolicyUrl {:description "Shipping cost and policy URL.", :type "string"}, :status {:description "The status of the ?On display to order? feature.", :type "string"}}, :type "object"}, :LiasettingsCustomBatchResponse {:properties {:entries {:description "The result of the execution of the batch requests.", :items {:$ref "#/definitions/LiasettingsCustomBatchResponseEntry"}, :type "array"}, :kind {:default "content#liasettingsCustomBatchResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsCustomBatchResponse\".", :type "string"}}, :type "object"}, :Row {:properties {:cells {:description "The list of cells that constitute the row. Must have the same length as columnHeaders for two-dimensional tables, a length of 1 for one-dimensional tables. Required.", :items {:$ref "#/definitions/Value"}, :type "array"}}, :type "object"}, :ProductsCustomBatchResponseEntry {:description "A batch entry encoding a single non-batch products response.", :properties {:batchId {:description "The ID of the request entry this entry responds to.", :format "uint32", :type "integer"}, :errors {:$ref "#/definitions/Errors", :description "A list of errors defined if and only if the request failed."}, :kind {:default "content#productsCustomBatchResponseEntry", :description "Identifies what kind of resource this is. Value: the fixed string \"content#productsCustomBatchResponseEntry\".", :type "string"}, :product {:$ref "#/definitions/Product", :description "The inserted product. Only defined if the method is insert and if the request was successful."}}, :type "object"}, :OrdersRejectReturnLineItemResponse {:properties {:executionStatus {:description "The status of the execution.", :type "string"}, :kind {:default "content#ordersRejectReturnLineItemResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#ordersRejectReturnLineItemResponse\".", :type "string"}}, :type "object"}, :AccountStatus {:description "The status of an account, i.e., information about its products, which is computed offline and not returned immediately at insertion time.", :properties {:accountId {:description "The ID of the account for which the status is reported.", :type "string"}, :accountLevelIssues {:description "A list of account level issues.", :items {:$ref "#/definitions/AccountStatusAccountLevelIssue"}, :type "array"}, :kind {:default "content#accountStatus", :description "Identifies what kind of resource this is. Value: the fixed string \"content#accountStatus\".", :type "string"}, :products {:description "List of product-related data by channel, destination, and country. Data in this field may be delayed by up to 30 minutes.", :items {:$ref "#/definitions/AccountStatusProducts"}, :type "array"}, :websiteClaimed {:description "Whether the account's website is claimed or not.", :type "boolean"}}, :type "object"}, :OrdersCreateTestOrderResponse {:properties {:kind {:default "content#ordersCreateTestOrderResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#ordersCreateTestOrderResponse\".", :type "string"}, :orderId {:description "The ID of the newly created test order.", :type "string"}}, :type "object"}, :OrdersReturnRefundLineItemRequest {:properties {:lineItemId {:description "The ID of the line item to return. Either lineItemId or productId is required.", :type "string"}, :operationId {:description "The ID of the operation. Unique across all operations for a given order.", :type "string"}, :priceAmount {:$ref "#/definitions/Price", :description "The amount to be refunded. This may be pre-tax or post-tax depending on the location of the order. If omitted, refundless return is assumed."}, :productId {:description "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.", :type "string"}, :quantity {:description "The quantity to return and refund.", :format "uint32", :type "integer"}, :reason {:description "The reason for the return.", :type "string"}, :reasonText {:description "The explanation of the reason.", :type "string"}, :taxAmount {:$ref "#/definitions/Price", :description "The amount of tax to be refunded. Optional, but if filled, then priceAmount must be set. Calculated automatically if not provided."}}, :type "object"}, :TransitTableTransitTimeRow {:properties {:values {:items {:$ref "#/definitions/TransitTableTransitTimeRowTransitTimeValue"}, :type "array"}}, :type "object"}, :AccounttaxCustomBatchRequest {:properties {:entries {:description "The request entries to be processed in the batch.", :items {:$ref "#/definitions/AccounttaxCustomBatchRequestEntry"}, :type "array"}}, :type "object"}, :ReturnaddressCustomBatchRequest {:properties {:entries {:description "The request entries to be processed in the batch.", :items {:$ref "#/definitions/ReturnaddressCustomBatchRequestEntry"}, :type "array"}}, :type "object"}, :LiaCountrySettings {:properties {:about {:$ref "#/definitions/LiaAboutPageSettings", :description "The settings for the About page."}, :country {:description "CLDR country code (e.g. \"US\").", :type "string"}, :hostedLocalStorefrontActive {:description "The status of the \"Merchant hosted local storefront\" feature.", :type "boolean"}, :inventory {:$ref "#/definitions/LiaInventorySettings", :description "LIA inventory verification settings."}, :onDisplayToOrder {:$ref "#/definitions/LiaOnDisplayToOrderSettings", :description "LIA \"On Display To Order\" settings."}, :posDataProvider {:$ref "#/definitions/LiaPosDataProvider", :description "The POS data provider linked with this country."}, :storePickupActive {:description "The status of the \"Store pickup\" feature.", :type "boolean"}}, :type "object"}, :OrderMerchantProvidedAnnotation {:properties {:key {:description "Key for additional merchant provided (as key-value pairs) annotation about the line item.", :type "string"}, :value {:description "Value for additional merchant provided (as key-value pairs) annotation about the line item.", :type "string"}}, :type "object"}, :DatafeedStatusExample {:description "An example occurrence for a particular error.", :properties {:itemId {:description "The ID of the example item.", :type "string"}, :lineNumber {:description "Line number in the data feed where the example is found.", :format "uint64", :type "string"}, :value {:description "The problematic value.", :type "string"}}, :type "object"}, :OrderinvoicesCreateChargeInvoiceResponse {:properties {:executionStatus {:description "The status of the execution.", :type "string"}, :kind {:default "content#orderinvoicesCreateChargeInvoiceResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#orderinvoicesCreateChargeInvoiceResponse\".", :type "string"}}, :type "object"}, :OrderreportsListTransactionsResponse {:properties {:kind {:default "content#orderreportsListTransactionsResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#orderreportsListTransactionsResponse\".", :type "string"}, :nextPageToken {:description "The token for the retrieval of the next page of transactions.", :type "string"}, :transactions {:description "The list of transactions.", :items {:$ref "#/definitions/OrderReportTransaction"}, :type "array"}}, :type "object"}, :OrdersUpdateMerchantOrderIdRequest {:properties {:merchantOrderId {:description "The merchant order id to be assigned to the order. Must be unique per merchant.", :type "string"}, :operationId {:description "The ID of the operation. Unique across all operations for a given order.", :type "string"}}, :type "object"}, :OrdersUpdateShipmentResponse {:properties {:executionStatus {:description "The status of the execution.", :type "string"}, :kind {:default "content#ordersUpdateShipmentResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#ordersUpdateShipmentResponse\".", :type "string"}}, :type "object"}, :LiasettingsRequestInventoryVerificationResponse {:properties {:kind {:default "content#liasettingsRequestInventoryVerificationResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsRequestInventoryVerificationResponse\".", :type "string"}}, :type "object"}, :Datafeed {:description "Datafeed configuration data.", :properties {:format {:$ref "#/definitions/DatafeedFormat", :description "Format of the feed file."}, :name {:description "A descriptive name of the data feed.", :type "string"}, :fileName {:description "The filename of the feed. All feeds must have a unique file name.", :type "string"}, :fetchSchedule {:$ref "#/definitions/DatafeedFetchSchedule", :description "Fetch schedule for the feed file."}, :targets {:description "The targets this feed should apply to (country, language, destinations).", :items {:$ref "#/definitions/DatafeedTarget"}, :type "array"}, :id {:description "The ID of the data feed.", :format "int64", :type "string"}, :attributeLanguage {:description "The two-letter ISO 639-1 language in which the attributes are defined in the data feed.", :type "string"}, :kind {:default "content#datafeed", :description "Identifies what kind of resource this is. Value: the fixed string \"content#datafeed\".", :type "string"}, :contentType {:description "The type of data feed. For product inventory feeds, only feeds for local stores, not online stores, are supported.", :type "string"}}, :type "object"}, :OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo {:properties {:carrier {:description "The carrier handling the shipment. See shipments[].carrier in the  Orders resource representation for a list of acceptable values.", :type "string"}, :shipmentId {:description "The ID of the shipment. This is assigned by the merchant and is unique to each shipment.", :type "string"}, :trackingId {:description "The tracking ID for the shipment.", :type "string"}}, :type "object"}, :TestOrder {:properties {:promotions {:description "Promotions associated with the order.", :items {:$ref "#/definitions/OrderPromotion"}, :type "array"}, :predefinedPickupDetails {:description "Identifier of one of the predefined pickup details. Required for orders containing line items with shipping type pickup.", :type "string"}, :shippingOption {:description "The requested shipping option.", :type "string"}, :enableOrderinvoices {:description "Whether the orderinvoices service should support this order.", :type "boolean"}, :predefinedBillingAddress {:description "The billing address.", :type "string"}, :lineItems {:description "Line items that are ordered. At least one line item must be provided.", :items {:$ref "#/definitions/TestOrderLineItem"}, :type "array"}, :shippingCost {:$ref "#/definitions/Price", :description "The price of shipping for all items. Shipping tax is automatically calculated for orders where marketplace facilitator tax laws are applicable. Otherwise, tax settings from Merchant Center are applied. Note that shipping is not taxed in certain states."}, :kind {:default "content#testOrder", :description "Identifies what kind of resource this is. Value: the fixed string \"content#testOrder\".", :type "string"}, :predefinedDeliveryAddress {:description "Identifier of one of the predefined delivery addresses for the delivery.", :type "string"}, :predefinedEmail {:description "Email address of the customer.", :type "string"}, :notificationMode {:description "Determines if test order must be pulled by merchant or pushed to merchant via push integration.", :type "string"}}, :type "object"}, :AccountsAuthInfoResponse {:properties {:accountIdentifiers {:description "The account identifiers corresponding to the authenticated user.\n- For an individual account: only the merchant ID is defined\n- For an aggregator: only the aggregator ID is defined\n- For a subaccount of an MCA: both the merchant ID and the aggregator ID are defined.", :items {:$ref "#/definitions/AccountIdentifier"}, :type "array"}, :kind {:default "content#accountsAuthInfoResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#accountsAuthInfoResponse\".", :type "string"}}, :type "object"}, :OrderLineItemShippingDetailsMethod {:properties {:carrier {:description "The carrier for the shipping. Optional. See shipments[].carrier for a list of acceptable values.", :type "string"}, :maxDaysInTransit {:description "Maximum transit time.", :format "uint32", :type "integer"}, :methodName {:description "The name of the shipping method.", :type "string"}, :minDaysInTransit {:description "Minimum transit time.", :format "uint32", :type "integer"}}, :type "object"}, :DatafeedStatus {:description "The status of a datafeed, i.e., the result of the last retrieval of the datafeed computed asynchronously when the feed processing is finished.", :properties {:errors {:description "The list of errors occurring in the feed.", :items {:$ref "#/definitions/DatafeedStatusError"}, :type "array"}, :lastUploadDate {:description "The last date at which the feed was uploaded.", :type "string"}, :datafeedId {:description "The ID of the feed for which the status is reported.", :format "uint64", :type "string"}, :warnings {:description "The list of errors occurring in the feed.", :items {:$ref "#/definitions/DatafeedStatusError"}, :type "array"}, :processingStatus {:description "The processing status of the feed.", :type "string"}, :language {:description "The two-letter ISO 639-1 language for which the status is reported.", :type "string"}, :kind {:default "content#datafeedStatus", :description "Identifies what kind of resource this is. Value: the fixed string \"content#datafeedStatus\".", :type "string"}, :itemsValid {:description "The number of items in the feed that were valid.", :format "uint64", :type "string"}, :itemsTotal {:description "The number of items in the feed that were processed.", :format "uint64", :type "string"}, :country {:description "The country for which the status is reported, represented as a  CLDR territory code.", :type "string"}}, :type "object"}, :DatafeedstatusesCustomBatchResponseEntry {:description "A batch entry encoding a single non-batch datafeedstatuses response.", :properties {:batchId {:description "The ID of the request entry this entry responds to.", :format "uint32", :type "integer"}, :datafeedStatus {:$ref "#/definitions/DatafeedStatus", :description "The requested data feed status. Defined if and only if the request was successful."}, :errors {:$ref "#/definitions/Errors", :description "A list of errors defined if and only if the request failed."}}, :type "object"}, :ReturnPolicyPolicy {:properties {:lastReturnDate {:description "Last day for returning the items. In ISO 8601 format. When specifying the return window like this, set the policy type to \"lastReturnDate\". Use this for seasonal overrides only.", :type "string"}, :numberOfDays {:description "The number of days items can be returned after delivery, where one day is defined to be 24 hours after the delivery timestamp. When specifying the return window like this, set the policy type to \"numberOfDaysAfterDelivery\". Acceptable values are 30, 45, 60, 90, 100, 180, 270 and 365 for the default policy. Additional policies further allow 14, 15, 21 and 28 days, but note that for most items a minimum of 30 days is required for returns. Exceptions may be made for electronics. A policy of less than 30 days can only be applied to those items.", :format "int64", :type "string"}, :type {:description "Policy type. Use \"lastReturnDate\" for seasonal overrides only. Note that for most items a minimum of 30 days is required for returns. Exceptions may be made for electronics or non-returnable items such as food, perishables, and living things. A policy of less than 30 days can only be applied to those items.", :type "string"}}, :type "object"}, :DatafeedsCustomBatchRequestEntry {:description "A batch entry encoding a single non-batch datafeeds request.", :properties {:batchId {:description "An entry ID, unique within the batch request.", :format "uint32", :type "integer"}, :datafeed {:$ref "#/definitions/Datafeed", :description "The data feed to insert."}, :datafeedId {:description "The ID of the data feed to get, delete or fetch.", :format "uint64", :type "string"}, :merchantId {:description "The ID of the managing account.", :format "uint64", :type "string"}, :method {:type "string"}}, :type "object"}, :DatafeedsCustomBatchRequest {:properties {:entries {:description "The request entries to be processed in the batch.", :items {:$ref "#/definitions/DatafeedsCustomBatchRequestEntry"}, :type "array"}}, :type "object"}, :DatafeedStatusError {:description "An error occurring in the feed, like \"invalid price\".", :properties {:code {:description "The code of the error, e.g., \"validation/invalid_value\".", :type "string"}, :count {:description "The number of occurrences of the error in the feed.", :format "uint64", :type "string"}, :examples {:description "A list of example occurrences of the error, grouped by product.", :items {:$ref "#/definitions/DatafeedStatusExample"}, :type "array"}, :message {:description "The error message, e.g., \"Invalid price\".", :type "string"}}, :type "object"}, :AccounttaxCustomBatchRequestEntry {:description "A batch entry encoding a single non-batch accounttax request.", :properties {:accountId {:description "The ID of the account for which to get/update account tax settings.", :format "uint64", :type "string"}, :accountTax {:$ref "#/definitions/AccountTax", :description "The account tax settings to update. Only defined if the method is update."}, :batchId {:description "An entry ID, unique within the batch request.", :format "uint32", :type "integer"}, :merchantId {:description "The ID of the managing account.", :format "uint64", :type "string"}, :method {:type "string"}}, :type "object"}, :AccountsCustomBatchResponse {:properties {:entries {:description "The result of the execution of the batch requests.", :items {:$ref "#/definitions/AccountsCustomBatchResponseEntry"}, :type "array"}, :kind {:default "content#accountsCustomBatchResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#accountsCustomBatchResponse\".", :type "string"}}, :type "object"}, :PosListResponse {:properties {:kind {:default "content#posListResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#posListResponse\".", :type "string"}, :resources {:items {:$ref "#/definitions/PosStore"}, :type "array"}}, :type "object"}, :ReturnaddressCustomBatchResponse {:properties {:entries {:description "The result of the execution of the batch requests.", :items {:$ref "#/definitions/ReturnaddressCustomBatchResponseEntry"}, :type "array"}, :kind {:default "content#returnaddressCustomBatchResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#returnaddressCustomBatchResponse\".", :type "string"}}, :type "object"}, :OrdersCancelTestOrderByCustomerResponse {:properties {:kind {:default "content#ordersCancelTestOrderByCustomerResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#ordersCancelTestOrderByCustomerResponse\".", :type "string"}}, :type "object"}, :PosCustomBatchRequestEntry {:properties {:batchId {:description "An entry ID, unique within the batch request.", :format "uint32", :type "integer"}, :inventory {:$ref "#/definitions/PosInventory", :description "The inventory to submit. Set this only if the method is inventory."}, :merchantId {:description "The ID of the POS data provider.", :format "uint64", :type "string"}, :method {:type "string"}, :sale {:$ref "#/definitions/PosSale", :description "The sale information to submit. Set this only if the method is sale."}, :store {:$ref "#/definitions/PosStore", :description "The store information to submit. Set this only if the method is insert."}, :storeCode {:description "The store code. Set this only if the method is delete or get.", :type "string"}, :targetMerchantId {:description "The ID of the account for which to get/submit data.", :format "uint64", :type "string"}}, :type "object"}, :ProductShippingDimension {:properties {:unit {:description "The unit of value.", :type "string"}, :value {:description "The dimension of the product used to calculate the shipping cost of the item.", :format "double", :type "number"}}, :type "object"}, :OrderinvoicesCreateRefundInvoiceResponse {:properties {:executionStatus {:description "The status of the execution.", :type "string"}, :kind {:default "content#orderinvoicesCreateRefundInvoiceResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#orderinvoicesCreateRefundInvoiceResponse\".", :type "string"}}, :type "object"}, :LiasettingsSetInventoryVerificationContactResponse {:properties {:kind {:default "content#liasettingsSetInventoryVerificationContactResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsSetInventoryVerificationContactResponse\".", :type "string"}}, :type "object"}, :AccountBusinessInformation {:properties {:address {:$ref "#/definitions/AccountAddress", :description "The address of the business."}, :customerService {:$ref "#/definitions/AccountCustomerService", :description "The customer service information of the business."}, :phoneNumber {:description "The phone number of the business.", :type "string"}}, :type "object"}, :MerchantOrderReturn {:properties {:creationDate {:type "string"}, :merchantOrderId {:type "string"}, :orderId {:type "string"}, :orderReturnId {:type "string"}, :returnItems {:items {:$ref "#/definitions/MerchantOrderReturnItem"}, :type "array"}, :returnShipments {:items {:$ref "#/definitions/ReturnShipment"}, :type "array"}}, :type "object"}, :OrderinvoicesCreateChargeInvoiceRequest {:properties {:invoiceId {:description "[required] The ID of the invoice.", :type "string"}, :invoiceSummary {:$ref "#/definitions/InvoiceSummary", :description "[required] Invoice summary."}, :lineItemInvoices {:description "[required] Invoice details per line item.", :items {:$ref "#/definitions/ShipmentInvoiceLineItemInvoice"}, :type "array"}, :operationId {:description "[required] The ID of the operation, unique across all operations for a given order.", :type "string"}, :shipmentGroupId {:description "[required] ID of the shipment group. It is assigned by the merchant in the shipLineItems method and is used to group multiple line items that have the same kind of shipping charges.", :type "string"}}, :type "object"}, :OrdersUpdateMerchantOrderIdResponse {:properties {:executionStatus {:description "The status of the execution.", :type "string"}, :kind {:default "content#ordersUpdateMerchantOrderIdResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#ordersUpdateMerchantOrderIdResponse\".", :type "string"}}, :type "object"}, :UnitInvoiceTaxLine {:properties {:taxAmount {:$ref "#/definitions/Price", :description "[required] Tax amount for the tax type."}, :taxName {:description "Optional name of the tax type. This should only be provided if taxType is otherFeeTax.", :type "string"}, :taxType {:description "[required] Type of the tax.", :type "string"}}, :type "object"}, :AccountTaxTaxRule {:description "Tax calculation rule to apply in a state or province (USA only).", :properties {:country {:description "Country code in which tax is applicable.", :type "string"}, :locationId {:description "State (or province) is which the tax is applicable, described by its location ID (also called criteria ID).", :format "uint64", :type "string"}, :ratePercent {:description "Explicit tax rate in percent, represented as a floating point number without the percentage character. Must not be negative.", :type "string"}, :shippingTaxed {:description "If true, shipping charges are also taxed.", :type "boolean"}, :useGlobalRate {:description "Whether the tax rate is taken from a global tax table or specified explicitly.", :type "boolean"}}, :type "object"}, :AccountstatusesCustomBatchResponse {:properties {:entries {:description "The result of the execution of the batch requests.", :items {:$ref "#/definitions/AccountstatusesCustomBatchResponseEntry"}, :type "array"}, :kind {:default "content#accountstatusesCustomBatchResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#accountstatusesCustomBatchResponse\".", :type "string"}}, :type "object"}, :ReturnPolicy {:description "Return policy resource.", :properties {:country {:description "The country of sale where the return policy is applicable.", :type "string"}, :kind {:default "content#returnPolicy", :description "Identifies what kind of resource this is. Value: the fixed string \"content#returnPolicy\".", :type "string"}, :label {:description "The user-defined label of the return policy. For the default policy, use the label \"default\".", :type "string"}, :name {:description "The name of the policy as shown in Merchant Center.", :type "string"}, :nonFreeReturnReasons {:description "Return reasons that will incur return fees.", :items {:type "string"}, :type "array"}, :policy {:$ref "#/definitions/ReturnPolicyPolicy", :description "The policy."}, :returnPolicyId {:description "Return policy ID generated by Google.", :type "string"}, :seasonalOverrides {:description "An optional list of seasonal overrides.", :items {:$ref "#/definitions/ReturnPolicySeasonalOverride"}, :type "array"}}, :type "object"}, :LoyaltyPoints {:properties {:name {:description "Name of loyalty points program. It is recommended to limit the name to 12 full-width characters or 24 Roman characters.", :type "string"}, :pointsValue {:description "The retailer's loyalty points in absolute value.", :format "int64", :type "string"}, :ratio {:description "The ratio of a point when converted to currency. Google assumes currency based on Merchant Center settings. If ratio is left out, it defaults to 1.0.", :format "double", :type "number"}}, :type "object"}, :CutoffTime {:properties {:hour {:description "Hour of the cutoff time until which an order has to be placed to be processed in the same day. Required.", :format "uint32", :type "integer"}, :minute {:description "Minute of the cutoff time until which an order has to be placed to be processed in the same day. Required.", :format "uint32", :type "integer"}, :timezone {:description "Timezone identifier for the cutoff time. A list of identifiers can be found in  the AdWords API documentation. E.g. \"Europe/Zurich\". Required.", :type "string"}}, :type "object"}, :OrderPromotion {:properties {:priceValue {:$ref "#/definitions/Price", :description "Estimated discount applied to price. Amount is pre-tax or post-tax depending on location of order."}, :startTime {:description "Promotion start time in ISO 8601 format. Date, time, and offset required, e.g., \"2020-01-02T09:00:00+01:00\" or \"2020-01-02T09:00:00Z\".", :type "string"}, :funder {:description "The party funding the promotion. Only merchant is supported for orders.createtestorder.", :type "string"}, :endTime {:description "Promotion end time in ISO 8601 format. Date, time, and offset required, e.g., \"2020-01-02T09:00:00+01:00\" or \"2020-01-02T09:00:00Z\".", :type "string"}, :applicableItems {:description "Items which this promotion may be applied to. If empty, there are no restrictions on applicable items and quantity.", :items {:$ref "#/definitions/OrderPromotionItem"}, :type "array"}, :type {:description "The scope of the promotion. Only product is supported for orders.createtestorder.", :type "string"}, :merchantPromotionId {:description "This field is used to identify promotions within merchants' own systems.", :type "string"}, :title {:description "The title of the promotion.", :type "string"}, :appliedItems {:description "Items which this promotion have been applied to. Do not provide for orders.createtestorder.", :items {:$ref "#/definitions/OrderPromotionItem"}, :type "array"}, :shortTitle {:description "A short title of the promotion to be shown on the checkout page. Do not provide for orders.createtestorder.", :type "string"}, :taxValue {:$ref "#/definitions/Price", :description "Estimated discount applied to tax (if allowed by law). Do not provide for orders.createtestorder."}, :subtype {:description "The category of the promotion. Only moneyOff is supported for orders.createtestorder.", :type "string"}}, :type "object"}, :OrderAddress {:properties {:country {:description "CLDR country code (e.g. \"US\").", :type "string"}, :fullAddress {:description "Strings representing the lines of the printed label for mailing the order, for example:\nJohn Smith\n1600 Amphitheatre Parkway\nMountain View, CA, 94043\nUnited States", :items {:type "string"}, :type "array"}, :isPostOfficeBox {:description "Whether the address is a post office box.", :type "boolean"}, :locality {:description "City, town or commune. May also include dependent localities or sublocalities (e.g. neighborhoods or suburbs).", :type "string"}, :postalCode {:description "Postal Code or ZIP (e.g. \"94043\").", :type "string"}, :recipientName {:description "Name of the recipient.", :type "string"}, :region {:description "Top-level administrative subdivision of the country. For example, a state like California (\"CA\") or a province like Quebec (\"QC\").", :type "string"}, :streetAddress {:description "Street-level part of the address.", :items {:type "string"}, :type "array"}}, :type "object"}, :OrderreportsListDisbursementsResponse {:properties {:disbursements {:description "The list of disbursements.", :items {:$ref "#/definitions/OrderReportDisbursement"}, :type "array"}, :kind {:default "content#orderreportsListDisbursementsResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#orderreportsListDisbursementsResponse\".", :type "string"}, :nextPageToken {:description "The token for the retrieval of the next page of disbursements.", :type "string"}}, :type "object"}, :OrderCancellation {:properties {:actor {:description "The actor that created the cancellation.", :type "string"}, :creationDate {:description "Date on which the cancellation has been created, in ISO 8601 format.", :type "string"}, :quantity {:description "The quantity that was canceled.", :format "uint32", :type "integer"}, :reason {:description "The reason for the cancellation. Orders that are cancelled with a noInventory reason will lead to the removal of the product from Shopping Actions until you make an update to that product. This will not affect your Shopping ads.", :type "string"}, :reasonText {:description "The explanation of the reason.", :type "string"}}, :type "object"}, :HolidayCutoff {:properties {:deadlineDate {:description "Date of the order deadline, in ISO 8601 format. E.g. \"2016-11-29\" for 29th November 2016. Required.", :type "string"}, :deadlineHour {:description "Hour of the day on the deadline date until which the order has to be placed to qualify for the delivery guarantee. Possible values are: 0 (midnight), 1, ..., 12 (noon), 13, ..., 23. Required.", :format "uint32", :type "integer"}, :deadlineTimezone {:description "Timezone identifier for the deadline hour. A list of identifiers can be found in  the AdWords API documentation. E.g. \"Europe/Zurich\". Required.", :type "string"}, :holidayId {:description "Unique identifier for the holiday. Required.", :type "string"}, :visibleFromDate {:description "Date on which the deadline will become visible to consumers in ISO 8601 format. E.g. \"2016-10-31\" for 31st October 2016. Required.", :type "string"}}, :type "object"}, :PosCustomBatchResponse {:properties {:entries {:description "The result of the execution of the batch requests.", :items {:$ref "#/definitions/PosCustomBatchResponseEntry"}, :type "array"}, :kind {:default "content#posCustomBatchResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#posCustomBatchResponse\".", :type "string"}}, :type "object"}, :DatafeedsFetchNowResponse {:properties {:kind {:default "content#datafeedsFetchNowResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#datafeedsFetchNowResponse\".", :type "string"}}, :type "object"}, :ProductsCustomBatchResponse {:properties {:entries {:description "The result of the execution of the batch requests.", :items {:$ref "#/definitions/ProductsCustomBatchResponseEntry"}, :type "array"}, :kind {:default "content#productsCustomBatchResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#productsCustomBatchResponse\".", :type "string"}}, :type "object"}, :DeliveryTime {:properties {:maxTransitTimeInDays {:description "Maximum number of business days that is spent in transit. 0 means same day delivery, 1 means next day delivery. Must be greater than or equal to minTransitTimeInDays.", :format "uint32", :type "integer"}, :transitTimeTable {:$ref "#/definitions/TransitTable", :description "Transit time table, number of business days spent in transit based on row and column dimensions. Either {min,max}TransitTimeInDays or transitTimeTable can be set, but not both."}, :holidayCutoffs {:description "Holiday cutoff definitions. If configured, they specify order cutoff times for holiday-specific shipping.", :items {:$ref "#/definitions/HolidayCutoff"}, :type "array"}, :minTransitTimeInDays {:description "Minimum number of business days that is spent in transit. 0 means same day delivery, 1 means next day delivery. Either {min,max}TransitTimeInDays or transitTimeTable must be set, but not both.", :format "uint32", :type "integer"}, :maxHandlingTimeInDays {:description "Maximum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped. Must be greater than or equal to minHandlingTimeInDays.", :format "uint32", :type "integer"}, :cutoffTime {:$ref "#/definitions/CutoffTime", :description "Business days cutoff time definition. If not configured the cutoff time will be defaulted to 8AM PST."}, :minHandlingTimeInDays {:description "Minimum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped.", :format "uint32", :type "integer"}, :transitBusinessDayConfig {:$ref "#/definitions/BusinessDayConfig", :description "The business days during which orders can be in-transit. If not provided, Monday to Friday business days will be assumed."}, :handlingBusinessDayConfig {:$ref "#/definitions/BusinessDayConfig", :description "The business days during which orders can be handled. If not provided, Monday to Friday business days will be assumed."}}, :type "object"}, :ProductstatusesListResponse {:properties {:kind {:default "content#productstatusesListResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#productstatusesListResponse\".", :type "string"}, :nextPageToken {:description "The token for the retrieval of the next page of products statuses.", :type "string"}, :resources {:items {:$ref "#/definitions/ProductStatus"}, :type "array"}}, :type "object"}, :ProductstatusesCustomBatchResponse {:properties {:entries {:description "The result of the execution of the batch requests.", :items {:$ref "#/definitions/ProductstatusesCustomBatchResponseEntry"}, :type "array"}, :kind {:default "content#productstatusesCustomBatchResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#productstatusesCustomBatchResponse\".", :type "string"}}, :type "object"}, :CustomerReturnReason {:properties {:description {:type "string"}, :reasonCode {:type "string"}}, :type "object"}, :LiaAboutPageSettings {:properties {:status {:description "The status of the verification process for the About page.", :type "string"}, :url {:description "The URL for the About page.", :type "string"}}, :type "object"}, :DatafeedFetchSchedule {:description "The required fields vary based on the frequency of fetching. For a monthly fetch schedule, day_of_month and hour are required. For a weekly fetch schedule, weekday and hour are required. For a daily fetch schedule, only hour is required.", :properties {:timeZone {:description "Time zone used for schedule. UTC by default. E.g., \"America/Los_Angeles\".", :type "string"}, :paused {:description "Whether the scheduled fetch is paused or not.", :type "boolean"}, :hour {:description "The hour of the day the feed file should be fetched (0-23).", :format "uint32", :type "integer"}, :minuteOfHour {:description "The minute of the hour the feed file should be fetched (0-59). Read-only.", :format "uint32", :type "integer"}, :password {:description "An optional password for fetch_url.", :type "string"}, :username {:description "An optional user name for fetch_url.", :type "string"}, :dayOfMonth {:description "The day of the month the feed file should be fetched (1-31).", :format "uint32", :type "integer"}, :weekday {:description "The day of the week the feed file should be fetched.", :type "string"}, :fetchUrl {:description "The URL where the feed file can be fetched. Google Merchant Center will support automatic scheduled uploads using the HTTP, HTTPS, FTP, or SFTP protocols, so the value will need to be a valid link using one of those four protocols.", :type "string"}}, :type "object"}, :PosInventory {:description "The absolute quantity of an item available at the given store.", :properties {:contentLanguage {:description "The two-letter ISO 639-1 language code for the item.", :type "string"}, :kind {:default "content#posInventory", :description "Identifies what kind of resource this is. Value: the fixed string \"content#posInventory\".", :type "string"}, :storeCode {:description "The identifier of the merchant's store. Either a storeCode inserted via the API or the code of the store in Google My Business.", :type "string"}, :gtin {:description "Global Trade Item Number.", :type "string"}, :quantity {:description "The available quantity of the item.", :format "int64", :type "string"}, :targetCountry {:description "The CLDR territory code for the item.", :type "string"}, :timestamp {:description "The inventory timestamp, in ISO 8601 format.", :type "string"}, :price {:$ref "#/definitions/Price", :description "The current price of the item."}, :itemId {:description "A unique identifier for the item.", :type "string"}}, :type "object"}, :RegionalinventoryCustomBatchRequestEntry {:description "A batch entry encoding a single non-batch regional inventory request.", :properties {:batchId {:description "An entry ID, unique within the batch request.", :format "uint32", :type "integer"}, :merchantId {:description "The ID of the managing account.", :format "uint64", :type "string"}, :method {:type "string"}, :productId {:description "The ID of the product for which to update price and availability.", :type "string"}, :regionalInventory {:$ref "#/definitions/RegionalInventory", :description "Price and availability of the product."}}, :type "object"}, :ShippingsettingsCustomBatchRequest {:properties {:entries {:description "The request entries to be processed in the batch.", :items {:$ref "#/definitions/ShippingsettingsCustomBatchRequestEntry"}, :type "array"}}, :type "object"}, :PosInventoryResponse {:properties {:contentLanguage {:description "The two-letter ISO 639-1 language code for the item.", :type "string"}, :kind {:default "content#posInventoryResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#posInventoryResponse\".", :type "string"}, :storeCode {:description "The identifier of the merchant's store. Either a storeCode inserted via the API or the code of the store in Google My Business.", :type "string"}, :gtin {:description "Global Trade Item Number.", :type "string"}, :quantity {:description "The available quantity of the item.", :format "int64", :type "string"}, :targetCountry {:description "The CLDR territory code for the item.", :type "string"}, :timestamp {:description "The inventory timestamp, in ISO 8601 format.", :type "string"}, :price {:$ref "#/definitions/Price", :description "The current price of the item."}, :itemId {:description "A unique identifier for the item.", :type "string"}}, :type "object"}, :UnitInvoice {:properties {:additionalCharges {:description "Additional charges for a unit, e.g. shipping costs.", :items {:$ref "#/definitions/UnitInvoiceAdditionalCharge"}, :type "array"}, :unitPrice {:$ref "#/definitions/Price", :description "[required] Pre-tax or post-tax price of the unit depending on the locality of the order."}, :unitPriceTaxes {:description "Tax amounts to apply to the unit price.", :items {:$ref "#/definitions/UnitInvoiceTaxLine"}, :type "array"}}, :type "object"}, :DatafeedstatusesCustomBatchResponse {:properties {:entries {:description "The result of the execution of the batch requests.", :items {:$ref "#/definitions/DatafeedstatusesCustomBatchResponseEntry"}, :type "array"}, :kind {:default "content#datafeedstatusesCustomBatchResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#datafeedstatusesCustomBatchResponse\".", :type "string"}}, :type "object"}, :OrderPickupDetails {:properties {:address {:$ref "#/definitions/OrderAddress", :description "Address of the pickup location where the shipment should be sent. Note that recipientName in the address is the name of the business at the pickup location."}, :collectors {:description "Collectors authorized to pick up shipment from the pickup location.", :items {:$ref "#/definitions/OrderPickupDetailsCollector"}, :type "array"}, :locationId {:description "ID of the pickup location.", :type "string"}}, :type "object"}, :OrderReportDisbursement {:description "Order disbursement. All methods require the payment analyst role.", :properties {:disbursementAmount {:$ref "#/definitions/Price", :description "The disbursement amount."}, :disbursementCreationDate {:description "The disbursement date, in ISO 8601 format.", :type "string"}, :disbursementDate {:description "The date the disbursement was initiated, in ISO 8601 format.", :type "string"}, :disbursementId {:description "The ID of the disbursement.", :type "string"}, :merchantId {:description "The ID of the managing account.", :format "uint64", :type "string"}}, :type "object"}, :AccountsLinkRequest {:properties {:action {:description "Action to perform for this link. The \"request\" action is only available to select merchants.", :type "string"}, :linkType {:description "Type of the link between the two accounts.", :type "string"}, :linkedAccountId {:description "The ID of the linked account.", :type "string"}}, :type "object"}, :Price {:properties {:currency {:description "The currency of the price.", :type "string"}, :value {:description "The price represented as a number.", :type "string"}}, :type "object"}, :OrderLineItemAdjustment {:properties {:priceAdjustment {:$ref "#/definitions/Price", :description "Adjustment for total price of the line item."}, :taxAdjustment {:$ref "#/definitions/Price", :description "Adjustment for total tax of the line item."}, :type {:description "Type of this adjustment.", :type "string"}}, :type "object"}, :OrderReportTransaction {:properties {:disbursementAmount {:$ref "#/definitions/Price", :description "The disbursement amount."}, :disbursementId {:description "The ID of the disbursement.", :type "string"}, :disbursementDate {:description "The date the disbursement was initiated, in ISO 8601 format.", :type "string"}, :disbursementCreationDate {:description "The date the disbursement was created, in ISO 8601 format.", :type "string"}, :productAmount {:$ref "#/definitions/ProductAmount", :description "Total amount for the items."}, :merchantOrderId {:description "Merchant-provided ID of the order.", :type "string"}, :transactionDate {:description "The date of the transaction, in ISO 8601 format.", :type "string"}, :merchantId {:description "The ID of the managing account.", :format "uint64", :type "string"}, :orderId {:description "The ID of the order.", :type "string"}}, :type "object"}, :LiasettingsCustomBatchRequest {:properties {:entries {:description "The request entries to be processed in the batch.", :items {:$ref "#/definitions/LiasettingsCustomBatchRequestEntry"}, :type "array"}}, :type "object"}, :RegionalinventoryCustomBatchResponse {:properties {:entries {:description "The result of the execution of the batch requests.", :items {:$ref "#/definitions/RegionalinventoryCustomBatchResponseEntry"}, :type "array"}, :kind {:default "content#regionalinventoryCustomBatchResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#regionalinventoryCustomBatchResponse\".", :type "string"}}, :type "object"}, :OrderDeliveryDetails {:properties {:address {:$ref "#/definitions/OrderAddress", :description "The delivery address"}, :phoneNumber {:description "The phone number of the person receiving the delivery.", :type "string"}}, :type "object"}, :OrderShipment {:properties {:carrier {:description "The carrier handling the shipment.\n\nAcceptable values for US are:  \n- \"gsx\" \n- \"ups\" \n- \"usps\" \n- \"fedex\" \n- \"dhl\" \n- \"ecourier\" \n- \"cxt\" \n- \"google\" \n- \"ontrac\" \n- \"emsy\" \n- \"ont\" \n- \"deliv\" \n- \"dynamex\" \n- \"lasership\" \n- \"mpx\" \n- \"uds\" \n- \"efw\" \n- \"jd logistics\"  \n\nAcceptable values for FR are:  \n- \"colissimo\" \n- \"chronopost\" \n- \"gls\" \n- \"dpd\" \n- \"bpost\" \n- \"colis prive\" \n- \"boxtal\" \n- \"geodis\" \n- \"tnt\" \n- \"la poste\"", :type "string"}, :creationDate {:description "Date on which the shipment has been created, in ISO 8601 format.", :type "string"}, :deliveryDate {:description "Date on which the shipment has been delivered, in ISO 8601 format. Present only if status is delivered", :type "string"}, :id {:description "The ID of the shipment.", :type "string"}, :lineItems {:description "The line items that are shipped.", :items {:$ref "#/definitions/OrderShipmentLineItemShipment"}, :type "array"}, :shipmentGroupId {:description "The shipment group ID of the shipment. This is set in shiplineitems request.", :type "string"}, :status {:description "The status of the shipment.", :type "string"}, :trackingId {:description "The tracking ID for the shipment.", :type "string"}}, :type "object"}, :ShippingsettingsCustomBatchRequestEntry {:description "A batch entry encoding a single non-batch shippingsettings request.", :properties {:accountId {:description "The ID of the account for which to get/update account shipping settings.", :format "uint64", :type "string"}, :batchId {:description "An entry ID, unique within the batch request.", :format "uint32", :type "integer"}, :merchantId {:description "The ID of the managing account.", :format "uint64", :type "string"}, :method {:type "string"}, :shippingSettings {:$ref "#/definitions/ShippingSettings", :description "The account shipping settings to update. Only defined if the method is update."}}, :type "object"}, :DatafeedstatusesCustomBatchRequestEntry {:description "A batch entry encoding a single non-batch datafeedstatuses request.", :properties {:batchId {:description "An entry ID, unique within the batch request.", :format "uint32", :type "integer"}, :country {:description "The country for which to get the datafeed status. If this parameter is provided then language must also be provided. Note that for multi-target datafeeds this parameter is required.", :type "string"}, :datafeedId {:description "The ID of the data feed to get.", :format "uint64", :type "string"}, :language {:description "The language for which to get the datafeed status. If this parameter is provided then country must also be provided. Note that for multi-target datafeeds this parameter is required.", :type "string"}, :merchantId {:description "The ID of the managing account.", :format "uint64", :type "string"}, :method {:type "string"}}, :type "object"}, :LiasettingsListResponse {:properties {:kind {:default "content#liasettingsListResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsListResponse\".", :type "string"}, :nextPageToken {:description "The token for the retrieval of the next page of LIA settings.", :type "string"}, :resources {:items {:$ref "#/definitions/LiaSettings"}, :type "array"}}, :type "object"}, :OrdersRejectReturnLineItemRequest {:properties {:lineItemId {:description "The ID of the line item to return. Either lineItemId or productId is required.", :type "string"}, :operationId {:description "The ID of the operation. Unique across all operations for a given order.", :type "string"}, :productId {:description "The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.", :type "string"}, :quantity {:description "The quantity to return and refund.", :format "uint32", :type "integer"}, :reason {:description "The reason for the return.", :type "string"}, :reasonText {:description "The explanation of the reason.", :type "string"}}, :type "object"}, :OrderLineItemProduct {:properties {:mpn {:description "Manufacturer Part Number (MPN) of the item.", :type "string"}, :contentLanguage {:description "The two-letter ISO 639-1 language code for the item.", :type "string"}, :variantAttributes {:description "Variant attributes for the item. These are dimensions of the product, such as color, gender, material, pattern, and size. You can find a comprehensive list of variant attributes here.", :items {:$ref "#/definitions/OrderLineItemProductVariantAttribute"}, :type "array"}, :brand {:description "Brand of the item.", :type "string"}, :title {:description "The title of the product.", :type "string"}, :offerId {:description "An identifier of the item.", :type "string"}, :itemGroupId {:description "Shared identifier for all variants of the same product.", :type "string"}, :id {:description "The REST ID of the product.", :type "string"}, :condition {:description "Condition or state of the item.", :type "string"}, :fees {:description "Associated fees at order creation time.", :items {:$ref "#/definitions/OrderLineItemProductFee"}, :type "array"}, :gtin {:description "Global Trade Item Number (GTIN) of the item.", :type "string"}, :targetCountry {:description "The CLDR territory code of the target country of the product.", :type "string"}, :shownImage {:description "URL to the cached image shown to the user when order was placed.", :type "string"}, :price {:$ref "#/definitions/Price", :description "Price of the item."}, :imageLink {:description "URL of an image of the item.", :type "string"}}, :type "object"}, :OrderinvoicesCreateRefundInvoiceRequest {:properties {:invoiceId {:description "[required] The ID of the invoice.", :type "string"}, :operationId {:description "[required] The ID of the operation, unique across all operations for a given order.", :type "string"}, :refundOnlyOption {:$ref "#/definitions/OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption", :description "Option to create a refund-only invoice. Exactly one of refundOnlyOption or returnOption must be provided."}, :returnOption {:$ref "#/definitions/OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption", :description "Option to create an invoice for a refund and mark all items within the invoice as returned. Exactly one of refundOnlyOption or returnOption must be provided."}, :shipmentInvoices {:description "Invoice details for different shipment groups.", :items {:$ref "#/definitions/ShipmentInvoice"}, :type "array"}}, :type "object"}, :GmbAccounts {:properties {:accountId {:description "The ID of the account.", :format "uint64", :type "string"}, :gmbAccounts {:description "A list of GMB accounts which are available to the merchant.", :items {:$ref "#/definitions/GmbAccountsGmbAccount"}, :type "array"}}, :type "object"}, :ProductsCustomBatchRequestEntry {:description "A batch entry encoding a single non-batch products request.", :properties {:batchId {:description "An entry ID, unique within the batch request.", :format "uint32", :type "integer"}, :feedId {:description "The Content API feed id.", :format "uint64", :type "string"}, :merchantId {:description "The ID of the managing account.", :format "uint64", :type "string"}, :method {:type "string"}, :product {:$ref "#/definitions/Product", :description "The product to insert. Only required if the method is insert."}, :productId {:description "The ID of the product to get or delete. Only defined if the method is get or delete.", :type "string"}}, :type "object"}, :Headers {:description "A non-empty list of row or column headers for a table. Exactly one of prices, weights, numItems, postalCodeGroupNames, or location must be set.", :properties {:locations {:description "A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set.", :items {:$ref "#/definitions/LocationIdSet"}, :type "array"}, :numberOfItems {:description "A list of inclusive number of items upper bounds. The last value can be \"infinity\". For example [\"10\", \"50\", \"infinity\"] represents the headers \"<= 10 items\", \" 50 items\". Must be non-empty. Can only be set if all other fields are not set.", :items {:type "string"}, :type "array"}, :postalCodeGroupNames {:description "A list of postal group names. The last value can be \"all other locations\". Example: [\"zone 1\", \"zone 2\", \"all other locations\"]. The referred postal code groups must match the delivery country of the service. Must be non-empty. Can only be set if all other fields are not set.", :items {:type "string"}, :type "array"}, :prices {:description "A list of inclusive order price upper bounds. The last price's value can be \"infinity\". For example [{\"value\": \"10\", \"currency\": \"USD\"}, {\"value\": \"500\", \"currency\": \"USD\"}, {\"value\": \"infinity\", \"currency\": \"USD\"}] represents the headers \"<= $10\", \" $500\". All prices within a service must have the same currency. Must be non-empty. Can only be set if all other fields are not set.", :items {:$ref "#/definitions/Price"}, :type "array"}, :weights {:description "A list of inclusive order weight upper bounds. The last weight's value can be \"infinity\". For example [{\"value\": \"10\", \"unit\": \"kg\"}, {\"value\": \"50\", \"unit\": \"kg\"}, {\"value\": \"infinity\", \"unit\": \"kg\"}] represents the headers \"<= 10kg\", \" 50kg\". All weights within a service must have the same unit. Must be non-empty. Can only be set if all other fields are not set.", :items {:$ref "#/definitions/Weight"}, :type "array"}}, :type "object"}, :PosDataProviders {:properties {:country {:description "Country code.", :type "string"}, :posDataProviders {:description "A list of POS data providers.", :items {:$ref "#/definitions/PosDataProvidersPosDataProvider"}, :type "array"}}, :type "object"}, :OrdersUpdateLineItemShippingDetailsResponse {:properties {:executionStatus {:description "The status of the execution.", :type "string"}, :kind {:default "content#ordersUpdateLineItemShippingDetailsResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#ordersUpdateLineItemShippingDetailsResponse\".", :type "string"}}, :type "object"}, :LiasettingsRequestGmbAccessResponse {:properties {:kind {:default "content#liasettingsRequestGmbAccessResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsRequestGmbAccessResponse\".", :type "string"}}, :type "object"}, :OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption {:properties {:description {:description "Optional description of the return reason.", :type "string"}, :reason {:description "[required] Reason for the return.", :type "string"}}, :type "object"}, :RefundReason {:properties {:description {:type "string"}, :reasonCode {:type "string"}}, :type "object"}, :OrdersCancelLineItemResponse {:properties {:executionStatus {:description "The status of the execution.", :type "string"}, :kind {:default "content#ordersCancelLineItemResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#ordersCancelLineItemResponse\".", :type "string"}}, :type "object"}, :OrderLineItemReturnInfo {:properties {:daysToReturn {:description "How many days later the item can be returned.", :format "int32", :type "integer"}, :isReturnable {:description "Whether the item is returnable.", :type "boolean"}, :policyUrl {:description "URL of the item return policy.", :type "string"}}, :type "object"}, :ShippingsettingsListResponse {:properties {:kind {:default "content#shippingsettingsListResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#shippingsettingsListResponse\".", :type "string"}, :nextPageToken {:description "The token for the retrieval of the next page of shipping settings.", :type "string"}, :resources {:items {:$ref "#/definitions/ShippingSettings"}, :type "array"}}, :type "object"}, :DatafeedFormat {:properties {:columnDelimiter {:description "Delimiter for the separation of values in a delimiter-separated values feed. If not specified, the delimiter will be auto-detected. Ignored for non-DSV data feeds.", :type "string"}, :fileEncoding {:description "Character encoding scheme of the data feed. If not specified, the encoding will be auto-detected.", :type "string"}, :quotingMode {:description "Specifies how double quotes are interpreted. If not specified, the mode will be auto-detected. Ignored for non-DSV data feeds.", :type "string"}}, :type "object"}, :Account {:description "Account data. After the creation of a new account it may take a few minutes before it is fully operational. The methods delete, insert, and update require the admin role.", :properties {:websiteUrl {:description "The merchant's website.", :type "string"}, :name {:description "Display name for the account.", :type "string"}, :adsLinks {:description "List of linked Ads accounts that are active or pending approval. To create a new link request, add a new link with status active to the list. It will remain in a pending state until approved or rejected either in the Ads interface or through the AdWords API. To delete an active link, or to cancel a link request, remove it from the list.", :items {:$ref "#/definitions/AccountAdsLink"}, :type "array"}, :businessInformation {:$ref "#/definitions/AccountBusinessInformation", :description "The business information of the account."}, :id {:description "Merchant Center account ID.", :format "uint64", :type "string"}, :kind {:default "content#account", :description "Identifies what kind of resource this is. Value: the fixed string \"content#account\".", :type "string"}, :sellerId {:description "Client-specific, locally-unique, internal ID for the child account.", :type "string"}, :adultContent {:description "Indicates whether the merchant sells adult content.", :type "boolean"}, :youtubeChannelLinks {:description "List of linked YouTube channels that are active or pending approval. To create a new link request, add a new link with status active to the list. It will remain in a pending state until approved or rejected in the YT Creator Studio interface. To delete an active link, or to cancel a link request, remove it from the list.", :items {:$ref "#/definitions/AccountYouTubeChannelLink"}, :type "array"}, :googleMyBusinessLink {:$ref "#/definitions/AccountGoogleMyBusinessLink", :description "The GMB account which is linked or in the process of being linked with the Merchant Center account."}, :users {:description "Users with access to the account. Every account (except for subaccounts) must have at least one admin user.", :items {:$ref "#/definitions/AccountUser"}, :type "array"}}, :type "object"}, :OrdersCreateTestReturnRequest {:properties {:items {:description "Returned items.", :items {:$ref "#/definitions/OrdersCustomBatchRequestEntryCreateTestReturnReturnItem"}, :type "array"}}, :type "object"}, :OrderCustomerMarketingRightsInfo {:properties {:explicitMarketingPreference {:description "Last known customer selection regarding marketing preferences. In certain cases this selection might not be known, so this field would be empty. If a customer selected granted in their most recent order, they can be subscribed to marketing emails. Customers who have chosen denied must not be subscribed, or must be unsubscribed if already opted-in.", :type "string"}, :lastUpdatedTimestamp {:description "Timestamp when last time marketing preference was updated. Could be empty, if user wasn't offered a selection yet.", :type "string"}, :marketingEmailAddress {:description "Email address that can be used for marketing purposes. The field may be empty even if explicitMarketingPreference is 'granted'. This happens when retrieving an old order from the customer who deleted their account.", :type "string"}}, :type "object"}, :DatafeedstatusesCustomBatchRequest {:properties {:entries {:description "The request entries to be processed in the batch.", :items {:$ref "#/definitions/DatafeedstatusesCustomBatchRequestEntry"}, :type "array"}}, :type "object"}, :AccountUser {:properties {:admin {:description "Whether user is an admin.", :type "boolean"}, :emailAddress {:description "User's email address.", :type "string"}, :orderManager {:description "Whether user is an order manager.", :type "boolean"}, :paymentsAnalyst {:description "Whether user can access payment statements.", :type "boolean"}, :paymentsManager {:description "Whether user can manage payment settings.", :type "boolean"}}, :type "object"}, :BusinessDayConfig {:properties {:businessDays {:description "Regular business days. May not be empty.", :items {:type "string"}, :type "array"}}, :type "object"}, :ShippingsettingsCustomBatchResponseEntry {:description "A batch entry encoding a single non-batch shipping settings response.", :properties {:batchId {:description "The ID of the request entry to which this entry responds.", :format "uint32", :type "integer"}, :errors {:$ref "#/definitions/Errors", :description "A list of errors defined if, and only if, the request failed."}, :kind {:default "content#shippingsettingsCustomBatchResponseEntry", :description "Identifies what kind of resource this is. Value: the fixed string \"content#shippingsettingsCustomBatchResponseEntry\".", :type "string"}, :shippingSettings {:$ref "#/definitions/ShippingSettings", :description "The retrieved or updated account shipping settings."}}, :type "object"}, :GmbAccountsGmbAccount {:properties {:email {:description "The email which identifies the GMB account.", :type "string"}, :listingCount {:description "Number of listings under this account.", :format "uint64", :type "string"}, :name {:description "The name of the GMB account.", :type "string"}, :type {:description "The type of the GMB account (User or Business).", :type "string"}}, :type "object"}, :OrderPickupDetailsCollector {:properties {:name {:description "Name of the person picking up the shipment.", :type "string"}, :phoneNumber {:description "Phone number of the person picking up the shipment.", :type "string"}}, :type "object"}, :ProductstatusesCustomBatchRequest {:properties {:entries {:description "The request entries to be processed in the batch.", :items {:$ref "#/definitions/ProductstatusesCustomBatchRequestEntry"}, :type "array"}}, :type "object"}, :ProductShipping {:properties {:country {:description "The CLDR territory code of the country to which an item will ship.", :type "string"}, :locationGroupName {:description "The location where the shipping is applicable, represented by a location group name.", :type "string"}, :locationId {:description "The numeric ID of a location that the shipping rate applies to as defined in the AdWords API.", :format "int64", :type "string"}, :postalCode {:description "The postal code range that the shipping rate applies to, represented by a postal code, a postal code prefix followed by a * wildcard, a range between two postal codes or two postal code prefixes of equal length.", :type "string"}, :price {:$ref "#/definitions/Price", :description "Fixed shipping price, represented as a number."}, :region {:description "The geographic region to which a shipping rate applies.", :type "string"}, :service {:description "A free-form description of the service class or delivery speed.", :type "string"}}, :type "object"}, :AccountsCustomBatchRequest {:properties {:entries {:description "The request entries to be processed in the batch.", :items {:$ref "#/definitions/AccountsCustomBatchRequestEntry"}, :type "array"}}, :type "object"}, :ReturnpolicyCustomBatchResponse {:properties {:entries {:description "The result of the execution of the batch requests.", :items {:$ref "#/definitions/ReturnpolicyCustomBatchResponseEntry"}, :type "array"}, :kind {:default "content#returnpolicyCustomBatchResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#returnpolicyCustomBatchResponse\".", :type "string"}}, :type "object"}, :AccountYouTubeChannelLink {:properties {:channelId {:description "Channel ID.", :type "string"}, :status {:description "Status of the link between this Merchant Center account and the YouTube channel. Upon retrieval, it represents the actual status of the link and can be either active if it was approved in YT Creator Studio or pending if it's pending approval. Upon insertion, it represents the intended status of the link. Re-uploading a link with status active when it's still pending or with status pending when it's already active will have no effect: the status will remain unchanged. Re-uploading a link with deprecated status inactive is equivalent to not submitting the link at all and will delete the link if it was active or cancel the link request if it was pending.", :type "string"}}, :type "object"}, :OrdersCancelTestOrderByCustomerRequest {:properties {:reason {:description "The reason for the cancellation.", :type "string"}}, :type "object"}, :ReturnPolicySeasonalOverride {:properties {:endDate {:description "Last day on which the override applies. In ISO 8601 format.", :type "string"}, :name {:description "The name of the seasonal override as shown in Merchant Center.", :type "string"}, :policy {:$ref "#/definitions/ReturnPolicyPolicy", :description "The policy which is in effect during that time."}, :startDate {:description "First day on which the override applies. In ISO 8601 format.", :type "string"}}, :type "object"}, :OrdersUpdateShipmentRequest {:properties {:carrier {:description "The carrier handling the shipment. Not updated if missing. See shipments[].carrier in the  Orders resource representation for a list of acceptable values.", :type "string"}, :deliveryDate {:description "Date on which the shipment has been delivered, in ISO 8601 format. Optional and can be provided only if status is delivered.", :type "string"}, :operationId {:description "The ID of the operation. Unique across all operations for a given order.", :type "string"}, :shipmentId {:description "The ID of the shipment.", :type "string"}, :status {:description "New status for the shipment. Not updated if missing.", :type "string"}, :trackingId {:description "The tracking ID for the shipment. Not updated if missing.", :type "string"}}, :type "object"}, :OrdersAcknowledgeRequest {:properties {:operationId {:description "The ID of the operation. Unique across all operations for a given order.", :type "string"}}, :type "object"}, :ReturnAddressAddress {:properties {:country {:description "CLDR country code (e.g. \"US\").", :type "string"}, :locality {:description "City, town or commune. May also include dependent localities or sublocalities (e.g. neighborhoods or suburbs).", :type "string"}, :postalCode {:description "Postal code or ZIP (e.g. \"94043\").", :type "string"}, :recipientName {:description "Name of the recipient to address returns to.", :type "string"}, :region {:description "Top-level administrative subdivision of the country. For example, a state like California (\"CA\") or a province like Quebec (\"QC\").", :type "string"}, :streetAddress {:description "Street-level part of the address. May be up to two lines, each line specified as an array element.", :items {:type "string"}, :type "array"}}, :type "object"}, :DatafeedTarget {:properties {:country {:description "The country where the items in the feed will be included in the search index, represented as a  CLDR territory code.", :type "string"}, :excludedDestinations {:description "The list of destinations to exclude for this target (corresponds to unchecked check boxes in Merchant Center).", :items {:type "string"}, :type "array"}, :includedDestinations {:description "The list of destinations to include for this target (corresponds to checked check boxes in Merchant Center). Default destinations are always included unless provided in excludedDestinations.\n\nList of supported destinations (if available to the account):  \n- DisplayAds \n- Shopping \n- ShoppingActions \n- SurfacesAcrossGoogle", :items {:type "string"}, :type "array"}, :language {:description "The two-letter ISO 639-1 language of the items in the feed. Must be a valid language for targets[].country.", :type "string"}}, :type "object"}, :OrderCustomerLoyaltyInfo {:properties {:loyaltyNumber {:description "The loyalty card/membership number.", :type "string"}, :name {:description "Name of card/membership holder, this field will be populated when", :type "string"}}, :type "object"}, :AccountTax {:description "The tax settings of a merchant account. All methods require the admin role.", :properties {:accountId {:description "The ID of the account to which these account tax settings belong.", :format "uint64", :type "string"}, :kind {:default "content#accountTax", :description "Identifies what kind of resource this is. Value: the fixed string \"content#accountTax\".", :type "string"}, :rules {:description "Tax rules. Updating the tax rules will enable US taxes (not reversible). Defining no rules is equivalent to not charging tax at all.", :items {:$ref "#/definitions/AccountTaxTaxRule"}, :type "array"}}, :type "object"}, :Value {:description "The single value of a rate group or the value of a rate group table's cell. Exactly one of noShipping, flatRate, pricePercentage, carrierRateName, subtableName must be set.", :properties {:carrierRateName {:description "The name of a carrier rate referring to a carrier rate defined in the same rate group. Can only be set if all other fields are not set.", :type "string"}, :flatRate {:$ref "#/definitions/Price", :description "A flat rate. Can only be set if all other fields are not set."}, :noShipping {:description "If true, then the product can't ship. Must be true when set, can only be set if all other fields are not set.", :type "boolean"}, :pricePercentage {:description "A percentage of the price represented as a number in decimal notation (e.g., \"5.4\"). Can only be set if all other fields are not set.", :type "string"}, :subtableName {:description "The name of a subtable. Can only be set in table cells (i.e., not for single values), and only if all other fields are not set.", :type "string"}}, :type "object"}, :Amount {:properties {:priceAmount {:$ref "#/definitions/Price", :description "[required] The pre-tax or post-tax price depending on the location of the order."}, :taxAmount {:$ref "#/definitions/Price", :description "[required] Tax value."}}, :type "object"}, :ReturnpolicyCustomBatchRequest {:properties {:entries {:description "The request entries to be processed in the batch.", :items {:$ref "#/definitions/ReturnpolicyCustomBatchRequestEntry"}, :type "array"}}, :type "object"}, :OrdersSetLineItemMetadataResponse {:properties {:executionStatus {:description "The status of the execution.", :type "string"}, :kind {:default "content#ordersSetLineItemMetadataResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#ordersSetLineItemMetadataResponse\".", :type "string"}}, :type "object"}, :ProductsCustomBatchRequest {:properties {:entries {:description "The request entries to be processed in the batch.", :items {:$ref "#/definitions/ProductsCustomBatchRequestEntry"}, :type "array"}}, :type "object"}, :AccountStatusAccountLevelIssue {:properties {:country {:description "Country for which this issue is reported.", :type "string"}, :destination {:description "The destination the issue applies to.", :type "string"}, :detail {:description "Additional details about the issue.", :type "string"}, :documentation {:description "The URL of a web page to help resolving this issue.", :type "string"}, :id {:description "Issue identifier.", :type "string"}, :severity {:description "Severity of the issue.", :type "string"}, :title {:description "Short description of the issue.", :type "string"}}, :type "object"}, :LocationIdSet {:properties {:locationIds {:description "A non-empty list of location IDs. They must all be of the same location type (e.g., state).", :items {:type "string"}, :type "array"}}, :type "object"}, :ProductStatusItemLevelIssue {:properties {:attributeName {:description "The attribute's name, if the issue is caused by a single attribute.", :type "string"}, :code {:description "The error code of the issue.", :type "string"}, :description {:description "A short issue description in English.", :type "string"}, :destination {:description "The destination the issue applies to.", :type "string"}, :detail {:description "A detailed issue description in English.", :type "string"}, :documentation {:description "The URL of a web page to help with resolving this issue.", :type "string"}, :resolution {:description "Whether the issue can be resolved by the merchant.", :type "string"}, :servability {:description "How this issue affects serving of the offer.", :type "string"}}, :type "object"}, :LiaPosDataProvider {:properties {:posDataProviderId {:description "The ID of the POS data provider.", :format "uint64", :type "string"}, :posExternalAccountId {:description "The account ID by which this merchant is known to the POS data provider.", :type "string"}}, :type "object"}, :AccounttaxListResponse {:properties {:kind {:default "content#accounttaxListResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#accounttaxListResponse\".", :type "string"}, :nextPageToken {:description "The token for the retrieval of the next page of account tax settings.", :type "string"}, :resources {:items {:$ref "#/definitions/AccountTax"}, :type "array"}}, :type "object"}, :AccountGoogleMyBusinessLink {:properties {:gmbEmail {:description "The GMB email address of which a specific account within a GMB account. A sample account within a GMB account could be a business account with set of locations, managed under the GMB account.", :type "string"}, :status {:description "Status of the link between this Merchant Center account and the GMB account.", :type "string"}}, :type "object"}, :AccountAdsLink {:properties {:adsId {:description "Customer ID of the Ads account.", :format "uint64", :type "string"}, :status {:description "Status of the link between this Merchant Center account and the Ads account. Upon retrieval, it represents the actual status of the link and can be either active if it was approved in Google Ads or pending if it's pending approval. Upon insertion, it represents the intended status of the link. Re-uploading a link with status active when it's still pending or with status pending when it's already active will have no effect: the status will remain unchanged. Re-uploading a link with deprecated status inactive is equivalent to not submitting the link at all and will delete the link if it was active or cancel the link request if it was pending.", :type "string"}}, :type "object"}, :HolidaysHoliday {:properties {:countryCode {:description "The CLDR territory code of the country in which the holiday is available. E.g. \"US\", \"DE\", \"GB\". A holiday cutoff can only be configured in a shipping settings service with matching delivery country. Always present.", :type "string"}, :date {:description "Date of the holiday, in ISO 8601 format. E.g. \"2016-12-25\" for Christmas 2016. Always present.", :type "string"}, :deliveryGuaranteeDate {:description "Date on which the order has to arrive at the customer's, in ISO 8601 format. E.g. \"2016-12-24\" for 24th December 2016. Always present.", :type "string"}, :deliveryGuaranteeHour {:description "Hour of the day in the delivery location's timezone on the guaranteed delivery date by which the order has to arrive at the customer's. Possible values are: 0 (midnight), 1, ..., 12 (noon), 13, ..., 23. Always present.", :format "uint64", :type "string"}, :id {:description "Unique identifier for the holiday to be used when configuring holiday cutoffs. Always present.", :type "string"}, :type {:description "The holiday type. Always present.", :type "string"}}, :type "object"}, :AccountsListResponse {:properties {:kind {:default "content#accountsListResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#accountsListResponse\".", :type "string"}, :nextPageToken {:description "The token for the retrieval of the next page of accounts.", :type "string"}, :resources {:items {:$ref "#/definitions/Account"}, :type "array"}}, :type "object"}, :ShippingsettingsCustomBatchResponse {:properties {:entries {:description "The result of the execution of the batch requests.", :items {:$ref "#/definitions/ShippingsettingsCustomBatchResponseEntry"}, :type "array"}, :kind {:default "content#shippingsettingsCustomBatchResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#shippingsettingsCustomBatchResponse\".", :type "string"}}, :type "object"}, :AccountAddress {:properties {:country {:description "CLDR country code (e.g. \"US\").", :type "string"}, :locality {:description "City, town or commune. May also include dependent localities or sublocalities (e.g. neighborhoods or suburbs).", :type "string"}, :postalCode {:description "Postal code or ZIP (e.g. \"94043\").", :type "string"}, :region {:description "Top-level administrative subdivision of the country. For example, a state like California (\"CA\") or a province like Quebec (\"QC\").", :type "string"}, :streetAddress {:description "Street-level part of the address.", :type "string"}}, :type "object"}, :OrdersListResponse {:properties {:kind {:default "content#ordersListResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#ordersListResponse\".", :type "string"}, :nextPageToken {:description "The token for the retrieval of the next page of orders.", :type "string"}, :resources {:items {:$ref "#/definitions/Order"}, :type "array"}}, :type "object"}, :AccounttaxCustomBatchResponseEntry {:description "A batch entry encoding a single non-batch accounttax response.", :properties {:accountTax {:$ref "#/definitions/AccountTax", :description "The retrieved or updated account tax settings."}, :batchId {:description "The ID of the request entry this entry responds to.", :format "uint32", :type "integer"}, :errors {:$ref "#/definitions/Errors", :description "A list of errors defined if and only if the request failed."}, :kind {:default "content#accounttaxCustomBatchResponseEntry", :description "Identifies what kind of resource this is. Value: the fixed string \"content#accounttaxCustomBatchResponseEntry\".", :type "string"}}, :type "object"}, :ProductStatusDestinationStatus {:properties {:destination {:description "The name of the destination", :type "string"}, :status {:type "string"}}, :type "object"}, :AccountsCustomBatchResponseEntry {:description "A batch entry encoding a single non-batch accounts response.", :properties {:account {:$ref "#/definitions/Account", :description "The retrieved, created, or updated account. Not defined if the method was delete, claimwebsite or link."}, :batchId {:description "The ID of the request entry this entry responds to.", :format "uint32", :type "integer"}, :errors {:$ref "#/definitions/Errors", :description "A list of errors defined if and only if the request failed."}, :kind {:default "content#accountsCustomBatchResponseEntry", :description "Identifies what kind of resource this is. Value: the fixed string \"content#accountsCustomBatchResponseEntry\".", :type "string"}}, :type "object"}, :Error {:description "An error returned by the API.", :properties {:domain {:description "The domain of the error.", :type "string"}, :message {:description "A description of the error.", :type "string"}, :reason {:description "The error code.", :type "string"}}, :type "object"}, :OrderPromotionItem {:properties {:lineItemId {:description "The line item ID of a product. Do not provide for orders.createtestorder.", :type "string"}, :offerId {:description "Offer ID of a product. Only for orders.createtestorder.", :type "string"}, :productId {:description "orders.createtestorder.", :type "string"}, :quantity {:description "The quantity of the associated product. Do not provide for orders.createtestorder.", :format "int32", :type "integer"}}, :type "object"}, :PostalCodeRange {:properties {:postalCodeRangeBegin {:description "A postal code or a pattern of the form prefix* denoting the inclusive lower bound of the range defining the area. Examples values: \"94108\", \"9410*\", \"9*\". Required.", :type "string"}, :postalCodeRangeEnd {:description "A postal code or a pattern of the form prefix* denoting the inclusive upper bound of the range defining the area. It must have the same length as postalCodeRangeBegin: if postalCodeRangeBegin is a postal code then postalCodeRangeEnd must be a postal code too; if postalCodeRangeBegin is a pattern then postalCodeRangeEnd must be a pattern with the same prefix length. Optional: if not set, then the area is defined as being all the postal codes matching postalCodeRangeBegin.", :type "string"}}, :type "object"}, :ProductTax {:properties {:country {:description "The country within which the item is taxed, specified as a CLDR territory code.", :type "string"}, :locationId {:description "The numeric ID of a location that the tax rate applies to as defined in the AdWords API.", :format "int64", :type "string"}, :postalCode {:description "The postal code range that the tax rate applies to, represented by a ZIP code, a ZIP code prefix using * wildcard, a range between two ZIP codes or two ZIP code prefixes of equal length. Examples: 94114, 94*, 94002-95460, 94*-95*.", :type "string"}, :rate {:description "The percentage of tax rate that applies to the item price.", :format "double", :type "number"}, :region {:description "The geographic region to which the tax rate applies.", :type "string"}, :taxShip {:description "Set to true if tax is charged on shipping.", :type "boolean"}}, :type "object"}, :ReturnaddressCustomBatchRequestEntry {:properties {:batchId {:description "An entry ID, unique within the batch request.", :format "uint32", :type "integer"}, :merchantId {:description "The Merchant Center account ID.", :format "uint64", :type "string"}, :method {:type "string"}, :returnAddress {:$ref "#/definitions/ReturnAddress", :description "The return address to submit. Set this only if the method is insert."}, :returnAddressId {:description "The return address ID. Set this only if the method is delete or get.", :type "string"}}, :type "object"}, :ShippingsettingsGetSupportedCarriersResponse {:properties {:carriers {:description "A list of supported carriers. May be empty.", :items {:$ref "#/definitions/CarriersCarrier"}, :type "array"}, :kind {:default "content#shippingsettingsGetSupportedCarriersResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#shippingsettingsGetSupportedCarriersResponse\".", :type "string"}}, :type "object"}, :OrdersAcknowledgeResponse {:properties {:executionStatus {:description "The status of the execution.", :type "string"}, :kind {:default "content#ordersAcknowledgeResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#ordersAcknowledgeResponse\".", :type "string"}}, :type "object"}, :RateGroup {:properties {:applicableShippingLabels {:description "A list of shipping labels defining the products to which this rate group applies to. This is a disjunction: only one of the labels has to match for the rate group to apply. May only be empty for the last rate group of a service. Required.", :items {:type "string"}, :type "array"}, :carrierRates {:description "A list of carrier rates that can be referred to by mainTable or singleValue.", :items {:$ref "#/definitions/CarrierRate"}, :type "array"}, :mainTable {:$ref "#/definitions/Table", :description "A table defining the rate group, when singleValue is not expressive enough. Can only be set if singleValue is not set."}, :name {:description "Name of the rate group. Optional. If set has to be unique within shipping service.", :type "string"}, :singleValue {:$ref "#/definitions/Value", :description "The value of the rate group (e.g. flat rate $10). Can only be set if mainTable and subtables are not set."}, :subtables {:description "A list of subtables referred to by mainTable. Can only be set if mainTable is set.", :items {:$ref "#/definitions/Table"}, :type "array"}}, :type "object"}, :ReturnShipment {:properties {:creationDate {:type "string"}, :deliveryDate {:type "string"}, :returnMethodType {:type "string"}, :shipmentId {:type "string"}, :shipmentTrackingInfos {:items {:$ref "#/definitions/ShipmentTrackingInfo"}, :type "array"}, :shippingDate {:type "string"}, :state {:type "string"}}, :type "object"}, :AccountStatusStatistics {:properties {:active {:description "Number of active offers.", :format "int64", :type "string"}, :disapproved {:description "Number of disapproved offers.", :format "int64", :type "string"}, :expiring {:description "Number of expiring offers.", :format "int64", :type "string"}, :pending {:description "Number of pending offers.", :format "int64", :type "string"}}, :type "object"}, :AccounttaxCustomBatchResponse {:properties {:entries {:description "The result of the execution of the batch requests.", :items {:$ref "#/definitions/AccounttaxCustomBatchResponseEntry"}, :type "array"}, :kind {:default "content#accounttaxCustomBatchResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#accounttaxCustomBatchResponse\".", :type "string"}}, :type "object"}, :ShipmentInvoiceLineItemInvoice {:properties {:lineItemId {:description "ID of the line item. Either lineItemId or productId must be set.", :type "string"}, :productId {:description "ID of the product. This is the REST ID used in the products service. Either lineItemId or productId must be set.", :type "string"}, :shipmentUnitIds {:description "[required] The shipment unit ID is assigned by the merchant and defines individual quantities within a line item. The same ID can be assigned to units that are the same while units that differ must be assigned a different ID (for example: free or promotional units).", :items {:type "string"}, :type "array"}, :unitInvoice {:$ref "#/definitions/UnitInvoice", :description "[required] Invoice details for a single unit."}}, :type "object"}, :DatafeedstatusesListResponse {:properties {:kind {:default "content#datafeedstatusesListResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#datafeedstatusesListResponse\".", :type "string"}, :nextPageToken {:description "The token for the retrieval of the next page of datafeed statuses.", :type "string"}, :resources {:items {:$ref "#/definitions/DatafeedStatus"}, :type "array"}}, :type "object"}, :OrdersCancelResponse {:properties {:executionStatus {:description "The status of the execution.", :type "string"}, :kind {:default "content#ordersCancelResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#ordersCancelResponse\".", :type "string"}}, :type "object"}, :ShippingsettingsGetSupportedHolidaysResponse {:properties {:holidays {:description "A list of holidays applicable for delivery guarantees. May be empty.", :items {:$ref "#/definitions/HolidaysHoliday"}, :type "array"}, :kind {:default "content#shippingsettingsGetSupportedHolidaysResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#shippingsettingsGetSupportedHolidaysResponse\".", :type "string"}}, :type "object"}, :OrderLineItemShippingDetails {:properties {:deliverByDate {:description "The delivery by date, in ISO 8601 format.", :type "string"}, :method {:$ref "#/definitions/OrderLineItemShippingDetailsMethod", :description "Details of the shipping method."}, :shipByDate {:description "The ship by date, in ISO 8601 format.", :type "string"}, :type {:description "Type of shipment. Indicates whether deliveryDetails or pickupDetails is applicable for this shipment.", :type "string"}}, :type "object"}, :OrderCustomer {:properties {:fullName {:description "Full name of the customer.", :type "string"}, :invoiceReceivingEmail {:description "Email address for receiving merchant issued value-added tax or invoice documentation of this order.", :type "string"}, :loyaltyInfo {:$ref "#/definitions/OrderCustomerLoyaltyInfo", :description "Loyalty program information."}, :marketingRightsInfo {:$ref "#/definitions/OrderCustomerMarketingRightsInfo", :description "Customer's marketing preferences. Contains the marketing opt-in information that is current at the time that the merchant call. User preference selections can change from one order to the next so preferences must be checked with every order."}}, :type "object"}, :ProductstatusesCustomBatchResponseEntry {:description "A batch entry encoding a single non-batch productstatuses response.", :properties {:batchId {:description "The ID of the request entry this entry responds to.", :format "uint32", :type "integer"}, :errors {:$ref "#/definitions/Errors", :description "A list of errors, if the request failed."}, :kind {:default "content#productstatusesCustomBatchResponseEntry", :description "Identifies what kind of resource this is. Value: the fixed string \"content#productstatusesCustomBatchResponseEntry\".", :type "string"}, :productStatus {:$ref "#/definitions/ProductStatus", :description "The requested product status. Only defined if the request was successful."}}, :type "object"}, :TestOrderLineItemProduct {:properties {:mpn {:description "Manufacturer Part Number (MPN) of the item. Optional.", :type "string"}, :contentLanguage {:description "The two-letter ISO 639-1 language code for the item.", :type "string"}, :variantAttributes {:description "Variant attributes for the item. Optional.", :items {:$ref "#/definitions/OrderLineItemProductVariantAttribute"}, :type "array"}, :brand {:description "Brand of the item.", :type "string"}, :title {:description "The title of the product.", :type "string"}, :offerId {:description "An identifier of the item.", :type "string"}, :itemGroupId {:description "Shared identifier for all variants of the same product. Optional.", :type "string"}, :condition {:description "Condition or state of the item.", :type "string"}, :fees {:description "Fees for the item. Optional.", :items {:$ref "#/definitions/OrderLineItemProductFee"}, :type "array"}, :gtin {:description "Global Trade Item Number (GTIN) of the item. Optional.", :type "string"}, :targetCountry {:description "The CLDR territory code of the target country of the product.", :type "string"}, :price {:$ref "#/definitions/Price", :description "The price for the product. Tax is automatically calculated for orders where marketplace facilitator tax laws are applicable. Otherwise, tax settings from Merchant Center are applied."}, :imageLink {:description "URL of an image of the item.", :type "string"}}, :type "object"}, :OrdersSetLineItemMetadataRequest {:properties {:annotations {:items {:$ref "#/definitions/OrderMerchantProvidedAnnotation"}, :type "array"}, :lineItemId {:description "The ID of the line item to set metadata. Either lineItemId or productId is required.", :type "string"}, :operationId {:description "The ID of the operation. Unique across all operations for a given order.", :type "string"}, :productId {:description "The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required.", :type "string"}}, :type "object"}, :OrdersUpdateLineItemShippingDetailsRequest {:properties {:deliverByDate {:description "Updated delivery by date, in ISO 8601 format. If not specified only ship by date is updated.\n\nProvided date should be within 1 year timeframe and can not be a date in the past.", :type "string"}, :lineItemId {:description "The ID of the line item to set metadata. Either lineItemId or productId is required.", :type "string"}, :operationId {:description "The ID of the operation. Unique across all operations for a given order.", :type "string"}, :productId {:description "The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required.", :type "string"}, :shipByDate {:description "Updated ship by date, in ISO 8601 format. If not specified only deliver by date is updated.\n\nProvided date should be within 1 year timeframe and can not be a date in the past.", :type "string"}}, :type "object"}, :AccountStatusProducts {:properties {:channel {:description "The channel the data applies to.", :type "string"}, :country {:description "The country the data applies to.", :type "string"}, :destination {:description "The destination the data applies to.", :type "string"}, :itemLevelIssues {:description "List of item-level issues.", :items {:$ref "#/definitions/AccountStatusItemLevelIssue"}, :type "array"}, :statistics {:$ref "#/definitions/AccountStatusStatistics", :description "Aggregated product statistics."}}, :type "object"}, :AccountsLinkResponse {:properties {:kind {:default "content#accountsLinkResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#accountsLinkResponse\".", :type "string"}}, :type "object"}, :AccountIdentifier {:properties {:aggregatorId {:description "The aggregator ID, set for aggregators and subaccounts (in that case, it represents the aggregator of the subaccount).", :format "uint64", :type "string"}, :merchantId {:description "The merchant account ID, set for individual accounts and subaccounts.", :format "uint64", :type "string"}}, :type "object"}, :Weight {:properties {:unit {:description "The weight unit.", :type "string"}, :value {:description "The weight represented as a number.", :type "string"}}, :type "object"}, :ProductStatus {:description "The status of a product, i.e., information about a product computed asynchronously.", :properties {:lastUpdateDate {:description "Date on which the item has been last updated, in ISO 8601 format.", :type "string"}, :destinationStatuses {:description "The intended destinations for the product.", :items {:$ref "#/definitions/ProductStatusDestinationStatus"}, :type "array"}, :itemLevelIssues {:description "A list of all issues associated with the product.", :items {:$ref "#/definitions/ProductStatusItemLevelIssue"}, :type "array"}, :productId {:description "The ID of the product for which status is reported.", :type "string"}, :title {:description "The title of the product.", :type "string"}, :googleExpirationDate {:description "Date on which the item expires in Google Shopping, in ISO 8601 format.", :type "string"}, :link {:description "The link to the product.", :type "string"}, :kind {:default "content#productStatus", :description "Identifies what kind of resource this is. Value: the fixed string \"content#productStatus\".", :type "string"}, :creationDate {:description "Date on which the item has been created, in ISO 8601 format.", :type "string"}}, :type "object"}, :PosSaleResponse {:properties {:saleId {:description "A unique ID to group items from the same sale event.", :type "string"}, :contentLanguage {:description "The two-letter ISO 639-1 language code for the item.", :type "string"}, :kind {:default "content#posSaleResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#posSaleResponse\".", :type "string"}, :storeCode {:description "The identifier of the merchant's store. Either a storeCode inserted via the API or the code of the store in Google My Business.", :type "string"}, :gtin {:description "Global Trade Item Number.", :type "string"}, :quantity {:description "The relative change of the available quantity. Negative for items returned.", :format "int64", :type "string"}, :targetCountry {:description "The CLDR territory code for the item.", :type "string"}, :timestamp {:description "The inventory timestamp, in ISO 8601 format.", :type "string"}, :price {:$ref "#/definitions/Price", :description "The price of the item."}, :itemId {:description "A unique identifier for the item.", :type "string"}}, :type "object"}, :RegionalinventoryCustomBatchRequest {:properties {:entries {:description "The request entries to be processed in the batch.", :items {:$ref "#/definitions/RegionalinventoryCustomBatchRequestEntry"}, :type "array"}}, :type "object"}, :TestOrderLineItem {:properties {:product {:$ref "#/definitions/TestOrderLineItemProduct", :description "Product data from the time of the order placement."}, :quantityOrdered {:description "Number of items ordered.", :format "uint32", :type "integer"}, :returnInfo {:$ref "#/definitions/OrderLineItemReturnInfo", :description "Details of the return policy for the line item."}, :shippingDetails {:$ref "#/definitions/OrderLineItemShippingDetails", :description "Details of the requested shipping for the line item."}}, :type "object"}, :AccountstatusesListResponse {:properties {:kind {:default "content#accountstatusesListResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#accountstatusesListResponse\".", :type "string"}, :nextPageToken {:description "The token for the retrieval of the next page of account statuses.", :type "string"}, :resources {:items {:$ref "#/definitions/AccountStatus"}, :type "array"}}, :type "object"}, :OrdersCancelLineItemRequest {:properties {:lineItemId {:description "The ID of the line item to cancel. Either lineItemId or productId is required.", :type "string"}, :operationId {:description "The ID of the operation. Unique across all operations for a given order.", :type "string"}, :productId {:description "The ID of the product to cancel. This is the REST ID used in the products service. Either lineItemId or productId is required.", :type "string"}, :quantity {:description "The quantity to cancel.", :format "uint32", :type "integer"}, :reason {:description "The reason for the cancellation.", :type "string"}, :reasonText {:description "The explanation of the reason.", :type "string"}}, :type "object"}, :ReturnaddressCustomBatchResponseEntry {:properties {:batchId {:description "The ID of the request entry to which this entry responds.", :format "uint32", :type "integer"}, :errors {:$ref "#/definitions/Errors", :description "A list of errors defined if, and only if, the request failed."}, :kind {:default "content#returnaddressCustomBatchResponseEntry", :description "Identifies what kind of resource this is. Value: the fixed string \"content#returnaddressCustomBatchResponseEntry\".", :type "string"}, :returnAddress {:$ref "#/definitions/ReturnAddress", :description "The retrieved return address."}}, :type "object"}, :MerchantOrderReturnItem {:properties {:customerReturnReason {:$ref "#/definitions/CustomerReturnReason"}, :itemId {:type "string"}, :merchantReturnReason {:$ref "#/definitions/RefundReason"}, :product {:$ref "#/definitions/OrderLineItemProduct"}, :returnShipmentIds {:items {:type "string"}, :type "array"}, :state {:type "string"}}, :type "object"}, :OrdersReturnRefundLineItemResponse {:properties {:executionStatus {:description "The status of the execution.", :type "string"}, :kind {:default "content#ordersReturnRefundLineItemResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#ordersReturnRefundLineItemResponse\".", :type "string"}}, :type "object"}, :CarrierRate {:properties {:carrierName {:description "Carrier service, such as \"UPS\" or \"Fedex\". The list of supported carriers can be retrieved via the getSupportedCarriers method. Required.", :type "string"}, :carrierService {:description "Carrier service, such as \"ground\" or \"2 days\". The list of supported services for a carrier can be retrieved via the getSupportedCarriers method. Required.", :type "string"}, :flatAdjustment {:$ref "#/definitions/Price", :description "Additive shipping rate modifier. Can be negative. For example { \"value\": \"1\", \"currency\" : \"USD\" } adds $1 to the rate, { \"value\": \"-3\", \"currency\" : \"USD\" } removes $3 from the rate. Optional."}, :name {:description "Name of the carrier rate. Must be unique per rate group. Required.", :type "string"}, :originPostalCode {:description "Shipping origin for this carrier rate. Required.", :type "string"}, :percentageAdjustment {:description "Multiplicative shipping rate modifier as a number in decimal notation. Can be negative. For example \"5.4\" increases the rate by 5.4%, \"-3\" decreases the rate by 3%. Optional.", :type "string"}}, :type "object"}, :OrdersShipLineItemsRequest {:properties {:lineItems {:description "Line items to ship.", :items {:$ref "#/definitions/OrderShipmentLineItemShipment"}, :type "array"}, :operationId {:description "The ID of the operation. Unique across all operations for a given order.", :type "string"}, :shipmentGroupId {:description "ID of the shipment group. Required for orders that use the orderinvoices service.", :type "string"}, :shipmentInfos {:description "Shipment information. This field is repeated because a single line item can be shipped in several packages (and have several tracking IDs).", :items {:$ref "#/definitions/OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo"}, :type "array"}}, :type "object"}, :PosStore {:description "Store resource.", :properties {:kind {:default "content#posStore", :description "Identifies what kind of resource this is. Value: the fixed string \"content#posStore\".", :type "string"}, :storeAddress {:description "The street address of the store.", :type "string"}, :storeCode {:description "A store identifier that is unique for the given merchant.", :type "string"}}, :type "object"}, :ReturnAddress {:description "Return address resource.", :properties {:address {:$ref "#/definitions/ReturnAddressAddress", :description "The address."}, :country {:description "The country of sale where the return address is applicable.", :type "string"}, :kind {:default "content#returnAddress", :description "Identifies what kind of resource this is. Value: the fixed string \"content#returnAddress\".", :type "string"}, :label {:description "The user-defined label of the return address. For the default address, use the label \"default\".", :type "string"}, :phoneNumber {:description "The merchant's contact phone number regarding the return.", :type "string"}, :returnAddressId {:description "Return address ID generated by Google.", :type "string"}}, :type "object"}, :AccountStatusItemLevelIssue {:properties {:attributeName {:description "The attribute's name, if the issue is caused by a single attribute.", :type "string"}, :code {:description "The error code of the issue.", :type "string"}, :description {:description "A short issue description in English.", :type "string"}, :detail {:description "A detailed issue description in English.", :type "string"}, :documentation {:description "The URL of a web page to help with resolving this issue.", :type "string"}, :numItems {:description "Number of items with this issue.", :format "int64", :type "string"}, :resolution {:description "Whether the issue can be resolved by the merchant.", :type "string"}, :servability {:description "How this issue affects serving of the offer.", :type "string"}}, :type "object"}, :DatafeedsCustomBatchResponse {:properties {:entries {:description "The result of the execution of the batch requests.", :items {:$ref "#/definitions/DatafeedsCustomBatchResponseEntry"}, :type "array"}, :kind {:default "content#datafeedsCustomBatchResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#datafeedsCustomBatchResponse\".", :type "string"}}, :type "object"}, :AccountstatusesCustomBatchRequestEntry {:description "A batch entry encoding a single non-batch accountstatuses request.", :properties {:accountId {:description "The ID of the (sub-)account whose status to get.", :format "uint64", :type "string"}, :batchId {:description "An entry ID, unique within the batch request.", :format "uint32", :type "integer"}, :destinations {:description "If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.", :items {:type "string"}, :type "array"}, :merchantId {:description "The ID of the managing account.", :format "uint64", :type "string"}, :method {:description "The method (get).", :type "string"}}, :type "object"}, :LiasettingsListPosDataProvidersResponse {:properties {:kind {:default "content#liasettingsListPosDataProvidersResponse", :description "Identifies what kind of resource this is. Value: the fixed string \"content#liasettingsListPosDataProvidersResponse\".", :type "string"}, :posDataProviders {:description "The list of POS data providers for each eligible country", :items {:$ref "#/definitions/PosDataProviders"}, :type "array"}}, :type "object"}, :UnitInvoiceAdditionalCharge {:properties {:additionalChargeAmount {:$ref "#/definitions/Amount", :description "[required] Amount of the additional charge."}, :type {:description "[required] Type of the additional charge.", :type "string"}}, :type "object"}, :PosSaleRequest {:properties {:saleId {:description "A unique ID to group items from the same sale event.", :type "string"}, :contentLanguage {:description "The two-letter ISO 639-1 language code for the item.", :type "string"}, :storeCode {:description "The identifier of the merchant's store. Either a storeCode inserted via the API or the code of the store in Google My Business.", :type "string"}, :gtin {:description "Global Trade Item Number.", :type "string"}, :quantity {:description "The relative change of the available quantity. Negative for items returned.", :format "int64", :type "string"}, :targetCountry {:description "The CLDR territory code for the item.", :type "string"}, :timestamp {:description "The inventory timestamp, in ISO 8601 format.", :type "string"}, :price {:$ref "#/definitions/Price", :description "The price of the item."}, :itemId {:description "A unique identifier for the item.", :type "string"}}, :type "object"}, :AccountstatusesCustomBatchResponseEntry {:description "A batch entry encoding a single non-batch accountstatuses response.", :properties {:accountStatus {:$ref "#/definitions/AccountStatus", :description "The requested account status. Defined if and only if the request was successful."}, :batchId {:description "The ID of the request entry this entry responds to.", :format "uint32", :type "integer"}, :errors {:$ref "#/definitions/Errors", :description "A list of errors defined if and only if the request failed."}}, :type "object"}, :LiasettingsCustomBatchRequestEntry {:properties {:contactName {:description "Inventory validation contact name. Required only for SetInventoryValidationContact.", :type "string"}, :posDataProviderId {:description "The ID of POS data provider. Required only for SetPosProvider.", :format "uint64", :type "string"}, :method {:type "string"}, :gmbEmail {:description "The GMB account. Required only for RequestGmbAccess.", :type "string"}, :posExternalAccountId {:description "The account ID by which this merchant is known to the POS provider.", :type "string"}, :contactEmail {:description "Inventory validation contact email. Required only for SetInventoryValidationContact.", :type "string"}, :batchId {:description "An entry ID, unique within the batch request.", :format "uint32", :type "integer"}, :accountId {:description "The ID of the account for which to get/update account shipping settings.", :format "uint64", :type "string"}, :country {:description "The country code. Required only for RequestInventoryVerification.", :type "string"}, :merchantId {:description "The ID of the managing account.", :format "uint64", :type "string"}, :liaSettings {:$ref "#/definitions/LiaSettings", :description "The account Lia settings to update. Only defined if the method is update."}}, :type "object"}, :Order {:description "Order. Production access (all methods) requires the order manager role. Sandbox access does not.", :properties {:promotions {:description "Promotions associated with the order.", :items {:$ref "#/definitions/OrderPromotion"}, :type "array"}, :netTaxAmount {:$ref "#/definitions/Price", :description "The net amount for the order (tax part). Note that in certain cases due to taxable base adjustment netTaxAmount might not match to a sum of tax field across all lineItems and refunds."}, :taxCollector {:description "The party responsible for collecting and remitting taxes.", :type "string"}, :placedDate {:description "The date when the order was placed, in ISO 8601 format.", :type "string"}, :pickupDetails {:$ref "#/definitions/OrderPickupDetails", :description "Pickup details for shipments of type pickup."}, :shipments {:description "Shipments of the order.", :items {:$ref "#/definitions/OrderShipment"}, :type "array"}, :paymentStatus {:description "The status of the payment.", :type "string"}, :customer {:$ref "#/definitions/OrderCustomer", :description "The details of the customer who placed the order."}, :lineItems {:description "Line items that are ordered.", :items {:$ref "#/definitions/OrderLineItem"}, :type "array"}, :deliveryDetails {:$ref "#/definitions/OrderDeliveryDetails", :description "Delivery details for shipments of type delivery."}, :shippingCost {:$ref "#/definitions/Price", :description "The total cost of shipping for all items."}, :acknowledged {:description "Whether the order was acknowledged.", :type "boolean"}, :status {:description "The status of the order.", :type "string"}, :id {:description "The REST ID of the order. Globally unique.", :type "string"}, :kind {:default "content#order", :description "Identifies what kind of resource this is. Value: the fixed string \"content#order\".", :type "string"}, :shippingCostTax {:$ref "#/definitions/Price", :description "The tax for the total shipping cost."}, :merchantOrderId {:description "Merchant-provided ID of the order.", :type "string"}, :merchantId {:format "uint64", :type "string"}, :netPriceAmount {:$ref "#/definitions/Price", :description "The net amount for the order (price part). For example, if an order was originally for $100 and a refund was issued for $20, the net amount will be $80."}, :billingAddress {:$ref "#/definitions/OrderAddress", :description "The billing address."}, :refunds {:description "Refunds for the order.", :items {:$ref "#/definitions/OrderRefund"}, :type "array"}}, :type "object"}}}