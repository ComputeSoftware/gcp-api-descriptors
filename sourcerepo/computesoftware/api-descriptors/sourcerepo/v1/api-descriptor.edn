#:compute.api-descriptor{:endpoint #:compute.gcp.impl.descriptor{:url "https://sourcerepo.googleapis.com/"}, :op->spec {"sourcerepo.projects.repos.get" {:operationId "sourcerepo.projects.repos.get", :description "Returns information about a repo.", :parameters [{:description "The name of the requested repository. Values are of the form\n`projects/<project>/repos/<repo>`.", :in "path", :name "name", :required true, :schema {:type "string"}, :x-reservedExpansion true}], :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v1/{name}"}, "sourcerepo.projects.repos.create" {:operationId "sourcerepo.projects.repos.create", :description "Creates a repo in the given project with the given name.\n\nIf the named repository already exists, `CreateRepo` returns\n`ALREADY_EXISTS`.", :parameters [{:description "The project in which to create the repo. Values are of the form\n`projects/<project>`.", :in "path", :name "parent", :required true, :schema {:type "string"}, :x-reservedExpansion true}], :requestBody {:content {"application/json" {:schema {:$ref "#/components/schemas/Repo"}}}}, :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/{parent}/repos"}, "sourcerepo.projects.repos.patch" {:operationId "sourcerepo.projects.repos.patch", :description "Updates information about a repo.", :parameters [{:description "The name of the requested repository. Values are of the form\n`projects/<project>/repos/<repo>`.", :in "path", :name "name", :required true, :schema {:type "string"}, :x-reservedExpansion true}], :requestBody {:content {"application/json" {:schema {:$ref "#/components/schemas/UpdateRepoRequest"}}}}, :compute.gcp.impl.descriptor/http-method :patch, :compute.gcp.impl.descriptor/http-path "/v1/{name}"}, "sourcerepo.projects.repos.sync" {:operationId "sourcerepo.projects.repos.sync", :description "Synchronize a connected repo.\n\nThe response contains SyncRepoMetadata in the metadata field.", :parameters [{:description "The name of the repo to synchronize. Values are of the form\n`projects/<project>/repos/<repo>`.", :in "path", :name "name", :required true, :schema {:type "string"}, :x-reservedExpansion true}], :requestBody {:content {"application/json" {:schema {:$ref "#/components/schemas/SyncRepoRequest"}}}}, :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/{name}:sync"}, "sourcerepo.projects.getConfig" {:operationId "sourcerepo.projects.getConfig", :description "Returns the Cloud Source Repositories configuration of the project.", :parameters [{:description "The name of the requested project. Values are of the form\n`projects/<project>`.", :in "path", :name "name", :required true, :schema {:type "string"}, :x-reservedExpansion true}], :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v1/{name}/config"}, "sourcerepo.projects.repos.setIamPolicy" {:operationId "sourcerepo.projects.repos.setIamPolicy", :description "Sets the access control policy on the specified resource. Replaces any\nexisting policy.", :parameters [{:description "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.", :in "path", :name "resource", :required true, :schema {:type "string"}, :x-reservedExpansion true}], :requestBody {:content {"application/json" {:schema {:$ref "#/components/schemas/SetIamPolicyRequest"}}}}, :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/{resource}:setIamPolicy"}, "sourcerepo.projects.repos.getIamPolicy" {:operationId "sourcerepo.projects.repos.getIamPolicy", :description "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset.", :parameters [{:description "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.", :in "path", :name "resource", :required true, :schema {:type "string"}, :x-reservedExpansion true} {:description "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.", :in "query", :name "options.requestedPolicyVersion", :schema {:type "integer"}}], :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v1/{resource}:getIamPolicy"}, "sourcerepo.projects.repos.testIamPermissions" {:operationId "sourcerepo.projects.repos.testIamPermissions", :description "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a NOT_FOUND error.", :parameters [{:description "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.", :in "path", :name "resource", :required true, :schema {:type "string"}, :x-reservedExpansion true}], :requestBody {:content {"application/json" {:schema {:$ref "#/components/schemas/TestIamPermissionsRequest"}}}}, :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/{resource}:testIamPermissions"}, "sourcerepo.projects.repos.list" {:operationId "sourcerepo.projects.repos.list", :description "Returns all repos belonging to a project. The sizes of the repos are\nnot set by ListRepos.  To get the size of a repo, use GetRepo.", :parameters [{:description "The project ID whose repos should be listed. Values are of the form\n`projects/<project>`.", :in "path", :name "name", :required true, :schema {:type "string"}, :x-reservedExpansion true} {:description "Maximum number of repositories to return; between 1 and 500.\nIf not set or zero, defaults to 100 at the server.", :in "query", :name "pageSize", :schema {:type "integer"}} {:description "Resume listing repositories where a prior ListReposResponse\nleft off. This is an opaque token that must be obtained from\na recent, prior ListReposResponse's next_page_token field.", :in "query", :name "pageToken", :schema {:type "string"}}], :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v1/{name}/repos"}, "sourcerepo.projects.repos.delete" {:operationId "sourcerepo.projects.repos.delete", :description "Deletes a repo.", :parameters [{:description "The name of the repo to delete. Values are of the form\n`projects/<project>/repos/<repo>`.", :in "path", :name "name", :required true, :schema {:type "string"}, :x-reservedExpansion true}], :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/v1/{name}"}, "sourcerepo.projects.updateConfig" {:operationId "sourcerepo.projects.updateConfig", :description "Updates the Cloud Source Repositories configuration of the project.", :parameters [{:description "The name of the requested project. Values are of the form\n`projects/<project>`.", :in "path", :name "name", :required true, :schema {:type "string"}, :x-reservedExpansion true}], :requestBody {:content {"application/json" {:schema {:$ref "#/components/schemas/UpdateProjectConfigRequest"}}}}, :compute.gcp.impl.descriptor/http-method :patch, :compute.gcp.impl.descriptor/http-path "/v1/{name}/config"}}, :resolve {:components {:parameters {:quotaUser {:description "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", :in "query", :name "quotaUser", :schema {:type "string"}}, :key {:description "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", :in "query", :name "key", :schema {:type "string"}}, :alt {:description "Data format for response.", :in "query", :name "alt", :schema {:default "json", :enum ["json" "media" "proto"], :type "string"}}, :access_token {:description "OAuth access token.", :in "query", :name "access_token", :schema {:type "string"}}, :fields {:description "Selector specifying which fields to include in a partial response.", :in "query", :name "fields", :schema {:type "string"}}, :upload_protocol {:description "Upload protocol for media (e.g. \"raw\", \"multipart\").", :in "query", :name "upload_protocol", :schema {:type "string"}}, :uploadType {:description "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", :in "query", :name "uploadType", :schema {:type "string"}}, :oauth_token {:description "OAuth 2.0 token for the current user.", :in "query", :name "oauth_token", :schema {:type "string"}}, "_.xgafv" {:description "V1 error format.", :in "query", :name "$.xgafv", :schema {:enum ["1" "2"], :type "string"}}, :prettyPrint {:description "Returns response with indentations and line breaks.", :in "query", :name "prettyPrint", :schema {:default true, :type "boolean"}}, :callback {:description "JSONP", :in "query", :name "callback", :schema {:type "string"}}}, :schemas {:SyncRepoMetadata {:description "Metadata of SyncRepo.\n\nThis message is in the metadata field of Operation.", :properties {:name {:description "The name of the repo being synchronized. Values are of the form\n`projects/<project>/repos/<repo>`.", :type "string"}, :startTime {:description "The time this operation is started.", :format "google-datetime", :type "string"}, :statusMessage {:description "The latest status message on syncing the repository.", :type "string"}, :updateTime {:description "The time this operation's status message is updated.", :format "google-datetime", :type "string"}}, :type "object"}, :SyncRepoRequest {:description "Request for SyncRepo.", :properties {}, :type "object"}, :Operation {:description "This resource represents a long-running operation that is the result of a\nnetwork API call.", :properties {:done {:description "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.", :type "boolean"}, :error {:$ref "#/components/schemas/Status", :description "The error result of the operation in case of failure or cancellation."}, :metadata {:additionalProperties {:description "Properties of the object. Contains field @type with type URL."}, :description "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.", :type "object"}, :name {:description "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`.", :type "string"}, :response {:additionalProperties {:description "Properties of the object. Contains field @type with type URL."}, :description "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.", :type "object"}}, :type "object"}, :SetIamPolicyRequest {:description "Request message for `SetIamPolicy` method.", :properties {:policy {:$ref "#/components/schemas/Policy", :description "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them."}, :updateMask {:description "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only\nthe fields in the mask will be modified. If no mask is provided, the\nfollowing default mask is used:\npaths: \"bindings, etag\"\nThis field is only used by Cloud IAM.", :format "google-fieldmask", :type "string"}}, :type "object"}, :AuditConfig {:description "Specifies the audit configuration for a service.\nThe configuration determines which permission types are logged, and what\nidentities, if any, are exempted from logging.\nAn AuditConfig must have one or more AuditLogConfigs.\n\nIf there are AuditConfigs for both `allServices` and a specific service,\nthe union of the two AuditConfigs is used for that service: the log_types\nspecified in each AuditConfig are enabled, and the exempted_members in each\nAuditLogConfig are exempted.\n\nExample Policy with multiple AuditConfigs:\n\n    {\n      \"audit_configs\": [\n        {\n          \"service\": \"allServices\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n              \"exempted_members\": [\n                \"user:jose@example.com\"\n              ]\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n            },\n            {\n              \"log_type\": \"ADMIN_READ\",\n            }\n          ]\n        },\n        {\n          \"service\": \"sampleservice.googleapis.com\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n              \"exempted_members\": [\n                \"user:aliya@example.com\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n\nFor sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ\nlogging. It also exempts jose@example.com from DATA_READ logging, and\naliya@example.com from DATA_WRITE logging.", :properties {:auditLogConfigs {:description "The configuration for logging of each type of permission.", :items {:$ref "#/components/schemas/AuditLogConfig"}, :type "array"}, :service {:description "Specifies a service that will be enabled for audit logging.\nFor example, `storage.googleapis.com`, `cloudsql.googleapis.com`.\n`allServices` is a special value that covers all services.", :type "string"}}, :type "object"}, :AuditLogConfig {:description "Provides the configuration for logging a type of permissions.\nExample:\n\n    {\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n          \"exempted_members\": [\n            \"user:jose@example.com\"\n          ]\n        },\n        {\n          \"log_type\": \"DATA_WRITE\",\n        }\n      ]\n    }\n\nThis enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting\njose@example.com from DATA_READ logging.", :properties {:exemptedMembers {:description "Specifies the identities that do not cause logging for this type of\npermission.\nFollows the same format of Binding.members.", :items {:type "string"}, :type "array"}, :logType {:description "The log type that this config enables.", :enum ["LOG_TYPE_UNSPECIFIED" "ADMIN_READ" "DATA_WRITE" "DATA_READ"], :type "string"}}, :type "object"}, :MirrorConfig {:description "Configuration to automatically mirror a repository from another\nhosting service, for example GitHub or Bitbucket.", :properties {:deployKeyId {:description "ID of the SSH deploy key at the other hosting service.\nRemoving this key from the other service would deauthorize\nGoogle Cloud Source Repositories from mirroring.", :type "string"}, :url {:description "URL of the main repository at the other hosting service.", :type "string"}, :webhookId {:description "ID of the webhook listening to updates to trigger mirroring.\nRemoving this webhook from the other hosting service will stop\nGoogle Cloud Source Repositories from receiving notifications,\nand thereby disabling mirroring.", :type "string"}}, :type "object"}, :PubsubConfig {:description "Configuration to publish a Cloud Pub/Sub message.", :properties {:messageFormat {:description "The format of the Cloud Pub/Sub messages.", :enum ["MESSAGE_FORMAT_UNSPECIFIED" "PROTOBUF" "JSON"], :type "string"}, :serviceAccountEmail {:description "Email address of the service account used for publishing Cloud Pub/Sub\nmessages. This service account needs to be in the same project as the\nPubsubConfig. When added, the caller needs to have\niam.serviceAccounts.actAs permission on this service account. If\nunspecified, it defaults to the compute engine default service account.", :type "string"}, :topic {:description "A topic of Cloud Pub/Sub. Values are of the form\n`projects/<project>/topics/<topic>`. The project needs to be the same\nproject as this config is in.", :type "string"}}, :type "object"}, :ProjectConfig {:description "Cloud Source Repositories configuration of a project.", :properties {:enablePrivateKeyCheck {:description "Reject a Git push that contains a private key.", :type "boolean"}, :name {:description "The name of the project. Values are of the form `projects/<project>`.", :type "string"}, :pubsubConfigs {:additionalProperties {:$ref "#/components/schemas/PubsubConfig"}, :description "How this project publishes a change in the repositories through Cloud\nPub/Sub. Keyed by the topic names.", :type "object"}}, :type "object"}, :Binding {:description "Associates `members` with a `role`.", :properties {:condition {:$ref "#/components/schemas/Expr", :description "The condition that is associated with this binding.\nNOTE: An unsatisfied condition will not allow user access via current\nbinding. Different bindings, including their conditions, are examined\nindependently."}, :members {:description "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@example.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n* `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a user that has been recently deleted. For\n   example, `alice@example.com?uid=123456789012345678901`. If the user is\n   recovered, this value reverts to `user:{emailid}` and the recovered user\n   retains the role in the binding.\n\n* `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus\n   unique identifier) representing a service account that has been recently\n   deleted. For example,\n   `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.\n   If the service account is undeleted, this value reverts to\n   `serviceAccount:{emailid}` and the undeleted service account retains the\n   role in the binding.\n\n* `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a Google group that has been recently\n   deleted. For example, `admins@example.com?uid=123456789012345678901`. If\n   the group is recovered, this value reverts to `group:{emailid}` and the\n   recovered group retains the role in the binding.\n\n\n* `domain:{domain}`: The G Suite domain (primary) that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n", :items {:type "string"}, :type "array"}, :role {:description "Role that is assigned to `members`.\nFor example, `roles/viewer`, `roles/editor`, or `roles/owner`.", :type "string"}}, :type "object"}, :UpdateProjectConfigRequest {:description "Request for UpdateProjectConfig.", :properties {:projectConfig {:$ref "#/components/schemas/ProjectConfig", :description "The new configuration for the project."}, :updateMask {:description "A FieldMask specifying which fields of the project_config to modify. Only\nthe fields in the mask will be modified. If no mask is provided, this\nrequest is no-op.", :format "google-fieldmask", :type "string"}}, :type "object"}, :Empty {:description "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.", :properties {}, :type "object"}, :ListReposResponse {:description "Response for ListRepos.  The size is not set in the returned repositories.", :properties {:nextPageToken {:description "If non-empty, additional repositories exist within the project. These\ncan be retrieved by including this value in the next ListReposRequest's\npage_token field.", :type "string"}, :repos {:description "The listed repos.", :items {:$ref "#/components/schemas/Repo"}, :type "array"}}, :type "object"}, :TestIamPermissionsRequest {:description "Request message for `TestIamPermissions` method.", :properties {:permissions {:description "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).", :items {:type "string"}, :type "array"}}, :type "object"}, :UpdateRepoRequest {:description "Request for UpdateRepo.", :properties {:repo {:$ref "#/components/schemas/Repo", :description "The new configuration for the repository."}, :updateMask {:description "A FieldMask specifying which fields of the repo to modify. Only the fields\nin the mask will be modified. If no mask is provided, this request is\nno-op.", :format "google-fieldmask", :type "string"}}, :type "object"}, :TestIamPermissionsResponse {:description "Response message for `TestIamPermissions` method.", :properties {:permissions {:description "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.", :items {:type "string"}, :type "array"}}, :type "object"}, :Expr {:description "Represents a textual expression in the Common Expression Language (CEL)\nsyntax. CEL is a C-like expression language. The syntax and semantics of CEL\nare documented at https://github.com/google/cel-spec.\n\nExample (Comparison):\n\n    title: \"Summary size limit\"\n    description: \"Determines if a summary is less than 100 chars\"\n    expression: \"document.summary.size() < 100\"\n\nExample (Equality):\n\n    title: \"Requestor is owner\"\n    description: \"Determines if requestor is the document owner\"\n    expression: \"document.owner == request.auth.claims.email\"\n\nExample (Logic):\n\n    title: \"Public documents\"\n    description: \"Determine whether the document should be publicly visible\"\n    expression: \"document.type != 'private' && document.type != 'internal'\"\n\nExample (Data Manipulation):\n\n    title: \"Notification string\"\n    description: \"Create a notification string with a timestamp.\"\n    expression: \"'New message received at ' + string(document.create_time)\"\n\nThe exact variables and functions that may be referenced within an expression\nare determined by the service that evaluates it. See the service\ndocumentation for additional information.", :properties {:description {:description "Optional. Description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.", :type "string"}, :expression {:description "Textual representation of an expression in Common Expression Language\nsyntax.", :type "string"}, :location {:description "Optional. String indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.", :type "string"}, :title {:description "Optional. Title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.", :type "string"}}, :type "object"}, :Repo {:description "A repository (or repo) is a Git repository storing versioned source content.", :properties {:mirrorConfig {:$ref "#/components/schemas/MirrorConfig", :description "How this repository mirrors a repository managed by another service.\nRead-only field."}, :name {:description "Resource name of the repository, of the form\n`projects/<project>/repos/<repo>`.  The repo name may contain slashes.\neg, `projects/myproject/repos/name/with/slash`", :type "string"}, :pubsubConfigs {:additionalProperties {:$ref "#/components/schemas/PubsubConfig"}, :description "How this repository publishes a change in the repository through Cloud\nPub/Sub. Keyed by the topic names.", :type "object"}, :size {:description "The disk usage of the repo, in bytes. Read-only field. Size is only\nreturned by GetRepo.", :format "int64", :type "string"}, :url {:description "URL to clone the repository from Google Cloud Source Repositories.\nRead-only field.", :type "string"}}, :type "object"}, :Policy {:description "An Identity and Access Management (IAM) policy, which specifies access\ncontrols for Google Cloud resources.\n\n\nA `Policy` is a collection of `bindings`. A `binding` binds one or more\n`members` to a single `role`. Members can be user accounts, service accounts,\nGoogle groups, and domains (such as G Suite). A `role` is a named list of\npermissions; each `role` can be an IAM predefined role or a user-created\ncustom role.\n\nOptionally, a `binding` can specify a `condition`, which is a logical\nexpression that allows access to a resource only if the expression evaluates\nto `true`. A condition can add constraints based on attributes of the\nrequest, the resource, or both.\n\n**JSON example:**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles/resourcemanager.organizationAdmin\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles/resourcemanager.organizationViewer\",\n          \"members\": [\"user:eve@example.com\"],\n          \"condition\": {\n            \"title\": \"expirable access\",\n            \"description\": \"Does not grant access after Sep 2020\",\n            \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\",\n          }\n        }\n      ],\n      \"etag\": \"BwWWja0YfJA=\",\n      \"version\": 3\n    }\n\n**YAML example:**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-project-id@appspot.gserviceaccount.com\n      role: roles/resourcemanager.organizationAdmin\n    - members:\n      - user:eve@example.com\n      role: roles/resourcemanager.organizationViewer\n      condition:\n        title: expirable access\n        description: Does not grant access after Sep 2020\n        expression: request.time < timestamp('2020-10-01T00:00:00.000Z')\n    - etag: BwWWja0YfJA=\n    - version: 3\n\nFor a description of IAM and its features, see the\n[IAM documentation](https://cloud.google.com/iam/docs/).", :properties {:auditConfigs {:description "Specifies cloud audit logging configuration for this policy.", :items {:$ref "#/components/schemas/AuditConfig"}, :type "array"}, :bindings {:description "Associates a list of `members` to a `role`. Optionally, may specify a\n`condition` that determines how and when the `bindings` are applied. Each\nof the `bindings` must contain at least one member.", :items {:$ref "#/components/schemas/Binding"}, :type "array"}, :etag {:description "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.", :format "byte", :type "string"}, :version {:description "Specifies the format of the policy.\n\nValid values are `0`, `1`, and `3`. Requests that specify an invalid value\nare rejected.\n\nAny operation that affects conditional role bindings must specify version\n`3`. This requirement applies to the following operations:\n\n* Getting a policy that includes a conditional role binding\n* Adding a conditional role binding to a policy\n* Changing a conditional role binding in a policy\n* Removing any role binding, with or without a condition, from a policy\n  that includes conditions\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.\n\nIf a policy does not include any conditions, operations on that policy may\nspecify any valid version or leave the field unset.", :format "int32", :type "integer"}}, :type "object"}, :Status {:description "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).", :properties {:code {:description "The status code, which should be an enum value of google.rpc.Code.", :format "int32", :type "integer"}, :details {:description "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.", :items {:additionalProperties {:description "Properties of the object. Contains field @type with type URL."}, :type "object"}, :type "array"}, :message {:description "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.", :type "string"}}, :type "object"}}, :securitySchemes {:Oauth2 {:description "Oauth 2.0 implicit authentication", :flows {:implicit {:authorizationUrl "https://accounts.google.com/o/oauth2/auth", :scopes {"https://www.googleapis.com/auth/cloud-platform" "View and manage your data across Google Cloud Platform services", "https://www.googleapis.com/auth/source.full_control" "Manage your source code repositories", "https://www.googleapis.com/auth/source.read_only" "View the contents of your source code repositories", "https://www.googleapis.com/auth/source.read_write" "Manage the contents of your source code repositories"}}}, :type "oauth2"}, :Oauth2c {:description "Oauth 2.0 accessCode authentication", :flows {:authorizationCode {:authorizationUrl "https://accounts.google.com/o/oauth2/auth", :scopes {"https://www.googleapis.com/auth/cloud-platform" "View and manage your data across Google Cloud Platform services", "https://www.googleapis.com/auth/source.full_control" "Manage your source code repositories", "https://www.googleapis.com/auth/source.read_only" "View the contents of your source code repositories", "https://www.googleapis.com/auth/source.read_write" "Manage the contents of your source code repositories"}, :tokenUrl "https://accounts.google.com/o/oauth2/token"}}, :type "oauth2"}}}}}