#:compute.gcp.descriptor{:name "admin", :title "Admin Directory API", :api-version "directory_v1", :revision "20200204", :endpoint #:compute.gcp.descriptor{:url "https://www.googleapis.com/", :batch-path "batch/admin/directory_v1", :service-path "admin/directory/v1/"}, :parameters {"alt" {"type" "string", "description" "Data format for the response.", "default" "json", "enum" ["json"], "enumDescriptions" ["Responses with Content-Type of application/json"], "location" "query"}, "fields" {"type" "string", "description" "Selector specifying which fields to include in a partial response.", "location" "query"}, "key" {"type" "string", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "location" "query"}, "oauth_token" {"type" "string", "description" "OAuth 2.0 token for the current user.", "location" "query"}, "prettyPrint" {"type" "boolean", "description" "Returns response with indentations and line breaks.", "default" "true", "location" "query"}, "quotaUser" {"type" "string", "description" "An opaque string that represents a user for quota purposes. Must not exceed 40 characters.", "location" "query"}, "userIp" {"type" "string", "description" "Deprecated. Please use quotaUser instead.", "location" "query"}}, :op->info {"directory.users.photos.patch" #:compute.gcp.descriptor{:http-method :patch, :path "users/{userKey}/photos/thumbnail", :request {"$ref" "UserPhoto"}, :response {"$ref" "UserPhoto"}, :parameters {"userKey" {"type" "string", "description" "Email or immutable ID of the user", "required" true, "location" "path"}}, :description "Add a photo for the user. This method supports patch semantics."}, "directory.schemas.update" #:compute.gcp.descriptor{:http-method :put, :path "customer/{customerId}/schemas/{schemaKey}", :request {"$ref" "Schema"}, :response {"$ref" "Schema"}, :parameters {"customerId" {"type" "string", "description" "Immutable ID of the G Suite account", "required" true, "location" "path"}, "schemaKey" {"type" "string", "description" "Name or immutable ID of the schema.", "required" true, "location" "path"}}, :description "Update schema"}, "directory.resources.features.update" #:compute.gcp.descriptor{:http-method :put, :path "customer/{customer}/resources/features/{featureKey}", :request {"$ref" "Feature"}, :response {"$ref" "Feature"}, :parameters {"customer" {"type" "string", "description" "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", "required" true, "location" "path"}, "featureKey" {"type" "string", "description" "The unique ID of the feature to update.", "required" true, "location" "path"}}, :description "Updates a feature."}, "directory.orgunits.insert" #:compute.gcp.descriptor{:http-method :post, :path "customer/{customerId}/orgunits", :request {"$ref" "OrgUnit"}, :response {"$ref" "OrgUnit"}, :parameters {"customerId" {"type" "string", "description" "Immutable ID of the G Suite account", "required" true, "location" "path"}}, :description "Add organizational unit"}, "directory.users.aliases.insert" #:compute.gcp.descriptor{:http-method :post, :path "users/{userKey}/aliases", :request {"$ref" "Alias"}, :response {"$ref" "Alias"}, :parameters {"userKey" {"type" "string", "description" "Email or immutable ID of the user", "required" true, "location" "path"}}, :description "Add a alias for the user"}, "directory.chromeosdevices.moveDevicesToOu" #:compute.gcp.descriptor{:http-method :post, :path "customer/{customerId}/devices/chromeos/moveDevicesToOu", :request {"$ref" "ChromeOsMoveDevicesToOu"}, :parameters {"customerId" {"type" "string", "description" "Immutable ID of the G Suite account", "required" true, "location" "path"}, "orgUnitPath" {"type" "string", "description" "Full path of the target organizational unit or its ID", "required" true, "location" "query"}}, :description "Move or insert multiple Chrome OS Devices to organizational unit"}, "directory.roleAssignments.list" #:compute.gcp.descriptor{:http-method :get, :path "customer/{customer}/roleassignments", :response {"$ref" "RoleAssignments"}, :parameters {"customer" {"type" "string", "description" "Immutable ID of the G Suite account.", "required" true, "location" "path"}, "maxResults" {"type" "integer", "description" "Maximum number of results to return.", "format" "int32", "minimum" "1", "maximum" "200", "location" "query"}, "pageToken" {"type" "string", "description" "Token to specify the next page in the list.", "location" "query"}, "roleId" {"type" "string", "description" "Immutable ID of a role. If included in the request, returns only role assignments containing this role ID.", "location" "query"}, "userKey" {"type" "string", "description" "The user's primary email address, alias email address, or unique user ID. If included in the request, returns role assignments only for this user.", "location" "query"}}, :description "Retrieves a paginated list of all roleAssignments."}, "directory.members.get" #:compute.gcp.descriptor{:http-method :get, :path "groups/{groupKey}/members/{memberKey}", :response {"$ref" "Member"}, :parameters {"groupKey" {"type" "string", "description" "Email or immutable ID of the group", "required" true, "location" "path"}, "memberKey" {"type" "string", "description" "Email or immutable ID of the member", "required" true, "location" "path"}}, :description "Retrieve Group Member"}, "directory.verificationCodes.list" #:compute.gcp.descriptor{:http-method :get, :path "users/{userKey}/verificationCodes", :response {"$ref" "VerificationCodes"}, :parameters {"userKey" {"type" "string", "description" "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.", "required" true, "location" "path"}}, :description "Returns the current set of valid backup verification codes for the specified user."}, "directory.groups.aliases.insert" #:compute.gcp.descriptor{:http-method :post, :path "groups/{groupKey}/aliases", :request {"$ref" "Alias"}, :response {"$ref" "Alias"}, :parameters {"groupKey" {"type" "string", "description" "Email or immutable ID of the group", "required" true, "location" "path"}}, :description "Add a alias for the group"}, "directory.resources.features.rename" #:compute.gcp.descriptor{:http-method :post, :path "customer/{customer}/resources/features/{oldName}/rename", :request {"$ref" "FeatureRename"}, :parameters {"customer" {"type" "string", "description" "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", "required" true, "location" "path"}, "oldName" {"type" "string", "description" "The unique ID of the feature to rename.", "required" true, "location" "path"}}, :description "Renames a feature."}, "admin.channels.stop" #:compute.gcp.descriptor{:http-method :post, :path "/admin/directory_v1/channels/stop", :request {"$ref" "Channel", "parameterName" "resource"}, :description "Stop watching resources through this channel"}, "directory.roleAssignments.insert" #:compute.gcp.descriptor{:http-method :post, :path "customer/{customer}/roleassignments", :request {"$ref" "RoleAssignment"}, :response {"$ref" "RoleAssignment"}, :parameters {"customer" {"type" "string", "description" "Immutable ID of the G Suite account.", "required" true, "location" "path"}}, :description "Creates a role assignment."}, "directory.users.insert" #:compute.gcp.descriptor{:http-method :post, :path "users", :request {"$ref" "User"}, :response {"$ref" "User"}, :description "create user."}, "directory.domains.list" #:compute.gcp.descriptor{:http-method :get, :path "customer/{customer}/domains", :response {"$ref" "Domains2"}, :parameters {"customer" {"type" "string", "description" "Immutable ID of the G Suite account.", "required" true, "location" "path"}}, :description "Lists the domains of the customer."}, "directory.customers.get" #:compute.gcp.descriptor{:http-method :get, :path "customers/{customerKey}", :response {"$ref" "Customer"}, :parameters {"customerKey" {"type" "string", "description" "Id of the customer to be retrieved", "required" true, "location" "path"}}, :description "Retrieves a customer."}, "directory.users.makeAdmin" #:compute.gcp.descriptor{:http-method :post, :path "users/{userKey}/makeAdmin", :request {"$ref" "UserMakeAdmin"}, :parameters {"userKey" {"type" "string", "description" "Email or immutable ID of the user as admin", "required" true, "location" "path"}}, :description "change admin status of a user"}, "directory.asps.list" #:compute.gcp.descriptor{:http-method :get, :path "users/{userKey}/asps", :response {"$ref" "Asps"}, :parameters {"userKey" {"type" "string", "description" "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.", "required" true, "location" "path"}}, :description "List the ASPs issued by a user."}, "directory.users.aliases.delete" #:compute.gcp.descriptor{:http-method :delete, :path "users/{userKey}/aliases/{alias}", :parameters {"alias" {"type" "string", "description" "The alias to be removed", "required" true, "location" "path"}, "userKey" {"type" "string", "description" "Email or immutable ID of the user", "required" true, "location" "path"}}, :description "Remove a alias for the user"}, "directory.resources.calendars.update" #:compute.gcp.descriptor{:http-method :put, :path "customer/{customer}/resources/calendars/{calendarResourceId}", :request {"$ref" "CalendarResource"}, :response {"$ref" "CalendarResource"}, :parameters {"calendarResourceId" {"type" "string", "description" "The unique ID of the calendar resource to update.", "required" true, "location" "path"}, "customer" {"type" "string", "description" "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", "required" true, "location" "path"}}, :description "Updates a calendar resource.\n\nThis method supports patch semantics, meaning you only need to include the fields you wish to update. Fields that are not present in the request will be preserved."}, "directory.groups.insert" #:compute.gcp.descriptor{:http-method :post, :path "groups", :request {"$ref" "Group"}, :response {"$ref" "Group"}, :description "Create Group"}, "directory.roles.insert" #:compute.gcp.descriptor{:http-method :post, :path "customer/{customer}/roles", :request {"$ref" "Role"}, :response {"$ref" "Role"}, :parameters {"customer" {"type" "string", "description" "Immutable ID of the G Suite account.", "required" true, "location" "path"}}, :description "Creates a role."}, "directory.resources.buildings.list" #:compute.gcp.descriptor{:http-method :get, :path "customer/{customer}/resources/buildings", :response {"$ref" "Buildings"}, :parameters {"customer" {"type" "string", "description" "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", "required" true, "location" "path"}, "maxResults" {"type" "integer", "description" "Maximum number of results to return.", "format" "int32", "minimum" "1", "maximum" "500", "location" "query"}, "pageToken" {"type" "string", "description" "Token to specify the next page in the list.", "location" "query"}}, :description "Retrieves a list of buildings for an account."}, "directory.resources.features.insert" #:compute.gcp.descriptor{:http-method :post, :path "customer/{customer}/resources/features", :request {"$ref" "Feature"}, :response {"$ref" "Feature"}, :parameters {"customer" {"type" "string", "description" "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", "required" true, "location" "path"}}, :description "Inserts a feature."}, "directory.resources.buildings.patch" #:compute.gcp.descriptor{:http-method :patch, :path "customer/{customer}/resources/buildings/{buildingId}", :request {"$ref" "Building"}, :response {"$ref" "Building"}, :parameters {"buildingId" {"type" "string", "description" "The ID of the building to update.", "required" true, "location" "path"}, "coordinatesSource" {"type" "string", "description" "Source from which Building.coordinates are derived.", "default" "SOURCE_UNSPECIFIED", "enum" ["CLIENT_SPECIFIED" "RESOLVED_FROM_ADDRESS" "SOURCE_UNSPECIFIED"], "enumDescriptions" ["Building.coordinates are set to the coordinates included in the request." "Building.coordinates are automatically populated based on the postal address." "Defaults to RESOLVED_FROM_ADDRESS if postal address is provided. Otherwise, defaults to CLIENT_SPECIFIED if coordinates are provided."], "location" "query"}, "customer" {"type" "string", "description" "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", "required" true, "location" "path"}}, :description "Updates a building. This method supports patch semantics."}, "directory.privileges.list" #:compute.gcp.descriptor{:http-method :get, :path "customer/{customer}/roles/ALL/privileges", :response {"$ref" "Privileges"}, :parameters {"customer" {"type" "string", "description" "Immutable ID of the G Suite account.", "required" true, "location" "path"}}, :description "Retrieves a paginated list of all privileges for a customer."}, "directory.users.watch" #:compute.gcp.descriptor{:http-method :post, :path "users/watch", :request {"$ref" "Channel", "parameterName" "resource"}, :response {"$ref" "Channel"}, :parameters {"pageToken" {"type" "string", "description" "Token to specify next page in the list", "location" "query"}, "query" {"type" "string", "description" "Query string search. Should be of the form \"\". Complete documentation is at https://developers.google.com/admin-sdk/directory/v1/guides/search-users", "location" "query"}, "customFieldMask" {"type" "string", "description" "Comma-separated list of schema names. All fields from these schemas are fetched. This should only be set when projection=custom.", "location" "query"}, "event" {"type" "string", "description" "Event on which subscription is intended (if subscribing)", "enum" ["add" "delete" "makeAdmin" "undelete" "update"], "enumDescriptions" ["User Created Event" "User Deleted Event" "User Admin Status Change Event" "User Undeleted Event" "User Updated Event"], "location" "query"}, "maxResults" {"type" "integer", "description" "Maximum number of results to return.", "default" "100", "format" "int32", "minimum" "1", "maximum" "500", "location" "query"}, "orderBy" {"type" "string", "description" "Column to use for sorting results", "enum" ["email" "familyName" "givenName"], "enumDescriptions" ["Primary email of the user." "User's family name." "User's given name."], "location" "query"}, "domain" {"type" "string", "description" "Name of the domain. Fill this field to get users from only this domain. To return all users in a multi-domain fill customer field instead.", "location" "query"}, "showDeleted" {"type" "string", "description" "If set to true, retrieves the list of deleted users. (Default: false)", "location" "query"}, "projection" {"type" "string", "description" "What subset of fields to fetch for this user.", "default" "basic", "enum" ["basic" "custom" "full"], "enumDescriptions" ["Do not include any custom fields for the user." "Include custom fields from schemas mentioned in customFieldMask." "Include all fields associated with this user."], "location" "query"}, "viewType" {"type" "string", "description" "Whether to fetch the ADMIN_VIEW or DOMAIN_PUBLIC view of the user.", "default" "admin_view", "enum" ["admin_view" "domain_public"], "enumDescriptions" ["Fetches the ADMIN_VIEW of the user." "Fetches the DOMAIN_PUBLIC view of the user."], "location" "query"}, "sortOrder" {"type" "string", "description" "Whether to return results in ascending or descending order.", "enum" ["ASCENDING" "DESCENDING"], "enumDescriptions" ["Ascending order." "Descending order."], "location" "query"}, "customer" {"type" "string", "description" "Immutable ID of the G Suite account. In case of multi-domain, to fetch all users for a customer, fill this field instead of domain.", "location" "query"}}, :description "Watch for changes in users list"}, "directory.schemas.get" #:compute.gcp.descriptor{:http-method :get, :path "customer/{customerId}/schemas/{schemaKey}", :response {"$ref" "Schema"}, :parameters {"customerId" {"type" "string", "description" "Immutable ID of the G Suite account", "required" true, "location" "path"}, "schemaKey" {"type" "string", "description" "Name or immutable ID of the schema", "required" true, "location" "path"}}, :description "Retrieve schema"}, "directory.chromeosdevices.get" #:compute.gcp.descriptor{:http-method :get, :path "customer/{customerId}/devices/chromeos/{deviceId}", :response {"$ref" "ChromeOsDevice"}, :parameters {"customerId" {"type" "string", "description" "Immutable ID of the G Suite account", "required" true, "location" "path"}, "deviceId" {"type" "string", "description" "Immutable ID of Chrome OS Device", "required" true, "location" "path"}, "projection" {"type" "string", "description" "Restrict information returned to a set of selected fields.", "enum" ["BASIC" "FULL"], "enumDescriptions" ["Includes only the basic metadata fields (e.g., deviceId, serialNumber, status, and user)" "Includes all metadata fields"], "location" "query"}}, :description "Retrieve Chrome OS Device"}, "directory.users.delete" #:compute.gcp.descriptor{:http-method :delete, :path "users/{userKey}", :parameters {"userKey" {"type" "string", "description" "Email or immutable ID of the user", "required" true, "location" "path"}}, :description "Delete user"}, "directory.chromeosdevices.update" #:compute.gcp.descriptor{:http-method :put, :path "customer/{customerId}/devices/chromeos/{deviceId}", :request {"$ref" "ChromeOsDevice"}, :response {"$ref" "ChromeOsDevice"}, :parameters {"customerId" {"type" "string", "description" "Immutable ID of the G Suite account", "required" true, "location" "path"}, "deviceId" {"type" "string", "description" "Immutable ID of Chrome OS Device", "required" true, "location" "path"}, "projection" {"type" "string", "description" "Restrict information returned to a set of selected fields.", "enum" ["BASIC" "FULL"], "enumDescriptions" ["Includes only the basic metadata fields (e.g., deviceId, serialNumber, status, and user)" "Includes all metadata fields"], "location" "query"}}, :description "Update Chrome OS Device"}, "directory.groups.aliases.delete" #:compute.gcp.descriptor{:http-method :delete, :path "groups/{groupKey}/aliases/{alias}", :parameters {"alias" {"type" "string", "description" "The alias to be removed", "required" true, "location" "path"}, "groupKey" {"type" "string", "description" "Email or immutable ID of the group", "required" true, "location" "path"}}, :description "Remove a alias for the group"}, "directory.resources.features.list" #:compute.gcp.descriptor{:http-method :get, :path "customer/{customer}/resources/features", :response {"$ref" "Features"}, :parameters {"customer" {"type" "string", "description" "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", "required" true, "location" "path"}, "maxResults" {"type" "integer", "description" "Maximum number of results to return.", "format" "int32", "minimum" "1", "maximum" "500", "location" "query"}, "pageToken" {"type" "string", "description" "Token to specify the next page in the list.", "location" "query"}}, :description "Retrieves a list of features for an account."}, "directory.domains.delete" #:compute.gcp.descriptor{:http-method :delete, :path "customer/{customer}/domains/{domainName}", :parameters {"customer" {"type" "string", "description" "Immutable ID of the G Suite account.", "required" true, "location" "path"}, "domainName" {"type" "string", "description" "Name of domain to be deleted", "required" true, "location" "path"}}, :description "Deletes a domain of the customer."}, "directory.members.delete" #:compute.gcp.descriptor{:http-method :delete, :path "groups/{groupKey}/members/{memberKey}", :parameters {"groupKey" {"type" "string", "description" "Email or immutable ID of the group", "required" true, "location" "path"}, "memberKey" {"type" "string", "description" "Email or immutable ID of the member", "required" true, "location" "path"}}, :description "Remove membership."}, "directory.groups.patch" #:compute.gcp.descriptor{:http-method :patch, :path "groups/{groupKey}", :request {"$ref" "Group"}, :response {"$ref" "Group"}, :parameters {"groupKey" {"type" "string", "description" "Email or immutable ID of the group. If ID, it should match with id of group object", "required" true, "location" "path"}}, :description "Update Group. This method supports patch semantics."}, "directory.notifications.update" #:compute.gcp.descriptor{:http-method :put, :path "customer/{customer}/notifications/{notificationId}", :request {"$ref" "Notification"}, :response {"$ref" "Notification"}, :parameters {"customer" {"type" "string", "description" "The unique ID for the customer's G Suite account.", "required" true, "location" "path"}, "notificationId" {"type" "string", "description" "The unique ID of the notification.", "required" true, "location" "path"}}, :description "Updates a notification."}, "directory.members.patch" #:compute.gcp.descriptor{:http-method :patch, :path "groups/{groupKey}/members/{memberKey}", :request {"$ref" "Member"}, :response {"$ref" "Member"}, :parameters {"groupKey" {"type" "string", "description" "Email or immutable ID of the group. If ID, it should match with id of group object", "required" true, "location" "path"}, "memberKey" {"type" "string", "description" "Email or immutable ID of the user. If ID, it should match with id of member object", "required" true, "location" "path"}}, :description "Update membership of a user in the specified group. This method supports patch semantics."}, "directory.roleAssignments.get" #:compute.gcp.descriptor{:http-method :get, :path "customer/{customer}/roleassignments/{roleAssignmentId}", :response {"$ref" "RoleAssignment"}, :parameters {"customer" {"type" "string", "description" "Immutable ID of the G Suite account.", "required" true, "location" "path"}, "roleAssignmentId" {"type" "string", "description" "Immutable ID of the role assignment.", "required" true, "location" "path"}}, :description "Retrieve a role assignment."}, "directory.roles.patch" #:compute.gcp.descriptor{:http-method :patch, :path "customer/{customer}/roles/{roleId}", :request {"$ref" "Role"}, :response {"$ref" "Role"}, :parameters {"customer" {"type" "string", "description" "Immutable ID of the G Suite account.", "required" true, "location" "path"}, "roleId" {"type" "string", "description" "Immutable ID of the role.", "required" true, "location" "path"}}, :description "Updates a role. This method supports patch semantics."}, "directory.users.photos.delete" #:compute.gcp.descriptor{:http-method :delete, :path "users/{userKey}/photos/thumbnail", :parameters {"userKey" {"type" "string", "description" "Email or immutable ID of the user", "required" true, "location" "path"}}, :description "Remove photos for the user"}, "directory.resources.calendars.list" #:compute.gcp.descriptor{:http-method :get, :path "customer/{customer}/resources/calendars", :response {"$ref" "CalendarResources"}, :parameters {"customer" {"type" "string", "description" "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", "required" true, "location" "path"}, "maxResults" {"type" "integer", "description" "Maximum number of results to return.", "format" "int32", "minimum" "1", "maximum" "500", "location" "query"}, "orderBy" {"type" "string", "description" "Field(s) to sort results by in either ascending or descending order. Supported fields include resourceId, resourceName, capacity, buildingId, and floorName. If no order is specified, defaults to ascending. Should be of the form \"field [asc|desc], field [asc|desc], ...\". For example buildingId, capacity desc would return results sorted first by buildingId in ascending order then by capacity in descending order.", "location" "query"}, "pageToken" {"type" "string", "description" "Token to specify the next page in the list.", "location" "query"}, "query" {"type" "string", "description" "String query used to filter results. Should be of the form \"field operator value\" where field can be any of supported fields and operators can be any of supported operations. Operators include '=' for exact match and ':' for prefix match or HAS match where applicable. For prefix match, the value should always be followed by a *. Supported fields include generatedResourceName, name, buildingId, featureInstances.feature.name. For example buildingId=US-NYC-9TH AND featureInstances.feature.name:Phone.", "location" "query"}}, :description "Retrieves a list of calendar resources for an account."}, "directory.resources.calendars.get" #:compute.gcp.descriptor{:http-method :get, :path "customer/{customer}/resources/calendars/{calendarResourceId}", :response {"$ref" "CalendarResource"}, :parameters {"calendarResourceId" {"type" "string", "description" "The unique ID of the calendar resource to retrieve.", "required" true, "location" "path"}, "customer" {"type" "string", "description" "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", "required" true, "location" "path"}}, :description "Retrieves a calendar resource."}, "directory.resources.features.delete" #:compute.gcp.descriptor{:http-method :delete, :path "customer/{customer}/resources/features/{featureKey}", :parameters {"customer" {"type" "string", "description" "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", "required" true, "location" "path"}, "featureKey" {"type" "string", "description" "The unique ID of the feature to delete.", "required" true, "location" "path"}}, :description "Deletes a feature."}, "directory.mobiledevices.delete" #:compute.gcp.descriptor{:http-method :delete, :path "customer/{customerId}/devices/mobile/{resourceId}", :parameters {"customerId" {"type" "string", "description" "Immutable ID of the G Suite account", "required" true, "location" "path"}, "resourceId" {"type" "string", "description" "Immutable ID of Mobile Device", "required" true, "location" "path"}}, :description "Delete Mobile Device"}, "directory.domainAliases.list" #:compute.gcp.descriptor{:http-method :get, :path "customer/{customer}/domainaliases", :response {"$ref" "DomainAliases"}, :parameters {"customer" {"type" "string", "description" "Immutable ID of the G Suite account.", "required" true, "location" "path"}, "parentDomainName" {"type" "string", "description" "Name of the parent domain for which domain aliases are to be fetched.", "location" "query"}}, :description "Lists the domain aliases of the customer."}, "directory.groups.list" #:compute.gcp.descriptor{:http-method :get, :path "groups", :response {"$ref" "Groups"}, :parameters {"customer" {"type" "string", "description" "Immutable ID of the G Suite account. In case of multi-domain, to fetch all groups for a customer, fill this field instead of domain.", "location" "query"}, "domain" {"type" "string", "description" "Name of the domain. Fill this field to get groups from only this domain. To return all groups in a multi-domain fill customer field instead.", "location" "query"}, "maxResults" {"type" "integer", "description" "Maximum number of results to return. Max allowed value is 200.", "default" "200", "format" "int32", "minimum" "1", "location" "query"}, "orderBy" {"type" "string", "description" "Column to use for sorting results", "enum" ["email"], "enumDescriptions" ["Email of the group."], "location" "query"}, "pageToken" {"type" "string", "description" "Token to specify next page in the list", "location" "query"}, "query" {"type" "string", "description" "Query string search. Should be of the form \"\". Complete documentation is at https://developers.google.com/admin-sdk/directory/v1/guides/search-groups", "location" "query"}, "sortOrder" {"type" "string", "description" "Whether to return results in ascending or descending order. Only of use when orderBy is also used", "enum" ["ASCENDING" "DESCENDING"], "enumDescriptions" ["Ascending order." "Descending order."], "location" "query"}, "userKey" {"type" "string", "description" "Email or immutable ID of the user if only those groups are to be listed, the given user is a member of. If it's an ID, it should match with the ID of the user object.", "location" "query"}}, :description "Retrieve all groups of a domain or of a user given a userKey (paginated)"}, "directory.users.list" #:compute.gcp.descriptor{:http-method :get, :path "users", :response {"$ref" "Users"}, :parameters {"pageToken" {"type" "string", "description" "Token to specify next page in the list", "location" "query"}, "query" {"type" "string", "description" "Query string search. Should be of the form \"\". Complete documentation is at https://developers.google.com/admin-sdk/directory/v1/guides/search-users", "location" "query"}, "customFieldMask" {"type" "string", "description" "Comma-separated list of schema names. All fields from these schemas are fetched. This should only be set when projection=custom.", "location" "query"}, "event" {"type" "string", "description" "Event on which subscription is intended (if subscribing)", "enum" ["add" "delete" "makeAdmin" "undelete" "update"], "enumDescriptions" ["User Created Event" "User Deleted Event" "User Admin Status Change Event" "User Undeleted Event" "User Updated Event"], "location" "query"}, "maxResults" {"type" "integer", "description" "Maximum number of results to return.", "default" "100", "format" "int32", "minimum" "1", "maximum" "500", "location" "query"}, "orderBy" {"type" "string", "description" "Column to use for sorting results", "enum" ["email" "familyName" "givenName"], "enumDescriptions" ["Primary email of the user." "User's family name." "User's given name."], "location" "query"}, "domain" {"type" "string", "description" "Name of the domain. Fill this field to get users from only this domain. To return all users in a multi-domain fill customer field instead.", "location" "query"}, "showDeleted" {"type" "string", "description" "If set to true, retrieves the list of deleted users. (Default: false)", "location" "query"}, "projection" {"type" "string", "description" "What subset of fields to fetch for this user.", "default" "basic", "enum" ["basic" "custom" "full"], "enumDescriptions" ["Do not include any custom fields for the user." "Include custom fields from schemas mentioned in customFieldMask." "Include all fields associated with this user."], "location" "query"}, "viewType" {"type" "string", "description" "Whether to fetch the ADMIN_VIEW or DOMAIN_PUBLIC view of the user.", "default" "admin_view", "enum" ["admin_view" "domain_public"], "enumDescriptions" ["Fetches the ADMIN_VIEW of the user." "Fetches the DOMAIN_PUBLIC view of the user."], "location" "query"}, "sortOrder" {"type" "string", "description" "Whether to return results in ascending or descending order.", "enum" ["ASCENDING" "DESCENDING"], "enumDescriptions" ["Ascending order." "Descending order."], "location" "query"}, "customer" {"type" "string", "description" "Immutable ID of the G Suite account. In case of multi-domain, to fetch all users for a customer, fill this field instead of domain.", "location" "query"}}, :description "Retrieve either deleted users or all users in a domain (paginated)"}, "directory.resources.buildings.get" #:compute.gcp.descriptor{:http-method :get, :path "customer/{customer}/resources/buildings/{buildingId}", :response {"$ref" "Building"}, :parameters {"buildingId" {"type" "string", "description" "The unique ID of the building to retrieve.", "required" true, "location" "path"}, "customer" {"type" "string", "description" "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", "required" true, "location" "path"}}, :description "Retrieves a building."}, "directory.users.patch" #:compute.gcp.descriptor{:http-method :patch, :path "users/{userKey}", :request {"$ref" "User"}, :response {"$ref" "User"}, :parameters {"userKey" {"type" "string", "description" "Email or immutable ID of the user. If ID, it should match with id of user object", "required" true, "location" "path"}}, :description "update user. This method supports patch semantics."}, "directory.tokens.get" #:compute.gcp.descriptor{:http-method :get, :path "users/{userKey}/tokens/{clientId}", :response {"$ref" "Token"}, :parameters {"clientId" {"type" "string", "description" "The Client ID of the application the token is issued to.", "required" true, "location" "path"}, "userKey" {"type" "string", "description" "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.", "required" true, "location" "path"}}, :description "Get information about an access token issued by a user."}, "directory.verificationCodes.generate" #:compute.gcp.descriptor{:http-method :post, :path "users/{userKey}/verificationCodes/generate", :parameters {"userKey" {"type" "string", "description" "Email or immutable ID of the user", "required" true, "location" "path"}}, :description "Generate new backup verification codes for the user."}, "directory.groups.update" #:compute.gcp.descriptor{:http-method :put, :path "groups/{groupKey}", :request {"$ref" "Group"}, :response {"$ref" "Group"}, :parameters {"groupKey" {"type" "string", "description" "Email or immutable ID of the group. If ID, it should match with id of group object", "required" true, "location" "path"}}, :description "Update Group"}, "directory.schemas.list" #:compute.gcp.descriptor{:http-method :get, :path "customer/{customerId}/schemas", :response {"$ref" "Schemas"}, :parameters {"customerId" {"type" "string", "description" "Immutable ID of the G Suite account", "required" true, "location" "path"}}, :description "Retrieve all schemas for a customer"}, "directory.customers.patch" #:compute.gcp.descriptor{:http-method :patch, :path "customers/{customerKey}", :request {"$ref" "Customer"}, :response {"$ref" "Customer"}, :parameters {"customerKey" {"type" "string", "description" "Id of the customer to be updated", "required" true, "location" "path"}}, :description "Updates a customer. This method supports patch semantics."}, "directory.users.get" #:compute.gcp.descriptor{:http-method :get, :path "users/{userKey}", :response {"$ref" "User"}, :parameters {"customFieldMask" {"type" "string", "description" "Comma-separated list of schema names. All fields from these schemas are fetched. This should only be set when projection=custom.", "location" "query"}, "projection" {"type" "string", "description" "What subset of fields to fetch for this user.", "default" "basic", "enum" ["basic" "custom" "full"], "enumDescriptions" ["Do not include any custom fields for the user." "Include custom fields from schemas mentioned in customFieldMask." "Include all fields associated with this user."], "location" "query"}, "userKey" {"type" "string", "description" "Email or immutable ID of the user", "required" true, "location" "path"}, "viewType" {"type" "string", "description" "Whether to fetch the ADMIN_VIEW or DOMAIN_PUBLIC view of the user.", "default" "admin_view", "enum" ["admin_view" "domain_public"], "enumDescriptions" ["Fetches the ADMIN_VIEW of the user." "Fetches the DOMAIN_PUBLIC view of the user."], "location" "query"}}, :description "retrieve user"}, "directory.domainAliases.insert" #:compute.gcp.descriptor{:http-method :post, :path "customer/{customer}/domainaliases", :request {"$ref" "DomainAlias"}, :response {"$ref" "DomainAlias"}, :parameters {"customer" {"type" "string", "description" "Immutable ID of the G Suite account.", "required" true, "location" "path"}}, :description "Inserts a Domain alias of the customer."}, "directory.mobiledevices.get" #:compute.gcp.descriptor{:http-method :get, :path "customer/{customerId}/devices/mobile/{resourceId}", :response {"$ref" "MobileDevice"}, :parameters {"customerId" {"type" "string", "description" "Immutable ID of the G Suite account", "required" true, "location" "path"}, "projection" {"type" "string", "description" "Restrict information returned to a set of selected fields.", "enum" ["BASIC" "FULL"], "enumDescriptions" ["Includes only the basic metadata fields (e.g., deviceId, model, status, type, and status)" "Includes all metadata fields"], "location" "query"}, "resourceId" {"type" "string", "description" "Immutable ID of Mobile Device", "required" true, "location" "path"}}, :description "Retrieve Mobile Device"}, "directory.groups.get" #:compute.gcp.descriptor{:http-method :get, :path "groups/{groupKey}", :response {"$ref" "Group"}, :parameters {"groupKey" {"type" "string", "description" "Email or immutable ID of the group", "required" true, "location" "path"}}, :description "Retrieve Group"}, "directory.members.insert" #:compute.gcp.descriptor{:http-method :post, :path "groups/{groupKey}/members", :request {"$ref" "Member"}, :response {"$ref" "Member"}, :parameters {"groupKey" {"type" "string", "description" "Email or immutable ID of the group", "required" true, "location" "path"}}, :description "Add user to the specified group."}, "directory.schemas.insert" #:compute.gcp.descriptor{:http-method :post, :path "customer/{customerId}/schemas", :request {"$ref" "Schema"}, :response {"$ref" "Schema"}, :parameters {"customerId" {"type" "string", "description" "Immutable ID of the G Suite account", "required" true, "location" "path"}}, :description "Create schema."}, "directory.roles.list" #:compute.gcp.descriptor{:http-method :get, :path "customer/{customer}/roles", :response {"$ref" "Roles"}, :parameters {"customer" {"type" "string", "description" "Immutable ID of the G Suite account.", "required" true, "location" "path"}, "maxResults" {"type" "integer", "description" "Maximum number of results to return.", "format" "int32", "minimum" "1", "maximum" "100", "location" "query"}, "pageToken" {"type" "string", "description" "Token to specify the next page in the list.", "location" "query"}}, :description "Retrieves a paginated list of all the roles in a domain."}, "directory.users.photos.get" #:compute.gcp.descriptor{:http-method :get, :path "users/{userKey}/photos/thumbnail", :response {"$ref" "UserPhoto"}, :parameters {"userKey" {"type" "string", "description" "Email or immutable ID of the user", "required" true, "location" "path"}}, :description "Retrieve photo of a user"}, "directory.notifications.delete" #:compute.gcp.descriptor{:http-method :delete, :path "customer/{customer}/notifications/{notificationId}", :parameters {"customer" {"type" "string", "description" "The unique ID for the customer's G Suite account. The customerId is also returned as part of the Users resource.", "required" true, "location" "path"}, "notificationId" {"type" "string", "description" "The unique ID of the notification.", "required" true, "location" "path"}}, :description "Deletes a notification"}, "directory.orgunits.list" #:compute.gcp.descriptor{:http-method :get, :path "customer/{customerId}/orgunits", :response {"$ref" "OrgUnits"}, :parameters {"customerId" {"type" "string", "description" "Immutable ID of the G Suite account", "required" true, "location" "path"}, "orgUnitPath" {"type" "string", "description" "the URL-encoded organizational unit's path or its ID", "default" "", "location" "query"}, "type" {"type" "string", "description" "Whether to return all sub-organizations or just immediate children", "enum" ["all" "children"], "enumDescriptions" ["All sub-organizational units." "Immediate children only (default)."], "location" "query"}}, :description "Retrieve all organizational units"}, "directory.orgunits.update" #:compute.gcp.descriptor{:http-method :put, :path "customer/{customerId}/orgunits{/orgUnitPath*}", :request {"$ref" "OrgUnit"}, :response {"$ref" "OrgUnit"}, :parameters {"customerId" {"type" "string", "description" "Immutable ID of the G Suite account", "required" true, "location" "path"}, "orgUnitPath" {"type" "string", "description" "Full path of the organizational unit or its ID", "required" true, "repeated" true, "location" "path"}}, :description "Update organizational unit"}, "directory.members.hasMember" #:compute.gcp.descriptor{:http-method :get, :path "groups/{groupKey}/hasMember/{memberKey}", :response {"$ref" "MembersHasMember"}, :parameters {"groupKey" {"type" "string", "description" "Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group ID.", "required" true, "location" "path"}, "memberKey" {"type" "string", "description" "Identifies the user member in the API request. The value can be the user's primary email address, alias, or unique ID.", "required" true, "location" "path"}}, :description "Checks whether the given user is a member of the group. Membership can be direct or nested."}, "directory.asps.get" #:compute.gcp.descriptor{:http-method :get, :path "users/{userKey}/asps/{codeId}", :response {"$ref" "Asp"}, :parameters {"codeId" {"type" "integer", "description" "The unique ID of the ASP.", "required" true, "format" "int32", "location" "path"}, "userKey" {"type" "string", "description" "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.", "required" true, "location" "path"}}, :description "Get information about an ASP issued by a user."}, "directory.asps.delete" #:compute.gcp.descriptor{:http-method :delete, :path "users/{userKey}/asps/{codeId}", :parameters {"codeId" {"type" "integer", "description" "The unique ID of the ASP to be deleted.", "required" true, "format" "int32", "location" "path"}, "userKey" {"type" "string", "description" "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.", "required" true, "location" "path"}}, :description "Delete an ASP issued by a user."}, "directory.resources.calendars.delete" #:compute.gcp.descriptor{:http-method :delete, :path "customer/{customer}/resources/calendars/{calendarResourceId}", :parameters {"calendarResourceId" {"type" "string", "description" "The unique ID of the calendar resource to delete.", "required" true, "location" "path"}, "customer" {"type" "string", "description" "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", "required" true, "location" "path"}}, :description "Deletes a calendar resource."}, "directory.chromeosdevices.list" #:compute.gcp.descriptor{:http-method :get, :path "customer/{customerId}/devices/chromeos", :response {"$ref" "ChromeOsDevices"}, :parameters {"customerId" {"type" "string", "description" "Immutable ID of the G Suite account", "required" true, "location" "path"}, "maxResults" {"type" "integer", "description" "Maximum number of results to return. Max allowed value is 200.", "default" "100", "format" "int32", "minimum" "1", "location" "query"}, "orderBy" {"type" "string", "description" "Column to use for sorting results", "enum" ["annotatedLocation" "annotatedUser" "lastSync" "notes" "serialNumber" "status" "supportEndDate"], "enumDescriptions" ["Chromebook location as annotated by the administrator." "Chromebook user as annotated by administrator." "Chromebook last sync." "Chromebook notes as annotated by the administrator." "Chromebook Serial Number." "Chromebook status." "Chromebook support end date."], "location" "query"}, "orgUnitPath" {"type" "string", "description" "Full path of the organizational unit or its ID", "location" "query"}, "pageToken" {"type" "string", "description" "Token to specify next page in the list", "location" "query"}, "projection" {"type" "string", "description" "Restrict information returned to a set of selected fields.", "enum" ["BASIC" "FULL"], "enumDescriptions" ["Includes only the basic metadata fields (e.g., deviceId, serialNumber, status, and user)" "Includes all metadata fields"], "location" "query"}, "query" {"type" "string", "description" "Search string in the format given at http://support.google.com/chromeos/a/bin/answer.py?answer=1698333", "location" "query"}, "sortOrder" {"type" "string", "description" "Whether to return results in ascending or descending order. Only of use when orderBy is also used", "enum" ["ASCENDING" "DESCENDING"], "enumDescriptions" ["Ascending order." "Descending order."], "location" "query"}}, :description "Retrieve all Chrome OS Devices of a customer (paginated)"}, "directory.resources.calendars.insert" #:compute.gcp.descriptor{:http-method :post, :path "customer/{customer}/resources/calendars", :request {"$ref" "CalendarResource"}, :response {"$ref" "CalendarResource"}, :parameters {"customer" {"type" "string", "description" "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", "required" true, "location" "path"}}, :description "Inserts a calendar resource."}, "directory.chromeosdevices.patch" #:compute.gcp.descriptor{:http-method :patch, :path "customer/{customerId}/devices/chromeos/{deviceId}", :request {"$ref" "ChromeOsDevice"}, :response {"$ref" "ChromeOsDevice"}, :parameters {"customerId" {"type" "string", "description" "Immutable ID of the G Suite account", "required" true, "location" "path"}, "deviceId" {"type" "string", "description" "Immutable ID of Chrome OS Device", "required" true, "location" "path"}, "projection" {"type" "string", "description" "Restrict information returned to a set of selected fields.", "enum" ["BASIC" "FULL"], "enumDescriptions" ["Includes only the basic metadata fields (e.g., deviceId, serialNumber, status, and user)" "Includes all metadata fields"], "location" "query"}}, :description "Update Chrome OS Device. This method supports patch semantics."}, "directory.groups.delete" #:compute.gcp.descriptor{:http-method :delete, :path "groups/{groupKey}", :parameters {"groupKey" {"type" "string", "description" "Email or immutable ID of the group", "required" true, "location" "path"}}, :description "Delete Group"}, "directory.notifications.get" #:compute.gcp.descriptor{:http-method :get, :path "customer/{customer}/notifications/{notificationId}", :response {"$ref" "Notification"}, :parameters {"customer" {"type" "string", "description" "The unique ID for the customer's G Suite account. The customerId is also returned as part of the Users resource.", "required" true, "location" "path"}, "notificationId" {"type" "string", "description" "The unique ID of the notification.", "required" true, "location" "path"}}, :description "Retrieves a notification."}, "directory.notifications.patch" #:compute.gcp.descriptor{:http-method :patch, :path "customer/{customer}/notifications/{notificationId}", :request {"$ref" "Notification"}, :response {"$ref" "Notification"}, :parameters {"customer" {"type" "string", "description" "The unique ID for the customer's G Suite account.", "required" true, "location" "path"}, "notificationId" {"type" "string", "description" "The unique ID of the notification.", "required" true, "location" "path"}}, :description "Updates a notification. This method supports patch semantics."}, "directory.tokens.delete" #:compute.gcp.descriptor{:http-method :delete, :path "users/{userKey}/tokens/{clientId}", :parameters {"clientId" {"type" "string", "description" "The Client ID of the application the token is issued to.", "required" true, "location" "path"}, "userKey" {"type" "string", "description" "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.", "required" true, "location" "path"}}, :description "Delete all access tokens issued by a user for an application."}, "directory.orgunits.get" #:compute.gcp.descriptor{:http-method :get, :path "customer/{customerId}/orgunits{/orgUnitPath*}", :response {"$ref" "OrgUnit"}, :parameters {"customerId" {"type" "string", "description" "Immutable ID of the G Suite account", "required" true, "location" "path"}, "orgUnitPath" {"type" "string", "description" "Full path of the organizational unit or its ID", "required" true, "repeated" true, "location" "path"}}, :description "Retrieve organizational unit"}, "directory.members.list" #:compute.gcp.descriptor{:http-method :get, :path "groups/{groupKey}/members", :response {"$ref" "Members"}, :parameters {"groupKey" {"type" "string", "description" "Email or immutable ID of the group", "required" true, "location" "path"}, "includeDerivedMembership" {"type" "boolean", "description" "Whether to list indirect memberships. Default: false.", "location" "query"}, "maxResults" {"type" "integer", "description" "Maximum number of results to return. Max allowed value is 200.", "default" "200", "format" "int32", "minimum" "1", "location" "query"}, "pageToken" {"type" "string", "description" "Token to specify next page in the list", "location" "query"}, "roles" {"type" "string", "description" "Comma separated role values to filter list results on.", "location" "query"}}, :description "Retrieve all members in a group (paginated)"}, "directory.schemas.delete" #:compute.gcp.descriptor{:http-method :delete, :path "customer/{customerId}/schemas/{schemaKey}", :parameters {"customerId" {"type" "string", "description" "Immutable ID of the G Suite account", "required" true, "location" "path"}, "schemaKey" {"type" "string", "description" "Name or immutable ID of the schema", "required" true, "location" "path"}}, :description "Delete schema"}, "directory.roles.update" #:compute.gcp.descriptor{:http-method :put, :path "customer/{customer}/roles/{roleId}", :request {"$ref" "Role"}, :response {"$ref" "Role"}, :parameters {"customer" {"type" "string", "description" "Immutable ID of the G Suite account.", "required" true, "location" "path"}, "roleId" {"type" "string", "description" "Immutable ID of the role.", "required" true, "location" "path"}}, :description "Updates a role."}, "directory.users.aliases.watch" #:compute.gcp.descriptor{:http-method :post, :path "users/{userKey}/aliases/watch", :request {"$ref" "Channel", "parameterName" "resource"}, :response {"$ref" "Channel"}, :parameters {"event" {"type" "string", "description" "Event on which subscription is intended (if subscribing)", "enum" ["add" "delete"], "enumDescriptions" ["Alias Created Event" "Alias Deleted Event"], "location" "query"}, "userKey" {"type" "string", "description" "Email or immutable ID of the user", "required" true, "location" "path"}}, :description "Watch for changes in user aliases list"}, "directory.users.aliases.list" #:compute.gcp.descriptor{:http-method :get, :path "users/{userKey}/aliases", :response {"$ref" "Aliases"}, :parameters {"event" {"type" "string", "description" "Event on which subscription is intended (if subscribing)", "enum" ["add" "delete"], "enumDescriptions" ["Alias Created Event" "Alias Deleted Event"], "location" "query"}, "userKey" {"type" "string", "description" "Email or immutable ID of the user", "required" true, "location" "path"}}, :description "List all aliases for a user"}, "directory.groups.aliases.list" #:compute.gcp.descriptor{:http-method :get, :path "groups/{groupKey}/aliases", :response {"$ref" "Aliases"}, :parameters {"groupKey" {"type" "string", "description" "Email or immutable ID of the group", "required" true, "location" "path"}}, :description "List all aliases for a group"}, "directory.resources.buildings.insert" #:compute.gcp.descriptor{:http-method :post, :path "customer/{customer}/resources/buildings", :request {"$ref" "Building"}, :response {"$ref" "Building"}, :parameters {"coordinatesSource" {"type" "string", "description" "Source from which Building.coordinates are derived.", "default" "SOURCE_UNSPECIFIED", "enum" ["CLIENT_SPECIFIED" "RESOLVED_FROM_ADDRESS" "SOURCE_UNSPECIFIED"], "enumDescriptions" ["Building.coordinates are set to the coordinates included in the request." "Building.coordinates are automatically populated based on the postal address." "Defaults to RESOLVED_FROM_ADDRESS if postal address is provided. Otherwise, defaults to CLIENT_SPECIFIED if coordinates are provided."], "location" "query"}, "customer" {"type" "string", "description" "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", "required" true, "location" "path"}}, :description "Inserts a building."}, "directory.verificationCodes.invalidate" #:compute.gcp.descriptor{:http-method :post, :path "users/{userKey}/verificationCodes/invalidate", :parameters {"userKey" {"type" "string", "description" "Email or immutable ID of the user", "required" true, "location" "path"}}, :description "Invalidate the current backup verification codes for the user."}, "directory.notifications.list" #:compute.gcp.descriptor{:http-method :get, :path "customer/{customer}/notifications", :response {"$ref" "Notifications"}, :parameters {"customer" {"type" "string", "description" "The unique ID for the customer's G Suite account.", "required" true, "location" "path"}, "language" {"type" "string", "description" "The ISO 639-1 code of the language notifications are returned in. The default is English (en).", "location" "query"}, "maxResults" {"type" "integer", "description" "Maximum number of notifications to return per page. The default is 100.", "format" "uint32", "location" "query"}, "pageToken" {"type" "string", "description" "The token to specify the page of results to retrieve.", "location" "query"}}, :description "Retrieves a list of notifications."}, "directory.roles.get" #:compute.gcp.descriptor{:http-method :get, :path "customer/{customer}/roles/{roleId}", :response {"$ref" "Role"}, :parameters {"customer" {"type" "string", "description" "Immutable ID of the G Suite account.", "required" true, "location" "path"}, "roleId" {"type" "string", "description" "Immutable ID of the role.", "required" true, "location" "path"}}, :description "Retrieves a role."}, "directory.resources.buildings.update" #:compute.gcp.descriptor{:http-method :put, :path "customer/{customer}/resources/buildings/{buildingId}", :request {"$ref" "Building"}, :response {"$ref" "Building"}, :parameters {"buildingId" {"type" "string", "description" "The ID of the building to update.", "required" true, "location" "path"}, "coordinatesSource" {"type" "string", "description" "Source from which Building.coordinates are derived.", "default" "SOURCE_UNSPECIFIED", "enum" ["CLIENT_SPECIFIED" "RESOLVED_FROM_ADDRESS" "SOURCE_UNSPECIFIED"], "enumDescriptions" ["Building.coordinates are set to the coordinates included in the request." "Building.coordinates are automatically populated based on the postal address." "Defaults to RESOLVED_FROM_ADDRESS if postal address is provided. Otherwise, defaults to CLIENT_SPECIFIED if coordinates are provided."], "location" "query"}, "customer" {"type" "string", "description" "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", "required" true, "location" "path"}}, :description "Updates a building."}, "directory.domains.get" #:compute.gcp.descriptor{:http-method :get, :path "customer/{customer}/domains/{domainName}", :response {"$ref" "Domains"}, :parameters {"customer" {"type" "string", "description" "Immutable ID of the G Suite account.", "required" true, "location" "path"}, "domainName" {"type" "string", "description" "Name of domain to be retrieved", "required" true, "location" "path"}}, :description "Retrieves a domain of the customer."}, "directory.resources.features.patch" #:compute.gcp.descriptor{:http-method :patch, :path "customer/{customer}/resources/features/{featureKey}", :request {"$ref" "Feature"}, :response {"$ref" "Feature"}, :parameters {"customer" {"type" "string", "description" "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", "required" true, "location" "path"}, "featureKey" {"type" "string", "description" "The unique ID of the feature to update.", "required" true, "location" "path"}}, :description "Updates a feature. This method supports patch semantics."}, "directory.users.undelete" #:compute.gcp.descriptor{:http-method :post, :path "users/{userKey}/undelete", :request {"$ref" "UserUndelete"}, :parameters {"userKey" {"type" "string", "description" "The immutable id of the user", "required" true, "location" "path"}}, :description "Undelete a deleted user"}, "directory.orgunits.patch" #:compute.gcp.descriptor{:http-method :patch, :path "customer/{customerId}/orgunits{/orgUnitPath*}", :request {"$ref" "OrgUnit"}, :response {"$ref" "OrgUnit"}, :parameters {"customerId" {"type" "string", "description" "Immutable ID of the G Suite account", "required" true, "location" "path"}, "orgUnitPath" {"type" "string", "description" "Full path of the organizational unit or its ID", "required" true, "repeated" true, "location" "path"}}, :description "Update organizational unit. This method supports patch semantics."}, "directory.users.update" #:compute.gcp.descriptor{:http-method :put, :path "users/{userKey}", :request {"$ref" "User"}, :response {"$ref" "User"}, :parameters {"userKey" {"type" "string", "description" "Email or immutable ID of the user. If ID, it should match with id of user object", "required" true, "location" "path"}}, :description "update user"}, "directory.members.update" #:compute.gcp.descriptor{:http-method :put, :path "groups/{groupKey}/members/{memberKey}", :request {"$ref" "Member"}, :response {"$ref" "Member"}, :parameters {"groupKey" {"type" "string", "description" "Email or immutable ID of the group. If ID, it should match with id of group object", "required" true, "location" "path"}, "memberKey" {"type" "string", "description" "Email or immutable ID of the user. If ID, it should match with id of member object", "required" true, "location" "path"}}, :description "Update membership of a user in the specified group."}, "directory.chromeosdevices.action" #:compute.gcp.descriptor{:http-method :post, :path "customer/{customerId}/devices/chromeos/{resourceId}/action", :request {"$ref" "ChromeOsDeviceAction"}, :parameters {"customerId" {"type" "string", "description" "Immutable ID of the G Suite account", "required" true, "location" "path"}, "resourceId" {"type" "string", "description" "Immutable ID of Chrome OS Device", "required" true, "location" "path"}}, :description "Take action on Chrome OS Device"}, "directory.users.photos.update" #:compute.gcp.descriptor{:http-method :put, :path "users/{userKey}/photos/thumbnail", :request {"$ref" "UserPhoto"}, :response {"$ref" "UserPhoto"}, :parameters {"userKey" {"type" "string", "description" "Email or immutable ID of the user", "required" true, "location" "path"}}, :description "Add a photo for the user"}, "directory.domainAliases.delete" #:compute.gcp.descriptor{:http-method :delete, :path "customer/{customer}/domainaliases/{domainAliasName}", :parameters {"customer" {"type" "string", "description" "Immutable ID of the G Suite account.", "required" true, "location" "path"}, "domainAliasName" {"type" "string", "description" "Name of domain alias to be retrieved.", "required" true, "location" "path"}}, :description "Deletes a Domain Alias of the customer."}, "directory.resources.buildings.delete" #:compute.gcp.descriptor{:http-method :delete, :path "customer/{customer}/resources/buildings/{buildingId}", :parameters {"buildingId" {"type" "string", "description" "The ID of the building to delete.", "required" true, "location" "path"}, "customer" {"type" "string", "description" "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", "required" true, "location" "path"}}, :description "Deletes a building."}, "directory.domainAliases.get" #:compute.gcp.descriptor{:http-method :get, :path "customer/{customer}/domainaliases/{domainAliasName}", :response {"$ref" "DomainAlias"}, :parameters {"customer" {"type" "string", "description" "Immutable ID of the G Suite account.", "required" true, "location" "path"}, "domainAliasName" {"type" "string", "description" "Name of domain alias to be retrieved.", "required" true, "location" "path"}}, :description "Retrieves a domain alias of the customer."}, "directory.resources.features.get" #:compute.gcp.descriptor{:http-method :get, :path "customer/{customer}/resources/features/{featureKey}", :response {"$ref" "Feature"}, :parameters {"customer" {"type" "string", "description" "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", "required" true, "location" "path"}, "featureKey" {"type" "string", "description" "The unique ID of the feature to retrieve.", "required" true, "location" "path"}}, :description "Retrieves a feature."}, "directory.resources.calendars.patch" #:compute.gcp.descriptor{:http-method :patch, :path "customer/{customer}/resources/calendars/{calendarResourceId}", :request {"$ref" "CalendarResource"}, :response {"$ref" "CalendarResource"}, :parameters {"calendarResourceId" {"type" "string", "description" "The unique ID of the calendar resource to update.", "required" true, "location" "path"}, "customer" {"type" "string", "description" "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", "required" true, "location" "path"}}, :description "Updates a calendar resource.\n\nThis method supports patch semantics, meaning you only need to include the fields you wish to update. Fields that are not present in the request will be preserved. This method supports patch semantics."}, "directory.orgunits.delete" #:compute.gcp.descriptor{:http-method :delete, :path "customer/{customerId}/orgunits{/orgUnitPath*}", :parameters {"customerId" {"type" "string", "description" "Immutable ID of the G Suite account", "required" true, "location" "path"}, "orgUnitPath" {"type" "string", "description" "Full path of the organizational unit or its ID", "required" true, "repeated" true, "location" "path"}}, :description "Remove organizational unit"}, "directory.customers.update" #:compute.gcp.descriptor{:http-method :put, :path "customers/{customerKey}", :request {"$ref" "Customer"}, :response {"$ref" "Customer"}, :parameters {"customerKey" {"type" "string", "description" "Id of the customer to be updated", "required" true, "location" "path"}}, :description "Updates a customer."}, "directory.mobiledevices.list" #:compute.gcp.descriptor{:http-method :get, :path "customer/{customerId}/devices/mobile", :response {"$ref" "MobileDevices"}, :parameters {"customerId" {"type" "string", "description" "Immutable ID of the G Suite account", "required" true, "location" "path"}, "maxResults" {"type" "integer", "description" "Maximum number of results to return. Max allowed value is 100.", "default" "100", "format" "int32", "minimum" "1", "location" "query"}, "orderBy" {"type" "string", "description" "Column to use for sorting results", "enum" ["deviceId" "email" "lastSync" "model" "name" "os" "status" "type"], "enumDescriptions" ["Mobile Device serial number." "Owner user email." "Last policy settings sync date time of the device." "Mobile Device model." "Owner user name." "Mobile operating system." "Status of the device." "Type of the device."], "location" "query"}, "pageToken" {"type" "string", "description" "Token to specify next page in the list", "location" "query"}, "projection" {"type" "string", "description" "Restrict information returned to a set of selected fields.", "enum" ["BASIC" "FULL"], "enumDescriptions" ["Includes only the basic metadata fields (e.g., deviceId, model, status, type, and status)" "Includes all metadata fields"], "location" "query"}, "query" {"type" "string", "description" "Search string in the format given at http://support.google.com/a/bin/answer.py?answer=1408863#search", "location" "query"}, "sortOrder" {"type" "string", "description" "Whether to return results in ascending or descending order. Only of use when orderBy is also used", "enum" ["ASCENDING" "DESCENDING"], "enumDescriptions" ["Ascending order." "Descending order."], "location" "query"}}, :description "Retrieve all Mobile Devices of a customer (paginated)"}, "directory.tokens.list" #:compute.gcp.descriptor{:http-method :get, :path "users/{userKey}/tokens", :response {"$ref" "Tokens"}, :parameters {"userKey" {"type" "string", "description" "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.", "required" true, "location" "path"}}, :description "Returns the set of tokens specified user has issued to 3rd party applications."}, "directory.domains.insert" #:compute.gcp.descriptor{:http-method :post, :path "customer/{customer}/domains", :request {"$ref" "Domains"}, :response {"$ref" "Domains"}, :parameters {"customer" {"type" "string", "description" "Immutable ID of the G Suite account.", "required" true, "location" "path"}}, :description "Inserts a domain of the customer."}, "directory.roles.delete" #:compute.gcp.descriptor{:http-method :delete, :path "customer/{customer}/roles/{roleId}", :parameters {"customer" {"type" "string", "description" "Immutable ID of the G Suite account.", "required" true, "location" "path"}, "roleId" {"type" "string", "description" "Immutable ID of the role.", "required" true, "location" "path"}}, :description "Deletes a role."}, "directory.mobiledevices.action" #:compute.gcp.descriptor{:http-method :post, :path "customer/{customerId}/devices/mobile/{resourceId}/action", :request {"$ref" "MobileDeviceAction"}, :parameters {"customerId" {"type" "string", "description" "Immutable ID of the G Suite account", "required" true, "location" "path"}, "resourceId" {"type" "string", "description" "Immutable ID of Mobile Device", "required" true, "location" "path"}}, :description "Take action on Mobile Device"}, "directory.schemas.patch" #:compute.gcp.descriptor{:http-method :patch, :path "customer/{customerId}/schemas/{schemaKey}", :request {"$ref" "Schema"}, :response {"$ref" "Schema"}, :parameters {"customerId" {"type" "string", "description" "Immutable ID of the G Suite account", "required" true, "location" "path"}, "schemaKey" {"type" "string", "description" "Name or immutable ID of the schema.", "required" true, "location" "path"}}, :description "Update schema. This method supports patch semantics."}, "directory.roleAssignments.delete" #:compute.gcp.descriptor{:http-method :delete, :path "customer/{customer}/roleassignments/{roleAssignmentId}", :parameters {"customer" {"type" "string", "description" "Immutable ID of the G Suite account.", "required" true, "location" "path"}, "roleAssignmentId" {"type" "string", "description" "Immutable ID of the role assignment.", "required" true, "location" "path"}}, :description "Deletes a role assignment."}}, :schemas {"Asps" {"id" "Asps", "type" "object", "properties" {"etag" {"type" "string", "description" "ETag of the resource."}, "items" {"type" "array", "description" "A list of ASP resources.", "items" {"$ref" "Asp"}}, "kind" {"type" "string", "description" "The type of the API resource. This is always admin#directory#aspList.", "default" "admin#directory#aspList"}}}, "UserPhone" {"id" "UserPhone", "type" "object", "description" "JSON template for a phone entry.", "properties" {"customType" {"type" "string", "description" "Custom Type."}, "primary" {"type" "boolean", "description" "If this is user's primary phone or not."}, "type" {"type" "string", "description" "Each entry can have a type which indicates standard types of that entry. For example phone could be of home_fax, work, mobile etc. In addition to the standard type, an entry can have a custom type and can give it any name. Such types should have the CUSTOM value as type and also have a customType value."}, "value" {"type" "string", "description" "Phone number."}}}, "VerificationCodes" {"id" "VerificationCodes", "type" "object", "description" "JSON response template for List verification codes operation in Directory API.", "properties" {"etag" {"type" "string", "description" "ETag of the resource."}, "items" {"type" "array", "description" "A list of verification code resources.", "items" {"$ref" "VerificationCode"}}, "kind" {"type" "string", "description" "The type of the resource. This is always admin#directory#verificationCodesList.", "default" "admin#directory#verificationCodesList"}}}, "Schemas" {"id" "Schemas", "type" "object", "description" "JSON response template for List Schema operation in Directory API.", "properties" {"etag" {"type" "string", "description" "ETag of the resource."}, "kind" {"type" "string", "description" "Kind of resource this is.", "default" "admin#directory#schemas"}, "schemas" {"type" "array", "description" "List of UserSchema objects.", "items" {"$ref" "Schema"}}}}, "Domains2" {"id" "Domains2", "type" "object", "description" "JSON response template to list Domains in Directory API.", "properties" {"domains" {"type" "array", "description" "List of domain objects.", "items" {"$ref" "Domains"}}, "etag" {"type" "string", "description" "ETag of the resource."}, "kind" {"type" "string", "description" "Kind of resource this is.", "default" "admin#directory#domains"}}}, "Schema" {"id" "Schema", "type" "object", "description" "JSON template for Schema resource in Directory API.", "properties" {"displayName" {"type" "string", "description" "Display name for the schema.", "annotations" {"required" ["directory.schemas.insert"]}}, "etag" {"type" "string", "description" "ETag of the resource."}, "fields" {"type" "array", "description" "Fields of Schema", "items" {"$ref" "SchemaFieldSpec"}, "annotations" {"required" ["directory.schemas.insert" "directory.schemas.update"]}}, "kind" {"type" "string", "description" "Kind of resource this is.", "default" "admin#directory#schema"}, "schemaId" {"type" "string", "description" "Unique identifier of Schema (Read-only)"}, "schemaName" {"type" "string", "description" "Schema name", "annotations" {"required" ["directory.schemas.insert"]}}}}, "CalendarResources" {"id" "CalendarResources", "type" "object", "description" "JSON template for Calendar Resource List Response object in Directory API.", "properties" {"etag" {"type" "string", "description" "ETag of the resource."}, "items" {"type" "array", "description" "The CalendarResources in this page of results.", "items" {"$ref" "CalendarResource"}}, "kind" {"type" "string", "description" "Identifies this as a collection of CalendarResources. This is always admin#directory#resources#calendars#calendarResourcesList.", "default" "admin#directory#resources#calendars#calendarResourcesList"}, "nextPageToken" {"type" "string", "description" "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results."}}}, "CustomerPostalAddress" {"id" "CustomerPostalAddress", "type" "object", "description" "JSON template for postal address of a customer.", "properties" {"countryCode" {"type" "string", "description" "This is a required property. For countryCode information see the ISO 3166 country code elements."}, "postalCode" {"type" "string", "description" "The postal code. A postalCode example is a postal zip code such as 10009. This is in accordance with - http://portablecontacts.net/draft-spec.html#address_element."}, "contactName" {"type" "string", "description" "The customer contact's name."}, "region" {"type" "string", "description" "Name of the region. An example of a region value is NY for the state of New York."}, "organizationName" {"type" "string", "description" "The company or company division name."}, "locality" {"type" "string", "description" "Name of the locality. An example of a locality value is the city of San Francisco."}, "addressLine1" {"type" "string", "description" "A customer's physical address. The address can be composed of one to three lines."}, "addressLine3" {"type" "string", "description" "Address line 3 of the address."}, "addressLine2" {"type" "string", "description" "Address line 2 of the address."}}}, "SchemaFieldSpec" {"id" "SchemaFieldSpec", "type" "object", "description" "JSON template for FieldSpec resource for Schemas in Directory API.", "properties" {"indexed" {"type" "boolean", "description" "Boolean specifying whether the field is indexed or not.", "default" "true"}, "displayName" {"type" "string", "description" "Display Name of the field.", "annotations" {"required" ["directory.schemas.insert" "directory.schemas.update"]}}, "fieldName" {"type" "string", "description" "Name of the field.", "annotations" {"required" ["directory.schemas.insert" "directory.schemas.update"]}}, "readAccessType" {"type" "string", "description" "Read ACLs on the field specifying who can view values of this field. Valid values are \"ALL_DOMAIN_USERS\" and \"ADMINS_AND_SELF\".", "default" "ALL_DOMAIN_USERS"}, "multiValued" {"type" "boolean", "description" "Boolean specifying whether this is a multi-valued field or not."}, "etag" {"type" "string", "description" "ETag of the resource."}, "kind" {"type" "string", "description" "Kind of resource this is.", "default" "admin#directory#schema#fieldspec"}, "numericIndexingSpec" {"type" "object", "description" "Indexing spec for a numeric field. By default, only exact match queries will be supported for numeric fields. Setting the numericIndexingSpec allows range queries to be supported.", "properties" {"maxValue" {"type" "number", "description" "Maximum value of this field. This is meant to be indicative rather than enforced. Values outside this range will still be indexed, but search may not be as performant.", "format" "double"}, "minValue" {"type" "number", "description" "Minimum value of this field. This is meant to be indicative rather than enforced. Values outside this range will still be indexed, but search may not be as performant.", "format" "double"}}}, "fieldType" {"type" "string", "description" "Type of the field.", "annotations" {"required" ["directory.schemas.insert" "directory.schemas.update"]}}, "fieldId" {"type" "string", "description" "Unique identifier of Field (Read-only)"}}}, "FeatureRename" {"id" "FeatureRename", "type" "object", "description" "JSON request template for renaming a feature.", "properties" {"newName" {"type" "string", "description" "New name of the feature.", "annotations" {"required" ["directory.resources.features.rename"]}}}}, "UserLanguage" {"id" "UserLanguage", "type" "object", "description" "JSON template for a language entry.", "properties" {"customLanguage" {"type" "string", "description" "Other language. User can provide own language name if there is no corresponding Google III language code. If this is set LanguageCode can't be set"}, "languageCode" {"type" "string", "description" "Language Code. Should be used for storing Google III LanguageCode string representation for language. Illegal values cause SchemaException."}}}, "UserPosixAccount" {"id" "UserPosixAccount", "type" "object", "description" "JSON template for a POSIX account entry. Description of the field family: go/fbs-posix.", "properties" {"gecos" {"type" "string", "description" "The GECOS (user information) for this account."}, "systemId" {"type" "string", "description" "System identifier for which account Username or Uid apply to."}, "operatingSystemType" {"type" "string", "description" "The operating system type for this account."}, "accountId" {"type" "string", "description" "A POSIX account field identifier."}, "username" {"type" "string", "description" "The username of the account."}, "uid" {"type" "string", "description" "The POSIX compliant user ID.", "format" "uint64"}, "shell" {"type" "string", "description" "The path to the login shell for this account."}, "primary" {"type" "boolean", "description" "If this is user's primary account within the SystemId."}, "homeDirectory" {"type" "string", "description" "The path to the home directory for this account."}, "gid" {"type" "string", "description" "The default group ID.", "format" "uint64"}}}, "Tokens" {"id" "Tokens", "type" "object", "description" "JSON response template for List tokens operation in Directory API.", "properties" {"etag" {"type" "string", "description" "ETag of the resource."}, "items" {"type" "array", "description" "A list of Token resources.", "items" {"$ref" "Token"}}, "kind" {"type" "string", "description" "The type of the API resource. This is always admin#directory#tokenList.", "default" "admin#directory#tokenList"}}}, "VerificationCode" {"id" "VerificationCode", "type" "object", "description" "JSON template for verification codes in Directory API.", "properties" {"etag" {"type" "string", "description" "ETag of the resource."}, "kind" {"type" "string", "description" "The type of the resource. This is always admin#directory#verificationCode.", "default" "admin#directory#verificationCode"}, "userId" {"type" "string", "description" "The obfuscated unique ID of the user."}, "verificationCode" {"type" "string", "description" "A current verification code for the user. Invalidated or used verification codes are not returned as part of the result."}}}, "CalendarResource" {"id" "CalendarResource", "type" "object", "description" "JSON template for Calendar Resource object in Directory API.", "properties" {"userVisibleDescription" {"type" "string", "description" "Description of the resource, visible to users and admins."}, "resourceName" {"type" "string", "description" "The name of the calendar resource. For example, \"Training Room 1A\".", "annotations" {"required" ["directory.resources.calendars.insert"]}}, "featureInstances" {"type" "any"}, "resourceId" {"type" "string", "description" "The unique ID for the calendar resource.", "annotations" {"required" ["directory.resources.calendars.insert"]}}, "buildingId" {"type" "string", "description" "Unique ID for the building a resource is located in."}, "floorName" {"type" "string", "description" "Name of the floor a resource is located on."}, "generatedResourceName" {"type" "string", "description" "The read-only auto-generated name of the calendar resource which includes metadata about the resource such as building name, floor, capacity, etc. For example, \"NYC-2-Training Room 1A (16)\"."}, "resourceEmail" {"type" "string", "description" "The read-only email for the calendar resource. Generated as part of creating a new calendar resource."}, "floorSection" {"type" "string", "description" "Name of the section within a floor a resource is located in."}, "etags" {"type" "string", "description" "ETag of the resource."}, "kind" {"type" "string", "description" "The type of the resource. For calendar resources, the value is admin#directory#resources#calendars#CalendarResource.", "default" "admin#directory#resources#calendars#CalendarResource"}, "resourceCategory" {"type" "string", "description" "The category of the calendar resource. Either CONFERENCE_ROOM or OTHER. Legacy data is set to CATEGORY_UNKNOWN."}, "resourceType" {"type" "string", "description" "The type of the calendar resource, intended for non-room resources."}, "capacity" {"type" "integer", "description" "Capacity of a resource, number of seats in a room.", "format" "int32"}, "resourceDescription" {"type" "string", "description" "Description of the resource, visible only to admins."}}}, "BuildingAddress" {"id" "BuildingAddress", "type" "object", "description" "JSON template for the postal address of a building in Directory API.", "properties" {"addressLines" {"type" "array", "description" "Unstructured address lines describing the lower levels of an address.", "items" {"type" "string"}}, "administrativeArea" {"type" "string", "description" "Optional. Highest administrative subdivision which is used for postal addresses of a country or region."}, "languageCode" {"type" "string", "description" "Optional. BCP-47 language code of the contents of this address (if known)."}, "locality" {"type" "string", "description" "Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use addressLines."}, "postalCode" {"type" "string", "description" "Optional. Postal code of the address."}, "regionCode" {"type" "string", "description" "Required. CLDR region code of the country/region of the address."}, "sublocality" {"type" "string", "description" "Optional. Sublocality of the address."}}}, "Customer" {"id" "Customer", "type" "object", "description" "JSON template for Customer Resource object in Directory API.", "properties" {"customerCreationTime" {"type" "string", "description" "The customer's creation time (Readonly)", "format" "date-time"}, "id" {"type" "string", "description" "The unique ID for the customer's G Suite account. (Readonly)"}, "postalAddress" {"$ref" "CustomerPostalAddress", "description" "The customer's postal address information."}, "phoneNumber" {"type" "string", "description" "The customer's contact phone number in E.164 format."}, "etag" {"type" "string", "description" "ETag of the resource."}, "kind" {"type" "string", "description" "Identifies the resource as a customer. Value: admin#directory#customer", "default" "admin#directory#customer"}, "alternateEmail" {"type" "string", "description" "The customer's secondary contact email address. This email address cannot be on the same domain as the customerDomain"}, "language" {"type" "string", "description" "The customer's ISO 639-2 language code. The default value is en-US"}, "customerDomain" {"type" "string", "description" "The customer's primary domain name string. Do not include the www prefix when creating a new customer."}}}, "BuildingCoordinates" {"id" "BuildingCoordinates", "type" "object", "description" "JSON template for coordinates of a building in Directory API.", "properties" {"latitude" {"type" "number", "description" "Latitude in decimal degrees.", "format" "double"}, "longitude" {"type" "number", "description" "Longitude in decimal degrees.", "format" "double"}}}, "Member" {"id" "Member", "type" "object", "description" "JSON template for Member resource in Directory API.", "properties" {"delivery_settings" {"type" "string", "description" "Delivery settings of member"}, "email" {"type" "string", "description" "Email of member (Read-only)"}, "etag" {"type" "string", "description" "ETag of the resource."}, "id" {"type" "string", "description" "The unique ID of the group member. A member id can be used as a member request URI's memberKey. Unique identifier of group (Read-only) Unique identifier of member (Read-only)"}, "kind" {"type" "string", "description" "Kind of resource this is.", "default" "admin#directory#member"}, "role" {"type" "string", "description" "Role of member"}, "status" {"type" "string", "description" "Status of member (Immutable)"}, "type" {"type" "string", "description" "Type of member (Immutable)"}}}, "Domains" {"id" "Domains", "type" "object", "description" "JSON template for Domain object in Directory API.", "properties" {"creationTime" {"type" "string", "description" "Creation time of the domain. (Read-only).", "format" "int64"}, "domainAliases" {"type" "array", "description" "List of domain alias objects. (Read-only)", "items" {"$ref" "DomainAlias"}}, "domainName" {"type" "string", "description" "The domain name of the customer.", "annotations" {"required" ["directory.domains.insert"]}}, "etag" {"type" "string", "description" "ETag of the resource."}, "isPrimary" {"type" "boolean", "description" "Indicates if the domain is a primary domain (Read-only)."}, "kind" {"type" "string", "description" "Kind of resource this is.", "default" "admin#directory#domain"}, "verified" {"type" "boolean", "description" "Indicates the verification state of a domain. (Read-only)."}}}, "UserEmail" {"id" "UserEmail", "type" "object", "description" "JSON template for an email.", "properties" {"address" {"type" "string", "description" "Email id of the user."}, "customType" {"type" "string", "description" "Custom Type."}, "primary" {"type" "boolean", "description" "If this is user's primary email. Only one entry could be marked as primary."}, "type" {"type" "string", "description" "Each entry can have a type which indicates standard types of that entry. For example email could be of home, work etc. In addition to the standard type, an entry can have a custom type and can take any value Such types should have the CUSTOM value as type and also have a customType value."}}}, "Feature" {"id" "Feature", "type" "object", "description" "JSON template for Feature object in Directory API.", "properties" {"etags" {"type" "string", "description" "ETag of the resource."}, "kind" {"type" "string", "description" "Kind of resource this is.", "default" "admin#directory#resources#features#Feature"}, "name" {"type" "string", "description" "The name of the feature.", "annotations" {"required" ["directory.resources.features.insert"]}}}}, "UserAbout" {"id" "UserAbout", "type" "object", "description" "JSON template for About (notes) of a user in Directory API.", "properties" {"contentType" {"type" "string", "description" "About entry can have a type which indicates the content type. It can either be plain or html. By default, notes contents are assumed to contain plain text."}, "value" {"type" "string", "description" "Actual value of notes."}}}, "Alias" {"id" "Alias", "type" "object", "description" "JSON template for Alias object in Directory API.", "properties" {"alias" {"type" "string", "description" "A alias email"}, "etag" {"type" "string", "description" "ETag of the resource."}, "id" {"type" "string", "description" "Unique id of the group (Read-only) Unique id of the user (Read-only)"}, "kind" {"type" "string", "description" "Kind of resource this is.", "default" "admin#directory#alias"}, "primaryEmail" {"type" "string", "description" "Group's primary email (Read-only) User's primary email (Read-only)"}}}, "RoleAssignments" {"id" "RoleAssignments", "type" "object", "description" "JSON response template for List roleAssignments operation in Directory API.", "properties" {"etag" {"type" "string", "description" "ETag of the resource."}, "items" {"type" "array", "description" "A list of RoleAssignment resources.", "items" {"$ref" "RoleAssignment"}}, "kind" {"type" "string", "description" "The type of the API resource. This is always admin#directory#roleAssignments.", "default" "admin#directory#roleAssignments"}, "nextPageToken" {"type" "string"}}}, "User" {"id" "User", "type" "object", "description" "JSON template for User object in Directory API.", "properties" {"relations" {"type" "any"}, "thumbnailPhotoEtag" {"type" "string", "description" "ETag of the user's photo (Read-only)", "readOnly" true}, "isEnforcedIn2Sv" {"type" "boolean", "description" "Is 2-step verification enforced (Read-only)", "readOnly" true}, "aliases" {"type" "array", "description" "List of aliases (Read-only)", "readOnly" true, "items" {"type" "string"}}, "lastLoginTime" {"type" "string", "description" "User's last login time. (Read-only)", "format" "date-time", "readOnly" true}, "recoveryPhone" {"type" "string", "description" "Recovery phone of the user. The phone number must be in the E.164 format, starting with the plus sign (+). Example: +16506661212."}, "websites" {"type" "any"}, "posixAccounts" {"type" "any"}, "phones" {"type" "any"}, "ims" {"type" "any"}, "suspensionReason" {"type" "string", "description" "Suspension reason if user is suspended (Read-only)", "readOnly" true}, "externalIds" {"type" "any"}, "id" {"type" "string", "description" "Unique identifier of User (Read-only)"}, "gender" {"type" "any"}, "isAdmin" {"type" "boolean", "description" "Boolean indicating if the user is admin (Read-only)", "readOnly" true}, "recoveryEmail" {"type" "string", "description" "Recovery email of the user."}, "customerId" {"type" "string", "description" "CustomerId of User (Read-only)", "readOnly" true}, "sshPublicKeys" {"type" "any"}, "name" {"$ref" "UserName", "description" "User's name", "annotations" {"required" ["directory.users.insert"]}}, "archived" {"type" "boolean", "description" "Indicates if user is archived."}, "changePasswordAtNextLogin" {"type" "boolean", "description" "Boolean indicating if the user should change password in next login"}, "locations" {"type" "any"}, "languages" {"type" "any"}, "primaryEmail" {"type" "string", "description" "username of User", "annotations" {"required" ["directory.users.insert"]}}, "isDelegatedAdmin" {"type" "boolean", "description" "Boolean indicating if the user is delegated admin (Read-only)", "readOnly" true}, "deletionTime" {"type" "string", "format" "date-time", "readOnly" true}, "agreedToTerms" {"type" "boolean", "description" "Indicates if user has agreed to terms (Read-only)", "readOnly" true}, "addresses" {"type" "any"}, "etag" {"type" "string", "description" "ETag of the resource.", "readOnly" true}, "keywords" {"type" "any"}, "kind" {"type" "string", "description" "Kind of resource this is.", "default" "admin#directory#user", "readOnly" true}, "organizations" {"type" "any"}, "orgUnitPath" {"type" "string", "description" "OrgUnit of User"}, "creationTime" {"type" "string", "description" "User's G Suite account creation time. (Read-only)", "format" "date-time", "readOnly" true}, "password" {"type" "string", "description" "User's password", "annotations" {"required" ["directory.users.insert"]}}, "includeInGlobalAddressList" {"type" "boolean", "description" "Boolean indicating if user is included in Global Address List"}, "notes" {"type" "any"}, "emails" {"type" "any"}, "thumbnailPhotoUrl" {"type" "string", "description" "Photo Url of the user (Read-only)", "readOnly" true}, "nonEditableAliases" {"type" "array", "description" "List of non editable aliases (Read-only)", "readOnly" true, "items" {"type" "string"}}, "ipWhitelisted" {"type" "boolean", "description" "Boolean indicating if ip is whitelisted"}, "isEnrolledIn2Sv" {"type" "boolean", "description" "Is enrolled in 2-step verification (Read-only)", "readOnly" true}, "hashFunction" {"type" "string", "description" "Hash function name for password. Supported are MD5, SHA-1 and crypt"}, "isMailboxSetup" {"type" "boolean", "description" "Is mailbox setup (Read-only)", "readOnly" true}, "suspended" {"type" "boolean", "description" "Indicates if user is suspended."}, "customSchemas" {"type" "object", "description" "Custom fields of the user.", "additionalProperties" {"$ref" "UserCustomProperties"}}}}, "UserLocation" {"id" "UserLocation", "type" "object", "description" "JSON template for a location entry.", "properties" {"area" {"type" "string", "description" "Textual location. This is most useful for display purposes to concisely describe the location. For example, \"Mountain View, CA\", \"Near Seattle\", \"US-NYC-9TH 9A209A\"."}, "buildingId" {"type" "string", "description" "Building Identifier."}, "customType" {"type" "string", "description" "Custom Type."}, "deskCode" {"type" "string", "description" "Most specific textual code of individual desk location."}, "floorName" {"type" "string", "description" "Floor name/number."}, "floorSection" {"type" "string", "description" "Floor section. More specific location within the floor. For example, if a floor is divided into sections \"A\", \"B\", and \"C\", this field would identify one of those values."}, "type" {"type" "string", "description" "Each entry can have a type which indicates standard types of that entry. For example location could be of types default and desk. In addition to standard type, an entry can have a custom type and can give it any name. Such types should have \"custom\" as type and also have a customType value."}}}, "UserGender" {"id" "UserGender", "type" "object", "properties" {"addressMeAs" {"type" "string", "description" "AddressMeAs. A human-readable string containing the proper way to refer to the profile owner by humans, for example \"he/him/his\" or \"they/them/their\"."}, "customGender" {"type" "string", "description" "Custom gender."}, "type" {"type" "string", "description" "Gender."}}}, "Members" {"id" "Members", "type" "object", "description" "JSON response template for List Members operation in Directory API.", "properties" {"etag" {"type" "string", "description" "ETag of the resource."}, "kind" {"type" "string", "description" "Kind of resource this is.", "default" "admin#directory#members"}, "members" {"type" "array", "description" "List of member objects.", "items" {"$ref" "Member"}}, "nextPageToken" {"type" "string", "description" "Token used to access next page of this result."}}}, "Aliases" {"id" "Aliases", "type" "object", "description" "JSON response template to list aliases in Directory API.", "properties" {"aliases" {"type" "array", "description" "List of alias objects.", "items" {"type" "any"}}, "etag" {"type" "string", "description" "ETag of the resource."}, "kind" {"type" "string", "description" "Kind of resource this is.", "default" "admin#directory#aliases"}}}, "UserOrganization" {"id" "UserOrganization", "type" "object", "description" "JSON template for an organization entry.", "properties" {"department" {"type" "string", "description" "Department within the organization."}, "name" {"type" "string", "description" "Name of the organization"}, "location" {"type" "string", "description" "Location of the organization. This need not be fully qualified address."}, "customType" {"type" "string", "description" "Custom type."}, "primary" {"type" "boolean", "description" "If it user's primary organization."}, "fullTimeEquivalent" {"type" "integer", "description" "The full-time equivalent millipercent within the organization (100000 = 100%).", "format" "int32"}, "domain" {"type" "string", "description" "The domain to which the organization belongs to."}, "symbol" {"type" "string", "description" "Symbol of the organization."}, "title" {"type" "string", "description" "Title (designation) of the user in the organization."}, "type" {"type" "string", "description" "Each entry can have a type which indicates standard types of that entry. For example organization could be of school, work etc. In addition to the standard type, an entry can have a custom type and can give it any name. Such types should have the CUSTOM value as type and also have a CustomType value."}, "costCenter" {"type" "string", "description" "The cost center of the users department."}, "description" {"type" "string", "description" "Description of the organization."}}}, "UserSshPublicKey" {"id" "UserSshPublicKey", "type" "object", "description" "JSON template for a POSIX account entry.", "properties" {"expirationTimeUsec" {"type" "string", "description" "An expiration time in microseconds since epoch.", "format" "int64"}, "fingerprint" {"type" "string", "description" "A SHA-256 fingerprint of the SSH public key. (Read-only)", "readOnly" true}, "key" {"type" "string", "description" "An SSH public key."}}}, "MembersHasMember" {"id" "MembersHasMember", "type" "object", "description" "JSON template for Has Member response in Directory API.", "properties" {"isMember" {"type" "boolean", "description" "Identifies whether the given user is a member of the group. Membership can be direct or nested.", "readOnly" true}}}, "MobileDeviceAction" {"id" "MobileDeviceAction", "type" "object", "description" "JSON request template for firing commands on Mobile Device in Directory Devices API.", "properties" {"action" {"type" "string", "description" "Action to be taken on the Mobile Device", "annotations" {"required" ["directory.mobiledevices.action"]}}}}, "UserName" {"id" "UserName", "type" "object", "description" "JSON template for name of a user in Directory API.", "properties" {"familyName" {"type" "string", "description" "Last Name", "annotations" {"required" ["directory.users.insert"]}}, "fullName" {"type" "string", "description" "Full Name"}, "givenName" {"type" "string", "description" "First Name", "annotations" {"required" ["directory.users.insert"]}}}}, "DomainAliases" {"id" "DomainAliases", "type" "object", "description" "JSON response template to list domain aliases in Directory API.", "properties" {"domainAliases" {"type" "array", "description" "List of domain alias objects.", "items" {"$ref" "DomainAlias"}}, "etag" {"type" "string", "description" "ETag of the resource."}, "kind" {"type" "string", "description" "Kind of resource this is.", "default" "admin#directory#domainAliases"}}}, "Role" {"id" "Role", "type" "object", "description" "JSON template for role resource in Directory API.", "properties" {"etag" {"type" "string", "description" "ETag of the resource."}, "isSuperAdminRole" {"type" "boolean", "description" "Returns true if the role is a super admin role."}, "isSystemRole" {"type" "boolean", "description" "Returns true if this is a pre-defined system role."}, "kind" {"type" "string", "description" "The type of the API resource. This is always admin#directory#role.", "default" "admin#directory#role"}, "roleDescription" {"type" "string", "description" "A short description of the role."}, "roleId" {"type" "string", "description" "ID of the role.", "format" "int64"}, "roleName" {"type" "string", "description" "Name of the role.", "annotations" {"required" ["directory.roles.insert"]}}, "rolePrivileges" {"type" "array", "description" "The set of privileges that are granted to this role.", "items" {"type" "object", "properties" {"privilegeName" {"type" "string", "description" "The name of the privilege."}, "serviceId" {"type" "string", "description" "The obfuscated ID of the service this privilege is for. This value is returned with Privileges.list()."}}}, "annotations" {"required" ["directory.roles.insert"]}}}}, "Building" {"id" "Building", "type" "object", "description" "JSON template for Building object in Directory API.", "properties" {"address" {"$ref" "BuildingAddress", "description" "The postal address of the building. See PostalAddress for details. Note that only a single address line and region code are required."}, "buildingId" {"type" "string", "description" "Unique identifier for the building. The maximum length is 100 characters."}, "buildingName" {"type" "string", "description" "The building name as seen by users in Calendar. Must be unique for the customer. For example, \"NYC-CHEL\". The maximum length is 100 characters."}, "coordinates" {"$ref" "BuildingCoordinates", "description" "The geographic coordinates of the center of the building, expressed as latitude and longitude in decimal degrees."}, "description" {"type" "string", "description" "A brief description of the building. For example, \"Chelsea Market\"."}, "etags" {"type" "string", "description" "ETag of the resource."}, "floorNames" {"type" "array", "description" "The display names for all floors in this building. The floors are expected to be sorted in ascending order, from lowest floor to highest floor. For example, [\"B2\", \"B1\", \"L\", \"1\", \"2\", \"2M\", \"3\", \"PH\"] Must contain at least one entry.", "items" {"type" "string"}}, "kind" {"type" "string", "description" "Kind of resource this is.", "default" "admin#directory#resources#buildings#Building"}}}, "MobileDevices" {"id" "MobileDevices", "type" "object", "description" "JSON response template for List Mobile Devices operation in Directory API.", "properties" {"etag" {"type" "string", "description" "ETag of the resource."}, "kind" {"type" "string", "description" "Kind of resource this is.", "default" "admin#directory#mobiledevices"}, "mobiledevices" {"type" "array", "description" "List of Mobile Device objects.", "items" {"$ref" "MobileDevice"}}, "nextPageToken" {"type" "string", "description" "Token used to access next page of this result."}}}, "Privileges" {"id" "Privileges", "type" "object", "description" "JSON response template for List privileges operation in Directory API.", "properties" {"etag" {"type" "string", "description" "ETag of the resource."}, "items" {"type" "array", "description" "A list of Privilege resources.", "items" {"$ref" "Privilege"}}, "kind" {"type" "string", "description" "The type of the API resource. This is always admin#directory#privileges.", "default" "admin#directory#privileges"}}}, "UserRelation" {"id" "UserRelation", "type" "object", "description" "JSON template for a relation entry.", "properties" {"customType" {"type" "string", "description" "Custom Type."}, "type" {"type" "string", "description" "The relation of the user. Some of the possible values are mother, father, sister, brother, manager, assistant, partner."}, "value" {"type" "string", "description" "The name of the relation."}}}, "ChromeOsDevice" {"id" "ChromeOsDevice", "type" "object", "description" "JSON template for Chrome Os Device resource in Directory API.", "properties" {"cpuStatusReports" {"type" "array", "description" "Reports of CPU utilization and temperature (Read-only)", "items" {"type" "object", "properties" {"cpuTemperatureInfo" {"type" "array", "description" "List of CPU temperature samples.", "items" {"type" "object", "properties" {"label" {"type" "string", "description" "CPU label"}, "temperature" {"type" "integer", "description" "Temperature in Celsius degrees.", "format" "int32"}}}}, "cpuUtilizationPercentageInfo" {"type" "array", "items" {"type" "integer", "format" "int32"}}, "reportTime" {"type" "string", "description" "Date and time the report was received.", "format" "date-time"}}}}, "annotatedAssetId" {"type" "string", "description" "AssetId specified during enrollment or through later annotation"}, "systemRamFreeReports" {"type" "array", "description" "Reports of amounts of available RAM memory (Read-only)", "items" {"type" "object", "properties" {"reportTime" {"type" "string", "description" "Date and time the report was received.", "format" "date-time"}, "systemRamFreeInfo" {"type" "array", "items" {"type" "string", "format" "int64"}}}}}, "autoUpdateExpiration" {"type" "string", "description" "(Read-only) The timestamp after which the device will stop receiving Chrome updates or support", "format" "int64"}, "bootMode" {"type" "string", "description" "Chromebook boot mode (Read-only)"}, "activeTimeRanges" {"type" "array", "description" "List of active time ranges (Read-only)", "items" {"type" "object", "properties" {"activeTime" {"type" "integer", "description" "Duration in milliseconds", "format" "int32"}, "date" {"type" "string", "description" "Date of usage", "format" "date"}}}}, "model" {"type" "string", "description" "Chromebook Model (Read-only)"}, "osVersion" {"type" "string", "description" "Chromebook Os Version (Read-only)"}, "diskVolumeReports" {"type" "array", "description" "Reports of disk space and other info about mounted/connected volumes.", "items" {"type" "object", "properties" {"volumeInfo" {"type" "array", "description" "Disk volumes", "items" {"type" "object", "properties" {"storageFree" {"type" "string", "description" "Free disk space [in bytes]", "format" "int64"}, "storageTotal" {"type" "string", "description" "Total disk space [in bytes]", "format" "int64"}, "volumeId" {"type" "string", "description" "Volume id"}}}}}}}, "supportEndDate" {"type" "string", "description" "Final date the device will be supported (Read-only)", "format" "date-time"}, "deviceFiles" {"type" "array", "description" "List of device files to download (Read-only)", "items" {"type" "object", "properties" {"createTime" {"type" "string", "description" "Date and time the file was created", "format" "date-time"}, "downloadUrl" {"type" "string", "description" "File download URL"}, "name" {"type" "string", "description" "File name"}, "type" {"type" "string", "description" "File type"}}}}, "recentUsers" {"type" "array", "description" "List of recent device users, in descending order by last login time (Read-only)", "items" {"type" "object", "properties" {"email" {"type" "string", "description" "Email address of the user. Present only if the user type is managed"}, "type" {"type" "string", "description" "The type of the user"}}}}, "manufactureDate" {"type" "string", "description" "(Read-only) The date the device was manufactured in yyyy-mm-dd format."}, "meid" {"type" "string", "description" "Contains either the Mobile Equipment identifier (MEID) or the International Mobile Equipment Identity (IMEI) for the 3G mobile card in the Chromebook (Read-only)"}, "macAddress" {"type" "string", "description" "Chromebook Mac Address on wifi network interface (Read-only)"}, "status" {"type" "string", "description" "status of the device (Read-only)"}, "annotatedUser" {"type" "string", "description" "User of the device"}, "lastSync" {"type" "string", "description" "Date and time the device was last synchronized with the policy settings in the G Suite administrator control panel (Read-only)", "format" "date-time"}, "etag" {"type" "string", "description" "ETag of the resource."}, "kind" {"type" "string", "description" "Kind of resource this is.", "default" "admin#directory#chromeosdevice"}, "firmwareVersion" {"type" "string", "description" "Chromebook firmware version (Read-only)"}, "annotatedLocation" {"type" "string", "description" "Address or location of the device as noted by the administrator"}, "orgUnitPath" {"type" "string", "description" "OrgUnit of the device"}, "ethernetMacAddress0" {"type" "string", "description" "(Read-only) MAC address used by the Chromebook’s internal ethernet port, and for onboard network (ethernet) interface. The format is twelve (12) hexadecimal digits without any delimiter (uppercase letters). This is only relevant for some devices."}, "orderNumber" {"type" "string", "description" "Chromebook order number (Read-only)"}, "platformVersion" {"type" "string", "description" "Chromebook platform version (Read-only)"}, "notes" {"type" "string", "description" "Notes added by the administrator"}, "ethernetMacAddress" {"type" "string", "description" "Chromebook Mac Address on ethernet network interface (Read-only)"}, "systemRamTotal" {"type" "string", "description" "Total RAM on the device [in bytes] (Read-only)", "format" "int64"}, "tpmVersionInfo" {"type" "object", "description" "Trusted Platform Module (TPM) (Read-only)", "properties" {"family" {"type" "string", "description" "TPM family."}, "firmwareVersion" {"type" "string", "description" "TPM firmware version."}, "manufacturer" {"type" "string", "description" "TPM manufacturer code."}, "specLevel" {"type" "string", "description" "TPM specification level."}, "tpmModel" {"type" "string", "description" "TPM model number."}, "vendorSpecific" {"type" "string", "description" "Vendor-specific information such as Vendor ID."}}}, "serialNumber" {"type" "string", "description" "Chromebook serial number (Read-only)"}, "deviceId" {"type" "string", "description" "Unique identifier of Chrome OS Device (Read-only)"}, "dockMacAddress" {"type" "string", "description" "(Read-only) Built-in MAC address for the docking station that the device connected to. Factory sets Media access control address (MAC address) assigned for use by a dock. Currently this is only supported on the Dell Arcada / Sarien devices and the Dell WD19 / WD19TB Docking Station. It is reserved specifically for MAC pass through device policy. The format is twelve (12) hexadecimal digits without any delimiter (uppercase letters). This is only relevant for Dell devices."}, "willAutoRenew" {"type" "boolean", "description" "Will Chromebook auto renew after support end date (Read-only)"}, "lastEnrollmentTime" {"type" "string", "description" "Date and time the device was last enrolled (Read-only)", "format" "date-time"}}}, "UserAddress" {"id" "UserAddress", "type" "object", "description" "JSON template for address.", "properties" {"countryCode" {"type" "string", "description" "Country code."}, "country" {"type" "string", "description" "Country."}, "poBox" {"type" "string", "description" "Other parts of address."}, "sourceIsStructured" {"type" "boolean", "description" "User supplied address was structured. Structured addresses are NOT supported at this time. You might be able to write structured addresses, but any values will eventually be clobbered."}, "postalCode" {"type" "string", "description" "Postal code."}, "formatted" {"type" "string", "description" "Formatted address."}, "customType" {"type" "string", "description" "Custom type."}, "primary" {"type" "boolean", "description" "If this is user's primary address. Only one entry could be marked as primary."}, "region" {"type" "string", "description" "Region."}, "locality" {"type" "string", "description" "Locality."}, "streetAddress" {"type" "string", "description" "Street."}, "type" {"type" "string", "description" "Each entry can have a type which indicates standard values of that entry. For example address could be of home, work etc. In addition to the standard type, an entry can have a custom type and can take any value. Such type should have the CUSTOM value as type and also have a customType value."}, "extendedAddress" {"type" "string", "description" "Extended Address."}}}, "RoleAssignment" {"id" "RoleAssignment", "type" "object", "description" "JSON template for roleAssignment resource in Directory API.", "properties" {"assignedTo" {"type" "string", "description" "The unique ID of the user this role is assigned to."}, "etag" {"type" "string", "description" "ETag of the resource."}, "kind" {"type" "string", "description" "The type of the API resource. This is always admin#directory#roleAssignment.", "default" "admin#directory#roleAssignment"}, "orgUnitId" {"type" "string", "description" "If the role is restricted to an organization unit, this contains the ID for the organization unit the exercise of this role is restricted to."}, "roleAssignmentId" {"type" "string", "description" "ID of this roleAssignment.", "format" "int64"}, "roleId" {"type" "string", "description" "The ID of the role that is assigned.", "format" "int64"}, "scopeType" {"type" "string", "description" "The scope in which this role is assigned. Possible values are: \n- CUSTOMER\n- ORG_UNIT"}}}, "Roles" {"id" "Roles", "type" "object", "description" "JSON response template for List roles operation in Directory API.", "properties" {"etag" {"type" "string", "description" "ETag of the resource."}, "items" {"type" "array", "description" "A list of Role resources.", "items" {"$ref" "Role"}}, "kind" {"type" "string", "description" "The type of the API resource. This is always admin#directory#roles.", "default" "admin#directory#roles"}, "nextPageToken" {"type" "string"}}}, "UserUndelete" {"id" "UserUndelete", "type" "object", "description" "JSON request template to undelete a user in Directory API.", "properties" {"orgUnitPath" {"type" "string", "description" "OrgUnit of User"}}}, "Users" {"id" "Users", "type" "object", "description" "JSON response template for List Users operation in Apps Directory API.", "properties" {"etag" {"type" "string", "description" "ETag of the resource."}, "kind" {"type" "string", "description" "Kind of resource this is.", "default" "admin#directory#users"}, "nextPageToken" {"type" "string", "description" "Token used to access next page of this result."}, "trigger_event" {"type" "string", "description" "Event that triggered this response (only used in case of Push Response)"}, "users" {"type" "array", "description" "List of user objects.", "items" {"$ref" "User"}}}}, "FeatureInstance" {"id" "FeatureInstance", "type" "object", "description" "JSON template for a \"feature instance\".", "properties" {"feature" {"$ref" "Feature", "description" "The feature that this is an instance of. A calendar resource may have multiple instances of a feature."}}}, "Groups" {"id" "Groups", "type" "object", "description" "JSON response template for List Groups operation in Directory API.", "properties" {"etag" {"type" "string", "description" "ETag of the resource."}, "groups" {"type" "array", "description" "List of group objects.", "items" {"$ref" "Group"}}, "kind" {"type" "string", "description" "Kind of resource this is.", "default" "admin#directory#groups"}, "nextPageToken" {"type" "string", "description" "Token used to access next page of this result."}}}, "UserPhoto" {"id" "UserPhoto", "type" "object", "description" "JSON template for Photo object in Directory API.", "properties" {"etag" {"type" "string", "description" "ETag of the resource."}, "height" {"type" "integer", "description" "Height in pixels of the photo", "format" "int32"}, "id" {"type" "string", "description" "Unique identifier of User (Read-only)"}, "kind" {"type" "string", "description" "Kind of resource this is.", "default" "admin#directory#user#photo"}, "mimeType" {"type" "string", "description" "Mime Type of the photo"}, "photoData" {"type" "string", "description" "Base64 encoded photo data", "format" "byte", "annotations" {"required" ["directory.users.photos.update"]}}, "primaryEmail" {"type" "string", "description" "Primary email of User (Read-only)"}, "width" {"type" "integer", "description" "Width in pixels of the photo", "format" "int32"}}}, "UserIm" {"id" "UserIm", "type" "object", "description" "JSON template for instant messenger of an user.", "properties" {"customProtocol" {"type" "string", "description" "Custom protocol."}, "customType" {"type" "string", "description" "Custom type."}, "im" {"type" "string", "description" "Instant messenger id."}, "primary" {"type" "boolean", "description" "If this is user's primary im. Only one entry could be marked as primary."}, "protocol" {"type" "string", "description" "Protocol used in the instant messenger. It should be one of the values from ImProtocolTypes map. Similar to type, it can take a CUSTOM value and specify the custom name in customProtocol field."}, "type" {"type" "string", "description" "Each entry can have a type which indicates standard types of that entry. For example instant messengers could be of home, work etc. In addition to the standard type, an entry can have a custom type and can take any value. Such types should have the CUSTOM value as type and also have a customType value."}}}, "UserWebsite" {"id" "UserWebsite", "type" "object", "description" "JSON template for a website entry.", "properties" {"customType" {"type" "string", "description" "Custom Type."}, "primary" {"type" "boolean", "description" "If this is user's primary website or not."}, "type" {"type" "string", "description" "Each entry can have a type which indicates standard types of that entry. For example website could be of home, work, blog etc. In addition to the standard type, an entry can have a custom type and can give it any name. Such types should have the CUSTOM value as type and also have a customType value."}, "value" {"type" "string", "description" "Website."}}}, "ChromeOsMoveDevicesToOu" {"id" "ChromeOsMoveDevicesToOu", "type" "object", "description" "JSON request template for moving ChromeOs Device to given OU in Directory Devices API.", "properties" {"deviceIds" {"type" "array", "description" "ChromeOs Devices to be moved to OU", "items" {"type" "string"}, "annotations" {"required" ["directory.chromeosdevices.moveDevicesToOu"]}}}}, "Buildings" {"id" "Buildings", "type" "object", "description" "JSON template for Building List Response object in Directory API.", "properties" {"buildings" {"type" "array", "description" "The Buildings in this page of results.", "items" {"$ref" "Building"}}, "etag" {"type" "string", "description" "ETag of the resource."}, "kind" {"type" "string", "description" "Kind of resource this is.", "default" "admin#directory#resources#buildings#buildingsList"}, "nextPageToken" {"type" "string", "description" "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results."}}}, "ChromeOsDevices" {"id" "ChromeOsDevices", "type" "object", "description" "JSON response template for List Chrome OS Devices operation in Directory API.", "properties" {"chromeosdevices" {"type" "array", "description" "List of Chrome OS Device objects.", "items" {"$ref" "ChromeOsDevice"}}, "etag" {"type" "string", "description" "ETag of the resource."}, "kind" {"type" "string", "description" "Kind of resource this is.", "default" "admin#directory#chromeosdevices"}, "nextPageToken" {"type" "string", "description" "Token used to access next page of this result."}}}, "OrgUnits" {"id" "OrgUnits", "type" "object", "description" "JSON response template for List Organization Units operation in Directory API.", "properties" {"etag" {"type" "string", "description" "ETag of the resource."}, "kind" {"type" "string", "description" "Kind of resource this is.", "default" "admin#directory#orgUnits"}, "organizationUnits" {"type" "array", "description" "List of user objects.", "items" {"$ref" "OrgUnit"}}}}, "Channel" {"id" "Channel", "type" "object", "description" "An notification channel used to watch for resource changes.", "properties" {"token" {"type" "string", "description" "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."}, "resourceId" {"type" "string", "description" "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."}, "params" {"type" "object", "description" "Additional parameters controlling delivery channel behavior. Optional.", "additionalProperties" {"type" "string", "description" "Declares a new parameter by name."}}, "id" {"type" "string", "description" "A UUID or similar unique string that identifies this channel."}, "address" {"type" "string", "description" "The address where notifications are delivered for this channel."}, "kind" {"type" "string", "description" "Identifies this as a notification channel used to watch for changes to a resource, which is \"api#channel\".", "default" "api#channel"}, "type" {"type" "string", "description" "The type of delivery mechanism used for this channel."}, "expiration" {"type" "string", "description" "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.", "format" "int64"}, "payload" {"type" "boolean", "description" "A Boolean value to indicate whether payload is wanted. Optional."}, "resourceUri" {"type" "string", "description" "A version-specific identifier for the watched resource."}}}, "OrgUnit" {"id" "OrgUnit", "type" "object", "description" "JSON template for Org Unit resource in Directory API.", "properties" {"orgUnitId" {"type" "string", "description" "Id of OrgUnit"}, "name" {"type" "string", "description" "Name of OrgUnit", "annotations" {"required" ["directory.orgunits.insert"]}}, "parentOrgUnitId" {"type" "string", "description" "Id of parent OrgUnit"}, "etag" {"type" "string", "description" "ETag of the resource."}, "kind" {"type" "string", "description" "Kind of resource this is.", "default" "admin#directory#orgUnit"}, "orgUnitPath" {"type" "string", "description" "Path of OrgUnit"}, "parentOrgUnitPath" {"type" "string", "description" "Path of parent OrgUnit"}, "blockInheritance" {"type" "boolean", "description" "Should block inheritance"}, "description" {"type" "string", "description" "Description of OrgUnit"}}}, "Notification" {"id" "Notification", "type" "object", "description" "Template for a notification resource.", "properties" {"body" {"type" "string", "description" "Body of the notification (Read-only)"}, "etag" {"type" "string", "description" "ETag of the resource."}, "fromAddress" {"type" "string", "description" "Address from which the notification is received (Read-only)"}, "isUnread" {"type" "boolean", "description" "Boolean indicating whether the notification is unread or not.", "annotations" {"required" ["directory.notifications.patch" "directory.notifications.update"]}}, "kind" {"type" "string", "description" "The type of the resource.", "default" "admin#directory#notification"}, "notificationId" {"type" "string"}, "sendTime" {"type" "string", "description" "Time at which notification was sent (Read-only)", "format" "date-time"}, "subject" {"type" "string", "description" "Subject of the notification (Read-only)"}}}, "UserMakeAdmin" {"id" "UserMakeAdmin", "type" "object", "description" "JSON request template for setting/revoking admin status of a user in Directory API.", "properties" {"status" {"type" "boolean", "description" "Boolean indicating new admin status of the user", "annotations" {"required" ["directory.users.makeAdmin"]}}}}, "Privilege" {"id" "Privilege", "type" "object", "description" "JSON template for privilege resource in Directory API.", "properties" {"childPrivileges" {"type" "array", "description" "A list of child privileges. Privileges for a service form a tree. Each privilege can have a list of child privileges; this list is empty for a leaf privilege.", "items" {"$ref" "Privilege"}}, "etag" {"type" "string", "description" "ETag of the resource."}, "isOuScopable" {"type" "boolean", "description" "If the privilege can be restricted to an organization unit."}, "kind" {"type" "string", "description" "The type of the API resource. This is always admin#directory#privilege.", "default" "admin#directory#privilege"}, "privilegeName" {"type" "string", "description" "The name of the privilege."}, "serviceId" {"type" "string", "description" "The obfuscated ID of the service this privilege is for. This value is returned with Privileges.list()."}, "serviceName" {"type" "string", "description" "The name of the service this privilege is for."}}}, "Group" {"id" "Group", "type" "object", "description" "JSON template for Group resource in Directory API.", "properties" {"aliases" {"type" "array", "description" "List of aliases (Read-only)", "items" {"type" "string"}}, "directMembersCount" {"type" "string", "description" "Group direct members count", "format" "int64"}, "id" {"type" "string", "description" "Unique identifier of Group (Read-only)"}, "email" {"type" "string", "description" "Email of Group", "annotations" {"required" ["directory.groups.insert"]}}, "name" {"type" "string", "description" "Group name"}, "adminCreated" {"type" "boolean", "description" "Is the group created by admin (Read-only) *"}, "etag" {"type" "string", "description" "ETag of the resource."}, "kind" {"type" "string", "description" "Kind of resource this is.", "default" "admin#directory#group"}, "nonEditableAliases" {"type" "array", "description" "List of non editable aliases (Read-only)", "items" {"type" "string"}}, "description" {"type" "string", "description" "Description of the group"}}}, "DomainAlias" {"id" "DomainAlias", "type" "object", "description" "JSON template for Domain Alias object in Directory API.", "properties" {"creationTime" {"type" "string", "description" "The creation time of the domain alias. (Read-only).", "format" "int64"}, "domainAliasName" {"type" "string", "description" "The domain alias name."}, "etag" {"type" "string", "description" "ETag of the resource."}, "kind" {"type" "string", "description" "Kind of resource this is.", "default" "admin#directory#domainAlias"}, "parentDomainName" {"type" "string", "description" "The parent domain name that the domain alias is associated with. This can either be a primary or secondary domain name within a customer.", "annotations" {"required" ["directory.domains.insert"]}}, "verified" {"type" "boolean", "description" "Indicates the verification state of a domain alias. (Read-only)"}}}, "UserKeyword" {"id" "UserKeyword", "type" "object", "description" "JSON template for a keyword entry.", "properties" {"customType" {"type" "string", "description" "Custom Type."}, "type" {"type" "string", "description" "Each entry can have a type which indicates standard type of that entry. For example, keyword could be of type occupation or outlook. In addition to the standard type, an entry can have a custom type and can give it any name. Such types should have the CUSTOM value as type and also have a customType value."}, "value" {"type" "string", "description" "Keyword."}}}, "Asp" {"id" "Asp", "type" "object", "description" "The template that returns individual ASP (Access Code) data.", "properties" {"codeId" {"type" "integer", "description" "The unique ID of the ASP.", "format" "int32"}, "creationTime" {"type" "string", "description" "The time when the ASP was created. Expressed in Unix time format.", "format" "int64"}, "etag" {"type" "string", "description" "ETag of the ASP."}, "kind" {"type" "string", "description" "The type of the API resource. This is always admin#directory#asp.", "default" "admin#directory#asp"}, "lastTimeUsed" {"type" "string", "description" "The time when the ASP was last used. Expressed in Unix time format.", "format" "int64"}, "name" {"type" "string", "description" "The name of the application that the user, represented by their userId, entered when the ASP was created."}, "userKey" {"type" "string", "description" "The unique ID of the user who issued the ASP."}}}, "Notifications" {"id" "Notifications", "type" "object", "description" "Template for notifications list response.", "properties" {"etag" {"type" "string", "description" "ETag of the resource."}, "items" {"type" "array", "description" "List of notifications in this page.", "items" {"$ref" "Notification"}}, "kind" {"type" "string", "description" "The type of the resource.", "default" "admin#directory#notifications"}, "nextPageToken" {"type" "string", "description" "Token for fetching the next page of notifications."}, "unreadNotificationsCount" {"type" "integer", "description" "Number of unread notification for the domain.", "format" "int32"}}}, "UserExternalId" {"id" "UserExternalId", "type" "object", "description" "JSON template for an externalId entry.", "properties" {"customType" {"type" "string", "description" "Custom type."}, "type" {"type" "string", "description" "The type of the Id."}, "value" {"type" "string", "description" "The value of the id."}}}, "Token" {"id" "Token", "type" "object", "description" "JSON template for token resource in Directory API.", "properties" {"anonymous" {"type" "boolean", "description" "Whether the application is registered with Google. The value is true if the application has an anonymous Client ID."}, "clientId" {"type" "string", "description" "The Client ID of the application the token is issued to."}, "displayText" {"type" "string", "description" "The displayable name of the application the token is issued to."}, "etag" {"type" "string", "description" "ETag of the resource."}, "kind" {"type" "string", "description" "The type of the API resource. This is always admin#directory#token.", "default" "admin#directory#token"}, "nativeApp" {"type" "boolean", "description" "Whether the token is issued to an installed application. The value is true if the application is installed to a desktop or mobile device."}, "scopes" {"type" "array", "description" "A list of authorization scopes the application is granted.", "items" {"type" "string"}}, "userKey" {"type" "string", "description" "The unique ID of the user that issued the token."}}}, "ChromeOsDeviceAction" {"id" "ChromeOsDeviceAction", "type" "object", "description" "JSON request template for firing actions on ChromeOs Device in Directory Devices API.", "properties" {"action" {"type" "string", "description" "Action to be taken on the ChromeOs Device", "annotations" {"required" ["directory.chromeosdevices.action"]}}, "deprovisionReason" {"type" "string"}}}, "MobileDevice" {"id" "MobileDevice", "type" "object", "description" "JSON template for Mobile Device resource in Directory API.", "properties" {"firstSync" {"type" "string", "description" "Date and time the device was first synchronized with the policy settings in the G Suite administrator control panel (Read-only)", "format" "date-time"}, "hardwareId" {"type" "string", "description" "Mobile Device Hardware Id (Read-only)"}, "userAgent" {"type" "string", "description" "Mobile Device user agent"}, "bootloaderVersion" {"type" "string", "description" "Mobile Device Bootloader version (Read-only)"}, "model" {"type" "string", "description" "Name of the model of the device"}, "buildNumber" {"type" "string", "description" "Mobile Device Build number (Read-only)"}, "resourceId" {"type" "string", "description" "Unique identifier of Mobile Device (Read-only)"}, "brand" {"type" "string", "description" "Mobile Device Brand (Read-only)"}, "applications" {"type" "array", "description" "List of applications installed on Mobile Device", "items" {"type" "object", "properties" {"displayName" {"type" "string", "description" "Display name of application"}, "packageName" {"type" "string", "description" "Package name of application"}, "permission" {"type" "array", "description" "List of Permissions for application", "items" {"type" "string"}}, "versionCode" {"type" "integer", "description" "Version code of application", "format" "int32"}, "versionName" {"type" "string", "description" "Version name of application"}}}}, "os" {"type" "string", "description" "Name of the mobile operating system"}, "manufacturer" {"type" "string", "description" "Mobile Device manufacturer (Read-only)"}, "otherAccountsInfo" {"type" "array", "description" "List of accounts added on device (Read-only)", "items" {"type" "string"}}, "email" {"type" "array", "description" "List of owner user's email addresses (Read-only)", "items" {"type" "string"}}, "meid" {"type" "string", "description" "Mobile Device MEID number (Read-only)"}, "developerOptionsStatus" {"type" "boolean", "description" "Developer options enabled or disabled on device (Read-only)"}, "hardware" {"type" "string", "description" "Mobile Device Hardware (Read-only)"}, "privilege" {"type" "string", "description" "DMAgentPermission (Read-only)"}, "devicePasswordStatus" {"type" "string", "description" "DevicePasswordStatus (Read-only)"}, "name" {"type" "array", "description" "List of owner user's names (Read-only)", "items" {"type" "string"}}, "basebandVersion" {"type" "string", "description" "Mobile Device Baseband version (Read-only)"}, "deviceCompromisedStatus" {"type" "string", "description" "Mobile Device compromised status (Read-only)"}, "status" {"type" "string", "description" "Status of the device (Read-only)"}, "imei" {"type" "string", "description" "Mobile Device IMEI number (Read-only)"}, "lastSync" {"type" "string", "description" "Date and time the device was last synchronized with the policy settings in the G Suite administrator control panel (Read-only)", "format" "date-time"}, "etag" {"type" "string", "description" "ETag of the resource."}, "kind" {"type" "string", "description" "Kind of resource this is.", "default" "admin#directory#mobiledevice"}, "kernelVersion" {"type" "string", "description" "Mobile Device Kernel version (Read-only)"}, "type" {"type" "string", "description" "The type of device (Read-only)"}, "wifiMacAddress" {"type" "string", "description" "Mobile Device WiFi MAC address (Read-only)"}, "supportsWorkProfile" {"type" "boolean", "description" "Work profile supported on device (Read-only)"}, "releaseVersion" {"type" "string", "description" "Mobile Device release version version (Read-only)"}, "encryptionStatus" {"type" "string", "description" "Mobile Device Encryption Status (Read-only)"}, "adbStatus" {"type" "boolean", "description" "Adb (USB debugging) enabled or disabled on device (Read-only)"}, "serialNumber" {"type" "string", "description" "Mobile Device SSN or Serial Number (Read-only)"}, "unknownSourcesStatus" {"type" "boolean", "description" "Unknown sources enabled or disabled on device (Read-only)"}, "networkOperator" {"type" "string", "description" "Mobile Device mobile or network operator (if available) (Read-only)"}, "deviceId" {"type" "string", "description" "Mobile Device serial number (Read-only)"}, "securityPatchLevel" {"type" "string", "description" "Mobile Device Security patch level (Read-only)", "format" "int64"}, "defaultLanguage" {"type" "string", "description" "The default locale used on the Mobile Device (Read-only)"}, "managedAccountIsOnOwnerProfile" {"type" "boolean", "description" "Boolean indicating if this account is on owner/primary profile or not (Read-only)"}}}, "Features" {"id" "Features", "type" "object", "description" "JSON template for Feature List Response object in Directory API.", "properties" {"etag" {"type" "string", "description" "ETag of the resource."}, "features" {"type" "array", "description" "The Features in this page of results.", "items" {"$ref" "Feature"}}, "kind" {"type" "string", "description" "Kind of resource this is.", "default" "admin#directory#resources#features#featuresList"}, "nextPageToken" {"type" "string", "description" "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results."}}}, "UserCustomProperties" {"id" "UserCustomProperties", "type" "object", "description" "JSON template for a set of custom properties (i.e. all fields in a particular schema)", "additionalProperties" {"type" "any"}}}}