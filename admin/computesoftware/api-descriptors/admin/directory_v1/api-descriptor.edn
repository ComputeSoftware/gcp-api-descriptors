#:compute.api-descriptor{:endpoint {:schemes ["https"], :host "www.googleapis.com", :base-path "/admin/directory/v1"}, :op->spec {"directory.users.photos.patch" {:description "Add a photo for the user. This method supports patch semantics.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/UserPhoto"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/UserPhoto"}} {:description "Email or immutable ID of the user", :in "path", :name "userKey", :required true, :type "string"}], :operationId "directory.users.photos.patch", :compute.gcp.impl.descriptor/http-method :patch, :compute.gcp.impl.descriptor/http-path "/users/{userKey}/photos/thumbnail", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.schemas.update" {:description "Update schema", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Schema"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Schema"}} {:description "Immutable ID of the G Suite account", :in "path", :name "customerId", :required true, :type "string"} {:description "Name or immutable ID of the schema.", :in "path", :name "schemaKey", :required true, :type "string"}], :operationId "directory.schemas.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/customer/{customerId}/schemas/{schemaKey}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.resources.features.update" {:description "Updates a feature.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Feature"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Feature"}} {:description "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", :in "path", :name "customer", :required true, :type "string"} {:description "The unique ID of the feature to update.", :in "path", :name "featureKey", :required true, :type "string"}], :operationId "directory.resources.features.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/resources/features/{featureKey}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.orgunits.insert" {:description "Add organizational unit", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/OrgUnit"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/OrgUnit"}} {:description "Immutable ID of the G Suite account", :in "path", :name "customerId", :required true, :type "string"}], :operationId "directory.orgunits.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/customer/{customerId}/orgunits", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.users.aliases.insert" {:description "Add a alias for the user", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Alias"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Alias"}} {:description "Email or immutable ID of the user", :in "path", :name "userKey", :required true, :type "string"}], :operationId "directory.users.aliases.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/users/{userKey}/aliases", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.chromeosdevices.moveDevicesToOu" {:description "Move or insert multiple Chrome OS Devices to organizational unit", :responses {"200" {:description "Successful response"}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/ChromeOsMoveDevicesToOu"}} {:description "Immutable ID of the G Suite account", :in "path", :name "customerId", :required true, :type "string"} {:description "Full path of the target organizational unit or its ID", :in "query", :name "orgUnitPath", :required true, :type "string"}], :operationId "directory.chromeosdevices.moveDevicesToOu", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/customer/{customerId}/devices/chromeos/moveDevicesToOu", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.roleAssignments.list" {:description "Retrieves a paginated list of all roleAssignments.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/RoleAssignments"}}}, :parameters [{:description "Immutable ID of the G Suite account.", :in "path", :name "customer", :required true, :type "string"} {:description "Maximum number of results to return.", :in "query", :maximum 200, :minimum 1, :name "maxResults", :type "integer"} {:description "Token to specify the next page in the list.", :in "query", :name "pageToken", :type "string"} {:description "Immutable ID of a role. If included in the request, returns only role assignments containing this role ID.", :in "query", :name "roleId", :type "string"} {:description "The user's primary email address, alias email address, or unique user ID. If included in the request, returns role assignments only for this user.", :in "query", :name "userKey", :type "string"}], :operationId "directory.roleAssignments.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/roleassignments", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.members.get" {:description "Retrieve Group Member", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Member"}}}, :parameters [{:description "Email or immutable ID of the group", :in "path", :name "groupKey", :required true, :type "string"} {:description "Email or immutable ID of the member", :in "path", :name "memberKey", :required true, :type "string"}], :operationId "directory.members.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/groups/{groupKey}/members/{memberKey}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.verificationCodes.list" {:description "Returns the current set of valid backup verification codes for the specified user.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/VerificationCodes"}}}, :parameters [{:description "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.", :in "path", :name "userKey", :required true, :type "string"}], :operationId "directory.verificationCodes.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/users/{userKey}/verificationCodes", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.groups.aliases.insert" {:description "Add a alias for the group", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Alias"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Alias"}} {:description "Email or immutable ID of the group", :in "path", :name "groupKey", :required true, :type "string"}], :operationId "directory.groups.aliases.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/groups/{groupKey}/aliases", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.resources.features.rename" {:description "Renames a feature.", :responses {"200" {:description "Successful response"}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/FeatureRename"}} {:description "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", :in "path", :name "customer", :required true, :type "string"} {:description "The unique ID of the feature to rename.", :in "path", :name "oldName", :required true, :type "string"}], :operationId "directory.resources.features.rename", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/resources/features/{oldName}/rename", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "admin.channels.stop" {:description "Stop watching resources through this channel", :responses {"200" {:description "Successful response"}}, :parameters [{:in "body", :name "resource", :schema {:$ref "#/definitions/Channel"}}], :operationId "admin.channels.stop", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/admin/directory_v1/channels/stop", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.roleAssignments.insert" {:description "Creates a role assignment.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/RoleAssignment"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/RoleAssignment"}} {:description "Immutable ID of the G Suite account.", :in "path", :name "customer", :required true, :type "string"}], :operationId "directory.roleAssignments.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/roleassignments", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.users.insert" {:description "create user.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/User"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/User"}}], :operationId "directory.users.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/users", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.domains.list" {:description "Lists the domains of the customer.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Domains2"}}}, :parameters [{:description "Immutable ID of the G Suite account.", :in "path", :name "customer", :required true, :type "string"}], :operationId "directory.domains.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/domains", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.customers.get" {:description "Retrieves a customer.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Customer"}}}, :parameters [{:description "Id of the customer to be retrieved", :in "path", :name "customerKey", :required true, :type "string"}], :operationId "directory.customers.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/customers/{customerKey}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.users.makeAdmin" {:description "change admin status of a user", :responses {"200" {:description "Successful response"}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/UserMakeAdmin"}} {:description "Email or immutable ID of the user as admin", :in "path", :name "userKey", :required true, :type "string"}], :operationId "directory.users.makeAdmin", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/users/{userKey}/makeAdmin", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.asps.list" {:description "List the ASPs issued by a user.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Asps"}}}, :parameters [{:description "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.", :in "path", :name "userKey", :required true, :type "string"}], :operationId "directory.asps.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/users/{userKey}/asps", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.users.aliases.delete" {:description "Remove a alias for the user", :responses {"200" {:description "Successful response"}}, :parameters [{:description "The alias to be removed", :in "path", :name "alias", :required true, :type "string"} {:description "Email or immutable ID of the user", :in "path", :name "userKey", :required true, :type "string"}], :operationId "directory.users.aliases.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/users/{userKey}/aliases/{alias}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.resources.calendars.update" {:description "Updates a calendar resource.\n\nThis method supports patch semantics, meaning you only need to include the fields you wish to update. Fields that are not present in the request will be preserved.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/CalendarResource"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/CalendarResource"}} {:description "The unique ID of the calendar resource to update.", :in "path", :name "calendarResourceId", :required true, :type "string"} {:description "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", :in "path", :name "customer", :required true, :type "string"}], :operationId "directory.resources.calendars.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/resources/calendars/{calendarResourceId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.groups.insert" {:description "Create Group", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Group"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Group"}}], :operationId "directory.groups.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/groups", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.roles.insert" {:description "Creates a role.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Role"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Role"}} {:description "Immutable ID of the G Suite account.", :in "path", :name "customer", :required true, :type "string"}], :operationId "directory.roles.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/roles", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.resources.buildings.list" {:description "Retrieves a list of buildings for an account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Buildings"}}}, :parameters [{:description "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", :in "path", :name "customer", :required true, :type "string"} {:description "Maximum number of results to return.", :in "query", :maximum 500, :minimum 1, :name "maxResults", :type "integer"} {:description "Token to specify the next page in the list.", :in "query", :name "pageToken", :type "string"}], :operationId "directory.resources.buildings.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/resources/buildings", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.resources.features.insert" {:description "Inserts a feature.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Feature"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Feature"}} {:description "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", :in "path", :name "customer", :required true, :type "string"}], :operationId "directory.resources.features.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/resources/features", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.resources.buildings.patch" {:description "Updates a building. This method supports patch semantics.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Building"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Building"}} {:description "The ID of the building to update.", :in "path", :name "buildingId", :required true, :type "string"} {:default "SOURCE_UNSPECIFIED", :description "Source from which Building.coordinates are derived.", :enum ["CLIENT_SPECIFIED" "RESOLVED_FROM_ADDRESS" "SOURCE_UNSPECIFIED"], :in "query", :name "coordinatesSource", :type "string"} {:description "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", :in "path", :name "customer", :required true, :type "string"}], :operationId "directory.resources.buildings.patch", :compute.gcp.impl.descriptor/http-method :patch, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/resources/buildings/{buildingId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.privileges.list" {:description "Retrieves a paginated list of all privileges for a customer.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Privileges"}}}, :parameters [{:description "Immutable ID of the G Suite account.", :in "path", :name "customer", :required true, :type "string"}], :operationId "directory.privileges.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/roles/ALL/privileges", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.users.watch" {:description "Watch for changes in users list", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Channel"}}}, :parameters [{:description "Comma-separated list of schema names. All fields from these schemas are fetched. This should only be set when projection=custom.", :in "query", :name "customFieldMask", :type "string"} {:description "Immutable ID of the G Suite account. In case of multi-domain, to fetch all users for a customer, fill this field instead of domain.", :in "query", :name "customer", :type "string"} {:description "Name of the domain. Fill this field to get users from only this domain. To return all users in a multi-domain fill customer field instead.", :in "query", :name "domain", :type "string"} {:description "Event on which subscription is intended (if subscribing)", :enum ["add" "delete" "makeAdmin" "undelete" "update"], :in "query", :name "event", :type "string"} {:default 100, :description "Maximum number of results to return.", :in "query", :maximum 500, :minimum 1, :name "maxResults", :type "integer"} {:description "Column to use for sorting results", :enum ["email" "familyName" "givenName"], :in "query", :name "orderBy", :type "string"} {:description "Token to specify next page in the list", :in "query", :name "pageToken", :type "string"} {:default "basic", :description "What subset of fields to fetch for this user.", :enum ["basic" "custom" "full"], :in "query", :name "projection", :type "string"} {:description "Query string search. Should be of the form \"\". Complete documentation is at https://developers.google.com/admin-sdk/directory/v1/guides/search-users", :in "query", :name "query", :type "string"} {:in "body", :name "resource", :schema {:$ref "#/definitions/Channel"}} {:description "If set to true, retrieves the list of deleted users. (Default: false)", :in "query", :name "showDeleted", :type "string"} {:description "Whether to return results in ascending or descending order.", :enum ["ASCENDING" "DESCENDING"], :in "query", :name "sortOrder", :type "string"} {:default "admin_view", :description "Whether to fetch the ADMIN_VIEW or DOMAIN_PUBLIC view of the user.", :enum ["admin_view" "domain_public"], :in "query", :name "viewType", :type "string"}], :operationId "directory.users.watch", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/users/watch", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.schemas.get" {:description "Retrieve schema", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Schema"}}}, :parameters [{:description "Immutable ID of the G Suite account", :in "path", :name "customerId", :required true, :type "string"} {:description "Name or immutable ID of the schema", :in "path", :name "schemaKey", :required true, :type "string"}], :operationId "directory.schemas.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/customer/{customerId}/schemas/{schemaKey}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.chromeosdevices.get" {:description "Retrieve Chrome OS Device", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ChromeOsDevice"}}}, :parameters [{:description "Immutable ID of the G Suite account", :in "path", :name "customerId", :required true, :type "string"} {:description "Immutable ID of Chrome OS Device", :in "path", :name "deviceId", :required true, :type "string"} {:description "Restrict information returned to a set of selected fields.", :enum ["BASIC" "FULL"], :in "query", :name "projection", :type "string"}], :operationId "directory.chromeosdevices.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/customer/{customerId}/devices/chromeos/{deviceId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.users.delete" {:description "Delete user", :responses {"200" {:description "Successful response"}}, :parameters [{:description "Email or immutable ID of the user", :in "path", :name "userKey", :required true, :type "string"}], :operationId "directory.users.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/users/{userKey}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.chromeosdevices.update" {:description "Update Chrome OS Device", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ChromeOsDevice"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/ChromeOsDevice"}} {:description "Immutable ID of the G Suite account", :in "path", :name "customerId", :required true, :type "string"} {:description "Immutable ID of Chrome OS Device", :in "path", :name "deviceId", :required true, :type "string"} {:description "Restrict information returned to a set of selected fields.", :enum ["BASIC" "FULL"], :in "query", :name "projection", :type "string"}], :operationId "directory.chromeosdevices.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/customer/{customerId}/devices/chromeos/{deviceId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.groups.aliases.delete" {:description "Remove a alias for the group", :responses {"200" {:description "Successful response"}}, :parameters [{:description "The alias to be removed", :in "path", :name "alias", :required true, :type "string"} {:description "Email or immutable ID of the group", :in "path", :name "groupKey", :required true, :type "string"}], :operationId "directory.groups.aliases.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/groups/{groupKey}/aliases/{alias}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.resources.features.list" {:description "Retrieves a list of features for an account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Features"}}}, :parameters [{:description "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", :in "path", :name "customer", :required true, :type "string"} {:description "Maximum number of results to return.", :in "query", :maximum 500, :minimum 1, :name "maxResults", :type "integer"} {:description "Token to specify the next page in the list.", :in "query", :name "pageToken", :type "string"}], :operationId "directory.resources.features.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/resources/features", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.domains.delete" {:description "Deletes a domain of the customer.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "Immutable ID of the G Suite account.", :in "path", :name "customer", :required true, :type "string"} {:description "Name of domain to be deleted", :in "path", :name "domainName", :required true, :type "string"}], :operationId "directory.domains.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/domains/{domainName}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.members.delete" {:description "Remove membership.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "Email or immutable ID of the group", :in "path", :name "groupKey", :required true, :type "string"} {:description "Email or immutable ID of the member", :in "path", :name "memberKey", :required true, :type "string"}], :operationId "directory.members.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/groups/{groupKey}/members/{memberKey}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.groups.patch" {:description "Update Group. This method supports patch semantics.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Group"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Group"}} {:description "Email or immutable ID of the group. If ID, it should match with id of group object", :in "path", :name "groupKey", :required true, :type "string"}], :operationId "directory.groups.patch", :compute.gcp.impl.descriptor/http-method :patch, :compute.gcp.impl.descriptor/http-path "/groups/{groupKey}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.notifications.update" {:description "Updates a notification.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Notification"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Notification"}} {:description "The unique ID for the customer's G Suite account.", :in "path", :name "customer", :required true, :type "string"} {:description "The unique ID of the notification.", :in "path", :name "notificationId", :required true, :type "string"}], :operationId "directory.notifications.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/notifications/{notificationId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.members.patch" {:description "Update membership of a user in the specified group. This method supports patch semantics.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Member"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Member"}} {:description "Email or immutable ID of the group. If ID, it should match with id of group object", :in "path", :name "groupKey", :required true, :type "string"} {:description "Email or immutable ID of the user. If ID, it should match with id of member object", :in "path", :name "memberKey", :required true, :type "string"}], :operationId "directory.members.patch", :compute.gcp.impl.descriptor/http-method :patch, :compute.gcp.impl.descriptor/http-path "/groups/{groupKey}/members/{memberKey}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.roleAssignments.get" {:description "Retrieve a role assignment.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/RoleAssignment"}}}, :parameters [{:description "Immutable ID of the G Suite account.", :in "path", :name "customer", :required true, :type "string"} {:description "Immutable ID of the role assignment.", :in "path", :name "roleAssignmentId", :required true, :type "string"}], :operationId "directory.roleAssignments.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/roleassignments/{roleAssignmentId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.roles.patch" {:description "Updates a role. This method supports patch semantics.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Role"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Role"}} {:description "Immutable ID of the G Suite account.", :in "path", :name "customer", :required true, :type "string"} {:description "Immutable ID of the role.", :in "path", :name "roleId", :required true, :type "string"}], :operationId "directory.roles.patch", :compute.gcp.impl.descriptor/http-method :patch, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/roles/{roleId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.users.photos.delete" {:description "Remove photos for the user", :responses {"200" {:description "Successful response"}}, :parameters [{:description "Email or immutable ID of the user", :in "path", :name "userKey", :required true, :type "string"}], :operationId "directory.users.photos.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/users/{userKey}/photos/thumbnail", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.resources.calendars.list" {:description "Retrieves a list of calendar resources for an account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/CalendarResources"}}}, :parameters [{:description "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", :in "path", :name "customer", :required true, :type "string"} {:description "Maximum number of results to return.", :in "query", :maximum 500, :minimum 1, :name "maxResults", :type "integer"} {:description "Field(s) to sort results by in either ascending or descending order. Supported fields include resourceId, resourceName, capacity, buildingId, and floorName. If no order is specified, defaults to ascending. Should be of the form \"field [asc|desc], field [asc|desc], ...\". For example buildingId, capacity desc would return results sorted first by buildingId in ascending order then by capacity in descending order.", :in "query", :name "orderBy", :type "string"} {:description "Token to specify the next page in the list.", :in "query", :name "pageToken", :type "string"} {:description "String query used to filter results. Should be of the form \"field operator value\" where field can be any of supported fields and operators can be any of supported operations. Operators include '=' for exact match and ':' for prefix match or HAS match where applicable. For prefix match, the value should always be followed by a *. Supported fields include generatedResourceName, name, buildingId, featureInstances.feature.name. For example buildingId=US-NYC-9TH AND featureInstances.feature.name:Phone.", :in "query", :name "query", :type "string"}], :operationId "directory.resources.calendars.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/resources/calendars", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.resolvedAppAccessSettings.GetSettings" {:description "Retrieves resolved app access settings of the logged in user.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/AppAccessCollections"}}}, :operationId "directory.resolvedAppAccessSettings.GetSettings", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/resolvedappaccesssettings", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.resources.calendars.get" {:description "Retrieves a calendar resource.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/CalendarResource"}}}, :parameters [{:description "The unique ID of the calendar resource to retrieve.", :in "path", :name "calendarResourceId", :required true, :type "string"} {:description "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", :in "path", :name "customer", :required true, :type "string"}], :operationId "directory.resources.calendars.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/resources/calendars/{calendarResourceId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.resources.features.delete" {:description "Deletes a feature.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", :in "path", :name "customer", :required true, :type "string"} {:description "The unique ID of the feature to delete.", :in "path", :name "featureKey", :required true, :type "string"}], :operationId "directory.resources.features.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/resources/features/{featureKey}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.mobiledevices.delete" {:description "Delete Mobile Device", :responses {"200" {:description "Successful response"}}, :parameters [{:description "Immutable ID of the G Suite account", :in "path", :name "customerId", :required true, :type "string"} {:description "Immutable ID of Mobile Device", :in "path", :name "resourceId", :required true, :type "string"}], :operationId "directory.mobiledevices.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/customer/{customerId}/devices/mobile/{resourceId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.domainAliases.list" {:description "Lists the domain aliases of the customer.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/DomainAliases"}}}, :parameters [{:description "Immutable ID of the G Suite account.", :in "path", :name "customer", :required true, :type "string"} {:description "Name of the parent domain for which domain aliases are to be fetched.", :in "query", :name "parentDomainName", :type "string"}], :operationId "directory.domainAliases.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/domainaliases", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.groups.list" {:description "Retrieve all groups of a domain or of a user given a userKey (paginated)", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Groups"}}}, :parameters [{:description "Immutable ID of the G Suite account. In case of multi-domain, to fetch all groups for a customer, fill this field instead of domain.", :in "query", :name "customer", :type "string"} {:description "Name of the domain. Fill this field to get groups from only this domain. To return all groups in a multi-domain fill customer field instead.", :in "query", :name "domain", :type "string"} {:default 200, :description "Maximum number of results to return. Max allowed value is 200.", :in "query", :minimum 1, :name "maxResults", :type "integer"} {:description "Column to use for sorting results", :enum ["email"], :in "query", :name "orderBy", :type "string"} {:description "Token to specify next page in the list", :in "query", :name "pageToken", :type "string"} {:description "Query string search. Should be of the form \"\". Complete documentation is at https://developers.google.com/admin-sdk/directory/v1/guides/search-groups", :in "query", :name "query", :type "string"} {:description "Whether to return results in ascending or descending order. Only of use when orderBy is also used", :enum ["ASCENDING" "DESCENDING"], :in "query", :name "sortOrder", :type "string"} {:description "Email or immutable ID of the user if only those groups are to be listed, the given user is a member of. If it's an ID, it should match with the ID of the user object.", :in "query", :name "userKey", :type "string"}], :operationId "directory.groups.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/groups", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.users.list" {:description "Retrieve either deleted users or all users in a domain (paginated)", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Users"}}}, :parameters [{:description "Comma-separated list of schema names. All fields from these schemas are fetched. This should only be set when projection=custom.", :in "query", :name "customFieldMask", :type "string"} {:description "Immutable ID of the G Suite account. In case of multi-domain, to fetch all users for a customer, fill this field instead of domain.", :in "query", :name "customer", :type "string"} {:description "Name of the domain. Fill this field to get users from only this domain. To return all users in a multi-domain fill customer field instead.", :in "query", :name "domain", :type "string"} {:description "Event on which subscription is intended (if subscribing)", :enum ["add" "delete" "makeAdmin" "undelete" "update"], :in "query", :name "event", :type "string"} {:default 100, :description "Maximum number of results to return.", :in "query", :maximum 500, :minimum 1, :name "maxResults", :type "integer"} {:description "Column to use for sorting results", :enum ["email" "familyName" "givenName"], :in "query", :name "orderBy", :type "string"} {:description "Token to specify next page in the list", :in "query", :name "pageToken", :type "string"} {:default "basic", :description "What subset of fields to fetch for this user.", :enum ["basic" "custom" "full"], :in "query", :name "projection", :type "string"} {:description "Query string search. Should be of the form \"\". Complete documentation is at https://developers.google.com/admin-sdk/directory/v1/guides/search-users", :in "query", :name "query", :type "string"} {:description "If set to true, retrieves the list of deleted users. (Default: false)", :in "query", :name "showDeleted", :type "string"} {:description "Whether to return results in ascending or descending order.", :enum ["ASCENDING" "DESCENDING"], :in "query", :name "sortOrder", :type "string"} {:default "admin_view", :description "Whether to fetch the ADMIN_VIEW or DOMAIN_PUBLIC view of the user.", :enum ["admin_view" "domain_public"], :in "query", :name "viewType", :type "string"}], :operationId "directory.users.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/users", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.resources.buildings.get" {:description "Retrieves a building.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Building"}}}, :parameters [{:description "The unique ID of the building to retrieve.", :in "path", :name "buildingId", :required true, :type "string"} {:description "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", :in "path", :name "customer", :required true, :type "string"}], :operationId "directory.resources.buildings.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/resources/buildings/{buildingId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.users.patch" {:description "update user. This method supports patch semantics.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/User"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/User"}} {:description "Email or immutable ID of the user. If ID, it should match with id of user object", :in "path", :name "userKey", :required true, :type "string"}], :operationId "directory.users.patch", :compute.gcp.impl.descriptor/http-method :patch, :compute.gcp.impl.descriptor/http-path "/users/{userKey}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.tokens.get" {:description "Get information about an access token issued by a user.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Token"}}}, :parameters [{:description "The Client ID of the application the token is issued to.", :in "path", :name "clientId", :required true, :type "string"} {:description "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.", :in "path", :name "userKey", :required true, :type "string"}], :operationId "directory.tokens.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/users/{userKey}/tokens/{clientId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.verificationCodes.generate" {:description "Generate new backup verification codes for the user.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "Email or immutable ID of the user", :in "path", :name "userKey", :required true, :type "string"}], :operationId "directory.verificationCodes.generate", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/users/{userKey}/verificationCodes/generate", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.groups.update" {:description "Update Group", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Group"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Group"}} {:description "Email or immutable ID of the group. If ID, it should match with id of group object", :in "path", :name "groupKey", :required true, :type "string"}], :operationId "directory.groups.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/groups/{groupKey}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.schemas.list" {:description "Retrieve all schemas for a customer", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Schemas"}}}, :parameters [{:description "Immutable ID of the G Suite account", :in "path", :name "customerId", :required true, :type "string"}], :operationId "directory.schemas.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/customer/{customerId}/schemas", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.customers.patch" {:description "Updates a customer. This method supports patch semantics.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Customer"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Customer"}} {:description "Id of the customer to be updated", :in "path", :name "customerKey", :required true, :type "string"}], :operationId "directory.customers.patch", :compute.gcp.impl.descriptor/http-method :patch, :compute.gcp.impl.descriptor/http-path "/customers/{customerKey}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.users.get" {:description "retrieve user", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/User"}}}, :parameters [{:description "Comma-separated list of schema names. All fields from these schemas are fetched. This should only be set when projection=custom.", :in "query", :name "customFieldMask", :type "string"} {:default "basic", :description "What subset of fields to fetch for this user.", :enum ["basic" "custom" "full"], :in "query", :name "projection", :type "string"} {:description "Email or immutable ID of the user", :in "path", :name "userKey", :required true, :type "string"} {:default "admin_view", :description "Whether to fetch the ADMIN_VIEW or DOMAIN_PUBLIC view of the user.", :enum ["admin_view" "domain_public"], :in "query", :name "viewType", :type "string"}], :operationId "directory.users.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/users/{userKey}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.domainAliases.insert" {:description "Inserts a Domain alias of the customer.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/DomainAlias"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/DomainAlias"}} {:description "Immutable ID of the G Suite account.", :in "path", :name "customer", :required true, :type "string"}], :operationId "directory.domainAliases.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/domainaliases", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.mobiledevices.get" {:description "Retrieve Mobile Device", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/MobileDevice"}}}, :parameters [{:description "Immutable ID of the G Suite account", :in "path", :name "customerId", :required true, :type "string"} {:description "Restrict information returned to a set of selected fields.", :enum ["BASIC" "FULL"], :in "query", :name "projection", :type "string"} {:description "Immutable ID of Mobile Device", :in "path", :name "resourceId", :required true, :type "string"}], :operationId "directory.mobiledevices.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/customer/{customerId}/devices/mobile/{resourceId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.groups.get" {:description "Retrieve Group", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Group"}}}, :parameters [{:description "Email or immutable ID of the group", :in "path", :name "groupKey", :required true, :type "string"}], :operationId "directory.groups.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/groups/{groupKey}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.members.insert" {:description "Add user to the specified group.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Member"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Member"}} {:description "Email or immutable ID of the group", :in "path", :name "groupKey", :required true, :type "string"}], :operationId "directory.members.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/groups/{groupKey}/members", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.schemas.insert" {:description "Create schema.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Schema"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Schema"}} {:description "Immutable ID of the G Suite account", :in "path", :name "customerId", :required true, :type "string"}], :operationId "directory.schemas.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/customer/{customerId}/schemas", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.roles.list" {:description "Retrieves a paginated list of all the roles in a domain.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Roles"}}}, :parameters [{:description "Immutable ID of the G Suite account.", :in "path", :name "customer", :required true, :type "string"} {:description "Maximum number of results to return.", :in "query", :maximum 100, :minimum 1, :name "maxResults", :type "integer"} {:description "Token to specify the next page in the list.", :in "query", :name "pageToken", :type "string"}], :operationId "directory.roles.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/roles", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.users.photos.get" {:description "Retrieve photo of a user", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/UserPhoto"}}}, :parameters [{:description "Email or immutable ID of the user", :in "path", :name "userKey", :required true, :type "string"}], :operationId "directory.users.photos.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/users/{userKey}/photos/thumbnail", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.notifications.delete" {:description "Deletes a notification", :responses {"200" {:description "Successful response"}}, :parameters [{:description "The unique ID for the customer's G Suite account. The customerId is also returned as part of the Users resource.", :in "path", :name "customer", :required true, :type "string"} {:description "The unique ID of the notification.", :in "path", :name "notificationId", :required true, :type "string"}], :operationId "directory.notifications.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/notifications/{notificationId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.orgunits.list" {:description "Retrieve all organizational units", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/OrgUnits"}}}, :parameters [{:description "Immutable ID of the G Suite account", :in "path", :name "customerId", :required true, :type "string"} {:default "", :description "the URL-encoded organizational unit's path or its ID", :in "query", :name "orgUnitPath", :type "string"} {:description "Whether to return all sub-organizations or just immediate children", :enum ["all" "children"], :in "query", :name "type", :type "string"}], :operationId "directory.orgunits.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/customer/{customerId}/orgunits", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.orgunits.update" {:description "Update Organization Unit", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/OrgUnit"}}}, :parameters [{:description "Immutable id of the Google Apps account", :in "path", :name "customerId", :required true, :type "string"} {:description "Full path of the organization unit or its Id", :in "path", :name "orgUnitPath", :required true, :type "string", :x-reservedExpansion true} {:in "body", :name "body", :schema {:$ref "#/definitions/OrgUnit"}}], :operationId "directory.orgunits.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/customer/{customerId}/orgunits/{orgUnitPath}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.members.hasMember" {:description "Checks whether the given user is a member of the group. Membership can be direct or nested.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/MembersHasMember"}}}, :parameters [{:description "Identifies the group in the API request. The value can be the group's email address, group alias, or the unique group ID.", :in "path", :name "groupKey", :required true, :type "string"} {:description "Identifies the user member in the API request. The value can be the user's primary email address, alias, or unique ID.", :in "path", :name "memberKey", :required true, :type "string"}], :operationId "directory.members.hasMember", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/groups/{groupKey}/hasMember/{memberKey}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.asps.get" {:description "Get information about an ASP issued by a user.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Asp"}}}, :parameters [{:description "The unique ID of the ASP.", :in "path", :name "codeId", :required true, :type "integer"} {:description "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.", :in "path", :name "userKey", :required true, :type "string"}], :operationId "directory.asps.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/users/{userKey}/asps/{codeId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.asps.delete" {:description "Delete an ASP issued by a user.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "The unique ID of the ASP to be deleted.", :in "path", :name "codeId", :required true, :type "integer"} {:description "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.", :in "path", :name "userKey", :required true, :type "string"}], :operationId "directory.asps.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/users/{userKey}/asps/{codeId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.resources.calendars.delete" {:description "Deletes a calendar resource.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "The unique ID of the calendar resource to delete.", :in "path", :name "calendarResourceId", :required true, :type "string"} {:description "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", :in "path", :name "customer", :required true, :type "string"}], :operationId "directory.resources.calendars.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/resources/calendars/{calendarResourceId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.chromeosdevices.list" {:description "Retrieve all Chrome OS Devices of a customer (paginated)", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ChromeOsDevices"}}}, :parameters [{:description "Immutable ID of the G Suite account", :in "path", :name "customerId", :required true, :type "string"} {:default 100, :description "Maximum number of results to return. Max allowed value is 200.", :in "query", :minimum 1, :name "maxResults", :type "integer"} {:description "Column to use for sorting results", :enum ["annotatedLocation" "annotatedUser" "lastSync" "notes" "serialNumber" "status" "supportEndDate"], :in "query", :name "orderBy", :type "string"} {:description "Full path of the organizational unit or its ID", :in "query", :name "orgUnitPath", :type "string"} {:description "Token to specify next page in the list", :in "query", :name "pageToken", :type "string"} {:description "Restrict information returned to a set of selected fields.", :enum ["BASIC" "FULL"], :in "query", :name "projection", :type "string"} {:description "Search string in the format given at http://support.google.com/chromeos/a/bin/answer.py?answer=1698333", :in "query", :name "query", :type "string"} {:description "Whether to return results in ascending or descending order. Only of use when orderBy is also used", :enum ["ASCENDING" "DESCENDING"], :in "query", :name "sortOrder", :type "string"}], :operationId "directory.chromeosdevices.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/customer/{customerId}/devices/chromeos", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.resources.calendars.insert" {:description "Inserts a calendar resource.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/CalendarResource"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/CalendarResource"}} {:description "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", :in "path", :name "customer", :required true, :type "string"}], :operationId "directory.resources.calendars.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/resources/calendars", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.chromeosdevices.patch" {:description "Update Chrome OS Device. This method supports patch semantics.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ChromeOsDevice"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/ChromeOsDevice"}} {:description "Immutable ID of the G Suite account", :in "path", :name "customerId", :required true, :type "string"} {:description "Immutable ID of Chrome OS Device", :in "path", :name "deviceId", :required true, :type "string"} {:description "Restrict information returned to a set of selected fields.", :enum ["BASIC" "FULL"], :in "query", :name "projection", :type "string"}], :operationId "directory.chromeosdevices.patch", :compute.gcp.impl.descriptor/http-method :patch, :compute.gcp.impl.descriptor/http-path "/customer/{customerId}/devices/chromeos/{deviceId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.groups.delete" {:description "Delete Group", :responses {"200" {:description "Successful response"}}, :parameters [{:description "Email or immutable ID of the group", :in "path", :name "groupKey", :required true, :type "string"}], :operationId "directory.groups.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/groups/{groupKey}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.notifications.get" {:description "Retrieves a notification.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Notification"}}}, :parameters [{:description "The unique ID for the customer's G Suite account. The customerId is also returned as part of the Users resource.", :in "path", :name "customer", :required true, :type "string"} {:description "The unique ID of the notification.", :in "path", :name "notificationId", :required true, :type "string"}], :operationId "directory.notifications.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/notifications/{notificationId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.notifications.patch" {:description "Updates a notification. This method supports patch semantics.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Notification"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Notification"}} {:description "The unique ID for the customer's G Suite account.", :in "path", :name "customer", :required true, :type "string"} {:description "The unique ID of the notification.", :in "path", :name "notificationId", :required true, :type "string"}], :operationId "directory.notifications.patch", :compute.gcp.impl.descriptor/http-method :patch, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/notifications/{notificationId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.tokens.delete" {:description "Delete all access tokens issued by a user for an application.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "The Client ID of the application the token is issued to.", :in "path", :name "clientId", :required true, :type "string"} {:description "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.", :in "path", :name "userKey", :required true, :type "string"}], :operationId "directory.tokens.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/users/{userKey}/tokens/{clientId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.orgunits.get" {:description "Retrieve Organization Unit", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/OrgUnit"}}}, :parameters [{:description "Immutable id of the Google Apps account", :in "path", :name "customerId", :required true, :type "string"} {:description "Full path of the organization unit or its Id", :in "path", :name "orgUnitPath", :required true, :type "string", :x-reservedExpansion true}], :operationId "directory.orgunits.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/customer/{customerId}/orgunits/{orgUnitPath}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.members.list" {:description "Retrieve all members in a group (paginated)", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Members"}}}, :parameters [{:description "Email or immutable ID of the group", :in "path", :name "groupKey", :required true, :type "string"} {:description "Whether to list indirect memberships. Default: false.", :in "query", :name "includeDerivedMembership", :type "boolean"} {:default 200, :description "Maximum number of results to return. Max allowed value is 200.", :in "query", :minimum 1, :name "maxResults", :type "integer"} {:description "Token to specify next page in the list", :in "query", :name "pageToken", :type "string"} {:description "Comma separated role values to filter list results on.", :in "query", :name "roles", :type "string"}], :operationId "directory.members.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/groups/{groupKey}/members", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.schemas.delete" {:description "Delete schema", :responses {"200" {:description "Successful response"}}, :parameters [{:description "Immutable ID of the G Suite account", :in "path", :name "customerId", :required true, :type "string"} {:description "Name or immutable ID of the schema", :in "path", :name "schemaKey", :required true, :type "string"}], :operationId "directory.schemas.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/customer/{customerId}/schemas/{schemaKey}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.roles.update" {:description "Updates a role.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Role"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Role"}} {:description "Immutable ID of the G Suite account.", :in "path", :name "customer", :required true, :type "string"} {:description "Immutable ID of the role.", :in "path", :name "roleId", :required true, :type "string"}], :operationId "directory.roles.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/roles/{roleId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.users.aliases.watch" {:description "Watch for changes in user aliases list", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Channel"}}}, :parameters [{:description "Event on which subscription is intended (if subscribing)", :enum ["add" "delete"], :in "query", :name "event", :type "string"} {:in "body", :name "resource", :schema {:$ref "#/definitions/Channel"}} {:description "Email or immutable ID of the user", :in "path", :name "userKey", :required true, :type "string"}], :operationId "directory.users.aliases.watch", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/users/{userKey}/aliases/watch", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.users.aliases.list" {:description "List all aliases for a user", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Aliases"}}}, :parameters [{:description "Event on which subscription is intended (if subscribing)", :enum ["add" "delete"], :in "query", :name "event", :type "string"} {:description "Email or immutable ID of the user", :in "path", :name "userKey", :required true, :type "string"}], :operationId "directory.users.aliases.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/users/{userKey}/aliases", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.groups.aliases.list" {:description "List all aliases for a group", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Aliases"}}}, :parameters [{:description "Email or immutable ID of the group", :in "path", :name "groupKey", :required true, :type "string"}], :operationId "directory.groups.aliases.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/groups/{groupKey}/aliases", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.resources.buildings.insert" {:description "Inserts a building.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Building"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Building"}} {:default "SOURCE_UNSPECIFIED", :description "Source from which Building.coordinates are derived.", :enum ["CLIENT_SPECIFIED" "RESOLVED_FROM_ADDRESS" "SOURCE_UNSPECIFIED"], :in "query", :name "coordinatesSource", :type "string"} {:description "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", :in "path", :name "customer", :required true, :type "string"}], :operationId "directory.resources.buildings.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/resources/buildings", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.verificationCodes.invalidate" {:description "Invalidate the current backup verification codes for the user.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "Email or immutable ID of the user", :in "path", :name "userKey", :required true, :type "string"}], :operationId "directory.verificationCodes.invalidate", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/users/{userKey}/verificationCodes/invalidate", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.notifications.list" {:description "Retrieves a list of notifications.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Notifications"}}}, :parameters [{:description "The unique ID for the customer's G Suite account.", :in "path", :name "customer", :required true, :type "string"} {:description "The ISO 639-1 code of the language notifications are returned in. The default is English (en).", :in "query", :name "language", :type "string"} {:description "Maximum number of notifications to return per page. The default is 100.", :in "query", :name "maxResults", :type "integer"} {:description "The token to specify the page of results to retrieve.", :in "query", :name "pageToken", :type "string"}], :operationId "directory.notifications.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/notifications", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.roles.get" {:description "Retrieves a role.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Role"}}}, :parameters [{:description "Immutable ID of the G Suite account.", :in "path", :name "customer", :required true, :type "string"} {:description "Immutable ID of the role.", :in "path", :name "roleId", :required true, :type "string"}], :operationId "directory.roles.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/roles/{roleId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.resources.buildings.update" {:description "Updates a building.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Building"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Building"}} {:description "The ID of the building to update.", :in "path", :name "buildingId", :required true, :type "string"} {:default "SOURCE_UNSPECIFIED", :description "Source from which Building.coordinates are derived.", :enum ["CLIENT_SPECIFIED" "RESOLVED_FROM_ADDRESS" "SOURCE_UNSPECIFIED"], :in "query", :name "coordinatesSource", :type "string"} {:description "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", :in "path", :name "customer", :required true, :type "string"}], :operationId "directory.resources.buildings.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/resources/buildings/{buildingId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.domains.get" {:description "Retrieves a domain of the customer.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Domains"}}}, :parameters [{:description "Immutable ID of the G Suite account.", :in "path", :name "customer", :required true, :type "string"} {:description "Name of domain to be retrieved", :in "path", :name "domainName", :required true, :type "string"}], :operationId "directory.domains.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/domains/{domainName}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.resources.features.patch" {:description "Updates a feature. This method supports patch semantics.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Feature"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Feature"}} {:description "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", :in "path", :name "customer", :required true, :type "string"} {:description "The unique ID of the feature to update.", :in "path", :name "featureKey", :required true, :type "string"}], :operationId "directory.resources.features.patch", :compute.gcp.impl.descriptor/http-method :patch, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/resources/features/{featureKey}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.users.undelete" {:description "Undelete a deleted user", :responses {"200" {:description "Successful response"}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/UserUndelete"}} {:description "The immutable id of the user", :in "path", :name "userKey", :required true, :type "string"}], :operationId "directory.users.undelete", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/users/{userKey}/undelete", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.orgunits.patch" {:description "Update Organization Unit. This method supports patch semantics.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/OrgUnit"}}}, :parameters [{:description "Immutable id of the Google Apps account", :in "path", :name "customerId", :required true, :type "string"} {:description "Full path of the organization unit or its Id", :in "path", :name "orgUnitPath", :required true, :type "string", :x-reservedExpansion true} {:in "body", :name "body", :schema {:$ref "#/definitions/OrgUnit"}}], :operationId "directory.orgunits.patch", :compute.gcp.impl.descriptor/http-method :patch, :compute.gcp.impl.descriptor/http-path "/customer/{customerId}/orgunits/{orgUnitPath}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.users.update" {:description "update user", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/User"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/User"}} {:description "Email or immutable ID of the user. If ID, it should match with id of user object", :in "path", :name "userKey", :required true, :type "string"}], :operationId "directory.users.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/users/{userKey}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.members.update" {:description "Update membership of a user in the specified group.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Member"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Member"}} {:description "Email or immutable ID of the group. If ID, it should match with id of group object", :in "path", :name "groupKey", :required true, :type "string"} {:description "Email or immutable ID of the user. If ID, it should match with id of member object", :in "path", :name "memberKey", :required true, :type "string"}], :operationId "directory.members.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/groups/{groupKey}/members/{memberKey}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.chromeosdevices.action" {:description "Take action on Chrome OS Device", :responses {"200" {:description "Successful response"}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/ChromeOsDeviceAction"}} {:description "Immutable ID of the G Suite account", :in "path", :name "customerId", :required true, :type "string"} {:description "Immutable ID of Chrome OS Device", :in "path", :name "resourceId", :required true, :type "string"}], :operationId "directory.chromeosdevices.action", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/customer/{customerId}/devices/chromeos/{resourceId}/action", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.users.photos.update" {:description "Add a photo for the user", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/UserPhoto"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/UserPhoto"}} {:description "Email or immutable ID of the user", :in "path", :name "userKey", :required true, :type "string"}], :operationId "directory.users.photos.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/users/{userKey}/photos/thumbnail", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.domainAliases.delete" {:description "Deletes a Domain Alias of the customer.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "Immutable ID of the G Suite account.", :in "path", :name "customer", :required true, :type "string"} {:description "Name of domain alias to be retrieved.", :in "path", :name "domainAliasName", :required true, :type "string"}], :operationId "directory.domainAliases.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/domainaliases/{domainAliasName}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.resources.buildings.delete" {:description "Deletes a building.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "The ID of the building to delete.", :in "path", :name "buildingId", :required true, :type "string"} {:description "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", :in "path", :name "customer", :required true, :type "string"}], :operationId "directory.resources.buildings.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/resources/buildings/{buildingId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.domainAliases.get" {:description "Retrieves a domain alias of the customer.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/DomainAlias"}}}, :parameters [{:description "Immutable ID of the G Suite account.", :in "path", :name "customer", :required true, :type "string"} {:description "Name of domain alias to be retrieved.", :in "path", :name "domainAliasName", :required true, :type "string"}], :operationId "directory.domainAliases.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/domainaliases/{domainAliasName}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.resources.features.get" {:description "Retrieves a feature.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Feature"}}}, :parameters [{:description "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", :in "path", :name "customer", :required true, :type "string"} {:description "The unique ID of the feature to retrieve.", :in "path", :name "featureKey", :required true, :type "string"}], :operationId "directory.resources.features.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/resources/features/{featureKey}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.resources.calendars.patch" {:description "Updates a calendar resource.\n\nThis method supports patch semantics, meaning you only need to include the fields you wish to update. Fields that are not present in the request will be preserved. This method supports patch semantics.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/CalendarResource"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/CalendarResource"}} {:description "The unique ID of the calendar resource to update.", :in "path", :name "calendarResourceId", :required true, :type "string"} {:description "The unique ID for the customer's G Suite account. As an account administrator, you can also use the my_customer alias to represent your account's customer ID.", :in "path", :name "customer", :required true, :type "string"}], :operationId "directory.resources.calendars.patch", :compute.gcp.impl.descriptor/http-method :patch, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/resources/calendars/{calendarResourceId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.orgunits.delete" {:description "Remove Organization Unit", :responses {"200" {:description "Successful response"}}, :parameters [{:description "Immutable id of the Google Apps account", :in "path", :name "customerId", :required true, :type "string"} {:description "Full path of the organization unit or its Id", :in "path", :name "orgUnitPath", :required true, :type "string", :x-reservedExpansion true}], :operationId "directory.orgunits.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/customer/{customerId}/orgunits/{orgUnitPath}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.customers.update" {:description "Updates a customer.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Customer"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Customer"}} {:description "Id of the customer to be updated", :in "path", :name "customerKey", :required true, :type "string"}], :operationId "directory.customers.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/customers/{customerKey}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.mobiledevices.list" {:description "Retrieve all Mobile Devices of a customer (paginated)", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/MobileDevices"}}}, :parameters [{:description "Immutable ID of the G Suite account", :in "path", :name "customerId", :required true, :type "string"} {:default 100, :description "Maximum number of results to return. Max allowed value is 100.", :in "query", :minimum 1, :name "maxResults", :type "integer"} {:description "Column to use for sorting results", :enum ["deviceId" "email" "lastSync" "model" "name" "os" "status" "type"], :in "query", :name "orderBy", :type "string"} {:description "Token to specify next page in the list", :in "query", :name "pageToken", :type "string"} {:description "Restrict information returned to a set of selected fields.", :enum ["BASIC" "FULL"], :in "query", :name "projection", :type "string"} {:description "Search string in the format given at http://support.google.com/a/bin/answer.py?answer=1408863#search", :in "query", :name "query", :type "string"} {:description "Whether to return results in ascending or descending order. Only of use when orderBy is also used", :enum ["ASCENDING" "DESCENDING"], :in "query", :name "sortOrder", :type "string"}], :operationId "directory.mobiledevices.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/customer/{customerId}/devices/mobile", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.tokens.list" {:description "Returns the set of tokens specified user has issued to 3rd party applications.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Tokens"}}}, :parameters [{:description "Identifies the user in the API request. The value can be the user's primary email address, alias email address, or unique user ID.", :in "path", :name "userKey", :required true, :type "string"}], :operationId "directory.tokens.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/users/{userKey}/tokens", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.domains.insert" {:description "Inserts a domain of the customer.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Domains"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Domains"}} {:description "Immutable ID of the G Suite account.", :in "path", :name "customer", :required true, :type "string"}], :operationId "directory.domains.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/domains", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.resolvedAppAccessSettings.ListTrustedApps" {:description "Retrieves the list of apps trusted by the admin of the logged in user.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/TrustedApps"}}}, :operationId "directory.resolvedAppAccessSettings.ListTrustedApps", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/trustedapps", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.roles.delete" {:description "Deletes a role.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "Immutable ID of the G Suite account.", :in "path", :name "customer", :required true, :type "string"} {:description "Immutable ID of the role.", :in "path", :name "roleId", :required true, :type "string"}], :operationId "directory.roles.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/roles/{roleId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.mobiledevices.action" {:description "Take action on Mobile Device", :responses {"200" {:description "Successful response"}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/MobileDeviceAction"}} {:description "Immutable ID of the G Suite account", :in "path", :name "customerId", :required true, :type "string"} {:description "Immutable ID of Mobile Device", :in "path", :name "resourceId", :required true, :type "string"}], :operationId "directory.mobiledevices.action", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/customer/{customerId}/devices/mobile/{resourceId}/action", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.schemas.patch" {:description "Update schema. This method supports patch semantics.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Schema"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Schema"}} {:description "Immutable ID of the G Suite account", :in "path", :name "customerId", :required true, :type "string"} {:description "Name or immutable ID of the schema.", :in "path", :name "schemaKey", :required true, :type "string"}], :operationId "directory.schemas.patch", :compute.gcp.impl.descriptor/http-method :patch, :compute.gcp.impl.descriptor/http-path "/customer/{customerId}/schemas/{schemaKey}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}, "directory.roleAssignments.delete" {:description "Deletes a role assignment.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "Immutable ID of the G Suite account.", :in "path", :name "customer", :required true, :type "string"} {:description "Immutable ID of the role assignment.", :in "path", :name "roleAssignmentId", :required true, :type "string"}], :operationId "directory.roleAssignments.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/customer/{customer}/roleassignments/{roleAssignmentId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/alt"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/userIp"}]}}, :parameters {:alt {:default "json", :description "Data format for the response.", :enum ["json"], :in "query", :name "alt", :type "string"}, :fields {:description "Selector specifying which fields to include in a partial response.", :in "query", :name "fields", :type "string"}, :key {:description "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", :in "query", :name "key", :type "string"}, :oauth_token {:description "OAuth 2.0 token for the current user.", :in "query", :name "oauth_token", :type "string"}, :prettyPrint {:default true, :description "Returns response with indentations and line breaks.", :in "query", :name "prettyPrint", :type "boolean"}, :quotaUser {:description "An opaque string that represents a user for quota purposes. Must not exceed 40 characters.", :in "query", :name "quotaUser", :type "string"}, :userIp {:description "Deprecated. Please use quotaUser instead.", :in "query", :name "userIp", :type "string"}}, :definitions {:Domains {:description "JSON template for Domain object in Directory API.", :properties {:creationTime {:description "Creation time of the domain. (Read-only).", :format "int64", :type "string"}, :domainAliases {:description "List of domain alias objects. (Read-only)", :items {:$ref "#/definitions/DomainAlias"}, :type "array"}, :domainName {:description "The domain name of the customer.", :type "string"}, :etag {:description "ETag of the resource.", :type "string"}, :isPrimary {:description "Indicates if the domain is a primary domain (Read-only).", :type "boolean"}, :kind {:default "admin#directory#domain", :description "Kind of resource this is.", :type "string"}, :verified {:description "Indicates the verification state of a domain. (Read-only).", :type "boolean"}}, :type "object"}, :UserIm {:description "JSON template for instant messenger of an user.", :properties {:customProtocol {:description "Custom protocol.", :type "string"}, :customType {:description "Custom type.", :type "string"}, :im {:description "Instant messenger id.", :type "string"}, :primary {:description "If this is user's primary im. Only one entry could be marked as primary.", :type "boolean"}, :protocol {:description "Protocol used in the instant messenger. It should be one of the values from ImProtocolTypes map. Similar to type, it can take a CUSTOM value and specify the custom name in customProtocol field.", :type "string"}, :type {:description "Each entry can have a type which indicates standard types of that entry. For example instant messengers could be of home, work etc. In addition to the standard type, an entry can have a custom type and can take any value. Such types should have the CUSTOM value as type and also have a customType value.", :type "string"}}, :type "object"}, :UserAddress {:description "JSON template for address.", :properties {:locality {:description "Locality.", :type "string"}, :customType {:description "Custom type.", :type "string"}, :poBox {:description "Other parts of address.", :type "string"}, :primary {:description "If this is user's primary address. Only one entry could be marked as primary.", :type "boolean"}, :formatted {:description "Formatted address.", :type "string"}, :type {:description "Each entry can have a type which indicates standard values of that entry. For example address could be of home, work etc. In addition to the standard type, an entry can have a custom type and can take any value. Such type should have the CUSTOM value as type and also have a customType value.", :type "string"}, :streetAddress {:description "Street.", :type "string"}, :region {:description "Region.", :type "string"}, :postalCode {:description "Postal code.", :type "string"}, :extendedAddress {:description "Extended Address.", :type "string"}, :country {:description "Country.", :type "string"}, :countryCode {:description "Country code.", :type "string"}, :sourceIsStructured {:description "User supplied address was structured. Structured addresses are NOT supported at this time. You might be able to write structured addresses, but any values will eventually be clobbered.", :type "boolean"}}, :type "object"}, :UserWebsite {:description "JSON template for a website entry.", :properties {:customType {:description "Custom Type.", :type "string"}, :primary {:description "If this is user's primary website or not.", :type "boolean"}, :type {:description "Each entry can have a type which indicates standard types of that entry. For example website could be of home, work, blog etc. In addition to the standard type, an entry can have a custom type and can give it any name. Such types should have the CUSTOM value as type and also have a customType value.", :type "string"}, :value {:description "Website.", :type "string"}}, :type "object"}, :Group {:description "JSON template for Group resource in Directory API.", :properties {:description {:description "Description of the group", :type "string"}, :email {:description "Email of Group", :type "string"}, :nonEditableAliases {:description "List of non editable aliases (Read-only)", :items {:type "string"}, :type "array"}, :directMembersCount {:description "Group direct members count", :format "int64", :type "string"}, :adminCreated {:description "Is the group created by admin (Read-only) *", :type "boolean"}, :name {:description "Group name", :type "string"}, :etag {:description "ETag of the resource.", :type "string"}, :id {:description "Unique identifier of Group (Read-only)", :type "string"}, :kind {:default "admin#directory#group", :description "Kind of resource this is.", :type "string"}, :aliases {:description "List of aliases (Read-only)", :items {:type "string"}, :type "array"}}, :type "object"}, :Members {:description "JSON response template for List Members operation in Directory API.", :properties {:etag {:description "ETag of the resource.", :type "string"}, :kind {:default "admin#directory#members", :description "Kind of resource this is.", :type "string"}, :members {:description "List of member objects.", :items {:$ref "#/definitions/Member"}, :type "array"}, :nextPageToken {:description "Token used to access next page of this result.", :type "string"}}, :type "object"}, :Groups {:description "JSON response template for List Groups operation in Directory API.", :properties {:etag {:description "ETag of the resource.", :type "string"}, :groups {:description "List of group objects.", :items {:$ref "#/definitions/Group"}, :type "array"}, :kind {:default "admin#directory#groups", :description "Kind of resource this is.", :type "string"}, :nextPageToken {:description "Token used to access next page of this result.", :type "string"}}, :type "object"}, :Privilege {:description "JSON template for privilege resource in Directory API.", :properties {:childPrivileges {:description "A list of child privileges. Privileges for a service form a tree. Each privilege can have a list of child privileges; this list is empty for a leaf privilege.", :items {:$ref "#/definitions/Privilege"}, :type "array"}, :etag {:description "ETag of the resource.", :type "string"}, :isOuScopable {:description "If the privilege can be restricted to an organization unit.", :type "boolean"}, :kind {:default "admin#directory#privilege", :description "The type of the API resource. This is always admin#directory#privilege.", :type "string"}, :privilegeName {:description "The name of the privilege.", :type "string"}, :serviceId {:description "The obfuscated ID of the service this privilege is for. This value is returned with Privileges.list().", :type "string"}, :serviceName {:description "The name of the service this privilege is for.", :type "string"}}, :type "object"}, :SchemaFieldSpec {:description "JSON template for FieldSpec resource for Schemas in Directory API.", :properties {:indexed {:default true, :description "Boolean specifying whether the field is indexed or not.", :type "boolean"}, :readAccessType {:default "ALL_DOMAIN_USERS", :description "Read ACLs on the field specifying who can view values of this field. Valid values are \"ALL_DOMAIN_USERS\" and \"ADMINS_AND_SELF\".", :type "string"}, :numericIndexingSpec {:description "Indexing spec for a numeric field. By default, only exact match queries will be supported for numeric fields. Setting the numericIndexingSpec allows range queries to be supported.", :properties {:maxValue {:description "Maximum value of this field. This is meant to be indicative rather than enforced. Values outside this range will still be indexed, but search may not be as performant.", :format "double", :type "number"}, :minValue {:description "Minimum value of this field. This is meant to be indicative rather than enforced. Values outside this range will still be indexed, but search may not be as performant.", :format "double", :type "number"}}, :type "object"}, :displayName {:description "Display Name of the field.", :type "string"}, :multiValued {:description "Boolean specifying whether this is a multi-valued field or not.", :type "boolean"}, :etag {:description "ETag of the resource.", :type "string"}, :fieldId {:description "Unique identifier of Field (Read-only)", :type "string"}, :fieldName {:description "Name of the field.", :type "string"}, :kind {:default "admin#directory#schema#fieldspec", :description "Kind of resource this is.", :type "string"}, :fieldType {:description "Type of the field.", :type "string"}}, :type "object"}, :CustomerPostalAddress {:description "JSON template for postal address of a customer.", :properties {:locality {:description "Name of the locality. An example of a locality value is the city of San Francisco.", :type "string"}, :contactName {:description "The customer contact's name.", :type "string"}, :addressLine1 {:description "A customer's physical address. The address can be composed of one to three lines.", :type "string"}, :organizationName {:description "The company or company division name.", :type "string"}, :region {:description "Name of the region. An example of a region value is NY for the state of New York.", :type "string"}, :addressLine3 {:description "Address line 3 of the address.", :type "string"}, :addressLine2 {:description "Address line 2 of the address.", :type "string"}, :postalCode {:description "The postal code. A postalCode example is a postal zip code such as 10009. This is in accordance with - http://portablecontacts.net/draft-spec.html#address_element.", :type "string"}, :countryCode {:description "This is a required property. For countryCode information see the ISO 3166 country code elements.", :type "string"}}, :type "object"}, :UserAbout {:description "JSON template for About (notes) of a user in Directory API.", :properties {:contentType {:description "About entry can have a type which indicates the content type. It can either be plain or html. By default, notes contents are assumed to contain plain text.", :type "string"}, :value {:description "Actual value of notes.", :type "string"}}, :type "object"}, :UserOrganization {:description "JSON template for an organization entry.", :properties {:description {:description "Description of the organization.", :type "string"}, :department {:description "Department within the organization.", :type "string"}, :customType {:description "Custom type.", :type "string"}, :primary {:description "If it user's primary organization.", :type "boolean"}, :symbol {:description "Symbol of the organization.", :type "string"}, :name {:description "Name of the organization", :type "string"}, :type {:description "Each entry can have a type which indicates standard types of that entry. For example organization could be of school, work etc. In addition to the standard type, an entry can have a custom type and can give it any name. Such types should have the CUSTOM value as type and also have a CustomType value.", :type "string"}, :costCenter {:description "The cost center of the users department.", :type "string"}, :title {:description "Title (designation) of the user in the organization.", :type "string"}, :domain {:description "The domain to which the organization belongs to.", :type "string"}, :fullTimeEquivalent {:description "The full-time equivalent millipercent within the organization (100000 = 100%).", :format "int32", :type "integer"}, :location {:description "Location of the organization. This need not be fully qualified address.", :type "string"}}, :type "object"}, :ChromeOsMoveDevicesToOu {:description "JSON request template for moving ChromeOs Device to given OU in Directory Devices API.", :properties {:deviceIds {:description "ChromeOs Devices to be moved to OU", :items {:type "string"}, :type "array"}}, :type "object"}, :BuildingCoordinates {:description "JSON template for coordinates of a building in Directory API.", :properties {:latitude {:description "Latitude in decimal degrees.", :format "double", :type "number"}, :longitude {:description "Longitude in decimal degrees.", :format "double", :type "number"}}, :type "object"}, :UserKeyword {:description "JSON template for a keyword entry.", :properties {:customType {:description "Custom Type.", :type "string"}, :type {:description "Each entry can have a type which indicates standard type of that entry. For example, keyword could be of type occupation or outlook. In addition to the standard type, an entry can have a custom type and can give it any name. Such types should have the CUSTOM value as type and also have a customType value.", :type "string"}, :value {:description "Keyword.", :type "string"}}, :type "object"}, :Schemas {:description "JSON response template for List Schema operation in Directory API.", :properties {:etag {:description "ETag of the resource.", :type "string"}, :kind {:default "admin#directory#schemas", :description "Kind of resource this is.", :type "string"}, :schemas {:description "List of UserSchema objects.", :items {:$ref "#/definitions/Schema"}, :type "array"}}, :type "object"}, :Token {:description "JSON template for token resource in Directory API.", :properties {:anonymous {:description "Whether the application is registered with Google. The value is true if the application has an anonymous Client ID.", :type "boolean"}, :clientId {:description "The Client ID of the application the token is issued to.", :type "string"}, :displayText {:description "The displayable name of the application the token is issued to.", :type "string"}, :etag {:description "ETag of the resource.", :type "string"}, :kind {:default "admin#directory#token", :description "The type of the API resource. This is always admin#directory#token.", :type "string"}, :nativeApp {:description "Whether the token is issued to an installed application. The value is true if the application is installed to a desktop or mobile device.", :type "boolean"}, :scopes {:description "A list of authorization scopes the application is granted.", :items {:type "string"}, :type "array"}, :userKey {:description "The unique ID of the user that issued the token.", :type "string"}}, :type "object"}, :Feature {:description "JSON template for Feature object in Directory API.", :properties {:etags {:description "ETag of the resource.", :type "string"}, :kind {:default "admin#directory#resources#features#Feature", :description "Kind of resource this is.", :type "string"}, :name {:description "The name of the feature.", :type "string"}}, :type "object"}, :Building {:description "JSON template for Building object in Directory API.", :properties {:address {:$ref "#/definitions/BuildingAddress", :description "The postal address of the building. See PostalAddress for details. Note that only a single address line and region code are required."}, :buildingId {:description "Unique identifier for the building. The maximum length is 100 characters.", :type "string"}, :buildingName {:description "The building name as seen by users in Calendar. Must be unique for the customer. For example, \"NYC-CHEL\". The maximum length is 100 characters.", :type "string"}, :coordinates {:$ref "#/definitions/BuildingCoordinates", :description "The geographic coordinates of the center of the building, expressed as latitude and longitude in decimal degrees."}, :description {:description "A brief description of the building. For example, \"Chelsea Market\".", :type "string"}, :etags {:description "ETag of the resource.", :type "string"}, :floorNames {:description "The display names for all floors in this building. The floors are expected to be sorted in ascending order, from lowest floor to highest floor. For example, [\"B2\", \"B1\", \"L\", \"1\", \"2\", \"2M\", \"3\", \"PH\"] Must contain at least one entry.", :items {:type "string"}, :type "array"}, :kind {:default "admin#directory#resources#buildings#Building", :description "Kind of resource this is.", :type "string"}}, :type "object"}, :Member {:description "JSON template for Member resource in Directory API.", :properties {:delivery_settings {:description "Delivery settings of member", :type "string"}, :email {:description "Email of member (Read-only)", :type "string"}, :etag {:description "ETag of the resource.", :type "string"}, :id {:description "The unique ID of the group member. A member id can be used as a member request URI's memberKey. Unique identifier of group (Read-only) Unique identifier of member (Read-only)", :type "string"}, :kind {:default "admin#directory#member", :description "Kind of resource this is.", :type "string"}, :role {:description "Role of member", :type "string"}, :status {:description "Status of member (Immutable)", :type "string"}, :type {:description "Type of member (Immutable)", :type "string"}}, :type "object"}, :Notification {:description "Template for a notification resource.", :properties {:body {:description "Body of the notification (Read-only)", :type "string"}, :etag {:description "ETag of the resource.", :type "string"}, :fromAddress {:description "Address from which the notification is received (Read-only)", :type "string"}, :isUnread {:description "Boolean indicating whether the notification is unread or not.", :type "boolean"}, :kind {:default "admin#directory#notification", :description "The type of the resource.", :type "string"}, :notificationId {:type "string"}, :sendTime {:description "Time at which notification was sent (Read-only)", :format "date-time", :type "string"}, :subject {:description "Subject of the notification (Read-only)", :type "string"}}, :type "object"}, :VerificationCode {:description "JSON template for verification codes in Directory API.", :properties {:etag {:description "ETag of the resource.", :type "string"}, :kind {:default "admin#directory#verificationCode", :description "The type of the resource. This is always admin#directory#verificationCode.", :type "string"}, :userId {:description "The obfuscated unique ID of the user.", :type "string"}, :verificationCode {:description "A current verification code for the user. Invalidated or used verification codes are not returned as part of the result.", :type "string"}}, :type "object"}, :VerificationCodes {:description "JSON response template for List verification codes operation in Directory API.", :properties {:etag {:description "ETag of the resource.", :type "string"}, :items {:description "A list of verification code resources.", :items {:$ref "#/definitions/VerificationCode"}, :type "array"}, :kind {:default "admin#directory#verificationCodesList", :description "The type of the resource. This is always admin#directory#verificationCodesList.", :type "string"}}, :type "object"}, :ChromeOsDevices {:description "JSON response template for List Chrome OS Devices operation in Directory API.", :properties {:chromeosdevices {:description "List of Chrome OS Device objects.", :items {:$ref "#/definitions/ChromeOsDevice"}, :type "array"}, :etag {:description "ETag of the resource.", :type "string"}, :kind {:default "admin#directory#chromeosdevices", :description "Kind of resource this is.", :type "string"}, :nextPageToken {:description "Token used to access next page of this result.", :type "string"}}, :type "object"}, :FeatureRename {:description "JSON request template for renaming a feature.", :properties {:newName {:description "New name of the feature.", :type "string"}}, :type "object"}, :DomainAlias {:description "JSON template for Domain Alias object in Directory API.", :properties {:creationTime {:description "The creation time of the domain alias. (Read-only).", :format "int64", :type "string"}, :domainAliasName {:description "The domain alias name.", :type "string"}, :etag {:description "ETag of the resource.", :type "string"}, :kind {:default "admin#directory#domainAlias", :description "Kind of resource this is.", :type "string"}, :parentDomainName {:description "The parent domain name that the domain alias is associated with. This can either be a primary or secondary domain name within a customer.", :type "string"}, :verified {:description "Indicates the verification state of a domain alias. (Read-only)", :type "boolean"}}, :type "object"}, :UserEmail {:description "JSON template for an email.", :properties {:address {:description "Email id of the user.", :type "string"}, :customType {:description "Custom Type.", :type "string"}, :primary {:description "If this is user's primary email. Only one entry could be marked as primary.", :type "boolean"}, :type {:description "Each entry can have a type which indicates standard types of that entry. For example email could be of home, work etc. In addition to the standard type, an entry can have a custom type and can take any value Such types should have the CUSTOM value as type and also have a customType value.", :type "string"}}, :type "object"}, :MobileDevices {:description "JSON response template for List Mobile Devices operation in Directory API.", :properties {:etag {:description "ETag of the resource.", :type "string"}, :kind {:default "admin#directory#mobiledevices", :description "Kind of resource this is.", :type "string"}, :mobiledevices {:description "List of Mobile Device objects.", :items {:$ref "#/definitions/MobileDevice"}, :type "array"}, :nextPageToken {:description "Token used to access next page of this result.", :type "string"}}, :type "object"}, :Channel {:description "An notification channel used to watch for resource changes.", :properties {:address {:description "The address where notifications are delivered for this channel.", :type "string"}, :resourceUri {:description "A version-specific identifier for the watched resource.", :type "string"}, :payload {:description "A Boolean value to indicate whether payload is wanted. Optional.", :type "boolean"}, :expiration {:description "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.", :format "int64", :type "string"}, :params {:additionalProperties {:description "Declares a new parameter by name.", :type "string"}, :description "Additional parameters controlling delivery channel behavior. Optional.", :type "object"}, :type {:description "The type of delivery mechanism used for this channel.", :type "string"}, :resourceId {:description "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions.", :type "string"}, :token {:description "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional.", :type "string"}, :id {:description "A UUID or similar unique string that identifies this channel.", :type "string"}, :kind {:default "api#channel", :description "Identifies this as a notification channel used to watch for changes to a resource, which is \"api#channel\".", :type "string"}}, :type "object"}, :Aliases {:description "JSON response template to list aliases in Directory API.", :properties {:aliases {:description "List of alias objects.", :items {}, :type "array"}, :etag {:description "ETag of the resource.", :type "string"}, :kind {:default "admin#directory#aliases", :description "Kind of resource this is.", :type "string"}}, :type "object"}, :ChromeOsDeviceAction {:description "JSON request template for firing actions on ChromeOs Device in Directory Devices API.", :properties {:action {:description "Action to be taken on the ChromeOs Device", :type "string"}, :deprovisionReason {:type "string"}}, :type "object"}, :MobileDeviceAction {:description "JSON request template for firing commands on Mobile Device in Directory Devices API.", :properties {:action {:description "Action to be taken on the Mobile Device", :type "string"}}, :type "object"}, :TrustedApps {:description "JSON template for Trusted Apps response object of a user in Directory API.", :properties {:etag {:description "ETag of the resource.", :type "string"}, :kind {:default "admin#directory#trustedapplist", :description "Identifies the resource as trusted apps response.", :type "string"}, :nextPageToken {:type "string"}, :trustedApps {:description "Trusted Apps list.", :items {:$ref "#/definitions/TrustedAppId"}, :type "array"}}, :type "object"}, :Privileges {:description "JSON response template for List privileges operation in Directory API.", :properties {:etag {:description "ETag of the resource.", :type "string"}, :items {:description "A list of Privilege resources.", :items {:$ref "#/definitions/Privilege"}, :type "array"}, :kind {:default "admin#directory#privileges", :description "The type of the API resource. This is always admin#directory#privileges.", :type "string"}}, :type "object"}, :UserName {:description "JSON template for name of a user in Directory API.", :properties {:familyName {:description "Last Name", :type "string"}, :fullName {:description "Full Name", :type "string"}, :givenName {:description "First Name", :type "string"}}, :type "object"}, :UserUndelete {:description "JSON request template to undelete a user in Directory API.", :properties {:orgUnitPath {:description "OrgUnit of User", :type "string"}}, :type "object"}, :UserPhoto {:description "JSON template for Photo object in Directory API.", :properties {:etag {:description "ETag of the resource.", :type "string"}, :height {:description "Height in pixels of the photo", :format "int32", :type "integer"}, :id {:description "Unique identifier of User (Read-only)", :type "string"}, :kind {:default "admin#directory#user#photo", :description "Kind of resource this is.", :type "string"}, :mimeType {:description "Mime Type of the photo", :type "string"}, :photoData {:description "Base64 encoded photo data", :format "byte", :type "string"}, :primaryEmail {:description "Primary email of User (Read-only)", :type "string"}, :width {:description "Width in pixels of the photo", :format "int32", :type "integer"}}, :type "object"}, :UserPosixAccount {:description "JSON template for a POSIX account entry. Description of the field family: go/fbs-posix.", :properties {:primary {:description "If this is user's primary account within the SystemId.", :type "boolean"}, :operatingSystemType {:description "The operating system type for this account.", :type "string"}, :uid {:description "The POSIX compliant user ID.", :format "uint64", :type "string"}, :username {:description "The username of the account.", :type "string"}, :gid {:description "The default group ID.", :format "uint64", :type "string"}, :homeDirectory {:description "The path to the home directory for this account.", :type "string"}, :systemId {:description "System identifier for which account Username or Uid apply to.", :type "string"}, :gecos {:description "The GECOS (user information) for this account.", :type "string"}, :shell {:description "The path to the login shell for this account.", :type "string"}, :accountId {:description "A POSIX account field identifier.", :type "string"}}, :type "object"}, :User {:description "JSON template for User object in Directory API.", :properties {:creationTime {:description "User's G Suite account creation time. (Read-only)", :format "date-time", :readOnly true, :type "string"}, :archived {:description "Indicates if user is archived.", :type "boolean"}, :ims {}, :changePasswordAtNextLogin {:description "Boolean indicating if the user should change password in next login", :type "boolean"}, :addresses {}, :nonEditableAliases {:description "List of non editable aliases (Read-only)", :items {:type "string"}, :readOnly true, :type "array"}, :isEnrolledIn2Sv {:description "Is enrolled in 2-step verification (Read-only)", :readOnly true, :type "boolean"}, :isDelegatedAdmin {:description "Boolean indicating if the user is delegated admin (Read-only)", :readOnly true, :type "boolean"}, :hashFunction {:description "Hash function name for password. Supported are MD5, SHA-1 and crypt", :type "string"}, :posixAccounts {}, :isAdmin {:description "Boolean indicating if the user is admin (Read-only)", :readOnly true, :type "boolean"}, :relations {}, :password {:description "User's password", :type "string"}, :recoveryPhone {:description "Recovery phone of the user. The phone number must be in the E.164 format, starting with the plus sign (+). Example: +16506661212.", :type "string"}, :name {:$ref "#/definitions/UserName", :description "User's name"}, :lastLoginTime {:description "User's last login time. (Read-only)", :format "date-time", :readOnly true, :type "string"}, :customSchemas {:additionalProperties {:$ref "#/definitions/UserCustomProperties"}, :description "Custom fields of the user.", :type "object"}, :etag {:description "ETag of the resource.", :readOnly true, :type "string"}, :isMailboxSetup {:description "Is mailbox setup (Read-only)", :readOnly true, :type "boolean"}, :keywords {}, :organizations {}, :suspended {:description "Indicates if user is suspended.", :type "boolean"}, :locations {}, :customerId {:description "CustomerId of User (Read-only)", :readOnly true, :type "string"}, :externalIds {}, :phones {}, :orgUnitPath {:description "OrgUnit of User", :type "string"}, :deletionTime {:format "date-time", :readOnly true, :type "string"}, :isEnforcedIn2Sv {:description "Is 2-step verification enforced (Read-only)", :readOnly true, :type "boolean"}, :sshPublicKeys {}, :recoveryEmail {:description "Recovery email of the user.", :type "string"}, :ipWhitelisted {:description "Boolean indicating if ip is whitelisted", :type "boolean"}, :id {:description "Unique identifier of User (Read-only)", :type "string"}, :kind {:default "admin#directory#user", :description "Kind of resource this is.", :readOnly true, :type "string"}, :notes {}, :primaryEmail {:description "username of User", :type "string"}, :thumbnailPhotoEtag {:description "ETag of the user's photo (Read-only)", :readOnly true, :type "string"}, :websites {}, :includeInGlobalAddressList {:description "Boolean indicating if user is included in Global Address List", :type "boolean"}, :gender {}, :aliases {:description "List of aliases (Read-only)", :items {:type "string"}, :readOnly true, :type "array"}, :emails {}, :languages {}, :suspensionReason {:description "Suspension reason if user is suspended (Read-only)", :readOnly true, :type "string"}, :agreedToTerms {:description "Indicates if user has agreed to terms (Read-only)", :readOnly true, :type "boolean"}, :thumbnailPhotoUrl {:description "Photo Url of the user (Read-only)", :readOnly true, :type "string"}}, :type "object"}, :Customer {:description "JSON template for Customer Resource object in Directory API.", :properties {:alternateEmail {:description "The customer's secondary contact email address. This email address cannot be on the same domain as the customerDomain", :type "string"}, :postalAddress {:$ref "#/definitions/CustomerPostalAddress", :description "The customer's postal address information."}, :etag {:description "ETag of the resource.", :type "string"}, :customerCreationTime {:description "The customer's creation time (Readonly)", :format "date-time", :type "string"}, :customerDomain {:description "The customer's primary domain name string. Do not include the www prefix when creating a new customer.", :type "string"}, :language {:description "The customer's ISO 639-2 language code. The default value is en-US", :type "string"}, :id {:description "The unique ID for the customer's G Suite account. (Readonly)", :type "string"}, :kind {:default "admin#directory#customer", :description "Identifies the resource as a customer. Value: admin#directory#customer", :type "string"}, :phoneNumber {:description "The customer's contact phone number in E.164 format.", :type "string"}}, :type "object"}, :AppAccessCollections {:description "JSON template for App Access Collections Resource object in Directory API.", :properties {:blockedApiAccessBuckets {:description "List of blocked api access buckets.", :items {:type "string"}, :type "array"}, :enforceSettingsForAndroidDrive {:description "Boolean to indicate whether to enforce app access settings on Android Drive or not.", :type "boolean"}, :errorMessage {:description "Error message provided by the Admin that will be shown to the user when an app is blocked.", :type "string"}, :etag {:description "ETag of the resource.", :type "string"}, :kind {:default "admin#directory#appaccesscollection", :description "Identifies the resource as an app access collection. Value: admin#directory#appaccesscollection", :type "string"}, :resourceId {:description "Unique ID of app access collection. (Readonly)", :format "int64", :type "string"}, :resourceName {:description "Resource name given by the customer while creating/updating. Should be unique under given customer.", :type "string"}, :trustDomainOwnedApps {:description "Boolean that indicates whether to trust domain owned apps.", :type "boolean"}}, :type "object"}, :Buildings {:description "JSON template for Building List Response object in Directory API.", :properties {:buildings {:description "The Buildings in this page of results.", :items {:$ref "#/definitions/Building"}, :type "array"}, :etag {:description "ETag of the resource.", :type "string"}, :kind {:default "admin#directory#resources#buildings#buildingsList", :description "Kind of resource this is.", :type "string"}, :nextPageToken {:description "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.", :type "string"}}, :type "object"}, :Users {:description "JSON response template for List Users operation in Apps Directory API.", :properties {:etag {:description "ETag of the resource.", :type "string"}, :kind {:default "admin#directory#users", :description "Kind of resource this is.", :type "string"}, :nextPageToken {:description "Token used to access next page of this result.", :type "string"}, :trigger_event {:description "Event that triggered this response (only used in case of Push Response)", :type "string"}, :users {:description "List of user objects.", :items {:$ref "#/definitions/User"}, :type "array"}}, :type "object"}, :UserExternalId {:description "JSON template for an externalId entry.", :properties {:customType {:description "Custom type.", :type "string"}, :type {:description "The type of the Id.", :type "string"}, :value {:description "The value of the id.", :type "string"}}, :type "object"}, :Domains2 {:description "JSON response template to list Domains in Directory API.", :properties {:domains {:description "List of domain objects.", :items {:$ref "#/definitions/Domains"}, :type "array"}, :etag {:description "ETag of the resource.", :type "string"}, :kind {:default "admin#directory#domains", :description "Kind of resource this is.", :type "string"}}, :type "object"}, :CalendarResource {:description "JSON template for Calendar Resource object in Directory API.", :properties {:buildingId {:description "Unique ID for the building a resource is located in.", :type "string"}, :capacity {:description "Capacity of a resource, number of seats in a room.", :format "int32", :type "integer"}, :floorSection {:description "Name of the section within a floor a resource is located in.", :type "string"}, :etags {:description "ETag of the resource.", :type "string"}, :generatedResourceName {:description "The read-only auto-generated name of the calendar resource which includes metadata about the resource such as building name, floor, capacity, etc. For example, \"NYC-2-Training Room 1A (16)\".", :type "string"}, :resourceCategory {:description "The category of the calendar resource. Either CONFERENCE_ROOM or OTHER. Legacy data is set to CATEGORY_UNKNOWN.", :type "string"}, :resourceType {:description "The type of the calendar resource, intended for non-room resources.", :type "string"}, :floorName {:description "Name of the floor a resource is located on.", :type "string"}, :resourceId {:description "The unique ID for the calendar resource.", :type "string"}, :resourceName {:description "The name of the calendar resource. For example, \"Training Room 1A\".", :type "string"}, :resourceDescription {:description "Description of the resource, visible only to admins.", :type "string"}, :kind {:default "admin#directory#resources#calendars#CalendarResource", :description "The type of the resource. For calendar resources, the value is admin#directory#resources#calendars#CalendarResource.", :type "string"}, :featureInstances {}, :resourceEmail {:description "The read-only email for the calendar resource. Generated as part of creating a new calendar resource.", :type "string"}, :userVisibleDescription {:description "Description of the resource, visible to users and admins.", :type "string"}}, :type "object"}, :UserPhone {:description "JSON template for a phone entry.", :properties {:customType {:description "Custom Type.", :type "string"}, :primary {:description "If this is user's primary phone or not.", :type "boolean"}, :type {:description "Each entry can have a type which indicates standard types of that entry. For example phone could be of home_fax, work, mobile etc. In addition to the standard type, an entry can have a custom type and can give it any name. Such types should have the CUSTOM value as type and also have a customType value.", :type "string"}, :value {:description "Phone number.", :type "string"}}, :type "object"}, :UserSshPublicKey {:description "JSON template for a POSIX account entry.", :properties {:expirationTimeUsec {:description "An expiration time in microseconds since epoch.", :format "int64", :type "string"}, :fingerprint {:description "A SHA-256 fingerprint of the SSH public key. (Read-only)", :readOnly true, :type "string"}, :key {:description "An SSH public key.", :type "string"}}, :type "object"}, :BuildingAddress {:description "JSON template for the postal address of a building in Directory API.", :properties {:addressLines {:description "Unstructured address lines describing the lower levels of an address.", :items {:type "string"}, :type "array"}, :administrativeArea {:description "Optional. Highest administrative subdivision which is used for postal addresses of a country or region.", :type "string"}, :languageCode {:description "Optional. BCP-47 language code of the contents of this address (if known).", :type "string"}, :locality {:description "Optional. Generally refers to the city/town portion of the address. Examples: US city, IT comune, UK post town. In regions of the world where localities are not well defined or do not fit into this structure well, leave locality empty and use addressLines.", :type "string"}, :postalCode {:description "Optional. Postal code of the address.", :type "string"}, :regionCode {:description "Required. CLDR region code of the country/region of the address.", :type "string"}, :sublocality {:description "Optional. Sublocality of the address.", :type "string"}}, :type "object"}, :Asp {:description "The template that returns individual ASP (Access Code) data.", :properties {:codeId {:description "The unique ID of the ASP.", :format "int32", :type "integer"}, :creationTime {:description "The time when the ASP was created. Expressed in Unix time format.", :format "int64", :type "string"}, :etag {:description "ETag of the ASP.", :type "string"}, :kind {:default "admin#directory#asp", :description "The type of the API resource. This is always admin#directory#asp.", :type "string"}, :lastTimeUsed {:description "The time when the ASP was last used. Expressed in Unix time format.", :format "int64", :type "string"}, :name {:description "The name of the application that the user, represented by their userId, entered when the ASP was created.", :type "string"}, :userKey {:description "The unique ID of the user who issued the ASP.", :type "string"}}, :type "object"}, :Schema {:description "JSON template for Schema resource in Directory API.", :properties {:displayName {:description "Display name for the schema.", :type "string"}, :etag {:description "ETag of the resource.", :type "string"}, :fields {:description "Fields of Schema", :items {:$ref "#/definitions/SchemaFieldSpec"}, :type "array"}, :kind {:default "admin#directory#schema", :description "Kind of resource this is.", :type "string"}, :schemaId {:description "Unique identifier of Schema (Read-only)", :type "string"}, :schemaName {:description "Schema name", :type "string"}}, :type "object"}, :MembersHasMember {:description "JSON template for Has Member response in Directory API.", :properties {:isMember {:description "Identifies whether the given user is a member of the group. Membership can be direct or nested.", :readOnly true, :type "boolean"}}, :type "object"}, :Roles {:description "JSON response template for List roles operation in Directory API.", :properties {:etag {:description "ETag of the resource.", :type "string"}, :items {:description "A list of Role resources.", :items {:$ref "#/definitions/Role"}, :type "array"}, :kind {:default "admin#directory#roles", :description "The type of the API resource. This is always admin#directory#roles.", :type "string"}, :nextPageToken {:type "string"}}, :type "object"}, :FeatureInstance {:description "JSON template for a \"feature instance\".", :properties {:feature {:$ref "#/definitions/Feature", :description "The feature that this is an instance of. A calendar resource may have multiple instances of a feature."}}, :type "object"}, :CalendarResources {:description "JSON template for Calendar Resource List Response object in Directory API.", :properties {:etag {:description "ETag of the resource.", :type "string"}, :items {:description "The CalendarResources in this page of results.", :items {:$ref "#/definitions/CalendarResource"}, :type "array"}, :kind {:default "admin#directory#resources#calendars#calendarResourcesList", :description "Identifies this as a collection of CalendarResources. This is always admin#directory#resources#calendars#calendarResourcesList.", :type "string"}, :nextPageToken {:description "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.", :type "string"}}, :type "object"}, :UserGender {:properties {:addressMeAs {:description "AddressMeAs. A human-readable string containing the proper way to refer to the profile owner by humans, for example \"he/him/his\" or \"they/them/their\".", :type "string"}, :customGender {:description "Custom gender.", :type "string"}, :type {:description "Gender.", :type "string"}}, :type "object"}, :Tokens {:description "JSON response template for List tokens operation in Directory API.", :properties {:etag {:description "ETag of the resource.", :type "string"}, :items {:description "A list of Token resources.", :items {:$ref "#/definitions/Token"}, :type "array"}, :kind {:default "admin#directory#tokenList", :description "The type of the API resource. This is always admin#directory#tokenList.", :type "string"}}, :type "object"}, :Notifications {:description "Template for notifications list response.", :properties {:etag {:description "ETag of the resource.", :type "string"}, :items {:description "List of notifications in this page.", :items {:$ref "#/definitions/Notification"}, :type "array"}, :kind {:default "admin#directory#notifications", :description "The type of the resource.", :type "string"}, :nextPageToken {:description "Token for fetching the next page of notifications.", :type "string"}, :unreadNotificationsCount {:description "Number of unread notification for the domain.", :format "int32", :type "integer"}}, :type "object"}, :DomainAliases {:description "JSON response template to list domain aliases in Directory API.", :properties {:domainAliases {:description "List of domain alias objects.", :items {:$ref "#/definitions/DomainAlias"}, :type "array"}, :etag {:description "ETag of the resource.", :type "string"}, :kind {:default "admin#directory#domainAliases", :description "Kind of resource this is.", :type "string"}}, :type "object"}, :ChromeOsDevice {:description "JSON template for Chrome Os Device resource in Directory API.", :properties {:platformVersion {:description "Chromebook platform version (Read-only)", :type "string"}, :lastSync {:description "Date and time the device was last synchronized with the policy settings in the G Suite administrator control panel (Read-only)", :format "date-time", :type "string"}, :annotatedAssetId {:description "AssetId specified during enrollment or through later annotation", :type "string"}, :willAutoRenew {:description "Will Chromebook auto renew after support end date (Read-only)", :type "boolean"}, :serialNumber {:description "Chromebook serial number (Read-only)", :type "string"}, :diskVolumeReports {:description "Reports of disk space and other info about mounted/connected volumes.", :items {:properties {:volumeInfo {:description "Disk volumes", :items {:properties {:storageFree {:description "Free disk space [in bytes]", :format "int64", :type "string"}, :storageTotal {:description "Total disk space [in bytes]", :format "int64", :type "string"}, :volumeId {:description "Volume id", :type "string"}}, :type "object"}, :type "array"}}, :type "object"}, :type "array"}, :bootMode {:description "Chromebook boot mode (Read-only)", :type "string"}, :deviceId {:description "Unique identifier of Chrome OS Device (Read-only)", :type "string"}, :orderNumber {:description "Chromebook order number (Read-only)", :type "string"}, :cpuStatusReports {:description "Reports of CPU utilization and temperature (Read-only)", :items {:properties {:cpuTemperatureInfo {:description "List of CPU temperature samples.", :items {:properties {:label {:description "CPU label", :type "string"}, :temperature {:description "Temperature in Celsius degrees.", :format "int32", :type "integer"}}, :type "object"}, :type "array"}, :cpuUtilizationPercentageInfo {:items {:format "int32", :type "integer"}, :type "array"}, :reportTime {:description "Date and time the report was received.", :format "date-time", :type "string"}}, :type "object"}, :type "array"}, :ethernetMacAddress0 {:description "(Read-only) MAC address used by the Chromebook’s internal ethernet port, and for onboard network (ethernet) interface. The format is twelve (12) hexadecimal digits without any delimiter (uppercase letters). This is only relevant for some devices.", :type "string"}, :macAddress {:description "Chromebook Mac Address on wifi network interface (Read-only)", :type "string"}, :meid {:description "Contains either the Mobile Equipment identifier (MEID) or the International Mobile Equipment Identity (IMEI) for the 3G mobile card in the Chromebook (Read-only)", :type "string"}, :etag {:description "ETag of the resource.", :type "string"}, :recentUsers {:description "List of recent device users, in descending order by last login time (Read-only)", :items {:properties {:email {:description "Email address of the user. Present only if the user type is managed", :type "string"}, :type {:description "The type of the user", :type "string"}}, :type "object"}, :type "array"}, :annotatedUser {:description "User of the device", :type "string"}, :deviceFiles {:description "List of device files to download (Read-only)", :items {:properties {:createTime {:description "Date and time the file was created", :format "date-time", :type "string"}, :downloadUrl {:description "File download URL", :type "string"}, :name {:description "File name", :type "string"}, :type {:description "File type", :type "string"}}, :type "object"}, :type "array"}, :systemRamFreeReports {:description "Reports of amounts of available RAM memory (Read-only)", :items {:properties {:reportTime {:description "Date and time the report was received.", :format "date-time", :type "string"}, :systemRamFreeInfo {:items {:format "int64", :type "string"}, :type "array"}}, :type "object"}, :type "array"}, :dockMacAddress {:description "(Read-only) Built-in MAC address for the docking station that the device connected to. Factory sets Media access control address (MAC address) assigned for use by a dock. Currently this is only supported on the Dell Arcada / Sarien devices and the Dell WD19 / WD19TB Docking Station. It is reserved specifically for MAC pass through device policy. The format is twelve (12) hexadecimal digits without any delimiter (uppercase letters). This is only relevant for Dell devices.", :type "string"}, :orgUnitPath {:description "OrgUnit of the device", :type "string"}, :status {:description "status of the device (Read-only)", :type "string"}, :kind {:default "admin#directory#chromeosdevice", :description "Kind of resource this is.", :type "string"}, :notes {:description "Notes added by the administrator", :type "string"}, :activeTimeRanges {:description "List of active time ranges (Read-only)", :items {:properties {:activeTime {:description "Duration in milliseconds", :format "int32", :type "integer"}, :date {:description "Date of usage", :format "date", :type "string"}}, :type "object"}, :type "array"}, :lastEnrollmentTime {:description "Date and time the device was last enrolled (Read-only)", :format "date-time", :type "string"}, :systemRamTotal {:description "Total RAM on the device [in bytes] (Read-only)", :format "int64", :type "string"}, :osVersion {:description "Chromebook Os Version (Read-only)", :type "string"}, :autoUpdateExpiration {:description "(Read-only) The timestamp after which the device will stop receiving Chrome updates or support", :format "int64", :type "string"}, :annotatedLocation {:description "Address or location of the device as noted by the administrator", :type "string"}, :supportEndDate {:description "Final date the device will be supported (Read-only)", :format "date-time", :type "string"}, :tpmVersionInfo {:description "Trusted Platform Module (TPM) (Read-only)", :properties {:family {:description "TPM family.", :type "string"}, :firmwareVersion {:description "TPM firmware version.", :type "string"}, :manufacturer {:description "TPM manufacturer code.", :type "string"}, :specLevel {:description "TPM specification level.", :type "string"}, :tpmModel {:description "TPM model number.", :type "string"}, :vendorSpecific {:description "Vendor-specific information such as Vendor ID.", :type "string"}}, :type "object"}, :manufactureDate {:description "(Read-only) The date the device was manufactured in yyyy-mm-dd format.", :type "string"}, :firmwareVersion {:description "Chromebook firmware version (Read-only)", :type "string"}, :ethernetMacAddress {:description "Chromebook Mac Address on ethernet network interface (Read-only)", :type "string"}, :model {:description "Chromebook Model (Read-only)", :type "string"}}, :type "object"}, :Role {:description "JSON template for role resource in Directory API.", :properties {:etag {:description "ETag of the resource.", :type "string"}, :isSuperAdminRole {:description "Returns true if the role is a super admin role.", :type "boolean"}, :isSystemRole {:description "Returns true if this is a pre-defined system role.", :type "boolean"}, :kind {:default "admin#directory#role", :description "The type of the API resource. This is always admin#directory#role.", :type "string"}, :roleDescription {:description "A short description of the role.", :type "string"}, :roleId {:description "ID of the role.", :format "int64", :type "string"}, :roleName {:description "Name of the role.", :type "string"}, :rolePrivileges {:description "The set of privileges that are granted to this role.", :items {:properties {:privilegeName {:description "The name of the privilege.", :type "string"}, :serviceId {:description "The obfuscated ID of the service this privilege is for. This value is returned with Privileges.list().", :type "string"}}, :type "object"}, :type "array"}}, :type "object"}, :Alias {:description "JSON template for Alias object in Directory API.", :properties {:alias {:description "A alias email", :type "string"}, :etag {:description "ETag of the resource.", :type "string"}, :id {:description "Unique id of the group (Read-only) Unique id of the user (Read-only)", :type "string"}, :kind {:default "admin#directory#alias", :description "Kind of resource this is.", :type "string"}, :primaryEmail {:description "Group's primary email (Read-only) User's primary email (Read-only)", :type "string"}}, :type "object"}, :OrgUnits {:description "JSON response template for List Organization Units operation in Directory API.", :properties {:etag {:description "ETag of the resource.", :type "string"}, :kind {:default "admin#directory#orgUnits", :description "Kind of resource this is.", :type "string"}, :organizationUnits {:description "List of user objects.", :items {:$ref "#/definitions/OrgUnit"}, :type "array"}}, :type "object"}, :UserLanguage {:description "JSON template for a language entry.", :properties {:customLanguage {:description "Other language. User can provide own language name if there is no corresponding Google III language code. If this is set LanguageCode can't be set", :type "string"}, :languageCode {:description "Language Code. Should be used for storing Google III LanguageCode string representation for language. Illegal values cause SchemaException.", :type "string"}}, :type "object"}, :UserCustomProperties {:additionalProperties {}, :description "JSON template for a set of custom properties (i.e. all fields in a particular schema)", :type "object"}, :RoleAssignments {:description "JSON response template for List roleAssignments operation in Directory API.", :properties {:etag {:description "ETag of the resource.", :type "string"}, :items {:description "A list of RoleAssignment resources.", :items {:$ref "#/definitions/RoleAssignment"}, :type "array"}, :kind {:default "admin#directory#roleAssignments", :description "The type of the API resource. This is always admin#directory#roleAssignments.", :type "string"}, :nextPageToken {:type "string"}}, :type "object"}, :RoleAssignment {:description "JSON template for roleAssignment resource in Directory API.", :properties {:assignedTo {:description "The unique ID of the user this role is assigned to.", :type "string"}, :etag {:description "ETag of the resource.", :type "string"}, :kind {:default "admin#directory#roleAssignment", :description "The type of the API resource. This is always admin#directory#roleAssignment.", :type "string"}, :orgUnitId {:description "If the role is restricted to an organization unit, this contains the ID for the organization unit the exercise of this role is restricted to.", :type "string"}, :roleAssignmentId {:description "ID of this roleAssignment.", :format "int64", :type "string"}, :roleId {:description "The ID of the role that is assigned.", :format "int64", :type "string"}, :scopeType {:description "The scope in which this role is assigned. Possible values are: \n- CUSTOMER\n- ORG_UNIT", :type "string"}}, :type "object"}, :UserLocation {:description "JSON template for a location entry.", :properties {:area {:description "Textual location. This is most useful for display purposes to concisely describe the location. For example, \"Mountain View, CA\", \"Near Seattle\", \"US-NYC-9TH 9A209A\".", :type "string"}, :buildingId {:description "Building Identifier.", :type "string"}, :customType {:description "Custom Type.", :type "string"}, :deskCode {:description "Most specific textual code of individual desk location.", :type "string"}, :floorName {:description "Floor name/number.", :type "string"}, :floorSection {:description "Floor section. More specific location within the floor. For example, if a floor is divided into sections \"A\", \"B\", and \"C\", this field would identify one of those values.", :type "string"}, :type {:description "Each entry can have a type which indicates standard types of that entry. For example location could be of types default and desk. In addition to standard type, an entry can have a custom type and can give it any name. Such types should have \"custom\" as type and also have a customType value.", :type "string"}}, :type "object"}, :TrustedAppId {:description "JSON template for Trusted App Ids Resource object in Directory API.", :properties {:androidPackageName {:description "Android package name.", :type "string"}, :certificateHashSHA1 {:description "SHA1 signature of the app certificate.", :type "string"}, :certificateHashSHA256 {:description "SHA256 signature of the app certificate.", :type "string"}, :etag {:type "string"}, :kind {:default "admin#directory#trustedappid", :description "Identifies the resource as a trusted AppId.", :type "string"}}, :type "object"}, :Features {:description "JSON template for Feature List Response object in Directory API.", :properties {:etag {:description "ETag of the resource.", :type "string"}, :features {:description "The Features in this page of results.", :items {:$ref "#/definitions/Feature"}, :type "array"}, :kind {:default "admin#directory#resources#features#featuresList", :description "Kind of resource this is.", :type "string"}, :nextPageToken {:description "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.", :type "string"}}, :type "object"}, :OrgUnit {:description "JSON template for Org Unit resource in Directory API.", :properties {:description {:description "Description of OrgUnit", :type "string"}, :blockInheritance {:description "Should block inheritance", :type "boolean"}, :parentOrgUnitId {:description "Id of parent OrgUnit", :type "string"}, :name {:description "Name of OrgUnit", :type "string"}, :etag {:description "ETag of the resource.", :type "string"}, :orgUnitId {:description "Id of OrgUnit", :type "string"}, :orgUnitPath {:description "Path of OrgUnit", :type "string"}, :kind {:default "admin#directory#orgUnit", :description "Kind of resource this is.", :type "string"}, :parentOrgUnitPath {:description "Path of parent OrgUnit", :type "string"}}, :type "object"}, :Asps {:properties {:etag {:description "ETag of the resource.", :type "string"}, :items {:description "A list of ASP resources.", :items {:$ref "#/definitions/Asp"}, :type "array"}, :kind {:default "admin#directory#aspList", :description "The type of the API resource. This is always admin#directory#aspList.", :type "string"}}, :type "object"}, :UserRelation {:description "JSON template for a relation entry.", :properties {:customType {:description "Custom Type.", :type "string"}, :type {:description "The relation of the user. Some of the possible values are mother, father, sister, brother, manager, assistant, partner.", :type "string"}, :value {:description "The name of the relation.", :type "string"}}, :type "object"}, :UserMakeAdmin {:description "JSON request template for setting/revoking admin status of a user in Directory API.", :properties {:status {:description "Boolean indicating new admin status of the user", :type "boolean"}}, :type "object"}, :MobileDevice {:description "JSON template for Mobile Device resource in Directory API.", :properties {:networkOperator {:description "Mobile Device mobile or network operator (if available) (Read-only)", :type "string"}, :lastSync {:description "Date and time the device was last synchronized with the policy settings in the G Suite administrator control panel (Read-only)", :format "date-time", :type "string"}, :email {:description "List of owner user's email addresses (Read-only)", :items {:type "string"}, :type "array"}, :releaseVersion {:description "Mobile Device release version version (Read-only)", :type "string"}, :serialNumber {:description "Mobile Device SSN or Serial Number (Read-only)", :type "string"}, :applications {:description "List of applications installed on Mobile Device", :items {:properties {:displayName {:description "Display name of application", :type "string"}, :packageName {:description "Package name of application", :type "string"}, :permission {:description "List of Permissions for application", :items {:type "string"}, :type "array"}, :versionCode {:description "Version code of application", :format "int32", :type "integer"}, :versionName {:description "Version name of application", :type "string"}}, :type "object"}, :type "array"}, :developerOptionsStatus {:description "Developer options enabled or disabled on device (Read-only)", :type "boolean"}, :otherAccountsInfo {:description "List of accounts added on device (Read-only)", :items {:type "string"}, :type "array"}, :devicePasswordStatus {:description "DevicePasswordStatus (Read-only)", :type "string"}, :deviceId {:description "Mobile Device serial number (Read-only)", :type "string"}, :securityPatchLevel {:description "Mobile Device Security patch level (Read-only)", :format "int64", :type "string"}, :name {:description "List of owner user's names (Read-only)", :items {:type "string"}, :type "array"}, :bootloaderVersion {:description "Mobile Device Bootloader version (Read-only)", :type "string"}, :meid {:description "Mobile Device MEID number (Read-only)", :type "string"}, :buildNumber {:description "Mobile Device Build number (Read-only)", :type "string"}, :hardware {:description "Mobile Device Hardware (Read-only)", :type "string"}, :type {:description "The type of device (Read-only)", :type "string"}, :etag {:description "ETag of the resource.", :type "string"}, :encryptionStatus {:description "Mobile Device Encryption Status (Read-only)", :type "string"}, :wifiMacAddress {:description "Mobile Device WiFi MAC address (Read-only)", :type "string"}, :brand {:description "Mobile Device Brand (Read-only)", :type "string"}, :kernelVersion {:description "Mobile Device Kernel version (Read-only)", :type "string"}, :resourceId {:description "Unique identifier of Mobile Device (Read-only)", :type "string"}, :hardwareId {:description "Mobile Device Hardware Id (Read-only)", :type "string"}, :imei {:description "Mobile Device IMEI number (Read-only)", :type "string"}, :basebandVersion {:description "Mobile Device Baseband version (Read-only)", :type "string"}, :userAgent {:description "Mobile Device user agent", :type "string"}, :status {:description "Status of the device (Read-only)", :type "string"}, :unknownSourcesStatus {:description "Unknown sources enabled or disabled on device (Read-only)", :type "boolean"}, :supportsWorkProfile {:description "Work profile supported on device (Read-only)", :type "boolean"}, :kind {:default "admin#directory#mobiledevice", :description "Kind of resource this is.", :type "string"}, :firstSync {:description "Date and time the device was first synchronized with the policy settings in the G Suite administrator control panel (Read-only)", :format "date-time", :type "string"}, :manufacturer {:description "Mobile Device manufacturer (Read-only)", :type "string"}, :os {:description "Name of the mobile operating system", :type "string"}, :deviceCompromisedStatus {:description "Mobile Device compromised status (Read-only)", :type "string"}, :adbStatus {:description "Adb (USB debugging) enabled or disabled on device (Read-only)", :type "boolean"}, :managedAccountIsOnOwnerProfile {:description "Boolean indicating if this account is on owner/primary profile or not (Read-only)", :type "boolean"}, :defaultLanguage {:description "The default locale used on the Mobile Device (Read-only)", :type "string"}, :privilege {:description "DMAgentPermission (Read-only)", :type "string"}, :model {:description "Name of the model of the device", :type "string"}}, :type "object"}}}