#:compute.gcp.descriptor{:name "admin", :title "Admin SDK API", :api-version "reports_v1", :revision "20220318", :endpoint #:compute.gcp.descriptor{:url "https://admin.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"description" "JSONP", "location" "query", "type" "string"}, "uploadType" {"description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "type" "string", "location" "query"}, "key" {"location" "query", "type" "string", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."}, "access_token" {"description" "OAuth access token.", "location" "query", "type" "string"}, "oauth_token" {"type" "string", "location" "query", "description" "OAuth 2.0 token for the current user."}, "prettyPrint" {"default" "true", "location" "query", "type" "boolean", "description" "Returns response with indentations and line breaks."}, "alt" {"default" "json", "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "description" "Data format for response.", "enum" ["json" "media" "proto"], "type" "string", "location" "query"}, "$.xgafv" {"location" "query", "type" "string", "enumDescriptions" ["v1 error format" "v2 error format"], "enum" ["1" "2"], "description" "V1 error format."}, "fields" {"location" "query", "description" "Selector specifying which fields to include in a partial response.", "type" "string"}, "upload_protocol" {"description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "location" "query", "type" "string"}, "quotaUser" {"location" "query", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "type" "string"}}, :op->info {"admin.channels.stop" #:compute.gcp.descriptor{:http-method :post, :path "admin/reports_v1/channels/stop", :request {"$ref" "Channel"}, :parameters {}, :description "Stop watching resources through this channel."}, "reports.activities.list" #:compute.gcp.descriptor{:http-method :get, :path "admin/reports/v1/activity/users/{userKey}/applications/{applicationName}", :response {"$ref" "Activities"}, :parameters {"pageToken" {"description" "The token to specify next page. A report with multiple pages has a `nextPageToken` property in the response. In your follow-on request getting the next page of the report, enter the `nextPageToken` value in the `pageToken` query string.", "location" "query", "type" "string"}, "applicationName" {"enumDescriptions" ["The Google Workspace Access Transparency activity reports return information about different types of Access Transparency activity events." "The Admin console application's activity reports return account information about different types of administrator activity events." "The Google Calendar application's activity reports return information about various Calendar activity events." "The Chat activity reports return information about various Chat activity events." "The Google Drive application's activity reports return information about various Google Drive activity events. The Drive activity report is only available for Google Workspace Business and Enterprise customers." "The Google Cloud Platform application's activity reports return information about various GCP activity events." "The Google+ application's activity reports return information about various Google+ activity events." "The Google Groups application's activity reports return information about various Groups activity events." "The Enterprise Groups activity reports return information about various Enterprise group activity events." "The Jamboard activity reports return information about various Jamboard activity events." "The Login application's activity reports return account information about different types of Login activity events." "The Meet Audit activity report returns information about different types of Meet Audit activity events." "The Device Audit activity report returns information about different types of Device Audit activity events." "The Rules activity report returns information about different types of Rules activity events." "The SAML activity report returns information about different types of SAML activity events." "The Token application's activity reports return account information about different types of Token activity events." "The User Accounts application's activity reports return account information about different types of User Accounts activity events." "The Context-aware access activity reports return information about users' access denied events due to Context-aware access rules." "The Chrome activity reports return information about Chrome browser and Chrome OS events." "The Data Studio activity reports return information about various types of Data Studio activity events." "The Keep application's activity reports return information about various Google Keep activity events. The Keep activity report is only available for Google Workspace Business and Enterprise customers."], "description" "Application name for which the events are to be retrieved.", "pattern" "(access_transparency)|(admin)|(calendar)|(chat)|(chrome)|(context_aware_access)|(data_studio)|(drive)|(gcp)|(gplus)|(groups)|(groups_enterprise)|(jamboard)|(keep)|(login)|(meet)|(mobile)|(rules)|(saml)|(token)|(user_accounts)", "location" "path", "type" "string", "enum" ["access_transparency" "admin" "calendar" "chat" "drive" "gcp" "gplus" "groups" "groups_enterprise" "jamboard" "login" "meet" "mobile" "rules" "saml" "token" "user_accounts" "context_aware_access" "chrome" "data_studio" "keep"], "required" true}, "userKey" {"location" "path", "required" true, "description" "Represents the profile ID or the user email for which the data should be filtered. Can be `all` for all information, or `userKey` for a user's unique Google Workspace profile ID or their primary email address. Must not be a deleted user. For a deleted user, call `users.list` in Directory API with `showDeleted=true`, then use the returned `ID` as the `userKey`.", "type" "string"}, "filters" {"description" "The `filters` query string is a comma-separated list. The list is composed of event parameters that are manipulated by relational operators. Event parameters are in the form `parameter1 name[parameter1 value],parameter2 name[parameter2 value],...` These event parameters are associated with a specific `eventName`. An empty report is returned if the filtered request's parameter does not belong to the `eventName`. For more information about `eventName` parameters, see the list of event names for various applications above in `applicationName`. In the following Admin Activity example, the <> operator is URL-encoded in the request's query string (%3C%3E): GET...&eventName=CHANGE_CALENDAR_SETTING &filters=NEW_VALUE%3C%3EREAD_ONLY_ACCESS In the following Drive example, the list can be a view or edit event's `doc_id` parameter with a value that is manipulated by an 'equal to' (==) or 'not equal to' (<>) relational operator. In the first example, the report returns each edited document's `doc_id`. In the second example, the report returns each viewed document's `doc_id` that equals the value 12345 and does not return any viewed document's which have a `doc_id` value of 98765. The <> operator is URL-encoded in the request's query string (%3C%3E): GET...&eventName=edit&filters=doc_id GET...&eventName=view&filters=doc_id==12345,doc_id%3C%3E98765 The relational operators include: - `==` - 'equal to'. - `<>` - 'not equal to'. It is URL-encoded (%3C%3E). - `<` - 'less than'. It is URL-encoded (%3C). - `<=` - 'less than or equal to'. It is URL-encoded (%3C=). - `>` - 'greater than'. It is URL-encoded (%3E). - `>=` - 'greater than or equal to'. It is URL-encoded (%3E=). *Note:* The API doesn't accept multiple values of a parameter. If a particular parameter is supplied more than once in the API request, the API only accepts the last value of that request parameter. In addition, if an invalid request parameter is supplied in the API request, the API ignores that request parameter and returns the response corresponding to the remaining valid request parameters. If no parameters are requested, all parameters are returned. ", "pattern" "(.+[<,<=,==,>=,>,<>].+,)*(.+[<,<=,==,>=,>,<>].+)", "location" "query", "type" "string"}, "customerId" {"pattern" "C.+|my_customer", "description" "The unique ID of the customer to retrieve data for.", "location" "query", "type" "string"}, "maxResults" {"minimum" "1", "type" "integer", "maximum" "1000", "format" "int32", "default" "1000", "description" "Determines how many activity records are shown on each response page. For example, if the request sets `maxResults=1` and the report has two activities, the report has two pages. The response's `nextPageToken` property has the token to the second page. The `maxResults` query string is optional in the request. The default value is 1000.", "location" "query"}, "eventName" {"type" "string", "description" "The name of the event being queried by the API. Each `eventName` is related to a specific Google Workspace service or feature which the API organizes into types of events. An example is the Google Calendar events in the Admin console application's reports. The Calendar Settings `type` structure has all of the Calendar `eventName` activities reported by the API. When an administrator changes a Calendar setting, the API reports this activity in the Calendar Settings `type` and `eventName` parameters. For more information about `eventName` query strings and parameters, see the list of event names for various applications above in `applicationName`.", "location" "query"}, "startTime" {"pattern" "(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)T(\\d\\d):(\\d\\d):(\\d\\d)(?:\\.(\\d+))?(?:(Z)|([-+])(\\d\\d):(\\d\\d))", "description" "Sets the beginning of the range of time shown in the report. The date is in the RFC 3339 format, for example 2010-10-28T10:26:35.000Z. The report returns all activities from `startTime` until `endTime`. The `startTime` must be before the `endTime` (if specified) and the current time when the request is made, or the API returns an error.", "location" "query", "type" "string"}, "endTime" {"pattern" "(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)T(\\d\\d):(\\d\\d):(\\d\\d)(?:\\.(\\d+))?(?:(Z)|([-+])(\\d\\d):(\\d\\d))", "location" "query", "description" "Sets the end of the range of time shown in the report. The date is in the RFC 3339 format, for example 2010-10-28T10:26:35.000Z. The default value is the approximate time of the API request. An API report has three basic time concepts: - *Date of the API's request for a report*: When the API created and retrieved the report. - *Report's start time*: The beginning of the timespan shown in the report. The `startTime` must be before the `endTime` (if specified) and the current time when the request is made, or the API returns an error. - *Report's end time*: The end of the timespan shown in the report. For example, the timespan of events summarized in a report can start in April and end in May. The report itself can be requested in August. If the `endTime` is not specified, the report returns all activities from the `startTime` until the current time or the most recent 180 days if the `startTime` is more than 180 days in the past.", "type" "string"}, "orgUnitID" {"location" "query", "default" "", "description" "ID of the organizational unit to report on. Activity records will be shown only for users who belong to the specified organizational unit. Data before Dec 17, 2018 doesn't appear in the filtered results.", "type" "string", "pattern" "(id:[a-z0-9]+)"}, "actorIpAddress" {"description" "The Internet Protocol (IP) Address of host where the event was performed. This is an additional way to filter a report's summary using the IP address of the user whose activity is being reported. This IP address may or may not reflect the user's physical location. For example, the IP address can be the user's proxy server's address or a virtual private network (VPN) address. This parameter supports both IPv4 and IPv6 address versions.", "type" "string", "location" "query"}, "groupIdFilter" {"location" "query", "type" "string", "description" "Comma separated group ids (obfuscated) on which user activities are filtered, i.e. the response will contain activities for only those users that are a part of at least one of the group ids mentioned here. Format: \"id:abc123,id:xyz456\"", "pattern" "(id:[a-z0-9]+(,id:[a-z0-9]+)*)"}}, :description "Retrieves a list of activities for a specific customer's account and application such as the Admin console application or the Google Drive application. For more information, see the guides for administrator and Google Drive activity reports. For more information about the activity report's parameters, see the activity parameters reference guides. "}, "reports.activities.watch" #:compute.gcp.descriptor{:http-method :post, :path "admin/reports/v1/activity/users/{userKey}/applications/{applicationName}/watch", :request {"$ref" "Channel"}, :response {"$ref" "Channel"}, :parameters {"pageToken" {"type" "string", "location" "query", "description" "The token to specify next page. A report with multiple pages has a `nextPageToken` property in the response. In your follow-on request getting the next page of the report, enter the `nextPageToken` value in the `pageToken` query string."}, "applicationName" {"type" "string", "enum" ["access_transparency" "admin" "calendar" "chat" "drive" "gcp" "gplus" "groups" "groups_enterprise" "jamboard" "login" "meet" "mobile" "rules" "saml" "token" "user_accounts" "context_aware_access" "chrome" "data_studio" "keep"], "pattern" "(access_transparency)|(admin)|(calendar)|(chat)|(chrome)|(context_aware_access)|(data_studio)|(drive)|(gcp)|(gplus)|(groups)|(groups_enterprise)|(jamboard)|(keep)|(login)|(meet)|(mobile)|(rules)|(saml)|(token)|(user_accounts)", "enumDescriptions" ["The Google Workspace Access Transparency activity reports return information about different types of Access Transparency activity events." "The Admin console application's activity reports return account information about different types of administrator activity events." "The Google Calendar application's activity reports return information about various Calendar activity events." "The Chat activity reports return information about various Chat activity events." "The Google Drive application's activity reports return information about various Google Drive activity events. The Drive activity report is only available for Google Workspace Business and Google Workspace Enterprise customers." "The Google Cloud Platform application's activity reports return information about various GCP activity events." "The Google+ application's activity reports return information about various Google+ activity events." "The Google Groups application's activity reports return information about various Groups activity events." "The Enterprise Groups activity reports return information about various Enterprise group activity events." "The Jamboard activity reports return information about various Jamboard activity events." "The Login application's activity reports return account information about different types of Login activity events." "The Meet Audit activity report returns information about different types of Meet Audit activity events." "The Device Audit activity report returns information about different types of Device Audit activity events." "The Rules activity report returns information about different types of Rules activity events." "The SAML activity report returns information about different types of SAML activity events." "The Token application's activity reports return account information about different types of Token activity events." "The User Accounts application's activity reports return account information about different types of User Accounts activity events." "The Context-aware access activity reports return information about users' access denied events due to Context-aware access rules." "The Chrome activity reports return information about Chrome browser and Chrome OS events." "The Data Studio activity reports return information about various types of Data Studio activity events." "The Keep application's activity reports return information about various Google Keep activity events. The Keep activity report is only available for Google Workspace Business and Enterprise customers."], "required" true, "location" "path", "description" "Application name for which the events are to be retrieved."}, "userKey" {"required" true, "type" "string", "description" "Represents the profile ID or the user email for which the data should be filtered. Can be `all` for all information, or `userKey` for a user's unique Google Workspace profile ID or their primary email address. Must not be a deleted user. For a deleted user, call `users.list` in Directory API with `showDeleted=true`, then use the returned `ID` as the `userKey`.", "location" "path"}, "filters" {"pattern" "(.+[<,<=,==,>=,>,<>].+,)*(.+[<,<=,==,>=,>,<>].+)", "location" "query", "type" "string", "description" "The `filters` query string is a comma-separated list. The list is composed of event parameters that are manipulated by relational operators. Event parameters are in the form `parameter1 name[parameter1 value],parameter2 name[parameter2 value],...` These event parameters are associated with a specific `eventName`. An empty report is returned if the filtered request's parameter does not belong to the `eventName`. For more information about `eventName` parameters, see the list of event names for various applications above in `applicationName`. In the following Admin Activity example, the <> operator is URL-encoded in the request's query string (%3C%3E): GET...&eventName=CHANGE_CALENDAR_SETTING &filters=NEW_VALUE%3C%3EREAD_ONLY_ACCESS In the following Drive example, the list can be a view or edit event's `doc_id` parameter with a value that is manipulated by an 'equal to' (==) or 'not equal to' (<>) relational operator. In the first example, the report returns each edited document's `doc_id`. In the second example, the report returns each viewed document's `doc_id` that equals the value 12345 and does not return any viewed document's which have a `doc_id` value of 98765. The <> operator is URL-encoded in the request's query string (%3C%3E): GET...&eventName=edit&filters=doc_id GET...&eventName=view&filters=doc_id==12345,doc_id%3C%3E98765 The relational operators include: - `==` - 'equal to'. - `<>` - 'not equal to'. It is URL-encoded (%3C%3E). - `<` - 'less than'. It is URL-encoded (%3C). - `<=` - 'less than or equal to'. It is URL-encoded (%3C=). - `>` - 'greater than'. It is URL-encoded (%3E). - `>=` - 'greater than or equal to'. It is URL-encoded (%3E=). *Note:* The API doesn't accept multiple values of a parameter. If a particular parameter is supplied more than once in the API request, the API only accepts the last value of that request parameter. In addition, if an invalid request parameter is supplied in the API request, the API ignores that request parameter and returns the response corresponding to the remaining valid request parameters. If no parameters are requested, all parameters are returned. "}, "customerId" {"location" "query", "description" "The unique ID of the customer to retrieve data for.", "pattern" "C.+|my_customer", "type" "string"}, "maxResults" {"description" "Determines how many activity records are shown on each response page. For example, if the request sets `maxResults=1` and the report has two activities, the report has two pages. The response's `nextPageToken` property has the token to the second page. The `maxResults` query string is optional in the request. The default value is 1000.", "format" "int32", "minimum" "1", "maximum" "1000", "type" "integer", "location" "query", "default" "1000"}, "eventName" {"location" "query", "type" "string", "description" "The name of the event being queried by the API. Each `eventName` is related to a specific Google Workspace service or feature which the API organizes into types of events. An example is the Google Calendar events in the Admin console application's reports. The Calendar Settings `type` structure has all of the Calendar `eventName` activities reported by the API. When an administrator changes a Calendar setting, the API reports this activity in the Calendar Settings `type` and `eventName` parameters. For more information about `eventName` query strings and parameters, see the list of event names for various applications above in `applicationName`."}, "startTime" {"description" "Sets the beginning of the range of time shown in the report. The date is in the RFC 3339 format, for example 2010-10-28T10:26:35.000Z. The report returns all activities from `startTime` until `endTime`. The `startTime` must be before the `endTime` (if specified) and the current time when the request is made, or the API returns an error.", "type" "string", "pattern" "(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)T(\\d\\d):(\\d\\d):(\\d\\d)(?:\\.(\\d+))?(?:(Z)|([-+])(\\d\\d):(\\d\\d))", "location" "query"}, "endTime" {"type" "string", "pattern" "(\\d\\d\\d\\d)-(\\d\\d)-(\\d\\d)T(\\d\\d):(\\d\\d):(\\d\\d)(?:\\.(\\d+))?(?:(Z)|([-+])(\\d\\d):(\\d\\d))", "description" "Sets the end of the range of time shown in the report. The date is in the RFC 3339 format, for example 2010-10-28T10:26:35.000Z. The default value is the approximate time of the API request. An API report has three basic time concepts: - *Date of the API's request for a report*: When the API created and retrieved the report. - *Report's start time*: The beginning of the timespan shown in the report. The `startTime` must be before the `endTime` (if specified) and the current time when the request is made, or the API returns an error. - *Report's end time*: The end of the timespan shown in the report. For example, the timespan of events summarized in a report can start in April and end in May. The report itself can be requested in August. If the `endTime` is not specified, the report returns all activities from the `startTime` until the current time or the most recent 180 days if the `startTime` is more than 180 days in the past.", "location" "query"}, "orgUnitID" {"description" "ID of the organizational unit to report on. Activity records will be shown only for users who belong to the specified organizational unit. Data before Dec 17, 2018 doesn't appear in the filtered results.", "type" "string", "location" "query", "pattern" "(id:[a-z0-9]+)", "default" ""}, "actorIpAddress" {"description" "The Internet Protocol (IP) Address of host where the event was performed. This is an additional way to filter a report's summary using the IP address of the user whose activity is being reported. This IP address may or may not reflect the user's physical location. For example, the IP address can be the user's proxy server's address or a virtual private network (VPN) address. This parameter supports both IPv4 and IPv6 address versions.", "type" "string", "location" "query"}, "groupIdFilter" {"description" "Comma separated group ids (obfuscated) on which user activities are filtered, i.e. the response will contain activities for only those users that are a part of at least one of the group ids mentioned here. Format: \"id:abc123,id:xyz456\"", "type" "string", "location" "query", "pattern" "(id:[a-z0-9]+(,id:[a-z0-9]+)*)"}}, :description "Start receiving notifications for account activities. For more information, see Receiving Push Notifications."}, "reports.entityUsageReports.get" #:compute.gcp.descriptor{:http-method :get, :path "admin/reports/v1/usage/{entityType}/{entityKey}/dates/{date}", :response {"$ref" "UsageReports"}, :parameters {"pageToken" {"location" "query", "description" "Token to specify next page. A report with multiple pages has a `nextPageToken` property in the response. In your follow-on request getting the next page of the report, enter the `nextPageToken` value in the `pageToken` query string.", "type" "string"}, "parameters" {"type" "string", "description" "The `parameters` query string is a comma-separated list of event parameters that refine a report's results. The parameter is associated with a specific application. The application values for the Entities usage report are only `gplus`. A `parameter` query string is in the CSV form of `[app_name1:param_name1], [app_name2:param_name2]...`. *Note:* The API doesn't accept multiple values of a parameter. If a particular parameter is supplied more than once in the API request, the API only accepts the last value of that request parameter. In addition, if an invalid request parameter is supplied in the API request, the API ignores that request parameter and returns the response corresponding to the remaining valid request parameters. An example of an invalid request parameter is one that does not belong to the application. If no parameters are requested, all parameters are returned. ", "pattern" "(((gplus)):[^,]+,)*(((gplus)):[^,]+)", "location" "query"}, "filters" {"type" "string", "pattern" "(((gplus)):[a-z0-9_]+[<,<=,==,>=,>,!=][^,]+,)*(((gplus)):[a-z0-9_]+[<,<=,==,>=,>,!=][^,]+)", "description" "The `filters` query string is a comma-separated list of an application's event parameters where the parameter's value is manipulated by a relational operator. The `filters` query string includes the name of the application whose usage is returned in the report. The application values for the Entities usage report include `accounts`, `docs`, and `gmail`. Filters are in the form `[application name]:parameter name[parameter value],...`. In this example, the `<>` 'not equal to' operator is URL-encoded in the request's query string (%3C%3E): GET https://www.googleapis.com/admin/reports/v1/usage/gplus_communities/all/dates/2017-12-01 ?parameters=gplus:community_name,gplus:num_total_members &filters=gplus:num_total_members%3C%3E0 The relational operators include: - `==` - 'equal to'. - `<>` - 'not equal to'. It is URL-encoded (%3C%3E). - `<` - 'less than'. It is URL-encoded (%3C). - `<=` - 'less than or equal to'. It is URL-encoded (%3C=). - `>` - 'greater than'. It is URL-encoded (%3E). - `>=` - 'greater than or equal to'. It is URL-encoded (%3E=). Filters can only be applied to numeric parameters.", "location" "query"}, "customerId" {"pattern" "C.+|my_customer", "description" "The unique ID of the customer to retrieve data for.", "type" "string", "location" "query"}, "date" {"description" "Represents the date the usage occurred. The timestamp is in the ISO 8601 format, yyyy-mm-dd. We recommend you use your account's time zone for this.", "location" "path", "type" "string", "required" true, "pattern" "(\\d){4}-(\\d){2}-(\\d){2}"}, "entityKey" {"type" "string", "required" true, "description" "Represents the key of the object to filter the data with. It is a string which can take the value `all` to get activity events for all users, or any other value for an app-specific entity. For details on how to obtain the `entityKey` for a particular `entityType`, see the Entities Usage parameters reference guides.", "location" "path"}, "maxResults" {"default" "1000", "maximum" "1000", "type" "integer", "location" "query", "minimum" "1", "format" "uint32", "description" "Determines how many activity records are shown on each response page. For example, if the request sets `maxResults=1` and the report has two activities, the report has two pages. The response's `nextPageToken` property has the token to the second page."}, "entityType" {"enum" ["gplus_communities"], "location" "path", "description" "Represents the type of entity for the report.", "type" "string", "pattern" "(gplus_communities)", "required" true, "enumDescriptions" ["Returns a report on Google+ communities."]}}, :description "Retrieves a report which is a collection of properties and statistics for entities used by users within the account. For more information, see the Entities Usage Report guide. For more information about the entities report's parameters, see the Entities Usage parameters reference guides."}, "reports.userUsageReport.get" #:compute.gcp.descriptor{:http-method :get, :path "admin/reports/v1/usage/users/{userKey}/dates/{date}", :response {"$ref" "UsageReports"}, :parameters {"pageToken" {"description" "Token to specify next page. A report with multiple pages has a `nextPageToken` property in the response. In your follow-on request getting the next page of the report, enter the `nextPageToken` value in the `pageToken` query string.", "type" "string", "location" "query"}, "userKey" {"location" "path", "required" true, "description" "Represents the profile ID or the user email for which the data should be filtered. Can be `all` for all information, or `userKey` for a user's unique Google Workspace profile ID or their primary email address. Must not be a deleted user. For a deleted user, call `users.list` in Directory API with `showDeleted=true`, then use the returned `ID` as the `userKey`.", "type" "string"}, "filters" {"pattern" "(((accounts)|(classroom)|(cros)|(gmail)|(calendar)|(docs)|(gplus)|(sites)|(device_management)|(drive)):[a-z0-9_]+[<,<=,==,>=,>,!=][^,]+,)*(((accounts)|(classroom)|(cros)|(gmail)|(calendar)|(docs)|(gplus)|(sites)|(device_management)|(drive)):[a-z0-9_]+[<,<=,==,>=,>,!=][^,]+)", "location" "query", "type" "string", "description" "The `filters` query string is a comma-separated list of an application's event parameters where the parameter's value is manipulated by a relational operator. The `filters` query string includes the name of the application whose usage is returned in the report. The application values for the Users Usage Report include `accounts`, `docs`, and `gmail`. Filters are in the form `[application name]:parameter name[parameter value],...`. In this example, the `<>` 'not equal to' operator is URL-encoded in the request's query string (%3C%3E): GET https://www.googleapis.com/admin/reports/v1/usage/users/all/dates/2013-03-03 ?parameters=accounts:last_login_time &filters=accounts:last_login_time%3C%3E2010-10-28T10:26:35.000Z The relational operators include: - `==` - 'equal to'. - `<>` - 'not equal to'. It is URL-encoded (%3C%3E). - `<` - 'less than'. It is URL-encoded (%3C). - `<=` - 'less than or equal to'. It is URL-encoded (%3C=). - `>` - 'greater than'. It is URL-encoded (%3E). - `>=` - 'greater than or equal to'. It is URL-encoded (%3E=). "}, "customerId" {"pattern" "C.+|my_customer", "type" "string", "location" "query", "description" "The unique ID of the customer to retrieve data for."}, "maxResults" {"default" "1000", "format" "uint32", "minimum" "1", "maximum" "1000", "location" "query", "description" "Determines how many activity records are shown on each response page. For example, if the request sets `maxResults=1` and the report has two activities, the report has two pages. The response's `nextPageToken` property has the token to the second page. The `maxResults` query string is optional.", "type" "integer"}, "date" {"type" "string", "pattern" "(\\d){4}-(\\d){2}-(\\d){2}", "description" "Represents the date the usage occurred. The timestamp is in the ISO 8601 format, yyyy-mm-dd. We recommend you use your account's time zone for this.", "location" "path", "required" true}, "orgUnitID" {"default" "", "description" "ID of the organizational unit to report on. User activity will be shown only for users who belong to the specified organizational unit. Data before Dec 17, 2018 doesn't appear in the filtered results.", "pattern" "(id:[a-z0-9]+)", "type" "string", "location" "query"}, "parameters" {"location" "query", "description" "The `parameters` query string is a comma-separated list of event parameters that refine a report's results. The parameter is associated with a specific application. The application values for the Customers Usage report include `accounts`, `app_maker`, `apps_scripts`, `calendar`, `classroom`, `cros`, `docs`, `gmail`, `gplus`, `device_management`, `meet`, and `sites`. A `parameters` query string is in the CSV form of `app_name1:param_name1, app_name2:param_name2`. *Note:* The API doesn't accept multiple values of a parameter. If a particular parameter is supplied more than once in the API request, the API only accepts the last value of that request parameter. In addition, if an invalid request parameter is supplied in the API request, the API ignores that request parameter and returns the response corresponding to the remaining valid request parameters. An example of an invalid request parameter is one that does not belong to the application. If no parameters are requested, all parameters are returned. ", "type" "string", "pattern" "(((accounts)|(classroom)|(cros)|(gmail)|(calendar)|(docs)|(gplus)|(sites)|(device_management)|(drive)):[^,]+,)*(((accounts)|(classroom)|(cros)|(gmail)|(calendar)|(docs)|(gplus)|(sites)|(device_management)|(drive)):[^,]+)"}, "groupIdFilter" {"location" "query", "description" "Comma separated group ids (obfuscated) on which user activities are filtered, i.e. the response will contain activities for only those users that are a part of at least one of the group ids mentioned here. Format: \"id:abc123,id:xyz456\"", "pattern" "(id:[a-z0-9]+(,id:[a-z0-9]+)*)", "type" "string"}}, :description "Retrieves a report which is a collection of properties and statistics for a set of users with the account. For more information, see the User Usage Report guide. For more information about the user report's parameters, see the Users Usage parameters reference guides."}, "reports.customerUsageReports.get" #:compute.gcp.descriptor{:http-method :get, :path "admin/reports/v1/usage/dates/{date}", :response {"$ref" "UsageReports"}, :parameters {"parameters" {"pattern" "(((accounts)|(app_maker)|(apps_scripts)|(classroom)|(cros)|(gmail)|(calendar)|(docs)|(gplus)|(sites)|(device_management)|(drive)|(meet)):[^,]+,)*(((accounts)|(app_maker)|(apps_scripts)|(classroom)|(cros)|(gmail)|(calendar)|(docs)|(gplus)|(sites)|(device_management)|(drive)|(meet)):[^,]+)", "type" "string", "location" "query", "description" "The `parameters` query string is a comma-separated list of event parameters that refine a report's results. The parameter is associated with a specific application. The application values for the Customers usage report include `accounts`, `app_maker`, `apps_scripts`, `calendar`, `classroom`, `cros`, `docs`, `gmail`, `gplus`, `device_management`, `meet`, and `sites`. A `parameters` query string is in the CSV form of `app_name1:param_name1, app_name2:param_name2`. *Note:* The API doesn't accept multiple values of a parameter. If a particular parameter is supplied more than once in the API request, the API only accepts the last value of that request parameter. In addition, if an invalid request parameter is supplied in the API request, the API ignores that request parameter and returns the response corresponding to the remaining valid request parameters. An example of an invalid request parameter is one that does not belong to the application. If no parameters are requested, all parameters are returned. "}, "pageToken" {"type" "string", "location" "query", "description" "Token to specify next page. A report with multiple pages has a `nextPageToken` property in the response. For your follow-on requests getting all of the report's pages, enter the `nextPageToken` value in the `pageToken` query string."}, "customerId" {"pattern" "C.+|my_customer", "location" "query", "description" "The unique ID of the customer to retrieve data for.", "type" "string"}, "date" {"type" "string", "required" true, "pattern" "(\\d){4}-(\\d){2}-(\\d){2}", "description" "Represents the date the usage occurred. The timestamp is in the ISO 8601 format, yyyy-mm-dd. We recommend you use your account's time zone for this.", "location" "path"}}, :description "Retrieves a report which is a collection of properties and statistics for a specific customer's account. For more information, see the Customers Usage Report guide. For more information about the customer report's parameters, see the Customers Usage parameters reference guides. "}}, :schemas {"NestedParameter" {"id" "NestedParameter", "type" "object", "description" "JSON template for a parameter used in various reports.", "properties" {"multiValue" {"description" "Multiple string values of the parameter.", "type" "array", "items" {"type" "string"}}, "multiIntValue" {"items" {"format" "int64", "type" "string"}, "description" "Multiple integer values of the parameter.", "type" "array"}, "name" {"type" "string", "description" "The name of the parameter."}, "boolValue" {"type" "boolean", "description" "Boolean value of the parameter."}, "multiBoolValue" {"items" {"type" "boolean"}, "type" "array", "description" "Multiple boolean values of the parameter."}, "intValue" {"description" "Integer value of the parameter.", "type" "string", "format" "int64"}, "value" {"type" "string", "description" "String value of the parameter."}}}, "UsageReport" {"type" "object", "id" "UsageReport", "properties" {"etag" {"type" "string", "description" "ETag of the resource."}, "entity" {"properties" {"profileId" {"readOnly" true, "description" "Output only. The user's immutable Google Workspace profile identifier.", "type" "string"}, "entityId" {"readOnly" true, "type" "string", "description" "Output only. Object key. Only relevant if entity.type = \"OBJECT\" Note: external-facing name of report is \"Entities\" rather than \"Objects\"."}, "customerId" {"readOnly" true, "type" "string", "description" "Output only. The unique identifier of the customer's account."}, "type" {"type" "string", "readOnly" true, "description" "Output only. The type of item. The value is `user`."}, "userEmail" {"description" "Output only. The user's email address. Only relevant if entity.type = \"USER\"", "type" "string", "readOnly" true}}, "readOnly" true, "type" "object", "description" "Output only. Information about the type of the item."}, "date" {"readOnly" true, "type" "string", "description" "Output only. The date of the report request."}, "kind" {"description" "The type of API resource. For a usage report, the value is `admin#reports#usageReport`.", "type" "string", "default" "admin#reports#usageReport"}, "parameters" {"description" "Output only. Parameter value pairs for various applications. For the Entity Usage Report parameters and values, see [the Entity Usage parameters reference](/admin-sdk/reports/v1/reference/usage-ref-appendix-a/entities).", "readOnly" true, "type" "array", "items" {"type" "object", "properties" {"datetimeValue" {"readOnly" true, "format" "date-time", "type" "string", "description" "The RFC 3339 formatted value of the parameter, for example 2010-10-28T10:26:35.000Z."}, "name" {"type" "string", "description" "The name of the parameter. For the User Usage Report parameter names, see the User Usage parameters reference."}, "intValue" {"type" "string", "format" "int64", "description" "Output only. Integer value of the parameter.", "readOnly" true}, "stringValue" {"description" "Output only. String value of the parameter.", "type" "string", "readOnly" true}, "boolValue" {"readOnly" true, "description" "Output only. Boolean value of the parameter.", "type" "boolean"}, "msgValue" {"type" "array", "description" "Output only. Nested message value of the parameter.", "readOnly" true, "items" {"additionalProperties" {"type" "any", "description" "Properties of the object."}, "type" "object"}}}}}}, "description" "JSON template for a usage report."}, "UsageReports" {"properties" {"kind" {"description" "The type of API resource. For a usage report, the value is `admin#reports#usageReports`.", "default" "admin#reports#usageReports", "type" "string"}, "warnings" {"type" "array", "description" "Warnings, if any.", "items" {"properties" {"message" {"type" "string", "description" "The human readable messages for a warning are: - Data is not available warning - Sorry, data for date yyyy-mm-dd for application \"`application name`\" is not available. - Partial data is available warning - Data for date yyyy-mm-dd for application \"`application name`\" is not available right now, please try again after a few hours. "}, "data" {"type" "array", "description" "Key-value pairs to give detailed information on the warning.", "items" {"properties" {"key" {"type" "string", "description" "Key associated with a key-value pair to give detailed information on the warning."}, "value" {"type" "string", "description" "Value associated with a key-value pair to give detailed information on the warning."}}, "type" "object"}}, "code" {"description" "Machine readable code or warning type. The warning code value is `200`.", "type" "string"}}, "type" "object"}}, "usageReports" {"type" "array", "description" "Various application parameter records.", "items" {"$ref" "UsageReport"}}, "nextPageToken" {"description" "Token to specify next page. A report with multiple pages has a `nextPageToken` property in the response. For your follow-on requests getting all of the report's pages, enter the `nextPageToken` value in the `pageToken` query string.", "type" "string"}, "etag" {"type" "string", "description" "ETag of the resource."}}, "id" "UsageReports", "type" "object"}, "Activities" {"type" "object", "properties" {"etag" {"type" "string", "description" "ETag of the resource."}, "kind" {"default" "admin#reports#activities", "type" "string", "description" "The type of API resource. For an activity report, the value is `reports#activities`."}, "items" {"description" "Each activity record in the response.", "items" {"$ref" "Activity"}, "type" "array"}, "nextPageToken" {"description" "Token for retrieving the follow-on next page of the report. The `nextPageToken` value is used in the request's `pageToken` query string.", "type" "string"}}, "description" "JSON template for a collection of activities.", "id" "Activities"}, "Activity" {"properties" {"events" {"description" "Activity events in the report.", "items" {"type" "object", "properties" {"name" {"description" "Name of the event. This is the specific name of the activity reported by the API. And each `eventName` is related to a specific Google Workspace service or feature which the API organizes into types of events. For `eventName` request parameters in general: - If no `eventName` is given, the report returns all possible instances of an `eventName`. - When you request an `eventName`, the API's response returns all activities which contain that `eventName`. It is possible that the returned activities will have other `eventName` properties in addition to the one requested. For more information about `eventName` properties, see the list of event names for various applications above in `applicationName`.", "type" "string"}, "parameters" {"description" "Parameter value pairs for various applications. For more information about `eventName` parameters, see the list of event names for various applications above in `applicationName`.", "type" "array", "items" {"type" "object", "properties" {"value" {"type" "string", "description" "String value of the parameter."}, "multiValue" {"items" {"type" "string"}, "description" "String values of the parameter.", "type" "array"}, "multiIntValue" {"type" "array", "items" {"format" "int64", "type" "string"}, "description" "Integer values of the parameter."}, "name" {"description" "The name of the parameter.", "type" "string"}, "intValue" {"format" "int64", "type" "string", "description" "Integer value of the parameter."}, "multiMessageValue" {"type" "array", "description" "List of `messageValue` objects.", "items" {"properties" {"parameter" {"items" {"$ref" "NestedParameter"}, "description" "Parameter values", "type" "array"}}, "type" "object"}}, "boolValue" {"type" "boolean", "description" "Boolean value of the parameter."}, "messageValue" {"type" "object", "properties" {"parameter" {"type" "array", "description" "Parameter values", "items" {"$ref" "NestedParameter"}}}, "description" "Nested parameter value pairs associated with this parameter. Complex value type for a parameter are returned as a list of parameter values. For example, the address parameter may have a value as `[{parameter: [{name: city, value: abc}]}]`"}}}}, "type" {"description" "Type of event. The Google Workspace service or feature that an administrator changes is identified in the `type` property which identifies an event using the `eventName` property. For a full list of the API's `type` categories, see the list of event names for various applications above in `applicationName`.", "type" "string"}}}, "type" "array"}, "etag" {"type" "string", "description" "ETag of the entry."}, "actor" {"type" "object", "properties" {"key" {"description" "Only present when `callerType` is `KEY`. Can be the `consumer_key` of the requestor for OAuth 2LO API requests or an identifier for robot accounts.", "type" "string"}, "callerType" {"description" "The type of actor.", "type" "string"}, "email" {"type" "string", "description" "The primary email address of the actor. May be absent if there is no email address associated with the actor."}, "profileId" {"type" "string", "description" "The unique Google Workspace profile ID of the actor. This value might be absent if the actor is not a Google Workspace user, or may be the number 105250506097979753968 which acts as a placeholder ID."}}, "description" "User doing the action."}, "id" {"description" "Unique identifier for each activity record.", "properties" {"time" {"format" "date-time", "type" "string", "description" "Time of occurrence of the activity. This is in UNIX epoch time in seconds."}, "customerId" {"description" "The unique identifier for a Google Workspace account.", "type" "string"}, "uniqueQualifier" {"type" "string", "format" "int64", "description" "Unique qualifier if multiple events have the same time."}, "applicationName" {"description" "Application name to which the event belongs. For possible values see the list of applications above in `applicationName`.", "type" "string"}}, "type" "object"}, "ownerDomain" {"description" "This is the domain that is affected by the report's event. For example domain of Admin console or the Drive application's document owner.", "type" "string"}, "kind" {"type" "string", "default" "admin#reports#activity", "description" "The type of API resource. For an activity report, the value is `audit#activity`."}, "ipAddress" {"description" "IP address of the user doing the action. This is the Internet Protocol (IP) address of the user when logging into Google Workspace, which may or may not reflect the user's physical location. For example, the IP address can be the user's proxy server's address or a virtual private network (VPN) address. The API supports IPv4 and IPv6.", "type" "string"}}, "type" "object", "description" "JSON template for the activity resource.", "id" "Activity"}, "Channel" {"id" "Channel", "properties" {"token" {"type" "string", "description" "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."}, "resourceId" {"type" "string", "description" "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."}, "params" {"description" "Additional parameters controlling delivery channel behavior. Optional.", "type" "object", "additionalProperties" {"type" "string"}}, "id" {"type" "string", "description" "A UUID or similar unique string that identifies this channel."}, "address" {"description" "The address where notifications are delivered for this channel.", "type" "string"}, "kind" {"default" "api#channel", "type" "string", "description" "Identifies this as a notification channel used to watch for changes to a resource, which is \"`api#channel`\"."}, "type" {"description" "The type of delivery mechanism used for this channel. The value should be set to `\"web_hook\"`.", "type" "string"}, "expiration" {"format" "int64", "type" "string", "description" "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional."}, "payload" {"description" "A Boolean value to indicate whether payload is wanted. Optional.", "type" "boolean"}, "resourceUri" {"type" "string", "description" "A version-specific identifier for the watched resource."}}, "type" "object", "description" "A notification channel used to watch for resource changes."}}}