#:compute.api-descriptor{:endpoint #:compute.gcp.impl.descriptor{:url "https://redis.googleapis.com/"}, :op->spec {"redis.projects.locations.instances.export" {:operationId "redis.projects.locations.instances.export", :description "Export Redis instance data into a Redis RDB format file in Cloud Storage.\n\nRedis will continue serving during this operation.\n\nThe returned operation is automatically deleted after a few hours, so\nthere is no need to call DeleteOperation.", :parameters [{:description "Required. Redis instance resource name using the form:\n    `projects/{project_id}/locations/{location_id}/instances/{instance_id}`\nwhere `location_id` refers to a GCP region.", :in "path", :name "name", :required true, :schema {:type "string"}, :x-reservedExpansion true}], :requestBody {:content {"application/json" {:schema {:$ref "#/components/schemas/ExportInstanceRequest"}}}}, :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/{name}:export"}, "redis.projects.locations.operations.get" {:operationId "redis.projects.locations.operations.get", :description "Gets the latest state of a long-running operation.  Clients can use this\nmethod to poll the operation result at intervals as recommended by the API\nservice.", :parameters [{:description "The name of the operation resource.", :in "path", :name "name", :required true, :schema {:type "string"}, :x-reservedExpansion true}], :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v1/{name}"}, "redis.projects.locations.operations.cancel" {:operationId "redis.projects.locations.operations.cancel", :description "Starts asynchronous cancellation on a long-running operation.  The server\nmakes a best effort to cancel the operation, but success is not\nguaranteed.  If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`.  Clients can use\nOperations.GetOperation or\nother methods to check whether the cancellation succeeded or whether the\noperation completed despite cancellation. On successful cancellation,\nthe operation is not deleted; instead, it becomes an operation with\nan Operation.error value with a google.rpc.Status.code of 1,\ncorresponding to `Code.CANCELLED`.", :parameters [{:description "The name of the operation resource to be cancelled.", :in "path", :name "name", :required true, :schema {:type "string"}, :x-reservedExpansion true}], :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/{name}:cancel"}, "redis.projects.locations.instances.import" {:operationId "redis.projects.locations.instances.import", :description "Import a Redis RDB snapshot file from Cloud Storage into a Redis instance.\n\nRedis may stop serving during this operation. Instance state will be\nIMPORTING for entire operation. When complete, the instance will contain\nonly data from the imported file.\n\nThe returned operation is automatically deleted after a few hours, so\nthere is no need to call DeleteOperation.", :parameters [{:description "Required. Redis instance resource name using the form:\n    `projects/{project_id}/locations/{location_id}/instances/{instance_id}`\nwhere `location_id` refers to a GCP region.", :in "path", :name "name", :required true, :schema {:type "string"}, :x-reservedExpansion true}], :requestBody {:content {"application/json" {:schema {:$ref "#/components/schemas/ImportInstanceRequest"}}}}, :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/{name}:import"}, "redis.projects.locations.operations.list" {:operationId "redis.projects.locations.operations.list", :description "Lists operations that match the specified filter in the request. If the\nserver doesn't support this method, it returns `UNIMPLEMENTED`.\n\nNOTE: the `name` binding allows API services to override the binding\nto use different resource name schemes, such as `users/*/operations`. To\noverride the binding, API services can add a binding such as\n`\"/v1/{name=users/*}/operations\"` to their service configuration.\nFor backwards compatibility, the default name includes the operations\ncollection id, however overriding users must ensure the name binding\nis the parent resource, without the operations collection id.", :parameters [{:description "The name of the operation's parent resource.", :in "path", :name "name", :required true, :schema {:type "string"}, :x-reservedExpansion true} {:description "The standard list filter.", :in "query", :name "filter", :schema {:type "string"}} {:description "The standard list page size.", :in "query", :name "pageSize", :schema {:type "integer"}} {:description "The standard list page token.", :in "query", :name "pageToken", :schema {:type "string"}}], :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v1/{name}/operations"}, "redis.projects.locations.instances.failover" {:operationId "redis.projects.locations.instances.failover", :description "Initiates a failover of the master node to current replica node for a\nspecific STANDARD tier Cloud Memorystore for Redis instance.", :parameters [{:description "Required. Redis instance resource name using the form:\n    `projects/{project_id}/locations/{location_id}/instances/{instance_id}`\nwhere `location_id` refers to a GCP region.", :in "path", :name "name", :required true, :schema {:type "string"}, :x-reservedExpansion true}], :requestBody {:content {"application/json" {:schema {:$ref "#/components/schemas/FailoverInstanceRequest"}}}}, :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/{name}:failover"}, "redis.projects.locations.instances.patch" {:operationId "redis.projects.locations.instances.patch", :description "Updates the metadata and configuration of a specific Redis instance.\n\nCompleted longrunning.Operation will contain the new instance object\nin the response field. The returned operation is automatically deleted\nafter a few hours, so there is no need to call DeleteOperation.", :parameters [{:description "Required. Unique name of the resource in this scope including project and\nlocation using the form:\n    `projects/{project_id}/locations/{location_id}/instances/{instance_id}`\n\nNote: Redis instances are managed and addressed at regional level so\nlocation_id here refers to a GCP region; however, users may choose which\nspecific zone (or collection of zones for cross-zone instances) an instance\nshould be provisioned in. Refer to location_id and\nalternative_location_id fields for more details.", :in "path", :name "name", :required true, :schema {:type "string"}, :x-reservedExpansion true} {:description "Required. Mask of fields to update. At least one path must be supplied in\nthis field. The elements of the repeated paths field may only include these\nfields from Instance:\n\n *   `displayName`\n *   `labels`\n *   `memorySizeGb`\n *   `redisConfig`", :in "query", :name "updateMask", :schema {:type "string"}}], :requestBody {:content {"application/json" {:schema {:$ref "#/components/schemas/Instance"}}}}, :compute.gcp.impl.descriptor/http-method :patch, :compute.gcp.impl.descriptor/http-path "/v1/{name}"}, "redis.projects.locations.instances.list" {:operationId "redis.projects.locations.instances.list", :description "Lists all Redis instances owned by a project in either the specified\nlocation (region) or all locations.\n\nThe location should have the following format:\n\n* `projects/{project_id}/locations/{location_id}`\n\nIf `location_id` is specified as `-` (wildcard), then all regions\navailable to the project are queried, and the results are aggregated.", :parameters [{:description "Required. The resource name of the instance location using the form:\n    `projects/{project_id}/locations/{location_id}`\nwhere `location_id` refers to a GCP region.", :in "path", :name "parent", :required true, :schema {:type "string"}, :x-reservedExpansion true} {:description "The maximum number of items to return.\n\nIf not specified, a default value of 1000 will be used by the service.\nRegardless of the page_size value, the response may include a partial list\nand a caller should only rely on response's\n`next_page_token`\nto determine if there are more instances left to be queried.", :in "query", :name "pageSize", :schema {:type "integer"}} {:description "The `next_page_token` value returned from a previous\nListInstances request, if any.", :in "query", :name "pageToken", :schema {:type "string"}}], :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v1/{parent}/instances"}, "redis.projects.locations.list" {:operationId "redis.projects.locations.list", :description "Lists information about the supported locations for this service.", :parameters [{:description "The resource that owns the locations collection, if applicable.", :in "path", :name "name", :required true, :schema {:type "string"}, :x-reservedExpansion true} {:description "The standard list filter.", :in "query", :name "filter", :schema {:type "string"}} {:description "The standard list page size.", :in "query", :name "pageSize", :schema {:type "integer"}} {:description "The standard list page token.", :in "query", :name "pageToken", :schema {:type "string"}}], :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v1/{name}/locations"}, "redis.projects.locations.operations.delete" {:operationId "redis.projects.locations.operations.delete", :description "Deletes a long-running operation. This method indicates that the client is\nno longer interested in the operation result. It does not cancel the\noperation. If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`.", :parameters [{:description "The name of the operation resource to be deleted.", :in "path", :name "name", :required true, :schema {:type "string"}, :x-reservedExpansion true}], :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/v1/{name}"}, "redis.projects.locations.instances.create" {:operationId "redis.projects.locations.instances.create", :description "Creates a Redis instance based on the specified tier and memory size.\n\nBy default, the instance is accessible from the project's\n[default network](/compute/docs/networks-and-firewalls#networks).\n\nThe creation is executed asynchronously and callers may check the returned\noperation to track its progress. Once the operation is completed the Redis\ninstance will be fully functional. Completed longrunning.Operation will\ncontain the new instance object in the response field.\n\nThe returned operation is automatically deleted after a few hours, so there\nis no need to call DeleteOperation.", :parameters [{:description "Required. The resource name of the instance location using the form:\n    `projects/{project_id}/locations/{location_id}`\nwhere `location_id` refers to a GCP region.", :in "path", :name "parent", :required true, :schema {:type "string"}, :x-reservedExpansion true} {:description "Required. The logical name of the Redis instance in the customer project\nwith the following restrictions:\n\n* Must contain only lowercase letters, numbers, and hyphens.\n* Must start with a letter.\n* Must be between 1-40 characters.\n* Must end with a number or a letter.\n* Must be unique within the customer project / location", :in "query", :name "instanceId", :schema {:type "string"}}], :requestBody {:content {"application/json" {:schema {:$ref "#/components/schemas/Instance"}}}}, :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/{parent}/instances"}}, :resolve {:components {:parameters {:quotaUser {:description "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", :in "query", :name "quotaUser", :schema {:type "string"}}, :key {:description "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", :in "query", :name "key", :schema {:type "string"}}, :alt {:description "Data format for response.", :in "query", :name "alt", :schema {:default "json", :enum ["json" "media" "proto"], :type "string"}}, :access_token {:description "OAuth access token.", :in "query", :name "access_token", :schema {:type "string"}}, :fields {:description "Selector specifying which fields to include in a partial response.", :in "query", :name "fields", :schema {:type "string"}}, :upload_protocol {:description "Upload protocol for media (e.g. \"raw\", \"multipart\").", :in "query", :name "upload_protocol", :schema {:type "string"}}, :uploadType {:description "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", :in "query", :name "uploadType", :schema {:type "string"}}, :oauth_token {:description "OAuth 2.0 token for the current user.", :in "query", :name "oauth_token", :schema {:type "string"}}, "_.xgafv" {:description "V1 error format.", :in "query", :name "$.xgafv", :schema {:enum ["1" "2"], :type "string"}}, :prettyPrint {:description "Returns response with indentations and line breaks.", :in "query", :name "prettyPrint", :schema {:default true, :type "boolean"}}, :callback {:description "JSONP", :in "query", :name "callback", :schema {:type "string"}}}, :requestBodies {:Instance {:content {"application/json" {:schema {:$ref "#/components/schemas/Instance"}}}}}, :schemas {:Operation {:description "This resource represents a long-running operation that is the result of a\nnetwork API call.", :properties {:done {:description "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.", :type "boolean"}, :error {:$ref "#/components/schemas/Status", :description "The error result of the operation in case of failure or cancellation."}, :metadata {:additionalProperties {:description "Properties of the object. Contains field @type with type URL."}, :description "{\n\n`createTime`: The time the operation was created.\n\n`endTime`: The time the operation finished running.\n\n`target`: Server-defined resource path for the target of the operation.\n\n`verb`: Name of the verb executed by the operation.\n\n`statusDetail`: Human-readable status of the operation, if any.\n\n`cancelRequested`: Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.\n\n`apiVersion`: API version used to start the operation.\n\n}", :type "object"}, :name {:description "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`.", :type "string"}, :response {:additionalProperties {:description "Properties of the object. Contains field @type with type URL."}, :description "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.", :type "object"}}, :type "object"}, :Empty {:description "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.", :properties {}, :type "object"}, :GcsDestination {:description "The Cloud Storage location for the output content", :properties {:uri {:description "Required. Data destination URI (e.g.\n'gs://my_bucket/my_object'). Existing files will be overwritten.", :type "string"}}, :type "object"}, :OutputConfig {:description "The output content", :properties {:gcsDestination {:$ref "#/components/schemas/GcsDestination", :description "Google Cloud Storage destination for output content."}}, :type "object"}, :GcsSource {:description "The Cloud Storage location for the input content", :properties {:uri {:description "Required. Source data URI. (e.g. 'gs://my_bucket/my_object').", :type "string"}}, :type "object"}, :ListLocationsResponse {:description "The response message for Locations.ListLocations.", :properties {:locations {:description "A list of locations that matches the specified filter in the request.", :items {:$ref "#/components/schemas/Location"}, :type "array"}, :nextPageToken {:description "The standard List next-page token.", :type "string"}}, :type "object"}, :GoogleCloudRedisV1ZoneMetadata {:description "Defines specific information for a particular zone. Currently empty and\nreserved for future use only.", :properties {}, :type "object"}, :Instance {:description "A Google Cloud Redis instance.", :properties {:labels {:additionalProperties {:type "string"}, :description "Resource labels to represent user provided metadata", :type "object"}, :tier {:description "Required. The service tier of the instance.", :enum ["TIER_UNSPECIFIED" "BASIC" "STANDARD_HA"], :type "string"}, :connectMode {:description "Optional. The connect mode of Redis instance.\nIf not provided, default one will be used.\nCurrent default: DIRECT_PEERING.", :enum ["CONNECT_MODE_UNSPECIFIED" "DIRECT_PEERING" "PRIVATE_SERVICE_ACCESS"], :type "string"}, :memorySizeGb {:description "Required. Redis memory size in GiB.", :format "int32", :type "integer"}, :redisVersion {:description "Optional. The version of Redis software.\nIf not provided, latest supported version will be used. Currently, the\nsupported values are:\n\n *   `REDIS_4_0` for Redis 4.0 compatibility (default)\n *   `REDIS_3_2` for Redis 3.2 compatibility", :type "string"}, :displayName {:description "An arbitrary and optional user-provided name for the instance.", :type "string"}, :locationId {:description "Optional. The zone where the instance will be provisioned. If not provided,\nthe service will choose a zone for the instance. For STANDARD_HA tier,\ninstances will be created across two zones for protection against zonal\nfailures. If alternative_location_id is also provided, it must be\ndifferent from location_id.", :type "string"}, :name {:description "Required. Unique name of the resource in this scope including project and\nlocation using the form:\n    `projects/{project_id}/locations/{location_id}/instances/{instance_id}`\n\nNote: Redis instances are managed and addressed at regional level so\nlocation_id here refers to a GCP region; however, users may choose which\nspecific zone (or collection of zones for cross-zone instances) an instance\nshould be provisioned in. Refer to location_id and\nalternative_location_id fields for more details.", :type "string"}, :reservedIpRange {:description "Optional. The CIDR range of internal addresses that are reserved for this\ninstance. If not provided, the service will choose an unused /29 block,\nfor example, 10.0.0.0/29 or 192.168.0.0/29. Ranges must be unique\nand non-overlapping with existing subnets in an authorized network.", :type "string"}, :statusMessage {:description "Output only. Additional information about the current status of this\ninstance, if available.", :type "string"}, :createTime {:description "Output only. The time the instance was created.", :format "google-datetime", :type "string"}, :state {:description "Output only. The current state of this instance.", :enum ["STATE_UNSPECIFIED" "CREATING" "READY" "UPDATING" "DELETING" "REPAIRING" "MAINTENANCE" "IMPORTING" "FAILING_OVER"], :type "string"}, :port {:description "Output only. The port number of the exposed Redis endpoint.", :format "int32", :type "integer"}, :redisConfigs {:additionalProperties {:type "string"}, :description "Optional. Redis configuration parameters, according to\nhttp://redis.io/topics/config. Currently, the only supported parameters\nare:\n\n Redis 3.2 and above:\n\n *   maxmemory-policy\n *   notify-keyspace-events\n\n Redis 4.0 and above:\n\n *   activedefrag\n *   lfu-log-factor\n *   lfu-decay-time", :type "object"}, :persistenceIamIdentity {:description "Output only. Cloud IAM identity used by import / export operations to\ntransfer data to/from Cloud Storage. Format is\n\"serviceAccount:<service_account_email>\". The value may change over time\nfor a given instance so should be checked before each import/export\noperation.", :type "string"}, :host {:description "Output only. Hostname or IP address of the exposed Redis endpoint used by\nclients to connect to the service.", :type "string"}, :currentLocationId {:description "Output only. The current zone where the Redis endpoint is placed. For Basic\nTier instances, this will always be the same as the location_id\nprovided by the user at creation time. For Standard Tier instances,\nthis can be either location_id or alternative_location_id and can\nchange after a failover event.", :type "string"}, :alternativeLocationId {:description "Optional. Only applicable to STANDARD_HA tier which protects the instance\nagainst zonal failures by provisioning it across two zones. If provided, it\nmust be a different zone from the one provided in location_id.", :type "string"}, :authorizedNetwork {:description "Optional. The full name of the Google Compute Engine\n[network](/compute/docs/networks-and-firewalls#networks) to which the\ninstance is connected. If left unspecified, the `default` network\nwill be used.", :type "string"}}, :type "object"}, :GoogleCloudRedisV1LocationMetadata {:description "This location metadata represents additional configuration options for a\ngiven location where a Redis instance may be created. All fields are output\nonly. It is returned as content of the\n`google.cloud.location.Location.metadata` field.", :properties {:availableZones {:additionalProperties {:$ref "#/components/schemas/GoogleCloudRedisV1ZoneMetadata"}, :description "Output only. The set of available zones in the location. The map is keyed\nby the lowercase ID of each zone, as defined by GCE. These keys can be\nspecified in `location_id` or `alternative_location_id` fields when\ncreating a Redis instance.", :type "object"}}, :type "object"}, :ImportInstanceRequest {:description "Request for Import.", :properties {:inputConfig {:$ref "#/components/schemas/InputConfig", :description "Required. Specify data to be imported."}}, :type "object"}, :ExportInstanceRequest {:description "Request for Export.", :properties {:outputConfig {:$ref "#/components/schemas/OutputConfig", :description "Required. Specify data to be exported."}}, :type "object"}, :FailoverInstanceRequest {:description "Request for Failover.", :properties {:dataProtectionMode {:description "Optional. Available data protection modes that the user can choose. If it's\nunspecified, data protection mode will be LIMITED_DATA_LOSS by default.", :enum ["DATA_PROTECTION_MODE_UNSPECIFIED" "LIMITED_DATA_LOSS" "FORCE_DATA_LOSS"], :type "string"}}, :type "object"}, :ListOperationsResponse {:description "The response message for Operations.ListOperations.", :properties {:nextPageToken {:description "The standard List next-page token.", :type "string"}, :operations {:description "A list of operations that matches the specified filter in the request.", :items {:$ref "#/components/schemas/Operation"}, :type "array"}}, :type "object"}, :Location {:description "A resource that represents Google Cloud Platform location.", :properties {:displayName {:description "The friendly name for this location, typically a nearby city name.\nFor example, \"Tokyo\".", :type "string"}, :labels {:additionalProperties {:type "string"}, :description "Cross-service attributes for the location. For example\n\n    {\"cloud.googleapis.com/region\": \"us-east1\"}", :type "object"}, :locationId {:description "Resource ID for the region. For example: \"us-east1\".", :type "string"}, :metadata {:additionalProperties {:description "Properties of the object. Contains field @type with type URL."}, :description "Output only. The set of available zones in the location. The map is keyed by the lowercase ID of each zone, as defined by Compute Engine. These keys can be specified in `location_id` or `alternative_location_id` fields when creating a Redis instance.", :type "object"}, :name {:description "Full resource name for the region. For example: \"projects/example-project/locations/us-east1\".", :type "string"}}, :type "object"}, :InputConfig {:description "The input content", :properties {:gcsSource {:$ref "#/components/schemas/GcsSource", :description "Google Cloud Storage location where input content is located."}}, :type "object"}, :ListInstancesResponse {:description "Response for ListInstances.", :properties {:instances {:description "A list of Redis instances in the project in the specified location,\nor across all locations.\n\nIf the `location_id` in the parent field of the request is \"-\", all regions\navailable to the project are queried, and the results aggregated.\nIf in such an aggregated query a location is unavailable, a dummy Redis\nentry is included in the response with the `name` field set to a value of\nthe form `projects/{project_id}/locations/{location_id}/instances/`- and\nthe `status` field set to ERROR and `status_message` field set to \"location\nnot available for ListInstances\".", :items {:$ref "#/components/schemas/Instance"}, :type "array"}, :nextPageToken {:description "Token to retrieve the next page of results, or empty if there are no more\nresults in the list.", :type "string"}, :unreachable {:description "Locations that could not be reached.", :items {:type "string"}, :type "array"}}, :type "object"}, :GoogleCloudRedisV1OperationMetadata {:description "Represents the v1 metadata of the long-running operation.", :properties {:apiVersion {:description "API version.", :type "string"}, :cancelRequested {:description "Specifies if cancellation was requested for the operation.", :type "boolean"}, :createTime {:description "Creation timestamp.", :format "google-datetime", :type "string"}, :endTime {:description "End timestamp.", :format "google-datetime", :type "string"}, :statusDetail {:description "Operation status details.", :type "string"}, :target {:description "Operation target.", :type "string"}, :verb {:description "Operation verb.", :type "string"}}, :type "object"}, :Status {:description "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).", :properties {:code {:description "The status code, which should be an enum value of google.rpc.Code.", :format "int32", :type "integer"}, :details {:description "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.", :items {:additionalProperties {:description "Properties of the object. Contains field @type with type URL."}, :type "object"}, :type "array"}, :message {:description "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.", :type "string"}}, :type "object"}}, :securitySchemes {:Oauth2 {:description "Oauth 2.0 implicit authentication", :flows {:implicit {:authorizationUrl "https://accounts.google.com/o/oauth2/auth", :scopes {"https://www.googleapis.com/auth/cloud-platform" "View and manage your data across Google Cloud Platform services"}}}, :type "oauth2"}, :Oauth2c {:description "Oauth 2.0 accessCode authentication", :flows {:authorizationCode {:authorizationUrl "https://accounts.google.com/o/oauth2/auth", :scopes {"https://www.googleapis.com/auth/cloud-platform" "View and manage your data across Google Cloud Platform services"}, :tokenUrl "https://accounts.google.com/o/oauth2/token"}}, :type "oauth2"}}}}}