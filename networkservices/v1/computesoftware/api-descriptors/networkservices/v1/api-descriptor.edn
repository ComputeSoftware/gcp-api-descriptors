#:compute.gcp.descriptor{:name "networkservices", :title "Network Services API", :api-version "v1", :revision "20220309", :endpoint #:compute.gcp.descriptor{:url "https://networkservices.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"description" "JSONP", "location" "query", "type" "string"}, "uploadType" {"description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "location" "query", "type" "string"}, "key" {"description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "type" "string", "location" "query"}, "access_token" {"type" "string", "location" "query", "description" "OAuth access token."}, "oauth_token" {"description" "OAuth 2.0 token for the current user.", "type" "string", "location" "query"}, "prettyPrint" {"description" "Returns response with indentations and line breaks.", "location" "query", "type" "boolean", "default" "true"}, "alt" {"description" "Data format for response.", "enum" ["json" "media" "proto"], "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "location" "query", "type" "string", "default" "json"}, "$.xgafv" {"enum" ["1" "2"], "description" "V1 error format.", "location" "query", "type" "string", "enumDescriptions" ["v1 error format" "v2 error format"]}, "fields" {"type" "string", "description" "Selector specifying which fields to include in a partial response.", "location" "query"}, "upload_protocol" {"location" "query", "description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "type" "string"}, "quotaUser" {"location" "query", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "type" "string"}}, :op->info {"networkservices.projects.locations.edgeCacheOrigins.testIamPermissions" #:compute.gcp.descriptor{:http-method :post, :path "v1/{+resource}:testIamPermissions", :request {"$ref" "TestIamPermissionsRequest"}, :response {"$ref" "TestIamPermissionsResponse"}, :parameters {"resource" {"location" "path", "type" "string", "description" "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.", "required" true, "pattern" "^projects/[^/]+/locations/[^/]+/edgeCacheOrigins/[^/]+$"}}, :description "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."}, "networkservices.projects.locations.operations.list" #:compute.gcp.descriptor{:http-method :get, :path "v1/{+name}/operations", :response {"$ref" "ListOperationsResponse"}, :parameters {"pageToken" {"type" "string", "description" "The standard list page token.", "location" "query"}, "filter" {"location" "query", "type" "string", "description" "The standard list filter."}, "pageSize" {"description" "The standard list page size.", "location" "query", "format" "int32", "type" "integer"}, "name" {"pattern" "^projects/[^/]+/locations/[^/]+$", "location" "path", "type" "string", "required" true, "description" "The name of the operation's parent resource."}}, :description "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."}, "networkservices.projects.locations.endpointPolicies.patch" #:compute.gcp.descriptor{:http-method :patch, :path "v1/{+name}", :request {"$ref" "EndpointPolicy"}, :response {"$ref" "Operation"}, :parameters {"updateMask" {"location" "query", "description" "Optional. Field mask is used to specify the fields to be overwritten in the EndpointPolicy resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it is in the mask. If the user does not provide a mask then all fields will be overwritten.", "format" "google-fieldmask", "type" "string"}, "name" {"pattern" "^projects/[^/]+/locations/[^/]+/endpointPolicies/[^/]+$", "location" "path", "type" "string", "required" true, "description" "Required. Name of the EndpointPolicy resource. It matches pattern `projects/{project}/locations/global/endpointPolicies/{endpoint_policy}`."}}, :description "Updates the parameters of a single EndpointPolicy."}, "networkservices.projects.locations.endpointPolicies.testIamPermissions" #:compute.gcp.descriptor{:http-method :post, :path "v1/{+resource}:testIamPermissions", :request {"$ref" "TestIamPermissionsRequest"}, :response {"$ref" "TestIamPermissionsResponse"}, :parameters {"resource" {"location" "path", "required" true, "pattern" "^projects/[^/]+/locations/[^/]+/endpointPolicies/[^/]+$", "type" "string", "description" "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field."}}, :description "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."}, "networkservices.projects.locations.endpointPolicies.setIamPolicy" #:compute.gcp.descriptor{:http-method :post, :path "v1/{+resource}:setIamPolicy", :request {"$ref" "SetIamPolicyRequest"}, :response {"$ref" "Policy"}, :parameters {"resource" {"required" true, "pattern" "^projects/[^/]+/locations/[^/]+/endpointPolicies/[^/]+$", "description" "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.", "location" "path", "type" "string"}}, :description "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."}, "networkservices.projects.locations.edgeCacheServices.testIamPermissions" #:compute.gcp.descriptor{:http-method :post, :path "v1/{+resource}:testIamPermissions", :request {"$ref" "TestIamPermissionsRequest"}, :response {"$ref" "TestIamPermissionsResponse"}, :parameters {"resource" {"description" "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.", "pattern" "^projects/[^/]+/locations/[^/]+/edgeCacheServices/[^/]+$", "location" "path", "type" "string", "required" true}}, :description "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."}, "networkservices.projects.locations.endpointPolicies.get" #:compute.gcp.descriptor{:http-method :get, :path "v1/{+name}", :response {"$ref" "EndpointPolicy"}, :parameters {"name" {"type" "string", "pattern" "^projects/[^/]+/locations/[^/]+/endpointPolicies/[^/]+$", "required" true, "location" "path", "description" "Required. A name of the EndpointPolicy to get. Must be in the format `projects/*/locations/global/endpointPolicies/*`."}}, :description "Gets details of a single EndpointPolicy."}, "networkservices.projects.locations.edgeCacheKeysets.setIamPolicy" #:compute.gcp.descriptor{:http-method :post, :path "v1/{+resource}:setIamPolicy", :request {"$ref" "SetIamPolicyRequest"}, :response {"$ref" "Policy"}, :parameters {"resource" {"type" "string", "location" "path", "description" "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.", "required" true, "pattern" "^projects/[^/]+/locations/[^/]+/edgeCacheKeysets/[^/]+$"}}, :description "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."}, "networkservices.projects.locations.endpointPolicies.list" #:compute.gcp.descriptor{:http-method :get, :path "v1/{+parent}/endpointPolicies", :response {"$ref" "ListEndpointPoliciesResponse"}, :parameters {"pageSize" {"format" "int32", "location" "query", "description" "Maximum number of EndpointPolicies to return per call.", "type" "integer"}, "pageToken" {"description" "The value returned by the last `ListEndpointPoliciesResponse` Indicates that this is a continuation of a prior `ListEndpointPolicies` call, and that the system should return the next page of data.", "type" "string", "location" "query"}, "parent" {"required" true, "pattern" "^projects/[^/]+/locations/[^/]+$", "description" "Required. The project and location from which the EndpointPolicies should be listed, specified in the format `projects/*/locations/global`.", "type" "string", "location" "path"}}, :description "Lists EndpointPolicies in a given project and location."}, "networkservices.projects.locations.edgeCacheServices.setIamPolicy" #:compute.gcp.descriptor{:http-method :post, :path "v1/{+resource}:setIamPolicy", :request {"$ref" "SetIamPolicyRequest"}, :response {"$ref" "Policy"}, :parameters {"resource" {"location" "path", "description" "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.", "type" "string", "pattern" "^projects/[^/]+/locations/[^/]+/edgeCacheServices/[^/]+$", "required" true}}, :description "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."}, "networkservices.projects.locations.endpointPolicies.create" #:compute.gcp.descriptor{:http-method :post, :path "v1/{+parent}/endpointPolicies", :request {"$ref" "EndpointPolicy"}, :response {"$ref" "Operation"}, :parameters {"parent" {"required" true, "type" "string", "pattern" "^projects/[^/]+/locations/[^/]+$", "location" "path", "description" "Required. The parent resource of the EndpointPolicy. Must be in the format `projects/*/locations/global`."}, "endpointPolicyId" {"type" "string", "description" "Required. Short name of the EndpointPolicy resource to be created. E.g. \"CustomECS\".", "location" "query"}}, :description "Creates a new EndpointPolicy in a given project and location."}, "networkservices.projects.locations.edgeCacheOrigins.getIamPolicy" #:compute.gcp.descriptor{:http-method :get, :path "v1/{+resource}:getIamPolicy", :response {"$ref" "Policy"}, :parameters {"options.requestedPolicyVersion" {"type" "integer", "location" "query", "format" "int32", "description" "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."}, "resource" {"location" "path", "type" "string", "pattern" "^projects/[^/]+/locations/[^/]+/edgeCacheOrigins/[^/]+$", "required" true, "description" "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field."}}, :description "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."}, "networkservices.projects.locations.list" #:compute.gcp.descriptor{:http-method :get, :path "v1/{+name}/locations", :response {"$ref" "ListLocationsResponse"}, :parameters {"filter" {"location" "query", "description" "A filter to narrow down results to a preferred subset. The filtering language accepts strings like \"displayName=tokyo\", and is documented in more detail in [AIP-160](https://google.aip.dev/160).", "type" "string"}, "pageSize" {"location" "query", "format" "int32", "description" "The maximum number of results to return. If not set, the service selects a default.", "type" "integer"}, "pageToken" {"type" "string", "description" "A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.", "location" "query"}, "name" {"description" "The resource that owns the locations collection, if applicable.", "pattern" "^projects/[^/]+$", "type" "string", "required" true, "location" "path"}}, :description "Lists information about the supported locations for this service."}, "networkservices.projects.locations.edgeCacheServices.getIamPolicy" #:compute.gcp.descriptor{:http-method :get, :path "v1/{+resource}:getIamPolicy", :response {"$ref" "Policy"}, :parameters {"resource" {"location" "path", "pattern" "^projects/[^/]+/locations/[^/]+/edgeCacheServices/[^/]+$", "description" "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.", "type" "string", "required" true}, "options.requestedPolicyVersion" {"location" "query", "type" "integer", "description" "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).", "format" "int32"}}, :description "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."}, "networkservices.projects.locations.edgeCacheKeysets.testIamPermissions" #:compute.gcp.descriptor{:http-method :post, :path "v1/{+resource}:testIamPermissions", :request {"$ref" "TestIamPermissionsRequest"}, :response {"$ref" "TestIamPermissionsResponse"}, :parameters {"resource" {"required" true, "location" "path", "type" "string", "description" "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.", "pattern" "^projects/[^/]+/locations/[^/]+/edgeCacheKeysets/[^/]+$"}}, :description "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning."}, "networkservices.projects.locations.operations.get" #:compute.gcp.descriptor{:http-method :get, :path "v1/{+name}", :response {"$ref" "Operation"}, :parameters {"name" {"location" "path", "required" true, "type" "string", "description" "The name of the operation resource.", "pattern" "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"}}, :description "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."}, "networkservices.projects.locations.endpointPolicies.getIamPolicy" #:compute.gcp.descriptor{:http-method :get, :path "v1/{+resource}:getIamPolicy", :response {"$ref" "Policy"}, :parameters {"resource" {"required" true, "location" "path", "type" "string", "pattern" "^projects/[^/]+/locations/[^/]+/endpointPolicies/[^/]+$", "description" "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field."}, "options.requestedPolicyVersion" {"location" "query", "type" "integer", "description" "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).", "format" "int32"}}, :description "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."}, "networkservices.projects.locations.edgeCacheKeysets.getIamPolicy" #:compute.gcp.descriptor{:http-method :get, :path "v1/{+resource}:getIamPolicy", :response {"$ref" "Policy"}, :parameters {"resource" {"description" "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.", "location" "path", "type" "string", "required" true, "pattern" "^projects/[^/]+/locations/[^/]+/edgeCacheKeysets/[^/]+$"}, "options.requestedPolicyVersion" {"type" "integer", "format" "int32", "location" "query", "description" "Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."}}, :description "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set."}, "networkservices.projects.locations.operations.cancel" #:compute.gcp.descriptor{:http-method :post, :path "v1/{+name}:cancel", :request {"$ref" "CancelOperationRequest"}, :response {"$ref" "Empty"}, :parameters {"name" {"pattern" "^projects/[^/]+/locations/[^/]+/operations/[^/]+$", "type" "string", "description" "The name of the operation resource to be cancelled.", "location" "path", "required" true}}, :description "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."}, "networkservices.projects.locations.edgeCacheOrigins.setIamPolicy" #:compute.gcp.descriptor{:http-method :post, :path "v1/{+resource}:setIamPolicy", :request {"$ref" "SetIamPolicyRequest"}, :response {"$ref" "Policy"}, :parameters {"resource" {"required" true, "location" "path", "description" "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.", "pattern" "^projects/[^/]+/locations/[^/]+/edgeCacheOrigins/[^/]+$", "type" "string"}}, :description "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors."}, "networkservices.projects.locations.endpointPolicies.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1/{+name}", :response {"$ref" "Operation"}, :parameters {"name" {"type" "string", "required" true, "location" "path", "pattern" "^projects/[^/]+/locations/[^/]+/endpointPolicies/[^/]+$", "description" "Required. A name of the EndpointPolicy to delete. Must be in the format `projects/*/locations/global/endpointPolicies/*`."}}, :description "Deletes a single EndpointPolicy."}, "networkservices.projects.locations.operations.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1/{+name}", :response {"$ref" "Empty"}, :parameters {"name" {"type" "string", "description" "The name of the operation resource to be deleted.", "location" "path", "required" true, "pattern" "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"}}, :description "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`."}, "networkservices.projects.locations.get" #:compute.gcp.descriptor{:http-method :get, :path "v1/{+name}", :response {"$ref" "Location"}, :parameters {"name" {"type" "string", "description" "Resource name for the location.", "pattern" "^projects/[^/]+/locations/[^/]+$", "location" "path", "required" true}}, :description "Gets information about a location."}}, :schemas {"EndpointMatcherMetadataLabelMatcher" {"properties" {"metadataLabels" {"items" {"$ref" "EndpointMatcherMetadataLabelMatcherMetadataLabels"}, "description" "The list of label value pairs that must match labels in the provided metadata based on filterMatchCriteria This list can have at most 64 entries. The list can be empty if the match criteria is MATCH_ANY, to specify a wildcard match (i.e this matches any client).", "type" "array"}, "metadataLabelMatchCriteria" {"type" "string", "enum" ["METADATA_LABEL_MATCH_CRITERIA_UNSPECIFIED" "MATCH_ANY" "MATCH_ALL"], "description" "Specifies how matching should be done. Supported values are: MATCH_ANY: At least one of the Labels specified in the matcher should match the metadata presented by xDS client. MATCH_ALL: The metadata presented by the xDS client should contain all of the labels specified here. The selection is determined based on the best match. For example, suppose there are three EndpointPolicy resources P1, P2 and P3 and if P1 has a the matcher as MATCH_ANY , P2 has MATCH_ALL , and P3 has MATCH_ALL . If a client with label connects, the config from P1 will be selected. If a client with label connects, the config from P2 will be selected. If a client with label connects, the config from P3 will be selected. If there is more than one best match, (for example, if a config P4 with selector exists and if a client with label connects), an error will be thrown.", "enumDescriptions" ["Default value. Should not be used." "At least one of the Labels specified in the matcher should match the metadata presented by xDS client." "The metadata presented by the xDS client should contain all of the labels specified here."]}}, "id" "EndpointMatcherMetadataLabelMatcher", "type" "object", "description" "The matcher that is based on node metadata presented by xDS clients."}, "TestIamPermissionsRequest" {"id" "TestIamPermissionsRequest", "type" "object", "properties" {"permissions" {"description" "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).", "items" {"type" "string"}, "type" "array"}}, "description" "Request message for `TestIamPermissions` method."}, "Empty" {"type" "object", "properties" {}, "id" "Empty", "description" "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."}, "Expr" {"id" "Expr", "type" "object", "description" "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.", "properties" {"location" {"type" "string", "description" "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."}, "description" {"description" "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.", "type" "string"}, "expression" {"type" "string", "description" "Textual representation of an expression in Common Expression Language syntax."}, "title" {"description" "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.", "type" "string"}}}, "ListOperationsResponse" {"description" "The response message for Operations.ListOperations.", "type" "object", "properties" {"operations" {"type" "array", "description" "A list of operations that matches the specified filter in the request.", "items" {"$ref" "Operation"}}, "nextPageToken" {"type" "string", "description" "The standard List next-page token."}}, "id" "ListOperationsResponse"}, "EndpointMatcherMetadataLabelMatcherMetadataLabels" {"properties" {"labelName" {"type" "string", "description" "Required. Label name presented as key in xDS Node Metadata."}, "labelValue" {"type" "string", "description" "Required. Label value presented as value corresponding to the above key, in xDS Node Metadata."}}, "id" "EndpointMatcherMetadataLabelMatcherMetadataLabels", "type" "object", "description" "Defines a name-pair value for a single label."}, "Binding" {"description" "Associates `members`, or principals, with a `role`.", "id" "Binding", "properties" {"members" {"items" {"type" "string"}, "description" "Specifies the principals requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ", "type" "array"}, "condition" {"description" "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).", "$ref" "Expr"}, "role" {"description" "Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.", "type" "string"}}, "type" "object"}, "ListEndpointPoliciesResponse" {"properties" {"nextPageToken" {"description" "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.", "type" "string"}, "endpointPolicies" {"items" {"$ref" "EndpointPolicy"}, "description" "List of EndpointPolicy resources.", "type" "array"}}, "description" "Response returned by the ListEndpointPolicies method.", "type" "object", "id" "ListEndpointPoliciesResponse"}, "Location" {"description" "A resource that represents Google Cloud Platform location.", "type" "object", "properties" {"labels" {"description" "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}", "type" "object", "additionalProperties" {"type" "string"}}, "name" {"description" "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`", "type" "string"}, "displayName" {"description" "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".", "type" "string"}, "metadata" {"type" "object", "description" "Service-specific metadata. For example the available capacity at the given location.", "additionalProperties" {"type" "any", "description" "Properties of the object. Contains field @type with type URL."}}, "locationId" {"type" "string", "description" "The canonical id for this location. For example: `\"us-east1\"`."}}, "id" "Location"}, "Operation" {"properties" {"done" {"type" "boolean", "description" "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."}, "name" {"description" "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.", "type" "string"}, "metadata" {"additionalProperties" {"type" "any", "description" "Properties of the object. Contains field @type with type URL."}, "description" "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.", "type" "object"}, "error" {"description" "The error result of the operation in case of failure or cancellation.", "$ref" "Status"}, "response" {"additionalProperties" {"type" "any", "description" "Properties of the object. Contains field @type with type URL."}, "description" "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.", "type" "object"}}, "type" "object", "description" "This resource represents a long-running operation that is the result of a network API call.", "id" "Operation"}, "OperationMetadata" {"description" "Represents the metadata of the long-running operation.", "type" "object", "properties" {"target" {"readOnly" true, "description" "Output only. Server-defined resource path for the target of the operation.", "type" "string"}, "endTime" {"type" "string", "description" "Output only. The time the operation finished running.", "format" "google-datetime", "readOnly" true}, "createTime" {"type" "string", "readOnly" true, "format" "google-datetime", "description" "Output only. The time the operation was created."}, "requestedCancellation" {"description" "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.", "readOnly" true, "type" "boolean"}, "apiVersion" {"description" "Output only. API version used to start the operation.", "type" "string", "readOnly" true}, "verb" {"type" "string", "description" "Output only. Name of the verb executed by the operation.", "readOnly" true}, "statusMessage" {"readOnly" true, "type" "string", "description" "Output only. Human-readable status of the operation, if any."}}, "id" "OperationMetadata"}, "Status" {"type" "object", "description" "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).", "id" "Status", "properties" {"details" {"description" "A list of messages that carry the error details. There is a common set of message types for APIs to use.", "items" {"additionalProperties" {"description" "Properties of the object. Contains field @type with type URL.", "type" "any"}, "type" "object"}, "type" "array"}, "code" {"type" "integer", "description" "The status code, which should be an enum value of google.rpc.Code.", "format" "int32"}, "message" {"type" "string", "description" "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."}}}, "ListLocationsResponse" {"description" "The response message for Locations.ListLocations.", "type" "object", "properties" {"nextPageToken" {"description" "The standard List next-page token.", "type" "string"}, "locations" {"type" "array", "items" {"$ref" "Location"}, "description" "A list of locations that matches the specified filter in the request."}}, "id" "ListLocationsResponse"}, "EndpointPolicy" {"description" "EndpointPolicy is a resource that helps apply desired configuration on the endpoints that match specific criteria. For example, this resource can be used to apply \"authentication config\" an all endpoints that serve on port 8080.", "id" "EndpointPolicy", "properties" {"authorizationPolicy" {"type" "string", "description" "Optional. This field specifies the URL of AuthorizationPolicy resource that applies authorization policies to the inbound traffic at the matched endpoints. Refer to Authorization. If this field is not specified, authorization is disabled(no authz checks) for this endpoint."}, "serverTlsPolicy" {"type" "string", "description" "Optional. A URL referring to ServerTlsPolicy resource. ServerTlsPolicy is used to determine the authentication policy to be applied to terminate the inbound traffic at the identified backends. If this field is not set, authentication is disabled(open) for this endpoint."}, "trafficPortSelector" {"description" "Optional. Port selector for the (matched) endpoints. If no port selector is provided, the matched config is applied to all ports.", "$ref" "TrafficPortSelector"}, "name" {"description" "Required. Name of the EndpointPolicy resource. It matches pattern `projects/{project}/locations/global/endpointPolicies/{endpoint_policy}`.", "type" "string"}, "createTime" {"description" "Output only. The timestamp when the resource was created.", "readOnly" true, "format" "google-datetime", "type" "string"}, "labels" {"type" "object", "description" "Optional. Set of label tags associated with the EndpointPolicy resource.", "additionalProperties" {"type" "string"}}, "clientTlsPolicy" {"type" "string", "description" "Optional. A URL referring to a ClientTlsPolicy resource. ClientTlsPolicy can be set to specify the authentication for traffic from the proxy to the actual endpoints. More specifically, it is applied to the outgoing traffic from the proxy to the endpoint. This is typically used for sidecar model where the proxy identifies itself as endpoint to the control plane, with the connection between sidecar and endpoint requiring authentication. If this field is not set, authentication is disabled(open). Applicable only when EndpointPolicyType is SIDECAR_PROXY."}, "updateTime" {"format" "google-datetime", "description" "Output only. The timestamp when the resource was updated.", "type" "string", "readOnly" true}, "type" {"type" "string", "enum" ["ENDPOINT_POLICY_TYPE_UNSPECIFIED" "SIDECAR_PROXY" "GRPC_SERVER"], "description" "Required. The type of endpoint policy. This is primarily used to validate the configuration.", "enumDescriptions" ["Default value. Must not be used." "Represents a proxy deployed as a sidecar." "Represents a proxyless gRPC backend."]}, "description" {"description" "Optional. A free-text description of the resource. Max length 1024 characters.", "type" "string"}, "endpointMatcher" {"$ref" "EndpointMatcher", "description" "Required. A matcher that selects endpoints to which the policies should be applied."}}, "type" "object"}, "TestIamPermissionsResponse" {"type" "object", "description" "Response message for `TestIamPermissions` method.", "properties" {"permissions" {"type" "array", "items" {"type" "string"}, "description" "A subset of `TestPermissionsRequest.permissions` that the caller is allowed."}}, "id" "TestIamPermissionsResponse"}, "SetIamPolicyRequest" {"type" "object", "properties" {"policy" {"$ref" "Policy", "description" "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them."}, "updateMask" {"type" "string", "format" "google-fieldmask", "description" "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"}}, "description" "Request message for `SetIamPolicy` method.", "id" "SetIamPolicyRequest"}, "TrafficPortSelector" {"description" "Specification of a port-based selector.", "properties" {"ports" {"description" "Optional. A list of ports. Can be port numbers or port range (example, [80-90] specifies all ports from 80 to 90, including 80 and 90) or named ports or * to specify all ports. If the list is empty, all ports are selected.", "type" "array", "items" {"type" "string"}}}, "type" "object", "id" "TrafficPortSelector"}, "CancelOperationRequest" {"type" "object", "id" "CancelOperationRequest", "description" "The request message for Operations.CancelOperation.", "properties" {}}, "AuditLogConfig" {"type" "object", "description" "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.", "id" "AuditLogConfig", "properties" {"logType" {"type" "string", "enum" ["LOG_TYPE_UNSPECIFIED" "ADMIN_READ" "DATA_WRITE" "DATA_READ"], "description" "The log type that this config enables.", "enumDescriptions" ["Default case. Should never be this." "Admin reads. Example: CloudIAM getIamPolicy" "Data writes. Example: CloudSQL Users create" "Data reads. Example: CloudSQL Users list"]}, "exemptedMembers" {"items" {"type" "string"}, "type" "array", "description" "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."}}}, "Policy" {"id" "Policy", "description" "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).", "properties" {"version" {"type" "integer", "format" "int32", "description" "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."}, "etag" {"type" "string", "format" "byte", "description" "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."}, "bindings" {"items" {"$ref" "Binding"}, "type" "array", "description" "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`."}, "auditConfigs" {"items" {"$ref" "AuditConfig"}, "description" "Specifies cloud audit logging configuration for this policy.", "type" "array"}}, "type" "object"}, "AuditConfig" {"type" "object", "description" "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.", "properties" {"service" {"type" "string", "description" "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."}, "auditLogConfigs" {"items" {"$ref" "AuditLogConfig"}, "description" "The configuration for logging of each type of permission.", "type" "array"}}, "id" "AuditConfig"}, "EndpointMatcher" {"id" "EndpointMatcher", "type" "object", "properties" {"metadataLabelMatcher" {"description" "The matcher is based on node metadata presented by xDS clients.", "$ref" "EndpointMatcherMetadataLabelMatcher"}}, "description" "A definition of a matcher that selects endpoints to which the policies should be applied."}}}