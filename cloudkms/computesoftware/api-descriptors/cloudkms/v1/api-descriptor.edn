#:compute.api-descriptor{:endpoint {:schemes ["https"], :host "cloudkms.googleapis.com", :base-path "/"}, :op->spec {"cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.create" {:description "Create a new CryptoKeyVersion in a CryptoKey.\n\nThe server will assign the next sequential id. If unset,\nstate will be set to\nENABLED.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/CryptoKeyVersion"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/CryptoKeyVersion"}} {:description "Required. The name of the CryptoKey associated with\nthe CryptoKeyVersions.", :in "path", :name "parent", :required true, :type "string", :x-reservedExpansion true}], :operationId "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.create", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/{parent}/cryptoKeyVersions", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "cloudkms.projects.locations.keyRings.cryptoKeys.create" {:description "Create a new CryptoKey within a KeyRing.\n\nCryptoKey.purpose and\nCryptoKey.version_template.algorithm\nare required.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/CryptoKey"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/CryptoKey"}} {:description "Required. It must be unique within a KeyRing and match the regular\nexpression `[a-zA-Z0-9_-]{1,63}`", :in "query", :name "cryptoKeyId", :type "string"} {:description "Required. The name of the KeyRing associated with the\nCryptoKeys.", :in "path", :name "parent", :required true, :type "string", :x-reservedExpansion true} {:description "If set to true, the request will create a CryptoKey without any\nCryptoKeyVersions. You must manually call\nCreateCryptoKeyVersion or\nImportCryptoKeyVersion\nbefore you can use this CryptoKey.", :in "query", :name "skipInitialVersionCreation", :type "boolean"}], :operationId "cloudkms.projects.locations.keyRings.cryptoKeys.create", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/{parent}/cryptoKeys", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.list" {:description "Lists CryptoKeyVersions.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ListCryptoKeyVersionsResponse"}}}, :parameters [{:description "Optional. Only include resources that match the filter in the response. For\nmore information, see\n[Sorting and filtering list\nresults](https://cloud.google.com/kms/docs/sorting-and-filtering).", :in "query", :name "filter", :type "string"} {:description "Optional. Specify how the results should be sorted. If not specified, the\nresults will be sorted in the default order. For more information, see\n[Sorting and filtering list\nresults](https://cloud.google.com/kms/docs/sorting-and-filtering).", :in "query", :name "orderBy", :type "string"} {:description "Optional. Optional limit on the number of CryptoKeyVersions to\ninclude in the response. Further CryptoKeyVersions can\nsubsequently be obtained by including the\nListCryptoKeyVersionsResponse.next_page_token in a subsequent request.\nIf unspecified, the server will pick an appropriate default.", :in "query", :name "pageSize", :type "integer"} {:description "Optional. Optional pagination token, returned earlier via\nListCryptoKeyVersionsResponse.next_page_token.", :in "query", :name "pageToken", :type "string"} {:description "Required. The resource name of the CryptoKey to list, in the format\n`projects/*/locations/*/keyRings/*/cryptoKeys/*`.", :in "path", :name "parent", :required true, :type "string", :x-reservedExpansion true} {:description "The fields to include in the response.", :enum ["CRYPTO_KEY_VERSION_VIEW_UNSPECIFIED" "FULL"], :in "query", :name "view", :type "string"}], :operationId "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v1/{parent}/cryptoKeyVersions", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.patch" {:description "Update a CryptoKeyVersion's metadata.\n\nstate may be changed between\nENABLED and\nDISABLED using this\nmethod. See DestroyCryptoKeyVersion and RestoreCryptoKeyVersion to\nmove between other states.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/CryptoKeyVersion"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/CryptoKeyVersion"}} {:description "Output only. The resource name for this CryptoKeyVersion in the format\n`projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.", :in "path", :name "name", :required true, :type "string", :x-reservedExpansion true} {:description "Required. List of fields to be updated in this request.", :in "query", :name "updateMask", :type "string"}], :operationId "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.patch", :compute.gcp.impl.descriptor/http-method :patch, :compute.gcp.impl.descriptor/http-path "/v1/{name}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.getPublicKey" {:description "Returns the public key for the given CryptoKeyVersion. The\nCryptoKey.purpose must be\nASYMMETRIC_SIGN or\nASYMMETRIC_DECRYPT.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/PublicKey"}}}, :parameters [{:description "Required. The name of the CryptoKeyVersion public key to\nget.", :in "path", :name "name", :required true, :type "string", :x-reservedExpansion true}], :operationId "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.getPublicKey", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v1/{name}/publicKey", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "cloudkms.projects.locations.keyRings.cryptoKeys.encrypt" {:description "Encrypts data, so that it can only be recovered by a call to Decrypt.\nThe CryptoKey.purpose must be\nENCRYPT_DECRYPT.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/EncryptResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/EncryptRequest"}} {:description "Required. The resource name of the CryptoKey or CryptoKeyVersion\nto use for encryption.\n\nIf a CryptoKey is specified, the server will use its\nprimary version.", :in "path", :name "name", :required true, :type "string", :x-reservedExpansion true}], :operationId "cloudkms.projects.locations.keyRings.cryptoKeys.encrypt", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/{name}:encrypt", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "cloudkms.projects.locations.keyRings.list" {:description "Lists KeyRings.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ListKeyRingsResponse"}}}, :parameters [{:description "Optional. Only include resources that match the filter in the response. For\nmore information, see\n[Sorting and filtering list\nresults](https://cloud.google.com/kms/docs/sorting-and-filtering).", :in "query", :name "filter", :type "string"} {:description "Optional. Specify how the results should be sorted. If not specified, the\nresults will be sorted in the default order.  For more information, see\n[Sorting and filtering list\nresults](https://cloud.google.com/kms/docs/sorting-and-filtering).", :in "query", :name "orderBy", :type "string"} {:description "Optional. Optional limit on the number of KeyRings to include in the\nresponse.  Further KeyRings can subsequently be obtained by\nincluding the ListKeyRingsResponse.next_page_token in a subsequent\nrequest.  If unspecified, the server will pick an appropriate default.", :in "query", :name "pageSize", :type "integer"} {:description "Optional. Optional pagination token, returned earlier via\nListKeyRingsResponse.next_page_token.", :in "query", :name "pageToken", :type "string"} {:description "Required. The resource name of the location associated with the\nKeyRings, in the format `projects/*/locations/*`.", :in "path", :name "parent", :required true, :type "string", :x-reservedExpansion true}], :operationId "cloudkms.projects.locations.keyRings.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v1/{parent}/keyRings", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.get" {:description "Returns metadata for a given CryptoKeyVersion.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/CryptoKeyVersion"}}}, :parameters [{:description "Required. The name of the CryptoKeyVersion to get.", :in "path", :name "name", :required true, :type "string", :x-reservedExpansion true}], :operationId "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v1/{name}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "cloudkms.projects.locations.keyRings.cryptoKeys.updatePrimaryVersion" {:description "Update the version of a CryptoKey that will be used in Encrypt.\n\nReturns an error if called on an asymmetric key.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/CryptoKey"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/UpdateCryptoKeyPrimaryVersionRequest"}} {:description "Required. The resource name of the CryptoKey to update.", :in "path", :name "name", :required true, :type "string", :x-reservedExpansion true}], :operationId "cloudkms.projects.locations.keyRings.cryptoKeys.updatePrimaryVersion", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/{name}:updatePrimaryVersion", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "cloudkms.projects.locations.keyRings.create" {:description "Create a new KeyRing in a given Project and Location.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/KeyRing"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/KeyRing"}} {:description "Required. It must be unique within a location and match the regular\nexpression `[a-zA-Z0-9_-]{1,63}`", :in "query", :name "keyRingId", :type "string"} {:description "Required. The resource name of the location associated with the\nKeyRings, in the format `projects/*/locations/*`.", :in "path", :name "parent", :required true, :type "string", :x-reservedExpansion true}], :operationId "cloudkms.projects.locations.keyRings.create", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/{parent}/keyRings", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "cloudkms.projects.locations.keyRings.cryptoKeys.getIamPolicy" {:description "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Policy"}}}, :parameters [{:description "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.", :in "query", :name "options.requestedPolicyVersion", :type "integer"} {:description "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.", :in "path", :name "resource", :required true, :type "string", :x-reservedExpansion true}], :operationId "cloudkms.projects.locations.keyRings.cryptoKeys.getIamPolicy", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v1/{resource}:getIamPolicy", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "cloudkms.projects.locations.list" {:description "Lists information about the supported locations for this service.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ListLocationsResponse"}}}, :parameters [{:description "The standard list filter.", :in "query", :name "filter", :type "string"} {:description "The resource that owns the locations collection, if applicable.", :in "path", :name "name", :required true, :type "string", :x-reservedExpansion true} {:description "The standard list page size.", :in "query", :name "pageSize", :type "integer"} {:description "The standard list page token.", :in "query", :name "pageToken", :type "string"}], :operationId "cloudkms.projects.locations.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v1/{name}/locations", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.asymmetricDecrypt" {:description "Decrypts data that was encrypted with a public key retrieved from\nGetPublicKey corresponding to a CryptoKeyVersion with\nCryptoKey.purpose ASYMMETRIC_DECRYPT.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/AsymmetricDecryptResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/AsymmetricDecryptRequest"}} {:description "Required. The resource name of the CryptoKeyVersion to use for\ndecryption.", :in "path", :name "name", :required true, :type "string", :x-reservedExpansion true}], :operationId "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.asymmetricDecrypt", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/{name}:asymmetricDecrypt", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.asymmetricSign" {:description "Signs data using a CryptoKeyVersion with CryptoKey.purpose\nASYMMETRIC_SIGN, producing a signature that can be verified with the public\nkey retrieved from GetPublicKey.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/AsymmetricSignResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/AsymmetricSignRequest"}} {:description "Required. The resource name of the CryptoKeyVersion to use for signing.", :in "path", :name "name", :required true, :type "string", :x-reservedExpansion true}], :operationId "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.asymmetricSign", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/{name}:asymmetricSign", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "cloudkms.projects.locations.keyRings.importJobs.list" {:description "Lists ImportJobs.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ListImportJobsResponse"}}}, :parameters [{:description "Optional. Only include resources that match the filter in the response. For\nmore information, see\n[Sorting and filtering list\nresults](https://cloud.google.com/kms/docs/sorting-and-filtering).", :in "query", :name "filter", :type "string"} {:description "Optional. Specify how the results should be sorted. If not specified, the\nresults will be sorted in the default order. For more information, see\n[Sorting and filtering list\nresults](https://cloud.google.com/kms/docs/sorting-and-filtering).", :in "query", :name "orderBy", :type "string"} {:description "Optional. Optional limit on the number of ImportJobs to include in the\nresponse. Further ImportJobs can subsequently be obtained by\nincluding the ListImportJobsResponse.next_page_token in a subsequent\nrequest. If unspecified, the server will pick an appropriate default.", :in "query", :name "pageSize", :type "integer"} {:description "Optional. Optional pagination token, returned earlier via\nListImportJobsResponse.next_page_token.", :in "query", :name "pageToken", :type "string"} {:description "Required. The resource name of the KeyRing to list, in the format\n`projects/*/locations/*/keyRings/*`.", :in "path", :name "parent", :required true, :type "string", :x-reservedExpansion true}], :operationId "cloudkms.projects.locations.keyRings.importJobs.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v1/{parent}/importJobs", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "cloudkms.projects.locations.keyRings.cryptoKeys.testIamPermissions" {:description "Returns permissions that a caller has on the specified resource.\nIf the resource does not exist, this will return an empty set of\npermissions, not a NOT_FOUND error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/TestIamPermissionsResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/TestIamPermissionsRequest"}} {:description "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.", :in "path", :name "resource", :required true, :type "string", :x-reservedExpansion true}], :operationId "cloudkms.projects.locations.keyRings.cryptoKeys.testIamPermissions", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/{resource}:testIamPermissions", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "cloudkms.projects.locations.keyRings.cryptoKeys.setIamPolicy" {:description "Sets the access control policy on the specified resource. Replaces any\nexisting policy.\n\nCan return Public Errors: NOT_FOUND, INVALID_ARGUMENT and PERMISSION_DENIED", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Policy"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/SetIamPolicyRequest"}} {:description "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.", :in "path", :name "resource", :required true, :type "string", :x-reservedExpansion true}], :operationId "cloudkms.projects.locations.keyRings.cryptoKeys.setIamPolicy", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/{resource}:setIamPolicy", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.destroy" {:description "Schedule a CryptoKeyVersion for destruction.\n\nUpon calling this method, CryptoKeyVersion.state will be set to\nDESTROY_SCHEDULED\nand destroy_time will be set to a time 24\nhours in the future, at which point the state\nwill be changed to\nDESTROYED, and the key\nmaterial will be irrevocably destroyed.\n\nBefore the destroy_time is reached,\nRestoreCryptoKeyVersion may be called to reverse the process.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/CryptoKeyVersion"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/DestroyCryptoKeyVersionRequest"}} {:description "Required. The resource name of the CryptoKeyVersion to destroy.", :in "path", :name "name", :required true, :type "string", :x-reservedExpansion true}], :operationId "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.destroy", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/{name}:destroy", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "cloudkms.projects.locations.keyRings.importJobs.create" {:description "Create a new ImportJob within a KeyRing.\n\nImportJob.import_method is required.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ImportJob"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/ImportJob"}} {:description "Required. It must be unique within a KeyRing and match the regular\nexpression `[a-zA-Z0-9_-]{1,63}`", :in "query", :name "importJobId", :type "string"} {:description "Required. The name of the KeyRing associated with the\nImportJobs.", :in "path", :name "parent", :required true, :type "string", :x-reservedExpansion true}], :operationId "cloudkms.projects.locations.keyRings.importJobs.create", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/{parent}/importJobs", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.import" {:description "Imports a new CryptoKeyVersion into an existing CryptoKey using the\nwrapped key material provided in the request.\n\nThe version ID will be assigned the next sequential id within the\nCryptoKey.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/CryptoKeyVersion"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/ImportCryptoKeyVersionRequest"}} {:description "Required. The name of the CryptoKey to\nbe imported into.", :in "path", :name "parent", :required true, :type "string", :x-reservedExpansion true}], :operationId "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.import", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/{parent}/cryptoKeyVersions:import", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "cloudkms.projects.locations.keyRings.cryptoKeys.list" {:description "Lists CryptoKeys.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ListCryptoKeysResponse"}}}, :parameters [{:description "Optional. Only include resources that match the filter in the response. For\nmore information, see\n[Sorting and filtering list\nresults](https://cloud.google.com/kms/docs/sorting-and-filtering).", :in "query", :name "filter", :type "string"} {:description "Optional. Specify how the results should be sorted. If not specified, the\nresults will be sorted in the default order. For more information, see\n[Sorting and filtering list\nresults](https://cloud.google.com/kms/docs/sorting-and-filtering).", :in "query", :name "orderBy", :type "string"} {:description "Optional. Optional limit on the number of CryptoKeys to include in the\nresponse.  Further CryptoKeys can subsequently be obtained by\nincluding the ListCryptoKeysResponse.next_page_token in a subsequent\nrequest.  If unspecified, the server will pick an appropriate default.", :in "query", :name "pageSize", :type "integer"} {:description "Optional. Optional pagination token, returned earlier via\nListCryptoKeysResponse.next_page_token.", :in "query", :name "pageToken", :type "string"} {:description "Required. The resource name of the KeyRing to list, in the format\n`projects/*/locations/*/keyRings/*`.", :in "path", :name "parent", :required true, :type "string", :x-reservedExpansion true} {:description "The fields of the primary version to include in the response.", :enum ["CRYPTO_KEY_VERSION_VIEW_UNSPECIFIED" "FULL"], :in "query", :name "versionView", :type "string"}], :operationId "cloudkms.projects.locations.keyRings.cryptoKeys.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v1/{parent}/cryptoKeys", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.restore" {:description "Restore a CryptoKeyVersion in the\nDESTROY_SCHEDULED\nstate.\n\nUpon restoration of the CryptoKeyVersion, state\nwill be set to DISABLED,\nand destroy_time will be cleared.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/CryptoKeyVersion"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/RestoreCryptoKeyVersionRequest"}} {:description "Required. The resource name of the CryptoKeyVersion to restore.", :in "path", :name "name", :required true, :type "string", :x-reservedExpansion true}], :operationId "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.restore", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/{name}:restore", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "cloudkms.projects.locations.keyRings.cryptoKeys.decrypt" {:description "Decrypts data that was protected by Encrypt. The CryptoKey.purpose\nmust be ENCRYPT_DECRYPT.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/DecryptResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/DecryptRequest"}} {:description "Required. The resource name of the CryptoKey to use for decryption.\nThe server will choose the appropriate version.", :in "path", :name "name", :required true, :type "string", :x-reservedExpansion true}], :operationId "cloudkms.projects.locations.keyRings.cryptoKeys.decrypt", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/{name}:decrypt", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}}, :parameters {:quotaUser {:description "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", :in "query", :name "quotaUser", :type "string"}, :key {:description "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", :in "query", :name "key", :type "string"}, :alt {:default "json", :description "Data format for response.", :enum ["json" "media" "proto"], :in "query", :name "alt", :type "string"}, :access_token {:description "OAuth access token.", :in "query", :name "access_token", :type "string"}, :fields {:description "Selector specifying which fields to include in a partial response.", :in "query", :name "fields", :type "string"}, :upload_protocol {:description "Upload protocol for media (e.g. \"raw\", \"multipart\").", :in "query", :name "upload_protocol", :type "string"}, :uploadType {:description "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", :in "query", :name "uploadType", :type "string"}, :oauth_token {:description "OAuth 2.0 token for the current user.", :in "query", :name "oauth_token", :type "string"}, :prettyPrint {:default true, :description "Returns response with indentations and line breaks.", :in "query", :name "prettyPrint", :type "boolean"}, "$.xgafv" {:description "V1 error format.", :enum ["1" "2"], :in "query", :name "$.xgafv", :type "string"}, :callback {:description "JSONP", :in "query", :name "callback", :type "string"}}, :definitions {:UpdateCryptoKeyPrimaryVersionRequest {:description "Request message for KeyManagementService.UpdateCryptoKeyPrimaryVersion.", :properties {:cryptoKeyVersionId {:description "Required. The id of the child CryptoKeyVersion to use as primary.", :type "string"}}, :type "object"}, :KeyOperationAttestation {:description "Contains an HSM-generated attestation about a key operation. For more\ninformation, see [Verifying attestations]\n(https://cloud.google.com/kms/docs/attest-key).", :properties {:content {:description "Output only. The attestation data provided by the HSM when the key\noperation was performed.", :format "byte", :type "string"}, :format {:description "Output only. The format of the attestation data.", :enum ["ATTESTATION_FORMAT_UNSPECIFIED" "CAVIUM_V1_COMPRESSED" "CAVIUM_V2_COMPRESSED"], :type "string"}}, :type "object"}, :DecryptRequest {:description "Request message for KeyManagementService.Decrypt.", :properties {:additionalAuthenticatedData {:description "Optional. Optional data that must match the data originally supplied in\nEncryptRequest.additional_authenticated_data.", :format "byte", :type "string"}, :ciphertext {:description "Required. The encrypted data originally returned in\nEncryptResponse.ciphertext.", :format "byte", :type "string"}}, :type "object"}, :CryptoKey {:description "A CryptoKey represents a logical key that can be used for cryptographic\noperations.\n\nA CryptoKey is made up of one or more versions, which\nrepresent the actual key material used in cryptographic operations.", :properties {:createTime {:description "Output only. The time at which this CryptoKey was created.", :format "google-datetime", :type "string"}, :labels {:additionalProperties {:type "string"}, :description "Labels with user-defined metadata. For more information, see\n[Labeling Keys](/kms/docs/labeling-keys).", :type "object"}, :name {:description "Output only. The resource name for this CryptoKey in the format\n`projects/*/locations/*/keyRings/*/cryptoKeys/*`.", :type "string"}, :nextRotationTime {:description "At next_rotation_time, the Key Management Service will automatically:\n\n1. Create a new version of this CryptoKey.\n2. Mark the new version as primary.\n\nKey rotations performed manually via\nCreateCryptoKeyVersion and\nUpdateCryptoKeyPrimaryVersion\ndo not affect next_rotation_time.\n\nKeys with purpose\nENCRYPT_DECRYPT support\nautomatic rotation. For other keys, this field must be omitted.", :format "google-datetime", :type "string"}, :primary {:$ref "#/definitions/CryptoKeyVersion", :description "Output only. A copy of the \"primary\" CryptoKeyVersion that will be used\nby Encrypt when this CryptoKey is given\nin EncryptRequest.name.\n\nThe CryptoKey's primary version can be updated via\nUpdateCryptoKeyPrimaryVersion.\n\nAll keys with purpose\nENCRYPT_DECRYPT have a\nprimary. For other keys, this field will be omitted."}, :purpose {:description "Immutable. The immutable purpose of this CryptoKey.", :enum ["CRYPTO_KEY_PURPOSE_UNSPECIFIED" "ENCRYPT_DECRYPT" "ASYMMETRIC_SIGN" "ASYMMETRIC_DECRYPT"], :type "string"}, :rotationPeriod {:description "next_rotation_time will be advanced by this period when the service\nautomatically rotates a key. Must be at least 24 hours and at most\n876,000 hours.\n\nIf rotation_period is set, next_rotation_time must also be set.\n\nKeys with purpose\nENCRYPT_DECRYPT support\nautomatic rotation. For other keys, this field must be omitted.", :format "google-duration", :type "string"}, :versionTemplate {:$ref "#/definitions/CryptoKeyVersionTemplate", :description "A template describing settings for new CryptoKeyVersion instances.\nThe properties of new CryptoKeyVersion instances created by either\nCreateCryptoKeyVersion or\nauto-rotation are controlled by this template."}}, :type "object"}, :CryptoKeyVersionTemplate {:description "A CryptoKeyVersionTemplate specifies the properties to use when creating\na new CryptoKeyVersion, either manually with\nCreateCryptoKeyVersion or\nautomatically as a result of auto-rotation.", :properties {:algorithm {:description "Required. Algorithm to use\nwhen creating a CryptoKeyVersion based on this template.\n\nFor backwards compatibility, GOOGLE_SYMMETRIC_ENCRYPTION is implied if both\nthis field is omitted and CryptoKey.purpose is\nENCRYPT_DECRYPT.", :enum ["CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED" "GOOGLE_SYMMETRIC_ENCRYPTION" "RSA_SIGN_PSS_2048_SHA256" "RSA_SIGN_PSS_3072_SHA256" "RSA_SIGN_PSS_4096_SHA256" "RSA_SIGN_PSS_4096_SHA512" "RSA_SIGN_PKCS1_2048_SHA256" "RSA_SIGN_PKCS1_3072_SHA256" "RSA_SIGN_PKCS1_4096_SHA256" "RSA_SIGN_PKCS1_4096_SHA512" "RSA_DECRYPT_OAEP_2048_SHA256" "RSA_DECRYPT_OAEP_3072_SHA256" "RSA_DECRYPT_OAEP_4096_SHA256" "RSA_DECRYPT_OAEP_4096_SHA512" "EC_SIGN_P256_SHA256" "EC_SIGN_P384_SHA384"], :type "string"}, :protectionLevel {:description "ProtectionLevel to use when creating a CryptoKeyVersion based on\nthis template. Immutable. Defaults to SOFTWARE.", :enum ["PROTECTION_LEVEL_UNSPECIFIED" "SOFTWARE" "HSM"], :type "string"}}, :type "object"}, :SetIamPolicyRequest {:description "Request message for `SetIamPolicy` method.", :properties {:policy {:$ref "#/definitions/Policy", :description "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them."}, :updateMask {:description "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only\nthe fields in the mask will be modified. If no mask is provided, the\nfollowing default mask is used:\npaths: \"bindings, etag\"\nThis field is only used by Cloud IAM.", :format "google-fieldmask", :type "string"}}, :type "object"}, :AuditConfig {:description "Specifies the audit configuration for a service.\nThe configuration determines which permission types are logged, and what\nidentities, if any, are exempted from logging.\nAn AuditConfig must have one or more AuditLogConfigs.\n\nIf there are AuditConfigs for both `allServices` and a specific service,\nthe union of the two AuditConfigs is used for that service: the log_types\nspecified in each AuditConfig are enabled, and the exempted_members in each\nAuditLogConfig are exempted.\n\nExample Policy with multiple AuditConfigs:\n\n    {\n      \"audit_configs\": [\n        {\n          \"service\": \"allServices\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n              \"exempted_members\": [\n                \"user:jose@example.com\"\n              ]\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n            },\n            {\n              \"log_type\": \"ADMIN_READ\",\n            }\n          ]\n        },\n        {\n          \"service\": \"sampleservice.googleapis.com\"\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n              \"exempted_members\": [\n                \"user:aliya@example.com\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n\nFor sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ\nlogging. It also exempts jose@example.com from DATA_READ logging, and\naliya@example.com from DATA_WRITE logging.", :properties {:auditLogConfigs {:description "The configuration for logging of each type of permission.", :items {:$ref "#/definitions/AuditLogConfig"}, :type "array"}, :service {:description "Specifies a service that will be enabled for audit logging.\nFor example, `storage.googleapis.com`, `cloudsql.googleapis.com`.\n`allServices` is a special value that covers all services.", :type "string"}}, :type "object"}, :EncryptRequest {:description "Request message for KeyManagementService.Encrypt.", :properties {:additionalAuthenticatedData {:description "Optional. Optional data that, if specified, must also be provided during decryption\nthrough DecryptRequest.additional_authenticated_data.\n\nThe maximum size depends on the key version's\nprotection_level. For\nSOFTWARE keys, the AAD must be no larger than\n64KiB. For HSM keys, the combined length of the\nplaintext and additional_authenticated_data fields must be no larger than\n8KiB.", :format "byte", :type "string"}, :plaintext {:description "Required. The data to encrypt. Must be no larger than 64KiB.\n\nThe maximum size depends on the key version's\nprotection_level. For\nSOFTWARE keys, the plaintext must be no larger\nthan 64KiB. For HSM keys, the combined length of the\nplaintext and additional_authenticated_data fields must be no larger than\n8KiB.", :format "byte", :type "string"}}, :type "object"}, :AuditLogConfig {:description "Provides the configuration for logging a type of permissions.\nExample:\n\n    {\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n          \"exempted_members\": [\n            \"user:jose@example.com\"\n          ]\n        },\n        {\n          \"log_type\": \"DATA_WRITE\",\n        }\n      ]\n    }\n\nThis enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting\njose@example.com from DATA_READ logging.", :properties {:exemptedMembers {:description "Specifies the identities that do not cause logging for this type of\npermission.\nFollows the same format of Binding.members.", :items {:type "string"}, :type "array"}, :logType {:description "The log type that this config enables.", :enum ["LOG_TYPE_UNSPECIFIED" "ADMIN_READ" "DATA_WRITE" "DATA_READ"], :type "string"}}, :type "object"}, :WrappingPublicKey {:description "The public key component of the wrapping key. For details of the type of\nkey this public key corresponds to, see the ImportMethod.", :properties {:pem {:description "The public key, encoded in PEM format. For more information, see the [RFC\n7468](https://tools.ietf.org/html/rfc7468) sections for [General\nConsiderations](https://tools.ietf.org/html/rfc7468#section-2) and\n[Textual Encoding of Subject Public Key Info]\n(https://tools.ietf.org/html/rfc7468#section-13).", :type "string"}}, :type "object"}, :ListCryptoKeyVersionsResponse {:description "Response message for KeyManagementService.ListCryptoKeyVersions.", :properties {:cryptoKeyVersions {:description "The list of CryptoKeyVersions.", :items {:$ref "#/definitions/CryptoKeyVersion"}, :type "array"}, :nextPageToken {:description "A token to retrieve next page of results. Pass this value in\nListCryptoKeyVersionsRequest.page_token to retrieve the next page of\nresults.", :type "string"}, :totalSize {:description "The total number of CryptoKeyVersions that matched the\nquery.", :format "int32", :type "integer"}}, :type "object"}, :DestroyCryptoKeyVersionRequest {:description "Request message for KeyManagementService.DestroyCryptoKeyVersion.", :properties {}, :type "object"}, :Binding {:description "Associates `members` with a `role`.", :properties {:condition {:$ref "#/definitions/Expr", :description "The condition that is associated with this binding.\nNOTE: An unsatisfied condition will not allow user access via current\nbinding. Different bindings, including their conditions, are examined\nindependently."}, :members {:description "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@example.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n\n* `domain:{domain}`: The G Suite domain (primary) that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n", :items {:type "string"}, :type "array"}, :role {:description "Role that is assigned to `members`.\nFor example, `roles/viewer`, `roles/editor`, or `roles/owner`.", :type "string"}}, :type "object"}, :ImportJob {:description "An ImportJob can be used to create CryptoKeys and\nCryptoKeyVersions using pre-existing key material,\ngenerated outside of Cloud KMS.\n\nWhen an ImportJob is created, Cloud KMS will generate a \"wrapping key\",\nwhich is a public/private key pair. You use the wrapping key to encrypt (also\nknown as wrap) the pre-existing key material to protect it during the import\nprocess. The nature of the wrapping key depends on the choice of\nimport_method. When the wrapping key generation\nis complete, the state will be set to\nACTIVE and the public_key\ncan be fetched. The fetched public key can then be used to wrap your\npre-existing key material.\n\nOnce the key material is wrapped, it can be imported into a new\nCryptoKeyVersion in an existing CryptoKey by calling\nImportCryptoKeyVersion.\nMultiple CryptoKeyVersions can be imported with a single\nImportJob. Cloud KMS uses the private key portion of the wrapping key to\nunwrap the key material. Only Cloud KMS has access to the private key.\n\nAn ImportJob expires 3 days after it is created. Once expired, Cloud KMS\nwill no longer be able to import or unwrap any key material that was wrapped\nwith the ImportJob's public key.\n\nFor more information, see\n[Importing a key](https://cloud.google.com/kms/docs/importing-a-key).", :properties {:generateTime {:description "Output only. The time this ImportJob's key material was generated.", :format "google-datetime", :type "string"}, :name {:description "Output only. The resource name for this ImportJob in the format\n`projects/*/locations/*/keyRings/*/importJobs/*`.", :type "string"}, :createTime {:description "Output only. The time at which this ImportJob was created.", :format "google-datetime", :type "string"}, :expireEventTime {:description "Output only. The time this ImportJob expired. Only present if\nstate is EXPIRED.", :format "google-datetime", :type "string"}, :state {:description "Output only. The current state of the ImportJob, indicating if it can\nbe used.", :enum ["IMPORT_JOB_STATE_UNSPECIFIED" "PENDING_GENERATION" "ACTIVE" "EXPIRED"], :type "string"}, :publicKey {:$ref "#/definitions/WrappingPublicKey", :description "Output only. The public key with which to wrap key material prior to\nimport. Only returned if state is\nACTIVE."}, :attestation {:$ref "#/definitions/KeyOperationAttestation", :description "Output only. Statement that was generated and signed by the key creator\n(for example, an HSM) at key creation time. Use this statement to verify\nattributes of the key as stored on the HSM, independently of Google.\nOnly present if the chosen ImportMethod is one with a protection\nlevel of HSM."}, :expireTime {:description "Output only. The time at which this ImportJob is scheduled for\nexpiration and can no longer be used to import key material.", :format "google-datetime", :type "string"}, :importMethod {:description "Required. Immutable. The wrapping method to be used for incoming key material.", :enum ["IMPORT_METHOD_UNSPECIFIED" "RSA_OAEP_3072_SHA1_AES_256" "RSA_OAEP_4096_SHA1_AES_256"], :type "string"}, :protectionLevel {:description "Required. Immutable. The protection level of the ImportJob. This must match the\nprotection_level of the\nversion_template on the CryptoKey you\nattempt to import into.", :enum ["PROTECTION_LEVEL_UNSPECIFIED" "SOFTWARE" "HSM"], :type "string"}}, :type "object"}, :AsymmetricDecryptResponse {:description "Response message for KeyManagementService.AsymmetricDecrypt.", :properties {:plaintext {:description "The decrypted data originally encrypted with the matching public key.", :format "byte", :type "string"}}, :type "object"}, :Digest {:description "A Digest holds a cryptographic message digest.", :properties {:sha256 {:description "A message digest produced with the SHA-256 algorithm.", :format "byte", :type "string"}, :sha384 {:description "A message digest produced with the SHA-384 algorithm.", :format "byte", :type "string"}, :sha512 {:description "A message digest produced with the SHA-512 algorithm.", :format "byte", :type "string"}}, :type "object"}, :PublicKey {:description "The public key for a given CryptoKeyVersion. Obtained via\nGetPublicKey.", :properties {:algorithm {:description "The Algorithm associated\nwith this key.", :enum ["CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED" "GOOGLE_SYMMETRIC_ENCRYPTION" "RSA_SIGN_PSS_2048_SHA256" "RSA_SIGN_PSS_3072_SHA256" "RSA_SIGN_PSS_4096_SHA256" "RSA_SIGN_PSS_4096_SHA512" "RSA_SIGN_PKCS1_2048_SHA256" "RSA_SIGN_PKCS1_3072_SHA256" "RSA_SIGN_PKCS1_4096_SHA256" "RSA_SIGN_PKCS1_4096_SHA512" "RSA_DECRYPT_OAEP_2048_SHA256" "RSA_DECRYPT_OAEP_3072_SHA256" "RSA_DECRYPT_OAEP_4096_SHA256" "RSA_DECRYPT_OAEP_4096_SHA512" "EC_SIGN_P256_SHA256" "EC_SIGN_P384_SHA384"], :type "string"}, :pem {:description "The public key, encoded in PEM format. For more information, see the\n[RFC 7468](https://tools.ietf.org/html/rfc7468) sections for\n[General Considerations](https://tools.ietf.org/html/rfc7468#section-2) and\n[Textual Encoding of Subject Public Key Info]\n(https://tools.ietf.org/html/rfc7468#section-13).", :type "string"}}, :type "object"}, :ListImportJobsResponse {:description "Response message for KeyManagementService.ListImportJobs.", :properties {:importJobs {:description "The list of ImportJobs.", :items {:$ref "#/definitions/ImportJob"}, :type "array"}, :nextPageToken {:description "A token to retrieve next page of results. Pass this value in\nListImportJobsRequest.page_token to retrieve the next page of results.", :type "string"}, :totalSize {:description "The total number of ImportJobs that matched the query.", :format "int32", :type "integer"}}, :type "object"}, :ListLocationsResponse {:description "The response message for Locations.ListLocations.", :properties {:locations {:description "A list of locations that matches the specified filter in the request.", :items {:$ref "#/definitions/Location"}, :type "array"}, :nextPageToken {:description "The standard List next-page token.", :type "string"}}, :type "object"}, :AsymmetricSignResponse {:description "Response message for KeyManagementService.AsymmetricSign.", :properties {:signature {:description "The created signature.", :format "byte", :type "string"}}, :type "object"}, :ListCryptoKeysResponse {:description "Response message for KeyManagementService.ListCryptoKeys.", :properties {:cryptoKeys {:description "The list of CryptoKeys.", :items {:$ref "#/definitions/CryptoKey"}, :type "array"}, :nextPageToken {:description "A token to retrieve next page of results. Pass this value in\nListCryptoKeysRequest.page_token to retrieve the next page of results.", :type "string"}, :totalSize {:description "The total number of CryptoKeys that matched the query.", :format "int32", :type "integer"}}, :type "object"}, :TestIamPermissionsRequest {:description "Request message for `TestIamPermissions` method.", :properties {:permissions {:description "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).", :items {:type "string"}, :type "array"}}, :type "object"}, :KeyRing {:description "A KeyRing is a toplevel logical grouping of CryptoKeys.", :properties {:createTime {:description "Output only. The time at which this KeyRing was created.", :format "google-datetime", :type "string"}, :name {:description "Output only. The resource name for the KeyRing in the format\n`projects/*/locations/*/keyRings/*`.", :type "string"}}, :type "object"}, :AsymmetricSignRequest {:description "Request message for KeyManagementService.AsymmetricSign.", :properties {:digest {:$ref "#/definitions/Digest", :description "Required. The digest of the data to sign. The digest must be produced with\nthe same digest algorithm as specified by the key version's\nalgorithm."}}, :type "object"}, :RestoreCryptoKeyVersionRequest {:description "Request message for KeyManagementService.RestoreCryptoKeyVersion.", :properties {}, :type "object"}, :ListKeyRingsResponse {:description "Response message for KeyManagementService.ListKeyRings.", :properties {:keyRings {:description "The list of KeyRings.", :items {:$ref "#/definitions/KeyRing"}, :type "array"}, :nextPageToken {:description "A token to retrieve next page of results. Pass this value in\nListKeyRingsRequest.page_token to retrieve the next page of results.", :type "string"}, :totalSize {:description "The total number of KeyRings that matched the query.", :format "int32", :type "integer"}}, :type "object"}, :TestIamPermissionsResponse {:description "Response message for `TestIamPermissions` method.", :properties {:permissions {:description "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.", :items {:type "string"}, :type "array"}}, :type "object"}, :EncryptResponse {:description "Response message for KeyManagementService.Encrypt.", :properties {:ciphertext {:description "The encrypted data.", :format "byte", :type "string"}, :name {:description "The resource name of the CryptoKeyVersion used in encryption. Check\nthis field to verify that the intended resource was used for encryption.", :type "string"}}, :type "object"}, :Expr {:description "Represents an expression text. Example:\n\n    title: \"User account presence\"\n    description: \"Determines whether the request has a user account\"\n    expression: \"size(request.user) > 0\"", :properties {:description {:description "An optional description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.", :type "string"}, :expression {:description "Textual representation of an expression in\nCommon Expression Language syntax.\n\nThe application context of the containing message determines which\nwell-known feature set of CEL is supported.", :type "string"}, :location {:description "An optional string indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.", :type "string"}, :title {:description "An optional title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.", :type "string"}}, :type "object"}, :LocationMetadata {:description "Cloud KMS metadata for the given google.cloud.location.Location.", :properties {:hsmAvailable {:description "Indicates whether CryptoKeys with\nprotection_level\nHSM can be created in this location.", :type "boolean"}}, :type "object"}, :Location {:description "A resource that represents Google Cloud Platform location.", :properties {:displayName {:description "The friendly name for this location, typically a nearby city name.\nFor example, \"Tokyo\".", :type "string"}, :labels {:additionalProperties {:type "string"}, :description "Cross-service attributes for the location. For example\n\n    {\"cloud.googleapis.com/region\": \"us-east1\"}", :type "object"}, :locationId {:description "The canonical id for this location. For example: `\"us-east1\"`.", :type "string"}, :metadata {:additionalProperties {:description "Properties of the object. Contains field @type with type URL."}, :description "Service-specific metadata. For example the available capacity at the given\nlocation.", :type "object"}, :name {:description "Resource name for the location, which may vary between implementations.\nFor example: `\"projects/example-project/locations/us-east1\"`", :type "string"}}, :type "object"}, :CryptoKeyVersion {:description "A CryptoKeyVersion represents an individual cryptographic key, and the\nassociated key material.\n\nAn ENABLED version can be\nused for cryptographic operations.\n\nFor security reasons, the raw cryptographic key material represented by a\nCryptoKeyVersion can never be viewed or exported. It can only be used to\nencrypt, decrypt, or sign data when an authorized user or application invokes\nCloud KMS.", :properties {:algorithm {:description "Output only. The CryptoKeyVersionAlgorithm that this\nCryptoKeyVersion supports.", :enum ["CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED" "GOOGLE_SYMMETRIC_ENCRYPTION" "RSA_SIGN_PSS_2048_SHA256" "RSA_SIGN_PSS_3072_SHA256" "RSA_SIGN_PSS_4096_SHA256" "RSA_SIGN_PSS_4096_SHA512" "RSA_SIGN_PKCS1_2048_SHA256" "RSA_SIGN_PKCS1_3072_SHA256" "RSA_SIGN_PKCS1_4096_SHA256" "RSA_SIGN_PKCS1_4096_SHA512" "RSA_DECRYPT_OAEP_2048_SHA256" "RSA_DECRYPT_OAEP_3072_SHA256" "RSA_DECRYPT_OAEP_4096_SHA256" "RSA_DECRYPT_OAEP_4096_SHA512" "EC_SIGN_P256_SHA256" "EC_SIGN_P384_SHA384"], :type "string"}, :generateTime {:description "Output only. The time this CryptoKeyVersion's key material was\ngenerated.", :format "google-datetime", :type "string"}, :importFailureReason {:description "Output only. The root cause of an import failure. Only present if\nstate is\nIMPORT_FAILED.", :type "string"}, :name {:description "Output only. The resource name for this CryptoKeyVersion in the format\n`projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.", :type "string"}, :importTime {:description "Output only. The time at which this CryptoKeyVersion's key material\nwas imported.", :format "google-datetime", :type "string"}, :createTime {:description "Output only. The time at which this CryptoKeyVersion was created.", :format "google-datetime", :type "string"}, :state {:description "The current state of the CryptoKeyVersion.", :enum ["CRYPTO_KEY_VERSION_STATE_UNSPECIFIED" "PENDING_GENERATION" "ENABLED" "DISABLED" "DESTROYED" "DESTROY_SCHEDULED" "PENDING_IMPORT" "IMPORT_FAILED"], :type "string"}, :importJob {:description "Output only. The name of the ImportJob used to import this\nCryptoKeyVersion. Only present if the underlying key material was\nimported.", :type "string"}, :attestation {:$ref "#/definitions/KeyOperationAttestation", :description "Output only. Statement that was generated and signed by the HSM at key\ncreation time. Use this statement to verify attributes of the key as stored\non the HSM, independently of Google. Only provided for key versions with\nprotection_level HSM."}, :protectionLevel {:description "Output only. The ProtectionLevel describing how crypto operations are\nperformed with this CryptoKeyVersion.", :enum ["PROTECTION_LEVEL_UNSPECIFIED" "SOFTWARE" "HSM"], :type "string"}, :destroyTime {:description "Output only. The time this CryptoKeyVersion's key material is scheduled\nfor destruction. Only present if state is\nDESTROY_SCHEDULED.", :format "google-datetime", :type "string"}, :destroyEventTime {:description "Output only. The time this CryptoKeyVersion's key material was\ndestroyed. Only present if state is\nDESTROYED.", :format "google-datetime", :type "string"}}, :type "object"}, :ImportCryptoKeyVersionRequest {:description "Request message for KeyManagementService.ImportCryptoKeyVersion.", :properties {:algorithm {:description "Required. The algorithm of\nthe key being imported. This does not need to match the\nversion_template of the CryptoKey this\nversion imports into.", :enum ["CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED" "GOOGLE_SYMMETRIC_ENCRYPTION" "RSA_SIGN_PSS_2048_SHA256" "RSA_SIGN_PSS_3072_SHA256" "RSA_SIGN_PSS_4096_SHA256" "RSA_SIGN_PSS_4096_SHA512" "RSA_SIGN_PKCS1_2048_SHA256" "RSA_SIGN_PKCS1_3072_SHA256" "RSA_SIGN_PKCS1_4096_SHA256" "RSA_SIGN_PKCS1_4096_SHA512" "RSA_DECRYPT_OAEP_2048_SHA256" "RSA_DECRYPT_OAEP_3072_SHA256" "RSA_DECRYPT_OAEP_4096_SHA256" "RSA_DECRYPT_OAEP_4096_SHA512" "EC_SIGN_P256_SHA256" "EC_SIGN_P384_SHA384"], :type "string"}, :importJob {:description "Required. The name of the ImportJob that was used to\nwrap this key material.", :type "string"}, :rsaAesWrappedKey {:description "Wrapped key material produced with\nRSA_OAEP_3072_SHA1_AES_256\nor\nRSA_OAEP_4096_SHA1_AES_256.\n\nThis field contains the concatenation of two wrapped keys:\n<ol>\n  <li>An ephemeral AES-256 wrapping key wrapped with the\n      public_key using RSAES-OAEP with SHA-1,\n      MGF1 with SHA-1, and an empty label.\n  </li>\n  <li>The key to be imported, wrapped with the ephemeral AES-256 key\n      using AES-KWP (RFC 5649).\n  </li>\n</ol>\n\nIf importing symmetric key material, it is expected that the unwrapped\nkey contains plain bytes. If importing asymmetric key material, it is\nexpected that the unwrapped key is in PKCS#8-encoded DER format (the\nPrivateKeyInfo structure from RFC 5208).\n\nThis format is the same as the format produced by PKCS#11 mechanism\nCKM_RSA_AES_KEY_WRAP.", :format "byte", :type "string"}}, :type "object"}, :AsymmetricDecryptRequest {:description "Request message for KeyManagementService.AsymmetricDecrypt.", :properties {:ciphertext {:description "Required. The data encrypted with the named CryptoKeyVersion's public\nkey using OAEP.", :format "byte", :type "string"}}, :type "object"}, :DecryptResponse {:description "Response message for KeyManagementService.Decrypt.", :properties {:plaintext {:description "The decrypted data originally supplied in EncryptRequest.plaintext.", :format "byte", :type "string"}}, :type "object"}, :Policy {:description "Defines an Identity and Access Management (IAM) policy. It is used to\nspecify access control policies for Cloud Platform resources.\n\n\nA `Policy` is a collection of `bindings`. A `binding` binds one or more\n`members` to a single `role`. Members can be user accounts, service accounts,\nGoogle groups, and domains (such as G Suite). A `role` is a named list of\npermissions (defined by IAM or configured by users). A `binding` can\noptionally specify a `condition`, which is a logic expression that further\nconstrains the role binding based on attributes about the request and/or\ntarget resource.\n\n**JSON Example**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles/resourcemanager.organizationAdmin\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles/resourcemanager.organizationViewer\",\n          \"members\": [\"user:eve@example.com\"],\n          \"condition\": {\n            \"title\": \"expirable access\",\n            \"description\": \"Does not grant access after Sep 2020\",\n            \"expression\": \"request.time <\n            timestamp('2020-10-01T00:00:00.000Z')\",\n          }\n        }\n      ]\n    }\n\n**YAML Example**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-project-id@appspot.gserviceaccount.com\n      role: roles/resourcemanager.organizationAdmin\n    - members:\n      - user:eve@example.com\n      role: roles/resourcemanager.organizationViewer\n      condition:\n        title: expirable access\n        description: Does not grant access after Sep 2020\n        expression: request.time < timestamp('2020-10-01T00:00:00.000Z')\n\nFor a description of IAM and its features, see the\n[IAM developer's guide](https://cloud.google.com/iam/docs).", :properties {:auditConfigs {:description "Specifies cloud audit logging configuration for this policy.", :items {:$ref "#/definitions/AuditConfig"}, :type "array"}, :bindings {:description "Associates a list of `members` to a `role`. Optionally may specify a\n`condition` that determines when binding is in effect.\n`bindings` with no members will result in an error.", :items {:$ref "#/definitions/Binding"}, :type "array"}, :etag {:description "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\nIf no `etag` is provided in the call to `setIamPolicy`, then the existing\npolicy is overwritten. Due to blind-set semantics of an etag-less policy,\n'setIamPolicy' will not fail even if either of incoming or stored policy\ndoes not meet the version requirements.", :format "byte", :type "string"}, :version {:description "Specifies the format of the policy.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nOperations affecting conditional bindings must specify version 3. This can\nbe either setting a conditional policy, modifying a conditional binding,\nor removing a conditional binding from the stored conditional policy.\nOperations on non-conditional policies may specify any valid value or\nleave the field unset.\n\nIf no etag is provided in the call to `setIamPolicy`, any version\ncompliance checks on the incoming and/or stored policy is skipped.", :format "int32", :type "integer"}}, :type "object"}}}