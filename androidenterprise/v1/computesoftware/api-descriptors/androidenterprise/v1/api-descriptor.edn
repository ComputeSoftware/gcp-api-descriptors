#:compute.gcp.descriptor{:name "androidenterprise", :title "Google Play EMM API", :api-version "v1", :revision "20200715", :endpoint #:compute.gcp.descriptor{:url "https://www.googleapis.com/", :batch-path "batch/androidenterprise/v1", :service-path ""}, :parameters {"callback" {"type" "string", "location" "query", "description" "JSONP"}, "uploadType" {"location" "query", "type" "string", "description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."}, "key" {"type" "string", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "location" "query"}, "access_token" {"type" "string", "location" "query", "description" "OAuth access token."}, "oauth_token" {"type" "string", "location" "query", "description" "OAuth 2.0 token for the current user."}, "prettyPrint" {"location" "query", "description" "Returns response with indentations and line breaks.", "default" "true", "type" "boolean"}, "alt" {"enum" ["json" "media" "proto"], "default" "json", "location" "query", "type" "string", "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "description" "Data format for response."}, "$.xgafv" {"description" "V1 error format.", "enumDescriptions" ["v1 error format" "v2 error format"], "type" "string", "enum" ["1" "2"], "location" "query"}, "fields" {"type" "string", "description" "Selector specifying which fields to include in a partial response.", "location" "query"}, "upload_protocol" {"location" "query", "description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "type" "string"}, "quotaUser" {"location" "query", "type" "string", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."}}, :op->info {"androidenterprise.users.list" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/users", :response {"$ref" "UsersListResponse"}, :parameters {"email" {"required" true, "type" "string", "description" "Required. The exact primary email address of the user to look up.", "location" "query"}, "enterpriseId" {"description" "The ID of the enterprise.", "required" true, "location" "path", "type" "string"}}, :description "Looks up a user by primary email address.\nThis is only supported for Google-managed users.  Lookup of the id is not\nneeded for EMM-managed users because the id is already returned in the\nresult of the Users.insert call."}, "androidenterprise.installs.get" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/devices/{deviceId}/installs/{installId}", :response {"$ref" "Install"}, :parameters {"userId" {"location" "path", "type" "string", "description" "The ID of the user.", "required" true}, "installId" {"required" true, "location" "path", "type" "string", "description" "The ID of the product represented by the install, e.g.\n\"app:com.google.android.gm\"."}, "enterpriseId" {"location" "path", "type" "string", "required" true, "description" "The ID of the enterprise."}, "deviceId" {"type" "string", "required" true, "location" "path", "description" "The Android ID of the device."}}, :description "Retrieves details of an installation of an app on a device."}, "androidenterprise.devices.setState" #:compute.gcp.descriptor{:http-method :put, :path "androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/devices/{deviceId}/state", :request {"$ref" "DeviceState"}, :response {"$ref" "DeviceState"}, :parameters {"enterpriseId" {"location" "path", "required" true, "type" "string", "description" "The ID of the enterprise."}, "userId" {"required" true, "description" "The ID of the user.", "location" "path", "type" "string"}, "deviceId" {"description" "The ID of the device.", "required" true, "location" "path", "type" "string"}}, :description "Sets whether a device's access to Google services is enabled or disabled.\nThe device state takes effect only if enforcing EMM policies on Android\ndevices is enabled in the Google Admin Console.\nOtherwise, the device state is ignored and all devices are allowed access\nto Google services.\nThis is only supported for Google-managed users."}, "androidenterprise.serviceaccountkeys.insert" #:compute.gcp.descriptor{:http-method :post, :path "androidenterprise/v1/enterprises/{enterpriseId}/serviceAccountKeys", :request {"$ref" "ServiceAccountKey"}, :response {"$ref" "ServiceAccountKey"}, :parameters {"enterpriseId" {"description" "The ID of the enterprise.", "required" true, "type" "string", "location" "path"}}, :description "Generates new credentials for the service account associated with this\nenterprise. The calling service account must have been retrieved by calling\nEnterprises.GetServiceAccount and must have been set as the enterprise\nservice account by calling Enterprises.SetAccount. <br><br>\nOnly the type of the key should be populated in the resource to be\ninserted."}, "androidenterprise.devices.get" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/devices/{deviceId}", :response {"$ref" "Device"}, :parameters {"userId" {"description" "The ID of the user.", "type" "string", "required" true, "location" "path"}, "deviceId" {"location" "path", "required" true, "description" "The ID of the device.", "type" "string"}, "enterpriseId" {"location" "path", "required" true, "description" "The ID of the enterprise.", "type" "string"}}, :description "Retrieves the details of a device."}, "androidenterprise.products.get" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/products/{productId}", :response {"$ref" "Product"}, :parameters {"productId" {"type" "string", "required" true, "location" "path", "description" "The ID of the product, e.g. \"app:com.google.android.gm\"."}, "language" {"location" "query", "description" "The BCP47 tag for the user's preferred language (e.g. \"en-US\", \"de\").", "type" "string"}, "enterpriseId" {"type" "string", "location" "path", "required" true, "description" "The ID of the enterprise."}}, :description "Retrieves details of a product for display to an enterprise admin."}, "androidenterprise.enterprises.generateSignupUrl" #:compute.gcp.descriptor{:http-method :post, :path "androidenterprise/v1/enterprises/signupUrl", :response {"$ref" "SignupInfo"}, :parameters {"callbackUrl" {"description" "The callback URL to which the Admin will be redirected after successfully\ncreating an enterprise. Before redirecting there the system will add a\nsingle query parameter to this URL named \"enterpriseToken\" which will\ncontain an opaque token to be used for the CompleteSignup request.<br>\nBeware that this means that the URL will be parsed, the parameter added\nand then a new URL formatted, i.e. there may be some minor formatting\nchanges and, more importantly, the URL must be well-formed so that it can\nbe parsed.", "type" "string", "location" "query"}}, :description "Generates a sign-up URL."}, "androidenterprise.enterprises.getServiceAccount" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/serviceAccount", :response {"$ref" "ServiceAccount"}, :parameters {"keyType" {"location" "query", "description" "The type of credential to return with the service account. Required.", "enum" ["googleCredentials" "pkcs12"], "type" "string"}, "enterpriseId" {"location" "path", "description" "The ID of the enterprise.", "type" "string", "required" true}}, :description "Returns a service account and credentials. The service account\ncan be bound to the enterprise by calling setAccount. The service account\nis unique to this enterprise and EMM, and will be deleted if the enterprise\nis unbound. The credentials contain private key data and are not stored\nserver-side.\n<br> <br>\nThis method can only be called after calling\nEnterprises.Enroll or Enterprises.CompleteSignup, and before\nEnterprises.SetAccount; at other times it will return an error.\n<br> <br>\nSubsequent calls after the first will generate a new, unique set of\ncredentials, and invalidate the previously generated credentials.\n<br> <br>\nOnce the service account is bound to the enterprise, it can be managed\nusing the serviceAccountKeys resource."}, "androidenterprise.serviceaccountkeys.delete" #:compute.gcp.descriptor{:http-method :delete, :path "androidenterprise/v1/enterprises/{enterpriseId}/serviceAccountKeys/{keyId}", :parameters {"keyId" {"location" "path", "required" true, "description" "The ID of the key.", "type" "string"}, "enterpriseId" {"location" "path", "description" "The ID of the enterprise.", "type" "string", "required" true}}, :description "Removes and invalidates the specified credentials for the service account\nassociated with this enterprise. The calling service account must have been\nretrieved by calling Enterprises.GetServiceAccount and must have been set\nas the enterprise service account by calling Enterprises.SetAccount."}, "androidenterprise.webapps.delete" #:compute.gcp.descriptor{:http-method :delete, :path "androidenterprise/v1/enterprises/{enterpriseId}/webApps/{webAppId}", :parameters {"enterpriseId" {"location" "path", "type" "string", "description" "The ID of the enterprise.", "required" true}, "webAppId" {"type" "string", "description" "The ID of the web app.", "required" true, "location" "path"}}, :description "Deletes an existing web app."}, "androidenterprise.users.delete" #:compute.gcp.descriptor{:http-method :delete, :path "androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}", :parameters {"userId" {"required" true, "type" "string", "location" "path", "description" "The ID of the user."}, "enterpriseId" {"required" true, "description" "The ID of the enterprise.", "location" "path", "type" "string"}}, :description "Deleted an EMM-managed user."}, "androidenterprise.products.getAppRestrictionsSchema" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/products/{productId}/appRestrictionsSchema", :response {"$ref" "AppRestrictionsSchema"}, :parameters {"productId" {"description" "The ID of the product.", "type" "string", "location" "path", "required" true}, "language" {"location" "query", "type" "string", "description" "The BCP47 tag for the user's preferred language (e.g. \"en-US\", \"de\")."}, "enterpriseId" {"required" true, "type" "string", "location" "path", "description" "The ID of the enterprise."}}, :description "Retrieves the schema that defines the configurable properties for this\nproduct. All products have a schema, but this schema may be empty if no\nmanaged configurations have been defined. This schema can be used to\npopulate a UI that allows an admin to configure the product.\nTo apply a managed configuration based on the schema obtained using this\nAPI, see\n<a href=\"/android/work/play/emm-api/managed-configurations\">Managed\nConfigurations through Play</a>."}, "androidenterprise.enterprises.createWebToken" #:compute.gcp.descriptor{:http-method :post, :path "androidenterprise/v1/enterprises/{enterpriseId}/createWebToken", :request {"$ref" "AdministratorWebTokenSpec"}, :response {"$ref" "AdministratorWebToken"}, :parameters {"enterpriseId" {"description" "The ID of the enterprise.", "type" "string", "required" true, "location" "path"}}, :description "Returns a unique token to access an embeddable UI. To generate a\nweb UI, pass the generated token into the managed Google Play javascript\nAPI. Each token may only be used to start one UI session. See the\njavascript API documentation for further information."}, "androidenterprise.managedconfigurationsfordevice.delete" #:compute.gcp.descriptor{:http-method :delete, :path "androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/devices/{deviceId}/managedConfigurationsForDevice/{managedConfigurationForDeviceId}", :parameters {"enterpriseId" {"type" "string", "required" true, "location" "path", "description" "The ID of the enterprise."}, "deviceId" {"required" true, "type" "string", "location" "path", "description" "The Android ID of the device."}, "userId" {"description" "The ID of the user.", "location" "path", "required" true, "type" "string"}, "managedConfigurationForDeviceId" {"location" "path", "required" true, "type" "string", "description" "The ID of the managed configuration (a product ID), e.g.\n\"app:com.google.android.gm\"."}}, :description "Removes a per-device managed configuration for an app for the specified\ndevice."}, "androidenterprise.webapps.update" #:compute.gcp.descriptor{:http-method :put, :path "androidenterprise/v1/enterprises/{enterpriseId}/webApps/{webAppId}", :request {"$ref" "WebApp"}, :response {"$ref" "WebApp"}, :parameters {"webAppId" {"location" "path", "type" "string", "required" true, "description" "The ID of the web app."}, "enterpriseId" {"description" "The ID of the enterprise.", "required" true, "type" "string", "location" "path"}}, :description "Updates an existing web app."}, "androidenterprise.enterprises.sendTestPushNotification" #:compute.gcp.descriptor{:http-method :post, :path "androidenterprise/v1/enterprises/{enterpriseId}/sendTestPushNotification", :response {"$ref" "EnterprisesSendTestPushNotificationResponse"}, :parameters {"enterpriseId" {"description" "The ID of the enterprise.", "location" "path", "type" "string", "required" true}}, :description "Sends a test notification to validate the EMM integration with\nthe Google Cloud Pub/Sub service for this enterprise."}, "androidenterprise.products.list" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/products", :response {"$ref" "ProductsListResponse"}, :parameters {"enterpriseId" {"type" "string", "location" "path", "description" "The ID of the enterprise.", "required" true}, "approved" {"location" "query", "description" "Specifies whether to search among all products (false) or among\nonly products that have been approved (true). Only \"true\" is\nsupported, and should be specified.", "type" "boolean"}, "language" {"location" "query", "description" "The BCP47 tag for the user's preferred language (e.g. \"en-US\", \"de\").\nResults are returned in the language best matching the preferred\nlanguage.", "type" "string"}, "token" {"location" "query", "type" "string", "description" "Defines the token of the page to return, usually taken from\nTokenPagination.\nThis can only be used if token paging is enabled."}, "maxResults" {"location" "query", "format" "uint32", "type" "integer", "description" "Defines how many results the list operation should return.\nThe default number depends on the resource collection."}, "query" {"type" "string", "description" "The search query as typed in the Google Play store search box.\nIf omitted, all approved apps will be returned (using the pagination\nparameters), including apps that are not available in the store\n(e.g. unpublished apps).", "location" "query"}}, :description "Finds approved products that match a query, or all approved products\nif there is no query."}, "androidenterprise.devices.update" #:compute.gcp.descriptor{:http-method :put, :path "androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/devices/{deviceId}", :request {"$ref" "Device"}, :response {"$ref" "Device"}, :parameters {"enterpriseId" {"location" "path", "description" "The ID of the enterprise.", "type" "string", "required" true}, "updateMask" {"description" "Mask that identifies which fields to update. If not set, all modifiable\nfields will be modified.\n\nWhen set in a query parameter, this field should be specified as\n<code>updateMask=&lt;field1&gt;,&lt;field2&gt;,...</code>", "type" "string", "location" "query"}, "deviceId" {"description" "The ID of the device.", "required" true, "location" "path", "type" "string"}, "userId" {"description" "The ID of the user.", "required" true, "location" "path", "type" "string"}}, :description "Updates the device policy"}, "androidenterprise.products.approve" #:compute.gcp.descriptor{:http-method :post, :path "androidenterprise/v1/enterprises/{enterpriseId}/products/{productId}/approve", :request {"$ref" "ProductsApproveRequest"}, :parameters {"productId" {"required" true, "type" "string", "description" "The ID of the product.", "location" "path"}, "enterpriseId" {"location" "path", "required" true, "type" "string", "description" "The ID of the enterprise."}}, :description "<p>Approves the specified product and the relevant app permissions, if any.\nThe maximum number of products that you can approve per enterprise customer\nis 1,000.</p>\n<p>To learn how to use managed Google Play to design and create a store\nlayout to display approved products to your users,\nsee <a href=\"/android/work/play/emm-api/store-layout\">Store Layout\nDesign</a>.</p>"}, "androidenterprise.managedconfigurationsfordevice.update" #:compute.gcp.descriptor{:http-method :put, :path "androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/devices/{deviceId}/managedConfigurationsForDevice/{managedConfigurationForDeviceId}", :request {"$ref" "ManagedConfiguration"}, :response {"$ref" "ManagedConfiguration"}, :parameters {"managedConfigurationForDeviceId" {"required" true, "type" "string", "description" "The ID of the managed configuration (a product ID), e.g.\n\"app:com.google.android.gm\".", "location" "path"}, "userId" {"description" "The ID of the user.", "location" "path", "type" "string", "required" true}, "deviceId" {"description" "The Android ID of the device.", "required" true, "location" "path", "type" "string"}, "enterpriseId" {"required" true, "type" "string", "location" "path", "description" "The ID of the enterprise."}}, :description "Adds or updates a per-device managed configuration for an app for the\nspecified device."}, "androidenterprise.storelayoutclusters.delete" #:compute.gcp.descriptor{:http-method :delete, :path "androidenterprise/v1/enterprises/{enterpriseId}/storeLayout/pages/{pageId}/clusters/{clusterId}", :parameters {"clusterId" {"required" true, "type" "string", "description" "The ID of the cluster.", "location" "path"}, "pageId" {"location" "path", "description" "The ID of the page.", "required" true, "type" "string"}, "enterpriseId" {"location" "path", "required" true, "type" "string", "description" "The ID of the enterprise."}}, :description "Deletes a cluster."}, "androidenterprise.managedconfigurationsforuser.delete" #:compute.gcp.descriptor{:http-method :delete, :path "androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/managedConfigurationsForUser/{managedConfigurationForUserId}", :parameters {"enterpriseId" {"type" "string", "location" "path", "description" "The ID of the enterprise.", "required" true}, "managedConfigurationForUserId" {"required" true, "description" "The ID of the managed configuration (a product ID), e.g.\n\"app:com.google.android.gm\".", "location" "path", "type" "string"}, "userId" {"type" "string", "description" "The ID of the user.", "location" "path", "required" true}}, :description "Removes a per-user managed configuration for an app for the specified user."}, "androidenterprise.devices.forceReportUpload" #:compute.gcp.descriptor{:http-method :post, :path "androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/devices/{deviceId}/forceReportUpload", :parameters {"enterpriseId" {"required" true, "type" "string", "description" "The ID of the enterprise.", "location" "path"}, "userId" {"required" true, "type" "string", "description" "The ID of the user.", "location" "path"}, "deviceId" {"location" "path", "description" "The ID of the device.", "required" true, "type" "string"}}, :description "Uploads a report containing any changes in app states on the device since\nthe last report was generated. You can call this method up to 3 times every\n24 hours for a given device.\nIf you exceed the quota, then the Google Play EMM API returns <code>HTTP\n429 Too Many Requests</code>."}, "androidenterprise.permissions.get" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/permissions/{permissionId}", :response {"$ref" "Permission"}, :parameters {"permissionId" {"location" "path", "description" "The ID of the permission.", "type" "string", "required" true}, "language" {"type" "string", "description" "The BCP47 tag for the user's preferred language (e.g. \"en-US\", \"de\")", "location" "query"}}, :description "Retrieves details of an Android app permission for display to an enterprise\nadmin."}, "androidenterprise.products.generateApprovalUrl" #:compute.gcp.descriptor{:http-method :post, :path "androidenterprise/v1/enterprises/{enterpriseId}/products/{productId}/generateApprovalUrl", :response {"$ref" "ProductsGenerateApprovalUrlResponse"}, :parameters {"enterpriseId" {"type" "string", "required" true, "description" "The ID of the enterprise.", "location" "path"}, "productId" {"description" "The ID of the product.", "type" "string", "required" true, "location" "path"}, "languageCode" {"type" "string", "description" "The BCP 47 language code used for permission names and descriptions in\nthe returned iframe, for instance \"en-US\".", "location" "query"}}, :description "Generates a URL that can be rendered in an iframe to display the\npermissions (if any) of a product. An enterprise admin must view these\npermissions and accept them on behalf of their organization in order to\napprove that product. <br><br>\nAdmins should accept the displayed permissions by\ninteracting with a separate UI element in the EMM console, which in turn\nshould trigger the use of this URL as the\n<code>approvalUrlInfo.approvalUrl</code> property in a\n<code>Products.approve</code> call to approve the product.\nThis URL can only be used to display permissions for up to 1 day."}, "androidenterprise.entitlements.get" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/entitlements/{entitlementId}", :response {"$ref" "Entitlement"}, :parameters {"entitlementId" {"location" "path", "description" "The ID of the entitlement (a product ID), e.g. \"app:com.google.android.gm\".", "type" "string", "required" true}, "userId" {"description" "The ID of the user.", "location" "path", "required" true, "type" "string"}, "enterpriseId" {"type" "string", "description" "The ID of the enterprise.", "location" "path", "required" true}}, :description "Retrieves details of an entitlement."}, "androidenterprise.entitlements.list" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/entitlements", :response {"$ref" "EntitlementsListResponse"}, :parameters {"enterpriseId" {"required" true, "type" "string", "description" "The ID of the enterprise.", "location" "path"}, "userId" {"required" true, "location" "path", "description" "The ID of the user.", "type" "string"}}, :description "Lists all entitlements for the specified user. Only the ID is set."}, "androidenterprise.managedconfigurationsforuser.update" #:compute.gcp.descriptor{:http-method :put, :path "androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/managedConfigurationsForUser/{managedConfigurationForUserId}", :request {"$ref" "ManagedConfiguration"}, :response {"$ref" "ManagedConfiguration"}, :parameters {"enterpriseId" {"location" "path", "required" true, "description" "The ID of the enterprise.", "type" "string"}, "userId" {"required" true, "type" "string", "description" "The ID of the user.", "location" "path"}, "managedConfigurationForUserId" {"description" "The ID of the managed configuration (a product ID), e.g.\n\"app:com.google.android.gm\".", "required" true, "type" "string", "location" "path"}}, :description "Adds or updates the managed configuration settings for an app for the\nspecified user.\nIf you support the <a\nhref=\"https://developers.google.com/android/work/play/emm-api/managed-configurations-iframe\">Managed\nconfigurations iframe</a>,\nyou can apply managed configurations to a user by specifying an\n<code>mcmId</code>\nand its associated configuration variables (if any) in the request.\nAlternatively,\nall EMMs can apply managed configurations by passing a list of managed\nproperties."}, "androidenterprise.products.getPermissions" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/products/{productId}/permissions", :response {"$ref" "ProductPermissions"}, :parameters {"productId" {"required" true, "type" "string", "description" "The ID of the product.", "location" "path"}, "enterpriseId" {"type" "string", "location" "path", "required" true, "description" "The ID of the enterprise."}}, :description "Retrieves the Android app permissions required by this app."}, "androidenterprise.enterprises.get" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}", :response {"$ref" "Enterprise"}, :parameters {"enterpriseId" {"location" "path", "type" "string", "required" true, "description" "The ID of the enterprise."}}, :description "Retrieves the name and domain of an enterprise."}, "androidenterprise.enterprises.setStoreLayout" #:compute.gcp.descriptor{:http-method :put, :path "androidenterprise/v1/enterprises/{enterpriseId}/storeLayout", :request {"$ref" "StoreLayout"}, :response {"$ref" "StoreLayout"}, :parameters {"enterpriseId" {"required" true, "location" "path", "description" "The ID of the enterprise.", "type" "string"}}, :description "Sets the store layout for the enterprise. By default, storeLayoutType\nis set to \"basic\" and the basic store layout is enabled. The basic\nlayout only contains apps approved by the admin, and that have\nbeen added to the available product set for a user (using the\n<a href=\"/android/work/play/emm-api/v1/users/setAvailableProductSet\">\nsetAvailableProductSet</a> call). Apps on the page are sorted in order of\ntheir product ID value. If you create a custom store layout (by setting\nstoreLayoutType = \"custom\" and setting a homepage), the basic store\nlayout is disabled."}, "androidenterprise.webapps.get" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/webApps/{webAppId}", :response {"$ref" "WebApp"}, :parameters {"webAppId" {"required" true, "location" "path", "type" "string", "description" "The ID of the web app."}, "enterpriseId" {"required" true, "location" "path", "description" "The ID of the enterprise.", "type" "string"}}, :description "Gets an existing web app."}, "androidenterprise.storelayoutclusters.get" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/storeLayout/pages/{pageId}/clusters/{clusterId}", :response {"$ref" "StoreCluster"}, :parameters {"clusterId" {"type" "string", "required" true, "location" "path", "description" "The ID of the cluster."}, "pageId" {"type" "string", "description" "The ID of the page.", "required" true, "location" "path"}, "enterpriseId" {"location" "path", "type" "string", "description" "The ID of the enterprise.", "required" true}}, :description "Retrieves details of a cluster."}, "androidenterprise.grouplicenses.get" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/groupLicenses/{groupLicenseId}", :response {"$ref" "GroupLicense"}, :parameters {"groupLicenseId" {"location" "path", "required" true, "description" "The ID of the product the group license is for, e.g.\n\"app:com.google.android.gm\".", "type" "string"}, "enterpriseId" {"location" "path", "description" "The ID of the enterprise.", "required" true, "type" "string"}}, :description "Retrieves details of an enterprise's group license for a product."}, "androidenterprise.enterprises.pullNotificationSet" #:compute.gcp.descriptor{:http-method :post, :path "androidenterprise/v1/enterprises/pullNotificationSet", :response {"$ref" "NotificationSet"}, :parameters {"requestMode" {"location" "query", "type" "string", "enum" ["waitForNotifications" "returnImmediately"], "description" "The request mode for pulling notifications.\n<br>\nSpecifying <code>waitForNotifications</code> will cause the request to\nblock and wait until one or more notifications are present, or return an\nempty notification list if no notifications are present after some time.\n<br>\nSpeciying <code>returnImmediately</code> will cause the request to\nimmediately return the pending notifications, or an empty list if no\nnotifications are present.\n<br>\nIf omitted, defaults to <code>waitForNotifications</code>."}}, :description "Pulls and returns a notification set for the enterprises associated with\nthe service account authenticated for the request. The notification set may\nbe empty if no notification are pending.\n<br>\nA notification set returned needs to be acknowledged within 20 seconds\nby calling Enterprises.AcknowledgeNotificationSet, unless the\nnotification set is empty.\n<br>\nNotifications that are not acknowledged within the 20 seconds will\neventually be included again in the response to another PullNotificationSet\nrequest, and those that are never acknowledged will ultimately be deleted\naccording to the Google Cloud Platform Pub/Sub system policy.\n<br>\nMultiple requests might be performed concurrently to retrieve\nnotifications, in which case the pending notifications (if any) will be\nsplit among each caller, if any are pending.\n<br>\nIf no notifications are present, an empty notification list is returned.\nSubsequent requests may return more notifications once they become\navailable."}, "androidenterprise.users.generateAuthenticationToken" #:compute.gcp.descriptor{:http-method :post, :path "androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/authenticationToken", :response {"$ref" "AuthenticationToken"}, :parameters {"enterpriseId" {"required" true, "location" "path", "description" "The ID of the enterprise.", "type" "string"}, "userId" {"required" true, "location" "path", "description" "The ID of the user.", "type" "string"}}, :description "Generates an authentication token which the device policy client can use to\nprovision the given EMM-managed user account on a device.\nThe generated token is single-use and expires after a few minutes.\n\nYou can provision a maximum of 10 devices per user.\n\nThis call only works with EMM-managed accounts."}, "androidenterprise.installs.list" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/devices/{deviceId}/installs", :response {"$ref" "InstallsListResponse"}, :parameters {"enterpriseId" {"type" "string", "location" "path", "description" "The ID of the enterprise.", "required" true}, "userId" {"description" "The ID of the user.", "required" true, "type" "string", "location" "path"}, "deviceId" {"description" "The Android ID of the device.", "type" "string", "location" "path", "required" true}}, :description "Retrieves the details of all apps installed on the specified device."}, "androidenterprise.grouplicenses.list" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/groupLicenses", :response {"$ref" "GroupLicensesListResponse"}, :parameters {"enterpriseId" {"description" "The ID of the enterprise.", "location" "path", "type" "string", "required" true}}, :description "Retrieves IDs of all products for which the enterprise has a group license."}, "androidenterprise.products.unapprove" #:compute.gcp.descriptor{:http-method :post, :path "androidenterprise/v1/enterprises/{enterpriseId}/products/{productId}/unapprove", :parameters {"enterpriseId" {"required" true, "location" "path", "type" "string", "description" "The ID of the enterprise."}, "productId" {"type" "string", "location" "path", "required" true, "description" "The ID of the product."}}, :description "Unapproves the specified product (and the relevant app permissions, if any)"}, "androidenterprise.webapps.list" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/webApps", :response {"$ref" "WebAppsListResponse"}, :parameters {"enterpriseId" {"description" "The ID of the enterprise.", "location" "path", "required" true, "type" "string"}}, :description "Retrieves the details of all web apps for a given enterprise."}, "androidenterprise.storelayoutpages.update" #:compute.gcp.descriptor{:http-method :put, :path "androidenterprise/v1/enterprises/{enterpriseId}/storeLayout/pages/{pageId}", :request {"$ref" "StorePage"}, :response {"$ref" "StorePage"}, :parameters {"enterpriseId" {"required" true, "description" "The ID of the enterprise.", "type" "string", "location" "path"}, "pageId" {"required" true, "type" "string", "location" "path", "description" "The ID of the page."}}, :description "Updates the content of a store page."}, "androidenterprise.managedconfigurationsfordevice.get" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/devices/{deviceId}/managedConfigurationsForDevice/{managedConfigurationForDeviceId}", :response {"$ref" "ManagedConfiguration"}, :parameters {"managedConfigurationForDeviceId" {"location" "path", "type" "string", "description" "The ID of the managed configuration (a product ID), e.g.\n\"app:com.google.android.gm\".", "required" true}, "deviceId" {"location" "path", "required" true, "type" "string", "description" "The Android ID of the device."}, "userId" {"description" "The ID of the user.", "location" "path", "type" "string", "required" true}, "enterpriseId" {"description" "The ID of the enterprise.", "required" true, "type" "string", "location" "path"}}, :description "Retrieves details of a per-device managed configuration."}, "androidenterprise.installs.update" #:compute.gcp.descriptor{:http-method :put, :path "androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/devices/{deviceId}/installs/{installId}", :request {"$ref" "Install"}, :response {"$ref" "Install"}, :parameters {"enterpriseId" {"required" true, "location" "path", "type" "string", "description" "The ID of the enterprise."}, "userId" {"required" true, "location" "path", "type" "string", "description" "The ID of the user."}, "deviceId" {"location" "path", "type" "string", "description" "The Android ID of the device.", "required" true}, "installId" {"location" "path", "description" "The ID of the product represented by the install, e.g.\n\"app:com.google.android.gm\".", "required" true, "type" "string"}}, :description "Requests to install the latest version of an app to a device. If the app\nis already installed, then it is updated to the latest version if\nnecessary."}, "androidenterprise.storelayoutclusters.list" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/storeLayout/pages/{pageId}/clusters", :response {"$ref" "StoreLayoutClustersListResponse"}, :parameters {"pageId" {"location" "path", "type" "string", "required" true, "description" "The ID of the page."}, "enterpriseId" {"type" "string", "required" true, "description" "The ID of the enterprise.", "location" "path"}}, :description "Retrieves the details of all clusters on the specified page."}, "androidenterprise.storelayoutclusters.update" #:compute.gcp.descriptor{:http-method :put, :path "androidenterprise/v1/enterprises/{enterpriseId}/storeLayout/pages/{pageId}/clusters/{clusterId}", :request {"$ref" "StoreCluster"}, :response {"$ref" "StoreCluster"}, :parameters {"clusterId" {"location" "path", "type" "string", "required" true, "description" "The ID of the cluster."}, "pageId" {"location" "path", "description" "The ID of the page.", "required" true, "type" "string"}, "enterpriseId" {"location" "path", "required" true, "description" "The ID of the enterprise.", "type" "string"}}, :description "Updates a cluster."}, "androidenterprise.grouplicenseusers.list" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/groupLicenses/{groupLicenseId}/users", :response {"$ref" "GroupLicenseUsersListResponse"}, :parameters {"groupLicenseId" {"required" true, "location" "path", "description" "The ID of the product the group license is for, e.g.\n\"app:com.google.android.gm\".", "type" "string"}, "enterpriseId" {"description" "The ID of the enterprise.", "required" true, "location" "path", "type" "string"}}, :description "Retrieves the IDs of the users who have been granted entitlements\nunder the license."}, "androidenterprise.storelayoutpages.insert" #:compute.gcp.descriptor{:http-method :post, :path "androidenterprise/v1/enterprises/{enterpriseId}/storeLayout/pages", :request {"$ref" "StorePage"}, :response {"$ref" "StorePage"}, :parameters {"enterpriseId" {"description" "The ID of the enterprise.", "type" "string", "required" true, "location" "path"}}, :description "Inserts a new store page."}, "androidenterprise.enterprises.setAccount" #:compute.gcp.descriptor{:http-method :put, :path "androidenterprise/v1/enterprises/{enterpriseId}/account", :request {"$ref" "EnterpriseAccount"}, :response {"$ref" "EnterpriseAccount"}, :parameters {"enterpriseId" {"location" "path", "required" true, "type" "string", "description" "The ID of the enterprise."}}, :description "Sets the account that will be used to authenticate to the API as the\nenterprise."}, "androidenterprise.enterprises.acknowledgeNotificationSet" #:compute.gcp.descriptor{:http-method :post, :path "androidenterprise/v1/enterprises/acknowledgeNotificationSet", :parameters {"notificationSetId" {"description" "The notification set ID as returned by Enterprises.PullNotificationSet.\nThis must be provided.", "type" "string", "location" "query"}}, :description "Acknowledges notifications that were received from\nEnterprises.PullNotificationSet to prevent subsequent calls from returning\nthe same notifications."}, "androidenterprise.storelayoutpages.list" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/storeLayout/pages", :response {"$ref" "StoreLayoutPagesListResponse"}, :parameters {"enterpriseId" {"type" "string", "required" true, "location" "path", "description" "The ID of the enterprise."}}, :description "Retrieves the details of all pages in the store."}, "androidenterprise.storelayoutclusters.insert" #:compute.gcp.descriptor{:http-method :post, :path "androidenterprise/v1/enterprises/{enterpriseId}/storeLayout/pages/{pageId}/clusters", :request {"$ref" "StoreCluster"}, :response {"$ref" "StoreCluster"}, :parameters {"enterpriseId" {"required" true, "location" "path", "description" "The ID of the enterprise.", "type" "string"}, "pageId" {"type" "string", "required" true, "location" "path", "description" "The ID of the page."}}, :description "Inserts a new cluster in a page."}, "androidenterprise.webapps.insert" #:compute.gcp.descriptor{:http-method :post, :path "androidenterprise/v1/enterprises/{enterpriseId}/webApps", :request {"$ref" "WebApp"}, :response {"$ref" "WebApp"}, :parameters {"enterpriseId" {"location" "path", "description" "The ID of the enterprise.", "type" "string", "required" true}}, :description "Creates a new web app for the enterprise."}, "androidenterprise.serviceaccountkeys.list" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/serviceAccountKeys", :response {"$ref" "ServiceAccountKeysListResponse"}, :parameters {"enterpriseId" {"description" "The ID of the enterprise.", "type" "string", "location" "path", "required" true}}, :description "Lists all active credentials for the service account associated with this\nenterprise. Only the ID and key type are returned. The calling service\naccount must have been retrieved by calling Enterprises.GetServiceAccount\nand must have been set as the enterprise service account by calling\nEnterprises.SetAccount."}, "androidenterprise.managedconfigurationssettings.list" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/products/{productId}/managedConfigurationsSettings", :response {"$ref" "ManagedConfigurationsSettingsListResponse"}, :parameters {"productId" {"type" "string", "required" true, "description" "The ID of the product for which the managed configurations settings applies\nto.", "location" "path"}, "enterpriseId" {"description" "The ID of the enterprise.", "required" true, "location" "path", "type" "string"}}, :description "Lists all the managed configurations settings for the specified app."}, "androidenterprise.enterprises.enroll" #:compute.gcp.descriptor{:http-method :post, :path "androidenterprise/v1/enterprises/enroll", :request {"$ref" "Enterprise"}, :response {"$ref" "Enterprise"}, :parameters {"token" {"description" "Required. The token provided by the enterprise to register the EMM.", "required" true, "type" "string", "location" "query"}}, :description "Enrolls an enterprise with the calling EMM."}, "androidenterprise.enterprises.completeSignup" #:compute.gcp.descriptor{:http-method :post, :path "androidenterprise/v1/enterprises/completeSignup", :response {"$ref" "Enterprise"}, :parameters {"completionToken" {"description" "The Completion token initially returned by GenerateSignupUrl.", "type" "string", "location" "query"}, "enterpriseToken" {"type" "string", "description" "The Enterprise token appended to the Callback URL.", "location" "query"}}, :description "Completes the signup flow, by specifying the Completion token and\nEnterprise token.\nThis request must not be called multiple times for a given Enterprise\nToken."}, "androidenterprise.managedconfigurationsfordevice.list" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/devices/{deviceId}/managedConfigurationsForDevice", :response {"$ref" "ManagedConfigurationsForDeviceListResponse"}, :parameters {"deviceId" {"location" "path", "required" true, "description" "The Android ID of the device.", "type" "string"}, "enterpriseId" {"location" "path", "type" "string", "required" true, "description" "The ID of the enterprise."}, "userId" {"location" "path", "required" true, "description" "The ID of the user.", "type" "string"}}, :description "Lists all the per-device managed configurations for the specified device.\nOnly the ID is set."}, "androidenterprise.enterprises.list" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises", :response {"$ref" "EnterprisesListResponse"}, :parameters {"domain" {"required" true, "description" "Required. The exact primary domain name of the enterprise to look up.", "type" "string", "location" "query"}}, :description "Looks up an enterprise by domain name.\nThis is only supported for enterprises created via the Google-initiated\ncreation flow.  Lookup of the id is not needed for enterprises created via\nthe EMM-initiated flow since the EMM learns the enterprise ID in the\ncallback specified in the Enterprises.generateSignupUrl call."}, "androidenterprise.users.update" #:compute.gcp.descriptor{:http-method :put, :path "androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}", :request {"$ref" "User"}, :response {"$ref" "User"}, :parameters {"enterpriseId" {"type" "string", "description" "The ID of the enterprise.", "location" "path", "required" true}, "userId" {"description" "The ID of the user.", "location" "path", "type" "string", "required" true}}, :description "Updates the details of an EMM-managed user.\n\nCan be used with EMM-managed users only (not Google managed users).\nPass the new details in the\n<a href=\"/android/work/play/emm-api/v1/users.html\">Users</a>\nresource in the request body. Only the <code>displayName</code> field\ncan be changed. Other fields must either be unset or have the\ncurrently active value."}, "androidenterprise.entitlements.delete" #:compute.gcp.descriptor{:http-method :delete, :path "androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/entitlements/{entitlementId}", :parameters {"entitlementId" {"required" true, "description" "The ID of the entitlement (a product ID), e.g. \"app:com.google.android.gm\".", "type" "string", "location" "path"}, "enterpriseId" {"type" "string", "description" "The ID of the enterprise.", "required" true, "location" "path"}, "userId" {"description" "The ID of the user.", "required" true, "type" "string", "location" "path"}}, :description "Removes an entitlement to an app for a user."}, "androidenterprise.devices.getState" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/devices/{deviceId}/state", :response {"$ref" "DeviceState"}, :parameters {"userId" {"required" true, "type" "string", "location" "path", "description" "The ID of the user."}, "enterpriseId" {"required" true, "type" "string", "location" "path", "description" "The ID of the enterprise."}, "deviceId" {"type" "string", "location" "path", "required" true, "description" "The ID of the device."}}, :description "Retrieves whether a device's access to Google services is enabled or\ndisabled.\nThe device state takes effect only if enforcing EMM policies on Android\ndevices is enabled in the Google Admin Console.\nOtherwise, the device state is ignored and all devices are allowed access\nto Google services.\nThis is only supported for Google-managed users."}, "androidenterprise.users.getAvailableProductSet" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/availableProductSet", :response {"$ref" "ProductSet"}, :parameters {"enterpriseId" {"required" true, "description" "The ID of the enterprise.", "type" "string", "location" "path"}, "userId" {"description" "The ID of the user.", "type" "string", "location" "path", "required" true}}, :description "Retrieves the set of products a user is entitled to access."}, "androidenterprise.storelayoutpages.delete" #:compute.gcp.descriptor{:http-method :delete, :path "androidenterprise/v1/enterprises/{enterpriseId}/storeLayout/pages/{pageId}", :parameters {"enterpriseId" {"location" "path", "required" true, "description" "The ID of the enterprise.", "type" "string"}, "pageId" {"description" "The ID of the page.", "type" "string", "required" true, "location" "path"}}, :description "Deletes a store page."}, "androidenterprise.managedconfigurationsforuser.get" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/managedConfigurationsForUser/{managedConfigurationForUserId}", :response {"$ref" "ManagedConfiguration"}, :parameters {"enterpriseId" {"required" true, "type" "string", "location" "path", "description" "The ID of the enterprise."}, "managedConfigurationForUserId" {"location" "path", "description" "The ID of the managed configuration (a product ID), e.g.\n\"app:com.google.android.gm\".", "type" "string", "required" true}, "userId" {"type" "string", "required" true, "description" "The ID of the user.", "location" "path"}}, :description "Retrieves details of a per-user managed configuration for an app for the\nspecified user."}, "androidenterprise.devices.list" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/devices", :response {"$ref" "DevicesListResponse"}, :parameters {"userId" {"type" "string", "required" true, "description" "The ID of the user.", "location" "path"}, "enterpriseId" {"type" "string", "description" "The ID of the enterprise.", "required" true, "location" "path"}}, :description "Retrieves the IDs of all of a user's devices."}, "androidenterprise.users.insert" #:compute.gcp.descriptor{:http-method :post, :path "androidenterprise/v1/enterprises/{enterpriseId}/users", :request {"$ref" "User"}, :response {"$ref" "User"}, :parameters {"enterpriseId" {"description" "The ID of the enterprise.", "required" true, "type" "string", "location" "path"}}, :description "Creates a new EMM-managed user.\n\nThe <a href=\"/android/work/play/emm-api/v1/users.html\">Users</a> resource\npassed in the body of the request should include an\n<code>accountIdentifier</code> and an <code>accountType</code>.\n<p>If a corresponding user already exists with the same account identifier,\nthe user will be updated with the resource. In this case only the\n<code>displayName</code> field can be changed."}, "androidenterprise.managedconfigurationsforuser.list" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/managedConfigurationsForUser", :response {"$ref" "ManagedConfigurationsForUserListResponse"}, :parameters {"enterpriseId" {"location" "path", "required" true, "description" "The ID of the enterprise.", "type" "string"}, "userId" {"description" "The ID of the user.", "location" "path", "required" true, "type" "string"}}, :description "Lists all the per-user managed configurations for the specified user. Only\nthe ID is set."}, "androidenterprise.users.get" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}", :response {"$ref" "User"}, :parameters {"userId" {"description" "The ID of the user.", "required" true, "location" "path", "type" "string"}, "enterpriseId" {"location" "path", "description" "The ID of the enterprise.", "type" "string", "required" true}}, :description "Retrieves a user's details."}, "androidenterprise.entitlements.update" #:compute.gcp.descriptor{:http-method :put, :path "androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/entitlements/{entitlementId}", :request {"$ref" "Entitlement"}, :response {"$ref" "Entitlement"}, :parameters {"enterpriseId" {"description" "The ID of the enterprise.", "required" true, "type" "string", "location" "path"}, "userId" {"required" true, "location" "path", "description" "The ID of the user.", "type" "string"}, "install" {"type" "boolean", "location" "query", "description" "Set to true to also install the product on all the user's devices where\npossible. Failure to install on one or more devices will not prevent\nthis operation from returning successfully, as long as the entitlement\nwas successfully assigned to the user."}, "entitlementId" {"required" true, "type" "string", "location" "path", "description" "The ID of the entitlement (a product ID), e.g. \"app:com.google.android.gm\"."}}, :description "Adds or updates an entitlement to an app for a user."}, "androidenterprise.installs.delete" #:compute.gcp.descriptor{:http-method :delete, :path "androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/devices/{deviceId}/installs/{installId}", :parameters {"userId" {"description" "The ID of the user.", "required" true, "type" "string", "location" "path"}, "deviceId" {"type" "string", "location" "path", "description" "The Android ID of the device.", "required" true}, "installId" {"required" true, "location" "path", "type" "string", "description" "The ID of the product represented by the install, e.g.\n\"app:com.google.android.gm\"."}, "enterpriseId" {"type" "string", "required" true, "description" "The ID of the enterprise.", "location" "path"}}, :description "Requests to remove an app from a device. A call to <code>get</code> or\n<code>list</code> will still show the app as installed on the device until\nit is actually removed."}, "androidenterprise.enterprises.unenroll" #:compute.gcp.descriptor{:http-method :post, :path "androidenterprise/v1/enterprises/{enterpriseId}/unenroll", :parameters {"enterpriseId" {"description" "The ID of the enterprise.", "type" "string", "location" "path", "required" true}}, :description "Unenrolls an enterprise from the calling EMM."}, "androidenterprise.users.revokeDeviceAccess" #:compute.gcp.descriptor{:http-method :delete, :path "androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/deviceAccess", :parameters {"enterpriseId" {"required" true, "description" "The ID of the enterprise.", "type" "string", "location" "path"}, "userId" {"location" "path", "description" "The ID of the user.", "type" "string", "required" true}}, :description "Revokes access to all devices currently provisioned to the user. The user\nwill no longer be able to use the managed Play store on any of their\nmanaged devices.\n\nThis call only works with EMM-managed accounts."}, "androidenterprise.users.setAvailableProductSet" #:compute.gcp.descriptor{:http-method :put, :path "androidenterprise/v1/enterprises/{enterpriseId}/users/{userId}/availableProductSet", :request {"$ref" "ProductSet"}, :response {"$ref" "ProductSet"}, :parameters {"enterpriseId" {"location" "path", "type" "string", "description" "The ID of the enterprise.", "required" true}, "userId" {"type" "string", "required" true, "location" "path", "description" "The ID of the user."}}, :description "Modifies the set of products that a user is entitled to access (referred to\nas <em>whitelisted</em> products). Only products that are\n<a href=\"/android/work/play/emm-api/v1/products/approve\">approved</a>\nor products that were previously approved (products with revoked approval)\ncan be whitelisted."}, "androidenterprise.storelayoutpages.get" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/storeLayout/pages/{pageId}", :response {"$ref" "StorePage"}, :parameters {"pageId" {"required" true, "type" "string", "description" "The ID of the page.", "location" "path"}, "enterpriseId" {"description" "The ID of the enterprise.", "required" true, "type" "string", "location" "path"}}, :description "Retrieves details of a store page."}, "androidenterprise.enterprises.getStoreLayout" #:compute.gcp.descriptor{:http-method :get, :path "androidenterprise/v1/enterprises/{enterpriseId}/storeLayout", :response {"$ref" "StoreLayout"}, :parameters {"enterpriseId" {"location" "path", "type" "string", "description" "The ID of the enterprise.", "required" true}}, :description "Returns the store layout for the enterprise. If the store layout\nhas not been set, returns \"basic\" as the store layout type and no\nhomepage."}}, :schemas {"DeviceReportUpdateEvent" {"type" "object", "description" "An event generated when an updated device report is available.", "id" "DeviceReportUpdateEvent", "properties" {"userId" {"type" "string", "description" "The ID of the user.\nThis field will always be present."}, "report" {"description" "The device report updated with the latest app states.\nThis field will always be present.", "$ref" "DeviceReport"}, "deviceId" {"type" "string", "description" "The Android ID of the device.\nThis field will always be present."}}}, "AdministratorWebTokenSpecManagedConfigurations" {"properties" {"enabled" {"type" "boolean", "description" "Whether the Managed Configuration page is displayed. Default is true."}}, "type" "object", "id" "AdministratorWebTokenSpecManagedConfigurations"}, "AppRestrictionsSchemaRestrictionRestrictionValue" {"type" "object", "id" "AppRestrictionsSchemaRestrictionRestrictionValue", "description" "A typed value for the restriction.", "properties" {"type" {"description" "The type of the value being provided.", "enumDescriptions" ["A restriction of boolean type." "A restriction of string type." "A restriction of integer type." "A choice of one item from a set." "A choice of multiple items from a set." "A hidden restriction of string type (the default value can be used\nto pass along information that cannot be modified, such as a version\ncode)." "[M+ devices only] A bundle of restrictions" "[M+ devices only] An array of restriction bundles"], "type" "string", "enum" ["bool" "string" "integer" "choice" "multiselect" "hidden" "bundle" "bundleArray"]}, "valueInteger" {"format" "int32", "description" "The integer value - this will only be present if type is integer.", "type" "integer"}, "valueBool" {"type" "boolean", "description" "The boolean value - this will only be present if type is bool."}, "valueMultiselect" {"items" {"type" "string"}, "type" "array", "description" "The list of string values - this will only be present if type is\nmultiselect."}, "valueString" {"description" "The string value - this will be present for types string, choice and\nhidden.", "type" "string"}}}, "AdministratorWebTokenSpec" {"id" "AdministratorWebTokenSpec", "type" "object", "properties" {"webApps" {"description" "Options for displaying the Web Apps page.", "$ref" "AdministratorWebTokenSpecWebApps"}, "storeBuilder" {"description" "Options for displaying the Organize apps page.", "$ref" "AdministratorWebTokenSpecStoreBuilder"}, "parent" {"type" "string", "description" "The URI of the parent frame hosting the iframe. To prevent XSS, the iframe\nmay not be hosted at other URIs. This URI must be https.\nUse whitespaces to separate multiple parent URIs."}, "managedConfigurations" {"description" "Options for displaying the Managed Configuration page.", "$ref" "AdministratorWebTokenSpecManagedConfigurations"}, "permission" {"items" {"enum" ["unknown" "approveApps" "manageMcm"], "type" "string"}, "type" "array", "enumDescriptions" ["Unknown permission." "Permission to approve and unapprove apps." "Permission to manage app restrictions."], "description" "Deprecated. Use <code>PlaySearch.approveApps</code>."}, "privateApps" {"$ref" "AdministratorWebTokenSpecPrivateApps", "description" "Options for displaying the Private Apps page."}, "playSearch" {"$ref" "AdministratorWebTokenSpecPlaySearch", "description" "Options for displaying the managed Play Search apps page."}}, "description" "Specification for a token used to generate iframes. The token specifies\nwhat data the admin is allowed to modify and the URI the iframe is\nallowed to communiate with."}, "StoreLayoutClustersListResponse" {"type" "object", "id" "StoreLayoutClustersListResponse", "properties" {"cluster" {"items" {"$ref" "StoreCluster"}, "type" "array", "description" "A store cluster of an enterprise."}}}, "AppState" {"id" "AppState", "type" "object", "description" "List of states set by the app.", "properties" {"packageName" {"type" "string", "description" "The package name of the app.\nThis field will always be present."}, "keyedAppState" {"description" "List of keyed app states.\nThis field will always be present.", "type" "array", "items" {"$ref" "KeyedAppState"}}}}, "ServiceAccount" {"description" "A service account identity, including the name and credentials that can be\nused to authenticate as the service account.", "properties" {"name" {"description" "The account name of the service account, in the form of an email address.\nAssigned by the server.", "type" "string"}, "key" {"$ref" "ServiceAccountKey", "description" "Credentials that can be used to authenticate as this ServiceAccount."}}, "type" "object", "id" "ServiceAccount"}, "AdministratorWebTokenSpecStoreBuilder" {"properties" {"enabled" {"description" "Whether the Organize apps page is displayed. Default is true.", "type" "boolean"}}, "type" "object", "id" "AdministratorWebTokenSpecStoreBuilder"}, "DeviceReport" {"properties" {"lastUpdatedTimestampMillis" {"type" "string", "description" "The timestamp of the last report update in milliseconds since epoch.\nThis field will always be present.", "format" "int64"}, "appState" {"items" {"$ref" "AppState"}, "description" "List of app states set by managed apps on the device. App states are\ndefined by the app's developers.\nThis field will always be present.", "type" "array"}}, "description" "Device report updated with the latest app states for managed apps on the\ndevice.", "type" "object", "id" "DeviceReport"}, "ProductApprovalEvent" {"type" "object", "description" "An event generated when a product's approval status is changed.", "id" "ProductApprovalEvent", "properties" {"approved" {"enumDescriptions" ["Conveys no information." "The product was approved." "The product was unapproved."], "type" "string", "description" "Whether the product was approved or unapproved.\nThis field will always be present.", "enum" ["unknown" "approved" "unapproved"]}, "productId" {"type" "string", "description" "The id of the product (e.g. \"app:com.google.android.gm\") for which the\napproval status has changed. This field will always be present."}}}, "ManagedPropertyBundle" {"id" "ManagedPropertyBundle", "type" "object", "properties" {"managedProperty" {"items" {"$ref" "ManagedProperty"}, "type" "array", "description" "The list of managed properties."}}, "description" "A bundle of managed properties."}, "InstallsListResponse" {"id" "InstallsListResponse", "properties" {"install" {"items" {"$ref" "Install"}, "description" "An installation of an app for a user on a specific device.\nThe existence of an install implies that the user must have an\nentitlement to the app.", "type" "array"}}, "type" "object"}, "GroupLicensesListResponse" {"properties" {"groupLicense" {"items" {"$ref" "GroupLicense"}, "description" "A group license for a product approved for use in the enterprise.", "type" "array"}}, "type" "object", "id" "GroupLicensesListResponse"}, "Permission" {"type" "object", "description" "A Permissions resource represents some extra capability, to be granted to an\nAndroid app, which requires explicit consent. An enterprise admin must\nconsent to these permissions on behalf of their users before an\nentitlement for the app can be created.\n\nThe permissions collection is read-only. The information provided for\neach permission (localized name and description) is intended to be\nused in the MDM user interface when obtaining consent from the\nenterprise.", "id" "Permission", "properties" {"description" {"type" "string", "description" "A longer description of the Permissions resource, giving more details of\nwhat it affects."}, "name" {"type" "string", "description" "The name of the permission."}, "permissionId" {"description" "An opaque string uniquely identifying the permission.", "type" "string"}}}, "ProductsListResponse" {"properties" {"tokenPagination" {"description" "Pagination information for token pagination.", "$ref" "TokenPagination"}, "pageInfo" {"$ref" "PageInfo", "description" "General pagination information."}, "product" {"type" "array", "description" "Information about a product (e.g. an app) in the Google Play store, for\ndisplay to an enterprise admin.", "items" {"$ref" "Product"}}}, "id" "ProductsListResponse", "type" "object"}, "ProductAvailabilityChangeEvent" {"description" "An event generated whenever a product's availability changes.", "properties" {"availabilityStatus" {"enumDescriptions" ["Conveys no information." "The previously unavailable product is again available on Google Play." "The product was removed from Google Play." "The product was unpublished by the developer."], "type" "string", "description" "The new state of the product.\nThis field will always be present.", "enum" ["unknown" "available" "removed" "unpublished"]}, "productId" {"description" "The id of the product (e.g. \"app:com.google.android.gm\") for which the\nproduct availability changed. This field will always be present.", "type" "string"}}, "type" "object", "id" "ProductAvailabilityChangeEvent"}, "ProductPolicy" {"type" "object", "properties" {"productId" {"description" "The ID of the product. For example,\n<code>&quot;app:com.google.android.gm&quot;</code>.", "type" "string"}, "tracks" {"type" "array", "items" {"type" "string", "enum" ["appTrackUnspecified" "production" "beta" "alpha"]}, "description" "Deprecated. Use <code>trackIds</code> instead.", "enumDescriptions" ["" "" "" ""]}, "autoInstallPolicy" {"$ref" "AutoInstallPolicy", "description" "The auto-install policy for the product."}, "trackIds" {"description" "Grants the device visibility to the specified product release track(s),\nidentified by <code>trackIds</code>. The list of release tracks of a\nproduct can be obtained by calling Products.Get.", "type" "array", "items" {"type" "string"}}, "managedConfiguration" {"description" "The managed configuration for the product.", "$ref" "ManagedConfiguration"}}, "id" "ProductPolicy", "description" "The policy for a product."}, "Product" {"description" "A Products resource represents an app in the Google Play store that is\navailable to at least some users in the enterprise. (Some apps are restricted\nto a single enterprise, and no information about them is made available\noutside that enterprise.)\n\nThe information provided for each product (localized name, icon, link\nto the full Google Play details page) is intended to allow a basic\nrepresentation of the product within an EMM user interface.", "properties" {"permissions" {"items" {"$ref" "ProductPermission"}, "type" "array", "description" "A list of permissions required by the app."}, "detailsUrl" {"description" "A link to the (consumer) Google Play details page for the product.", "type" "string"}, "workDetailsUrl" {"type" "string", "description" "A link to the managed Google Play details page for the product,\nfor use by an Enterprise admin."}, "availableCountries" {"type" "array", "description" "The countries which this app is available in.", "items" {"type" "string"}}, "recentChanges" {"description" "A description of the recent changes made to the app.", "type" "string"}, "lastUpdatedTimestampMillis" {"description" "The approximate time (within 7 days) the app was last published, expressed\nin milliseconds since epoch.", "type" "string", "format" "int64"}, "availableTracks" {"enumDescriptions" ["" "" "" ""], "items" {"type" "string", "enum" ["appTrackUnspecified" "production" "beta" "alpha"]}, "type" "array", "description" "Deprecated, use <code>appTracks</code> instead."}, "productId" {"type" "string", "description" "A string of the form <code><em>app:&lt;package name&gt;</em></code>. For\nexample, <code>app:com.google.android.gm</code> represents the Gmail app."}, "appVersion" {"items" {"$ref" "AppVersion"}, "type" "array", "description" "App versions currently available for this product."}, "requiresContainerApp" {"type" "boolean", "description" "Deprecated."}, "productPricing" {"enum" ["unknown" "free" "freeWithInAppPurchase" "paid"], "type" "string", "enumDescriptions" ["Unknown pricing, used to denote an approved product that is not\ngenerally available." "The product is free." "The product is free, but offers in-app purchases." "The product is paid."], "description" "Whether this product is free, free with in-app purchases, or paid.\nIf the pricing is unknown, this means the product is not generally\navailable anymore (even though it might still be available to\npeople who own it)."}, "smallIconUrl" {"description" "A link to a smaller image that can be used as an icon for the product.\nThis image is suitable for use at up to 128px x 128px.", "type" "string"}, "minAndroidSdkVersion" {"format" "int32", "type" "integer", "description" "The minimum Android SDK necessary to run the app."}, "title" {"type" "string", "description" "The name of the product."}, "signingCertificate" {"description" "The certificate used to sign this product.", "$ref" "ProductSigningCertificate"}, "distributionChannel" {"enumDescriptions" ["" "" ""], "enum" ["publicGoogleHosted" "privateGoogleHosted" "privateSelfHosted"], "description" "How and to whom the package is made available.\nThe value <code>publicGoogleHosted</code> means that the package is\navailable through the Play store and not restricted to a specific\nenterprise. The value <code>privateGoogleHosted</code> means that the\npackage is a private app (restricted to an enterprise) but hosted by\nGoogle. The value <code>privateSelfHosted</code> means that the package is\na private app (restricted to an enterprise) and is privately hosted.", "type" "string"}, "category" {"type" "string", "description" "The app category (e.g. RACING, SOCIAL, etc.)"}, "features" {"description" "Noteworthy features (if any) of this product.", "type" "array", "enumDescriptions" ["" "The app is a VPN."], "items" {"type" "string", "enum" ["featureUnknown" "vpnApp"]}}, "authorName" {"description" "The name of the author of the product (for example, the app developer).", "type" "string"}, "screenshotUrls" {"type" "array", "description" "A list of screenshot links representing the app.", "items" {"type" "string"}}, "description" {"type" "string", "description" "The localized promotional description, if available."}, "appTracks" {"type" "array", "description" "The tracks visible to the enterprise.", "items" {"$ref" "TrackInfo"}}, "iconUrl" {"type" "string", "description" "A link to an image that can be used as an icon for the product.\nThis image is suitable for use at up to 512px x 512px."}, "contentRating" {"description" "The content rating for this app.", "enum" ["ratingUnknown" "all" "preTeen" "teen" "mature"], "type" "string", "enumDescriptions" ["" "" "" "" ""]}}, "id" "Product", "type" "object"}, "ProductPermission" {"type" "object", "id" "ProductPermission", "properties" {"state" {"enum" ["required" "accepted"], "type" "string", "enumDescriptions" ["The permission is required by the app but has not yet been accepted by\nthe enterprise." "The permission has been accepted by the enterprise."], "description" "Whether the permission has been accepted or not."}, "permissionId" {"description" "An opaque string uniquely identifying the permission.", "type" "string"}}, "description" "A product permissions resource represents the set of permissions\nrequired by a specific app and whether or not they have been accepted\nby an enterprise admin.\n\nThe API can be used to read the set of permissions, and also to update\nthe set to indicate that permissions have been accepted."}, "Administrator" {"type" "object", "description" "This represents an enterprise admin who can manage the enterprise\nin the managed Google Play store.", "id" "Administrator", "properties" {"email" {"type" "string", "description" "The admin's email address."}}}, "AppRestrictionsSchema" {"description" "Represents the list of app restrictions available to be pre-configured for\nthe product.", "properties" {"kind" {"description" "Deprecated.", "type" "string"}, "restrictions" {"type" "array", "items" {"$ref" "AppRestrictionsSchemaRestriction"}, "description" "The set of restrictions that make up this schema."}}, "id" "AppRestrictionsSchema", "type" "object"}, "NotificationSet" {"properties" {"notification" {"description" "The notifications received, or empty if no notifications are present.", "type" "array", "items" {"$ref" "Notification"}}, "notificationSetId" {"type" "string", "description" "The notification set ID, required to mark the notification as\nreceived with the Enterprises.AcknowledgeNotification API.\nThis will be omitted if no notifications are present."}}, "description" "A resource returned by the PullNotificationSet API, which contains\na collection of notifications for enterprises associated with the service\naccount authenticated for the request.", "id" "NotificationSet", "type" "object"}, "StoreLayoutPagesListResponse" {"type" "object", "properties" {"page" {"items" {"$ref" "StorePage"}, "type" "array", "description" "A store page of an enterprise."}}, "id" "StoreLayoutPagesListResponse"}, "ServiceAccountKey" {"properties" {"data" {"description" "The body of the private key credentials file, in string format. This\nis only populated when the ServiceAccountKey is created, and is not stored\nby Google.", "type" "string"}, "publicData" {"type" "string", "description" "Public key data for the credentials file. This is an X.509 cert. If you are\nusing the <code>googleCredentials</code> key type, this is identical to the\ncert that can be retrieved by using the X.509 cert url inside of the\ncredentials file."}, "type" {"enum" ["googleCredentials" "pkcs12"], "description" "The file format of the generated key data.", "enumDescriptions" ["Google Credentials File format." "PKCS12 format. The password for the PKCS12 file is 'notasecret'.\nFor more information, see https://tools.ietf.org/html/rfc7292.\nThe data for keys of this type are base64 encoded according to RFC 4648\nSection 4. See http://tools.ietf.org/html/rfc4648#section-4."], "type" "string", "annotations" {"required" ["androidenterprise.serviceaccountkeys.insert"]}}, "id" {"type" "string", "description" "An opaque, unique identifier for this ServiceAccountKey.\nAssigned by the server."}}, "id" "ServiceAccountKey", "description" "Credentials that can be used to authenticate as a service account.", "type" "object"}, "ProductsApproveRequest" {"properties" {"approvalUrlInfo" {"description" "The approval URL that was shown to the user. Only the permissions shown\nto the user with that URL will be accepted, which may not be\nthe product's entire set of permissions. For example, the URL may only\ndisplay new permissions from an update after the product was approved,\nor not include new permissions if the product was updated since the URL\nwas generated.", "$ref" "ApprovalUrlInfo"}, "approvedPermissions" {"enumDescriptions" ["Approve only the permissions the product requires at approval time.\nIf an update requires additional permissions, the app will not be updated\non devices associated with enterprise users until the additional\npermissions are approved." "All current and future permissions the app requires are automatically\napproved."], "type" "string", "enum" ["currentPermissionsOnly" "allPermissions"], "description" "Sets how new permission requests for the product are handled.\n\"allPermissions\" automatically approves all current and future\npermissions for the product. \"currentPermissionsOnly\" approves the\ncurrent set of permissions for the product, but any future permissions\nadded through updates will require manual reapproval. If not specified,\nonly the current set of permissions will be approved."}}, "id" "ProductsApproveRequest", "type" "object"}, "Install" {"type" "object", "properties" {"installState" {"description" "Install state. The state <code>&quot;installPending&quot;</code>\nmeans that an install request has recently been made and download to the\ndevice is in progress. The state <code>&quot;installed&quot;</code>\nmeans that the app has been installed. This field is read-only.", "enumDescriptions" ["" ""], "enum" ["installed" "installPending"], "type" "string"}, "productId" {"type" "string", "description" "The ID of the product that the install is for. For example,\n<code>&quot;app:com.google.android.gm&quot;</code>."}, "versionCode" {"format" "int32", "type" "integer", "description" "The version of the installed product. Guaranteed to be set only if the\ninstall state is <code>&quot;installed&quot;</code>."}}, "id" "Install", "description" "The existence of an Installs resource indicates that an app is\ninstalled on a particular device (or that an install is pending).\n\nThe API can be used to create an install resource using the\n<a class=\"method-link\" method=\"androidenterprise.installs.update\">update</a>\nmethod. This triggers the actual install of the app on the device. If the\nuser does not already have an entitlement for the app, then an attempt is\nmade to create one. If this fails (for example, because the app is not free\nand there is no available license), then the creation of the install fails.\n\nThe API can also be used to update an installed app. If\nthe&nbsp;<a class=\"method-link\" method=\"androidenterprise.installs.update\"\nstyle=\"font-style: normal; font-size: 14px; font-family: Roboto, sans-serif;\nline-height: 22.3999996185303px;\">update</a>&nbsp;method is\nused on an existing install, then the app will be updated to the latest\navailable version.\n\nNote that it is not possible to force the installation of a specific version\nof an app: the version code is read-only.\n\nIf a user installs an app themselves (as permitted by the enterprise), then\nagain an install resource and possibly an entitlement resource are\nautomatically created.\n\nThe API can also be used to delete an install resource, which triggers the\nremoval of the app from the device. Note that deleting an install does not\nautomatically remove the corresponding entitlement, even if there are no\nremaining installs. The install resource will also be deleted if the user\nuninstalls the app themselves."}, "EnterpriseAccount" {"properties" {"accountEmail" {"description" "The email address of the service account.", "type" "string"}}, "id" "EnterpriseAccount", "type" "object", "description" "A service account that can be used to authenticate as the enterprise to\nAPI calls that require such authentication."}, "LocalizedText" {"properties" {"locale" {"type" "string", "description" "The BCP47 tag for a locale. (e.g. \"en-US\", \"de\")."}, "text" {"description" "The text localized in the associated locale.", "type" "string"}}, "type" "object", "id" "LocalizedText", "description" "A localized string with its locale."}, "ManagedConfigurationsSettings" {"description" "A managed configurations settings resource contains the set of\nmanaged properties that have been configured for an Android app to be applied\nto a set of users. The app's developer would have\ndefined configurable properties in the managed configurations schema.", "properties" {"lastUpdatedTimestampMillis" {"type" "string", "format" "int64", "description" "The last updated time of the managed configuration settings in\nmilliseconds since 1970-01-01T00:00:00Z."}, "name" {"type" "string", "description" "The name of the managed configurations settings."}, "mcmId" {"type" "string", "description" "The ID of the managed configurations settings."}}, "id" "ManagedConfigurationsSettings", "type" "object"}, "ProductsGenerateApprovalUrlResponse" {"type" "object", "id" "ProductsGenerateApprovalUrlResponse", "properties" {"url" {"description" "A URL that can be rendered in an iframe to display the permissions (if\nany) of a product.\nThis URL can be used to approve the product only once and only within 24\nhours of being generated, using the <code>Products.approve</code> call.\nIf the product is currently unapproved and has no permissions, this\nURL will point to an empty page.\nIf the product is currently approved, a URL will only be generated if\nthat product has added permissions since it was last approved, and the\nURL will only display those new permissions that have not yet been\naccepted.", "type" "string"}}}, "User" {"id" "User", "properties" {"managementType" {"enumDescriptions" ["" ""], "type" "string", "enum" ["googleManaged" "emmManaged"], "description" "The entity that manages the user.  With <code>googleManaged</code> users,\nthe source of truth is Google so EMMs have to make sure a Google Account\nexists for the user.  With <code>emmManaged</code> users, the\nEMM is in charge."}, "accountType" {"enum" ["deviceAccount" "userAccount"], "enumDescriptions" ["" ""], "description" "The type of account that this user represents. A <code>userAccount</code>\ncan be installed on multiple devices, but a <code>deviceAccount</code> is\nspecific to a single device. An EMM-managed user (<code>emmManaged</code>)\ncan be either type (<code>userAccount</code>, <code>deviceAccount</code>),\nbut a Google-managed user (<code>googleManaged</code>) is always a\n<code>userAccount</code>.", "annotations" {"required" ["androidenterprise.users.insert"]}, "type" "string"}, "id" {"type" "string", "description" "The unique ID for the user."}, "accountIdentifier" {"annotations" {"required" ["androidenterprise.users.insert"]}, "type" "string", "description" "A unique identifier you create for this user, such as \"user342\" or\n\"asset#44418\". Do not use personally identifiable information (PII) for\nthis property. Must always be set for EMM-managed users.\nNot set for Google-managed users."}, "displayName" {"type" "string", "description" "The name that will appear in user interfaces. Setting this property is\noptional when creating EMM-managed users. If you do set this property,\nuse something generic about the organization (such as \"Example, Inc.\") or\nyour name (as EMM).\nNot used for Google-managed user accounts.\n@mutable androidenterprise.users.update"}, "primaryEmail" {"type" "string", "description" "The user's primary email address, for example, \"jsmith@example.com\".\nWill always be set for Google managed users and not set for EMM managed\nusers."}}, "type" "object", "description" "A Users resource represents an account associated with an enterprise. The\naccount may be specific to a device or to an individual user (who can then\nuse the account across multiple devices). The account may provide access to\nmanaged Google Play only, or to other Google services, depending on the\nidentity model:\n<ul><li>The Google managed domain identity model requires synchronization to\nGoogle account sources (via <code>primaryEmail</code>).</li>\n<li>The managed Google Play Accounts identity model provides a dynamic means\nfor enterprises to create user or device accounts as needed. These accounts\nprovide access to managed Google Play.</li>\n</ul>"}, "AutoInstallPolicy" {"id" "AutoInstallPolicy", "type" "object", "properties" {"minimumVersionCode" {"type" "integer", "description" "The minimum version of the app. If a lower version of the app is installed,\nthen the app will be auto-updated according to the auto-install\nconstraints, instead of waiting for the regular auto-update. You can set a\nminimum version code for at most 20 apps per device.", "format" "int32"}, "autoInstallMode" {"enumDescriptions" ["" "The product is not installed automatically, the user needs to install it\nfrom the Play Store." "The product is automatically installed once, if the user uninstalls the\nproduct it will not be installed again." "The product is automatically installed, if the user uninstalls the\nproduct it will be installed again. On managed devices the DPC should\nblock uninstall."], "description" "The auto-install mode. If unset defaults to \"doNotAutoInstall\".", "type" "string", "enum" ["autoInstallModeUnspecified" "doNotAutoInstall" "autoInstallOnce" "forceAutoInstall"]}, "autoInstallPriority" {"format" "int32", "description" "The priority of the install, as an unsigned integer. A lower number means\nhigher priority.", "type" "integer"}, "autoInstallConstraint" {"items" {"$ref" "AutoInstallConstraint"}, "description" "The constraints for auto-installing the app. You can specify a maximum of\none constraint.", "type" "array"}}}, "NewDeviceEvent" {"description" "An event generated when a new device is ready to be managed.", "properties" {"managementType" {"enum" ["managedDevice" "managedProfile"], "type" "string", "enumDescriptions" ["" ""], "description" "Identifies the extent to which the device is controlled by an Android\nEMM in various deployment configurations. <br><br>\nPossible values include:\n<ul><li>\"<code>managedDevice</code>\", a device where the DPC is set as\ndevice owner,</li>\n<li>\"<code>managedProfile</code>\", a device where the DPC is set as profile\nowner.</li></ul>"}, "deviceId" {"description" "The Android ID of the device.\nThis field will always be present.", "type" "string"}, "userId" {"description" "The ID of the user.\nThis field will always be present.", "type" "string"}, "dpcPackageName" {"type" "string", "description" "Policy app on the device."}}, "id" "NewDeviceEvent", "type" "object"}, "WebApp" {"properties" {"title" {"description" "The title of the web app as displayed to the user (e.g., amongst a list of\nother applications, or as a label for an icon).", "type" "string"}, "versionCode" {"type" "string", "description" "The current version of the app.\n\n<p>Note that the version can automatically increase during the lifetime of\nthe web app, while Google does internal housekeeping to keep the web app\nup-to-date.", "format" "int64"}, "displayMode" {"enumDescriptions" ["" "Opens the web app with a minimal set of browser UI elements for\ncontrolling navigation and viewing the page URL." "Opens the web app to look and feel like a standalone native application.\nThe browser UI elements and page URL are not visible, however the system\nstatus bar and back button are visible." "Opens the web app in full screen without any visible controls. The\nbrowser UI elements, page URL, system status bar and back button are not\nvisible, and the web app takes up the entirety of the available display\narea."], "enum" ["displayModeUnspecified" "minimalUi" "standalone" "fullScreen"], "type" "string", "description" "The display mode of the web app. <br><br>\nPossible values include:\n<ul><li>\"<code>minimalUi</code>\", the device's status bar, navigation bar,\nthe app's URL, and a refresh button are visible when the app is open. For\nHTTP URLs, you can only select this option.\n<li>\"<code>standalone</code>\", the device's status bar and navigation\nbar are visible when the app is open.\n<li>\"<code>fullScreen</code>\", the app opens in full screen mode, hiding\nthe device's status and navigation bars.  All browser UI elements, page\nURL, system status bar and back button are not visible, and the web app\ntakes up the entirety of the available display area.\n</ul>"}, "isPublished" {"type" "boolean", "description" "A flag whether the app has been published to the Play store yet."}, "webAppId" {"description" "The ID of the application.  A string of the form\n<code>&quot;app:&lt;package name&gt;&quot;</code> where the package name\nalways starts with the prefix\n<code>&quot;com.google.enterprise.webapp.&quot;</code> followed by a\nrandom id.", "type" "string"}, "icons" {"description" "A list of icons representing this website. If absent, a default icon (for\ncreate) or the current icon (for update) will be used.", "type" "array", "items" {"$ref" "WebAppIcon"}}, "startUrl" {"description" "The start URL, i.e. the URL that should load when the user opens the\napplication.", "type" "string"}}, "type" "object", "description" "A WebApps resource represents a web app created for an enterprise. Web apps\nare published to managed Google Play and can be distributed like other\nAndroid apps. On a user's device, a web app opens its specified URL.", "id" "WebApp"}, "AppUpdateEvent" {"id" "AppUpdateEvent", "description" "An event generated when a new version of an app is uploaded to Google Play.\nNotifications are sent for new public versions only: alpha, beta, or canary\nversions do not generate this event. To fetch up-to-date version history for\nan app, use Products.Get on the EMM API.", "properties" {"productId" {"description" "The id of the product (e.g. \"app:com.google.android.gm\") that was updated.\nThis field will always be present.", "type" "string"}}, "type" "object"}, "ServiceAccountKeysListResponse" {"properties" {"serviceAccountKey" {"type" "array", "items" {"$ref" "ServiceAccountKey"}, "description" "The service account credentials."}}, "id" "ServiceAccountKeysListResponse", "type" "object"}, "StorePage" {"properties" {"name" {"items" {"$ref" "LocalizedText"}, "type" "array", "description" "Ordered list of localized strings giving the name of this page.\nThe text displayed is the one that best matches the user locale,\nor the first entry if there is no good match. There needs to be\nat least one entry."}, "link" {"description" "Ordered list of pages a user should be able to reach from this page.\nThe list can't include this page.\nIt is recommended that the basic pages are created first,\nbefore adding the links between pages.\n\nThe API doesn't verify that the pages exist or the pages are reachable.", "type" "array", "items" {"type" "string"}}, "id" {"type" "string", "description" "Unique ID of this page. Assigned by the server. Immutable once assigned."}}, "type" "object", "id" "StorePage", "description" "Definition of a managed Google Play store page, made of a localized name\nand links to other pages. A page also contains clusters defined\nas a subcollection."}, "ApprovalUrlInfo" {"description" "Information on an approval URL.", "type" "object", "properties" {"approvalUrl" {"description" "A URL that displays a product's permissions and that can also be used to\napprove the product with the <code>Products.approve</code> call.", "type" "string"}}, "id" "ApprovalUrlInfo"}, "TrackInfo" {"properties" {"trackId" {"type" "string", "description" "Unmodifiable, unique track identifier. This identifier is the\nreleaseTrackId in the url of the play developer console page that displays\nthe track information."}, "trackAlias" {"type" "string", "description" "A modifiable name for a track. This is the visible name in the play\ndeveloper console."}}, "id" "TrackInfo", "description" "Id to name association of a track.", "type" "object"}, "TokenPagination" {"description" "Pagination information returned by a List operation when token pagination\nis enabled.\n\nList operations that supports paging return only one \"page\" of results. This\nprotocol buffer message describes the page that has been returned.\n\nWhen using token pagination, clients should use the next/previous token\nto get another page of the result. The presence or absence of next/previous\ntoken indicates whether a next/previous page is available and provides a\nmean of accessing this page. ListRequest.page_token should be set to either\nnext_page_token or previous_page_token to access another page.", "properties" {"previousPageToken" {"type" "string"}, "nextPageToken" {"type" "string", "description" "Tokens to pass to the standard list field 'page_token'. Whenever available,\ntokens are preferred over manipulating start_index."}}, "type" "object", "id" "TokenPagination"}, "StoreLayout" {"id" "StoreLayout", "properties" {"homepageId" {"description" "The ID of the store page to be used as the homepage. The homepage is the\nfirst page shown in the managed Google Play Store.\n\nNot specifying a homepage is equivalent to setting the store layout\ntype to \"basic\".", "type" "string"}, "storeLayoutType" {"type" "string", "description" "The store layout type. By default, this value is set to \"basic\"\nif the homepageId field is not set, and to \"custom\" otherwise.\nIf set to \"basic\", the layout will consist of all approved apps that\nhave been whitelisted for the user.", "enumDescriptions" ["" "" ""], "enum" ["unknown" "basic" "custom"]}}, "description" "General setting for the managed Google Play store layout,\ncurrently only specifying the page to display the first time\nthe store is opened.", "type" "object"}, "AdministratorWebTokenSpecPrivateApps" {"properties" {"enabled" {"description" "Whether the Private Apps page is displayed. Default is true.", "type" "boolean"}}, "type" "object", "id" "AdministratorWebTokenSpecPrivateApps"}, "Entitlement" {"type" "object", "id" "Entitlement", "description" "The presence of an Entitlements resource indicates that a user has the right\nto use a particular app. Entitlements are user specific, not device specific.\nThis allows a user with an entitlement to an app to install the app on all\ntheir devices. It's also possible for a user to hold an entitlement to an app\nwithout installing the app on any device.\n\nThe API can be used to create an entitlement. As an option, you can also use\nthe API to trigger the installation of an app on all a user's managed devices\nat the same time the entitlement is created.\n\nIf the app is free, creating the entitlement also creates a group license\nfor that app. For paid apps, creating the entitlement consumes one license,\nand that license remains consumed until the entitlement is removed. If the\nenterprise hasn't purchased enough licenses, then no entitlement is created\nand the installation fails. An entitlement is also not created for an app if\nthe app requires permissions that the enterprise hasn't accepted.\n\nIf an entitlement is deleted, the app may be uninstalled from a user's\ndevice. As a best practice, uninstall the app by calling\n<a class=\"method-link\" method=\"androidenterprise.installs.delete\">\nInstalls.delete()</a> before deleting the entitlement.\n\nEntitlements for apps that a user pays for on an unmanaged profile have\n<code class=\"\">\"userPurchase\"</code> as the entitlement reason. These\nentitlements cannot be removed via the API.", "properties" {"productId" {"description" "The ID of the product that the entitlement is for. For example,\n<code>&quot;app:com.google.android.gm&quot;</code>.", "type" "string"}, "reason" {"type" "string", "enum" ["free" "groupLicense" "userPurchase"], "enumDescriptions" ["" "" ""], "description" "The reason for the entitlement. For example, <code class=\"\">\"free\"</code>\nfor free apps. This property is temporary: it will be replaced by the <code\nclass=\"\">acquisition kind</code> field of group licenses."}}}, "MaintenanceWindow" {"id" "MaintenanceWindow", "type" "object", "properties" {"durationMs" {"description" "Duration of the maintenance window, in milliseconds. The duration must be\nbetween 30 minutes and 24 hours (inclusive).", "format" "int64", "type" "string"}, "startTimeAfterMidnightMs" {"description" "Start time of the maintenance window, in milliseconds after midnight on the\ndevice. Windows can span midnight.", "format" "int64", "type" "string"}}, "description" "Maintenance window for managed Google Play Accounts.\nThis allows Play store to update the apps on the foreground in the designated\nwindow."}, "WebAppIcon" {"type" "object", "description" "Icon for a web app.", "properties" {"imageData" {"type" "string", "description" "The actual bytes of the image in a base64url encoded string (c.f. RFC4648,\nsection 5 \"Base 64 Encoding with URL and Filename Safe Alphabet\").\n<ul>\n<li>The image type can be png or jpg.\n<li>The image should ideally be square.\n<li>The image should ideally have a size of 512x512.\n</ul>"}}, "id" "WebAppIcon"}, "StoreCluster" {"description" "Definition of a managed Google Play store cluster, a list of products\ndisplayed as part of a store page.", "type" "object", "id" "StoreCluster", "properties" {"name" {"items" {"$ref" "LocalizedText"}, "type" "array", "description" "Ordered list of localized strings giving the name of this page.\nThe text displayed is the one that best matches the user locale,\nor the first entry if there is no good match. There needs to be\nat least one entry."}, "productId" {"type" "array", "description" "List of products in the order they are displayed in the cluster. There\nshould not be duplicates within a cluster.", "items" {"type" "string"}}, "id" {"description" "Unique ID of this cluster. Assigned by the server. Immutable once assigned.", "type" "string"}, "orderInPage" {"type" "string", "description" "String (US-ASCII only) used to determine order of this cluster within the\nparent page's elements. Page elements are sorted in lexicographic order\nof this field.\nDuplicated values are allowed, but ordering between elements with\nduplicate order is undefined.\n\nThe value of this field is never visible to a user, it is used solely\nfor the purpose of defining an ordering. Maximum length is 256\ncharacters."}}}, "InstallFailureEvent" {"type" "object", "id" "InstallFailureEvent", "properties" {"failureReason" {"description" "The reason for the installation failure.\nThis field will always be present.", "type" "string", "enumDescriptions" ["Used whenever no better reason for failure can be provided." "Used when the installation timed out. This can cover a number of\nsituations, for example when the device did not have connectivity\nat any point during the retry period, or if the device is OOM."], "enum" ["unknown" "timeout"]}, "failureDetails" {"description" "Additional details on the failure if applicable.", "type" "string"}, "userId" {"type" "string", "description" "The ID of the user.\nThis field will always be present."}, "deviceId" {"description" "The Android ID of the device.\nThis field will always be present.", "type" "string"}, "productId" {"type" "string", "description" "The id of the product (e.g. \"app:com.google.android.gm\") for which the\ninstall failure event occured. This field will always be present."}}, "description" "An event generated when an app installation failed on a device"}, "AppRestrictionsSchemaChangeEvent" {"type" "object", "properties" {"productId" {"type" "string", "description" "The id of the product (e.g. \"app:com.google.android.gm\") for which the\napp restriction schema changed. This field will always be present."}}, "id" "AppRestrictionsSchemaChangeEvent", "description" "An event generated when a new app version is uploaded to Google Play and its\napp restrictions schema changed.\nTo fetch the app restrictions schema for an app, use\nProducts.getAppRestrictionsSchema on the EMM API."}, "ProductSigningCertificate" {"id" "ProductSigningCertificate", "properties" {"certificateHashSha256" {"type" "string", "description" "The base64 urlsafe encoded SHA2-256 hash of the certificate."}, "certificateHashSha1" {"type" "string", "description" "The base64 urlsafe encoded SHA1 hash of the certificate. (This field is\ndeprecated in favor of SHA2-256. It should not be used and may be\nremoved at any time.)"}}, "type" "object"}, "AdministratorWebToken" {"description" "A token authorizing an admin to access an iframe.", "id" "AdministratorWebToken", "type" "object", "properties" {"token" {"description" "An opaque token to be passed to the Play front-end to generate an iframe.", "type" "string"}}}, "ManagedConfigurationsForDeviceListResponse" {"properties" {"managedConfigurationForDevice" {"type" "array", "description" "A managed configuration for an app on a specific device.", "items" {"$ref" "ManagedConfiguration"}}}, "type" "object", "id" "ManagedConfigurationsForDeviceListResponse"}, "ManagedConfigurationsForUserListResponse" {"properties" {"managedConfigurationForUser" {"items" {"$ref" "ManagedConfiguration"}, "type" "array", "description" "A managed configuration for an app for a specific user."}}, "id" "ManagedConfigurationsForUserListResponse", "type" "object"}, "ManagedConfigurationsSettingsListResponse" {"id" "ManagedConfigurationsSettingsListResponse", "properties" {"managedConfigurationsSettings" {"type" "array", "description" "A managed configurations settings for an app that may be assigned to a\ngroup of users in an enterprise.", "items" {"$ref" "ManagedConfigurationsSettings"}}}, "type" "object"}, "WebAppsListResponse" {"properties" {"webApp" {"description" "The manifest describing a web app.", "items" {"$ref" "WebApp"}, "type" "array"}}, "type" "object", "id" "WebAppsListResponse"}, "ProductSet" {"properties" {"productSetBehavior" {"description" "The interpretation of this product set. \"unknown\" should never be sent and\nis ignored if received. \"whitelist\" means that the user is entitled to\naccess the product set. \"includeAll\" means that all products are\naccessible, including products that are approved, products with revoked\napproval, and products that have never been approved. \"allApproved\" means\nthat the user is entitled to access all products that are approved for the\nenterprise. If the value is \"allApproved\" or \"includeAll\", the productId\nfield is ignored. If no value is provided, it is interpreted as\n\"whitelist\" for backwards compatibility.\nFurther \"allApproved\" or \"includeAll\" does not enable automatic\nvisibility of \"alpha\" or \"beta\" tracks for Android app. Use\nProductVisibility to enable \"alpha\" or \"beta\" tracks per user.", "enum" ["unknown" "whitelist" "includeAll" "allApproved"], "type" "string", "enumDescriptions" ["This value should never be sent and ignored if received." "This product set constitutes a whitelist." "This product set represents all products.\nFor Android app it represents only \"production\" track.\n(The value of the productId field is therefore ignored)." "This product set represents all approved products.\nFor Android app it represents only \"production\" track.\n(The value of the product_id field is therefore ignored)."]}, "productVisibility" {"description" "Additional list of product IDs making up the product set.\nUnlike the productID array, in this list It's possible to specify\nwhich tracks (alpha, beta, production) of a product are visible to the\nuser. See ProductVisibility and its fields for more information. Specifying\nthe same product ID both here and in the productId array is not allowed and\nit will result in an error.", "type" "array", "items" {"$ref" "ProductVisibility"}}, "productId" {"items" {"type" "string"}, "description" "The list of product IDs making up the set of products.", "type" "array"}}, "type" "object", "description" "A set of products.", "id" "ProductSet"}, "ManagedProperty" {"properties" {"valueString" {"description" "The string value - this will only be present if type of the property is\nstring, choice or hidden.", "type" "string"}, "valueBundle" {"description" "The bundle of managed properties - this will only be present if type of the\nproperty is bundle.", "$ref" "ManagedPropertyBundle"}, "valueInteger" {"type" "integer", "description" "The integer value - this will only be present if type of the property is\ninteger.", "format" "int32"}, "valueStringArray" {"items" {"type" "string"}, "description" "The list of string values - this will only be present if type of the\nproperty is multiselect.", "type" "array"}, "key" {"type" "string", "description" "The unique key that identifies the property."}, "valueBundleArray" {"type" "array", "items" {"$ref" "ManagedPropertyBundle"}, "description" "The list of bundles of properties - this will only be present if type of\nthe property is bundle_array."}, "valueBool" {"description" "The boolean value - this will only be present if type of the property is\nbool.", "type" "boolean"}}, "id" "ManagedProperty", "description" "A managed property of a managed configuration. The property must match one of\nthe properties in the app restrictions schema of the product. Exactly one of\nthe value fields must be populated, and it must match the property's type in\nthe app restrictions schema.", "type" "object"}, "ConfigurationVariables" {"properties" {"mcmId" {"type" "string", "description" "The ID of the managed configurations settings."}, "variableSet" {"description" "The variable set that is attributed to the user.", "type" "array", "items" {"$ref" "VariableSet"}}}, "description" "A configuration variables resource contains the managed configuration\nsettings ID to be applied to a single user, as well as the variable set that\nis attributed to the user. The variable set will be used to replace\nplaceholders in the managed configuration settings.", "type" "object", "id" "ConfigurationVariables"}, "UsersListResponse" {"type" "object", "id" "UsersListResponse", "properties" {"user" {"items" {"$ref" "User"}, "description" "A user of an enterprise.", "type" "array"}}}, "EntitlementsListResponse" {"id" "EntitlementsListResponse", "properties" {"entitlement" {"type" "array", "description" "An entitlement of a user to a product (e.g. an app).\nFor example, a free app that they have installed, or a paid app that they\nhave been allocated a license to.", "items" {"$ref" "Entitlement"}}}, "type" "object"}, "ManagedConfiguration" {"type" "object", "properties" {"kind" {"type" "string", "description" "Deprecated."}, "managedProperty" {"items" {"$ref" "ManagedProperty"}, "description" "The set of managed properties for this configuration.", "type" "array"}, "configurationVariables" {"$ref" "ConfigurationVariables", "description" "Contains the ID of the managed configuration profile and the set of\nconfiguration variables (if any) defined for the user."}, "productId" {"description" "The ID of the product that the managed configuration is for, e.g.\n\"app:com.google.android.gm\".", "type" "string"}}, "description" "A managed configuration resource contains the set of managed properties\ndefined by the app developer in the app's managed configurations schema,\nas well as any configuration variables defined for the user.", "id" "ManagedConfiguration"}, "KeyedAppState" {"id" "KeyedAppState", "description" "Represents a keyed app state containing a key, timestamp, severity level,\noptional description, and optional data.", "properties" {"severity" {"enumDescriptions" ["" "" ""], "enum" ["severityUnknown" "severityInfo" "severityError"], "type" "string", "description" "Severity of the app state.\nThis field will always be present."}, "data" {"description" "Additional field intended for machine-readable data. For example, a number\nor JSON object. To prevent XSS, we recommend removing any HTML from the\ndata before displaying it.", "type" "string"}, "stateTimestampMillis" {"description" "Timestamp of when the app set the state in milliseconds since epoch.\nThis field will always be present.", "type" "string", "format" "int64"}, "key" {"type" "string", "description" "Key indicating what the app is providing a state for. The content of the\nkey is set by the app's developer. To prevent XSS, we recommend removing\nany HTML from the key before displaying it.\nThis field will always be present."}, "message" {"type" "string", "description" "Free-form, human-readable message describing the app state. For example,\nan error message. To prevent XSS, we recommend removing any HTML from the\nmessage before displaying it."}}, "type" "object"}, "ProductPermissions" {"type" "object", "description" "Information about the permissions required by a specific app and\nwhether they have been accepted by the enterprise.", "properties" {"permission" {"items" {"$ref" "ProductPermission"}, "type" "array", "description" "The permissions required by the app."}, "productId" {"description" "The ID of the app that the permissions relate to, e.g.\n\"app:com.google.android.gm\".", "type" "string"}}, "id" "ProductPermissions"}, "AppVersion" {"properties" {"versionString" {"type" "string", "description" "The string used in the Play store by the app developer to identify\nthe version.\nThe string is not necessarily unique or localized (for example, the string\ncould be \"1.4\")."}, "isProduction" {"type" "boolean", "description" "True if this version is a production APK."}, "versionCode" {"format" "int32", "type" "integer", "description" "Unique increasing identifier for the app version."}, "trackId" {"items" {"type" "string"}, "type" "array", "description" "Track ids that the app version is published in. Replaces the\n<code>track</code> field (deprecated), but doesn't include the production\ntrack (see <code>isProduction</code> instead)."}, "track" {"type" "string", "description" "Deprecated, use <code>trackId</code> instead.", "enumDescriptions" ["" "" "" ""], "enum" ["appTrackUnspecified" "production" "beta" "alpha"]}}, "description" "This represents a single version of the app.", "id" "AppVersion", "type" "object"}, "AdministratorWebTokenSpecWebApps" {"id" "AdministratorWebTokenSpecWebApps", "properties" {"enabled" {"description" "Whether the Web Apps page is displayed. Default is true.", "type" "boolean"}}, "type" "object"}, "ProductVisibility" {"id" "ProductVisibility", "description" "A product to be made visible to a user.", "type" "object", "properties" {"productId" {"description" "The product ID to make visible to the user.\nRequired for each item in the productVisibility list.", "type" "string"}, "tracks" {"enumDescriptions" ["" "" "" ""], "type" "array", "items" {"enum" ["appTrackUnspecified" "production" "beta" "alpha"], "type" "string"}, "description" "Deprecated. Use <code>trackIds</code> instead."}, "trackIds" {"description" "Grants the user visibility to the specified product track(s), identified by\n<code>trackIds</code>.", "items" {"type" "string"}, "type" "array"}}}, "DeviceState" {"properties" {"accountState" {"type" "string", "enum" ["enabled" "disabled"], "enumDescriptions" ["" ""], "description" "The state of the Google account on the device. \"enabled\" indicates that\nthe Google account on the device can be used to access Google services\n(including Google Play), while \"disabled\" means that it cannot.\nA new device is initially in the \"disabled\" state."}}, "id" "DeviceState", "type" "object", "description" "The state of a user's device, as accessed by the getState and setState\nmethods on device resources."}, "Policy" {"id" "Policy", "description" "The device policy for a given managed device.", "type" "object", "properties" {"productAvailabilityPolicy" {"enum" ["productAvailabilityPolicyUnspecified" "whitelist" "all"], "type" "string", "enumDescriptions" ["Unspecified, applies the user available product set by default." "The approved products with product availability set to AVAILABLE\nin the product policy are available." "All products are available except those explicitly marked as\nunavailable in the product availability policy."], "description" "The availability granted to the device for the specified products. \"all\"\ngives the device access to all products, regardless of approval status.\n\"all\" does not enable automatic visibility of \"alpha\" or \"beta\" tracks.\n\"whitelist\" grants the device access the products specified in\nproductPolicy[]. Only products that are approved or products that were\npreviously approved (products with revoked approval) by the enterprise can\nbe whitelisted. If no value is provided, the availability set at the user\nlevel is applied by default."}, "maintenanceWindow" {"description" "The maintenance window defining when apps running in the foreground should\nbe updated.", "$ref" "MaintenanceWindow"}, "deviceReportPolicy" {"enumDescriptions" ["The device report policy is not set." "Device reports are disabled." "Device reports are enabled."], "type" "string", "enum" ["deviceReportPolicyUnspecified" "deviceReportDisabled" "deviceReportEnabled"], "description" "Whether the device reports app states to the EMM. The default value is\n\"deviceReportDisabled\"."}, "productPolicy" {"type" "array", "items" {"$ref" "ProductPolicy"}, "description" "The list of product policies. The <code>productAvailabilityPolicy</code>\nneeds to be set to <code>WHITELIST</code> or <code>ALL</code> for the\nproduct policies to be applied."}, "autoUpdatePolicy" {"description" "The auto-update policy for apps installed on the device. \"choiceToTheUser\"\nallows the device's user to configure the app update policy. \"always\"\nenables auto updates. \"never\" disables auto updates. \"wifiOnly\" enables\nauto updates only when the device is connected to wifi.", "enumDescriptions" ["The auto update policy is not set." "The user can control auto-updates." "Apps are never auto-updated." "Apps are auto-updated over WiFi only." "Apps are auto-updated at any time. Data charges may apply."], "enum" ["autoUpdatePolicyUnspecified" "choiceToTheUser" "never" "wifiOnly" "always"], "type" "string"}}}, "GroupLicense" {"type" "object", "id" "GroupLicense", "description" "Group license objects allow you to keep track of licenses (called\n<a href=\"/android/work/play/emm-api/v1/entitlements\">entitlements</a>)\nfor both free and paid apps. For a free app, a group license is created when\nan enterprise admin first approves the product in Google Play or when the\nfirst entitlement for the product is created for a user via the API. For a\npaid app, a group license object is only created when an enterprise admin\npurchases the product in Google Play for the first time.\n\nUse the API to query group licenses. A <code>Grouplicenses</code> resource\nincludes the total number of licenses purchased (paid apps only) and the\ntotal number of licenses currently in use. In other words, the total number\nof <code>Entitlements</code> that exist for the product.\n\nOnly one group license object is created per product and group license\nobjects are never deleted. If a product is unapproved, its group license\nremains. This allows enterprise admins to keep track of any remaining\nentitlements for the product.", "properties" {"numPurchased" {"format" "int32", "description" "The number of purchased licenses (possibly in multiple purchases).\nIf this field is omitted, then there is no limit on the number of licenses\nthat can be provisioned (for example, if the acquisition kind is\n<code>&quot;free&quot;</code>).", "type" "integer"}, "acquisitionKind" {"type" "string", "description" "How this group license was acquired. <code>&quot;bulkPurchase&quot;</code>\nmeans that this Grouplicenses resource was created because the enterprise\npurchased licenses for this product; otherwise, the value is\n<code>&quot;free&quot;</code> (for free products).", "enum" ["free" "bulkPurchase"], "enumDescriptions" ["" ""]}, "productId" {"type" "string", "description" "The ID of the product that the license is for. For example,\n<code>&quot;app:com.google.android.gm&quot;</code>."}, "numProvisioned" {"type" "integer", "format" "int32", "description" "The total number of provisioned licenses for this product.\nReturned by read operations, but ignored in write operations."}, "permissions" {"type" "string", "description" "The permission approval status of the product. This field\nis only set if the product is approved. Possible states are:<ul>\n<li>\"<code>currentApproved</code>\", the current set\nof permissions is approved, but additional permissions will require the\nadministrator to reapprove the product (If the product was approved\nwithout specifying the approved permissions setting, then this is the\ndefault behavior.),</li>\n<li>\"<code>needsReapproval</code>\", the product has unapproved permissions.\nNo additional product licenses can be assigned until the product is\nreapproved,</li>\n<li>\"<code>allCurrentAndFutureApproved</code>\",\nthe current permissions are approved and any future permission updates\nwill be automatically approved without administrator review.</li></ul>", "enum" ["currentApproved" "needsReapproval" "allCurrentAndFutureApproved"], "enumDescriptions" ["" "" ""]}, "approval" {"enumDescriptions" ["" ""], "enum" ["approved" "unapproved"], "description" "Whether the product to which this group license relates is currently\napproved by the enterprise. Products are approved when a group license is\nfirst created, but this approval may be revoked by an enterprise admin via\nGoogle Play. Unapproved products will not be visible to end users in\ncollections, and new entitlements to them should not normally be created.", "type" "string"}}}, "SignupInfo" {"properties" {"kind" {"type" "string", "description" "Deprecated."}, "completionToken" {"type" "string", "description" "An opaque token that will be required, along with the Enterprise Token,\nfor obtaining the enterprise resource from CompleteSignup."}, "url" {"type" "string", "description" "A URL under which the Admin can sign up for an enterprise.\nThe page pointed to cannot be rendered in an iframe."}}, "description" "A resource returned by the GenerateSignupUrl API, which contains the\nSignup URL and Completion Token.", "type" "object", "id" "SignupInfo"}, "Notification" {"description" "A notification of one event relating to an enterprise.", "id" "Notification", "properties" {"timestampMillis" {"format" "int64", "description" "The time when the notification was published in\nmilliseconds since 1970-01-01T00:00:00Z.\nThis will always be present.", "type" "string"}, "newDeviceEvent" {"description" "Notifications about new devices.", "$ref" "NewDeviceEvent"}, "newPermissionsEvent" {"$ref" "NewPermissionsEvent", "description" "Notifications about new app permissions."}, "appUpdateEvent" {"$ref" "AppUpdateEvent", "description" "Notifications about app updates."}, "productAvailabilityChangeEvent" {"$ref" "ProductAvailabilityChangeEvent", "description" "Notifications about product availability changes."}, "enterpriseId" {"type" "string", "description" "The ID of the enterprise for which the notification is sent.\nThis will always be present."}, "deviceReportUpdateEvent" {"description" "Notifications about device report updates.", "$ref" "DeviceReportUpdateEvent"}, "notificationType" {"enum" ["unknown" "testNotification" "productApproval" "installFailure" "appUpdate" "newPermissions" "appRestricionsSchemaChange" "productAvailabilityChange" "newDevice" "deviceReportUpdate"], "type" "string", "enumDescriptions" ["" "A test push notification." "Notification about change to a product's approval status." "Notification about an app installation failure." "Notification about app update." "Notification about new app permissions." "Notification about new app restrictions schema change." "Notification about product availability change." "Notification about a new device." "Notification about an updated device report."], "description" "Type of the notification."}, "installFailureEvent" {"$ref" "InstallFailureEvent", "description" "Notifications about an app installation failure."}, "productApprovalEvent" {"description" "Notifications about changes to a product's approval status.", "$ref" "ProductApprovalEvent"}, "appRestrictionsSchemaChangeEvent" {"description" "Notifications about new app restrictions schema changes.", "$ref" "AppRestrictionsSchemaChangeEvent"}}, "type" "object"}, "AdministratorWebTokenSpecPlaySearch" {"properties" {"approveApps" {"type" "boolean", "description" "Allow access to the iframe in <a\nhref=\"https://developers.google.com/android/work/play/emm-api/managed-play-iframe#render\">approve\nmode</a>. Default is false."}, "enabled" {"type" "boolean", "description" "Whether the managed Play Search apps page is displayed. Default is true."}}, "id" "AdministratorWebTokenSpecPlaySearch", "type" "object"}, "EnterprisesSendTestPushNotificationResponse" {"properties" {"messageId" {"type" "string", "description" "The message ID of the test push notification that was sent."}, "topicName" {"description" "The name of the Cloud Pub/Sub topic to which notifications for this\nenterprise's enrolled account will be sent.", "type" "string"}}, "type" "object", "id" "EnterprisesSendTestPushNotificationResponse"}, "GroupLicenseUsersListResponse" {"type" "object", "properties" {"user" {"items" {"$ref" "User"}, "description" "A user of an enterprise.", "type" "array"}}, "id" "GroupLicenseUsersListResponse"}, "EnterprisesListResponse" {"type" "object", "id" "EnterprisesListResponse", "properties" {"enterprise" {"type" "array", "description" "An enterprise.", "items" {"$ref" "Enterprise"}}}}, "Enterprise" {"properties" {"name" {"description" "The name of the enterprise, for example, \"Example, Inc\".", "type" "string"}, "administrator" {"type" "array", "description" "Admins of the enterprise. This is only supported for enterprises\ncreated via the EMM-initiated flow.", "items" {"$ref" "Administrator"}}, "id" {"type" "string", "description" "The unique ID for the enterprise."}, "primaryDomain" {"type" "string", "description" "The enterprise's primary domain, such as \"example.com\"."}}, "type" "object", "id" "Enterprise", "description" "An Enterprises resource represents the binding between an EMM and a\nspecific organization. That binding can be instantiated in one of two\ndifferent ways using this API as follows:\n<ul><li>For Google managed domain customers, the process involves using\n<code>Enterprises.enroll</code> and <code>Enterprises.setAccount</code> (in\nconjunction with artifacts obtained from the Admin console and the Google\nAPI Console) and submitted to the EMM through a more-or-less manual\nprocess.</li>\n<li>For managed Google Play Accounts customers, the process involves using\n<code>Enterprises.generateSignupUrl</code> and\n<code>Enterprises.completeSignup</code> in conjunction with the managed\nGoogle Play sign-up UI (Google-provided mechanism) to create the binding\nwithout manual steps.</li></ul> As an EMM, you can support either or both\napproaches in your EMM console. See <a\nhref=\"/android/work/play/emm-api/create-enterprise\">Create an Enterprise</a>\nfor details."}, "Device" {"properties" {"policy" {"description" "The policy enforced on the device.", "$ref" "Policy"}, "androidId" {"type" "string", "description" "The Google Play Services Android ID for the device encoded as\na lowercase hex string. For example,\n<code>&quot;123456789abcdef0&quot;</code>."}, "managementType" {"type" "string", "description" "Identifies the extent to which the device is controlled by a managed\nGoogle Play EMM in various deployment configurations. <br><br>\nPossible values include:\n<ul><li>\"<code>managedDevice</code>\", a device that has the EMM's device\npolicy controller (DPC) as the device owner.</li>\n<li>\"<code>managedProfile</code>\", a device that has a profile managed\nby the DPC (DPC is profile owner) in addition to a separate, personal\nprofile that is unavailable to the DPC.</li>\n<li>\"<code>containerApp</code>\", no longer used (deprecated).</li>\n<li>\"<code>unmanagedProfile</code>\", a device that has been allowed (by the\ndomain's admin, using the Admin Console to enable the privilege) to use\nmanaged Google Play, but the profile is itself\nnot owned by a DPC.</li></ul>", "enumDescriptions" ["" "" "" ""], "enum" ["managedDevice" "managedProfile" "containerApp" "unmanagedProfile"]}, "report" {"description" "The device report updated with the latest app states.", "$ref" "DeviceReport"}}, "id" "Device", "description" "A Devices resource represents a mobile device managed by the EMM and\nbelonging to a specific enterprise user.", "type" "object"}, "VariableSet" {"properties" {"placeholder" {"type" "string", "description" "The placeholder string; defined by EMM."}, "userValue" {"type" "string", "description" "The value of the placeholder, specific to the user."}}, "description" "A variable set is a key-value pair of EMM-provided placeholders and\nits corresponding value, which is attributed to a user. For example,\n$FIRSTNAME could be a placeholder, and its value could be Alice. Placeholders\nshould start with a '$' sign and should be alphanumeric only.", "type" "object", "id" "VariableSet"}, "AutoInstallConstraint" {"properties" {"chargingStateConstraint" {"enumDescriptions" ["" "Device doesn't have to be charging." "Device has to be charging."], "enum" ["chargingStateConstraintUnspecified" "chargingNotRequired" "chargingRequired"], "description" "Charging state constraint.", "type" "string"}, "networkTypeConstraint" {"type" "string", "description" "Network type constraint.", "enumDescriptions" ["" "Any active networks (Wi-Fi, cellular, etc.)." "Any unmetered network (e.g. Wi-FI)."], "enum" ["networkTypeConstraintUnspecified" "anyNetwork" "unmeteredNetwork"]}, "deviceIdleStateConstraint" {"type" "string", "description" "Device idle state constraint.", "enumDescriptions" ["" "Device doesn't have to be idle, app can be installed while the user is\ninteracting with the device." "Device has to be idle."], "enum" ["deviceIdleStateConstraintUnspecified" "deviceIdleNotRequired" "deviceIdleRequired"]}}, "description" "The auto-install constraint. Defines a set of restrictions for installation.\nAt least one of the fields must be set.", "id" "AutoInstallConstraint", "type" "object"}, "AuthenticationToken" {"properties" {"token" {"description" "The authentication token to be passed to the device policy client on the\ndevice where it can be used to provision the account for which this token\nwas generated.", "type" "string"}}, "description" "An AuthenticationToken is used by the EMM's device policy client on a device\nto provision the given EMM-managed user on that device.", "type" "object", "id" "AuthenticationToken"}, "NewPermissionsEvent" {"properties" {"productId" {"type" "string", "description" "The id of the product (e.g. \"app:com.google.android.gm\") for which new\npermissions were added. This field will always be present."}, "requestedPermissions" {"items" {"type" "string"}, "type" "array", "description" "The set of permissions that the app is currently requesting.\nUse Permissions.Get on the EMM API to retrieve details about these\npermissions."}, "approvedPermissions" {"description" "The set of permissions that the enterprise admin has already approved for\nthis application.\nUse Permissions.Get on the EMM API to retrieve details about these\npermissions.", "type" "array", "items" {"type" "string"}}}, "id" "NewPermissionsEvent", "type" "object", "description" "An event generated when new permissions are added to an app."}, "PageInfo" {"id" "PageInfo", "description" "Information about the current page.\n\nList operations that supports paging return only one \"page\" of results. This\nprotocol buffer message describes the page that has been returned.", "properties" {"resultPerPage" {"type" "integer", "description" "Maximum number of results returned in one page.\n! The number of results included in the API response.", "format" "int32"}, "totalResults" {"description" "Total number of results available on the backend\n! The total number of results in the result set.", "format" "int32", "type" "integer"}, "startIndex" {"format" "int32", "description" "Index of the first result returned in the current page.", "type" "integer"}}, "type" "object"}, "AppRestrictionsSchemaRestriction" {"id" "AppRestrictionsSchemaRestriction", "type" "object", "description" "A restriction in the App Restriction Schema represents a piece of\nconfiguration that may be pre-applied.", "properties" {"entry" {"items" {"type" "string"}, "description" "For <code>choice</code> or <code>multiselect</code> restrictions, the list\nof possible entries' human-readable names.", "type" "array"}, "restrictionType" {"type" "string", "enum" ["bool" "string" "integer" "choice" "multiselect" "hidden" "bundle" "bundleArray"], "enumDescriptions" ["A restriction of boolean type." "A restriction of string type." "A restriction of integer type." "A choice of one item from a set." "A choice of multiple items from a set." "A hidden restriction of string type (the default value can be used\nto pass along information that cannot be modified, such as a version\ncode)." "[M+ devices only] A bundle of restrictions" "[M+ devices only] An array of restriction bundles"], "description" "The type of the restriction."}, "defaultValue" {"$ref" "AppRestrictionsSchemaRestrictionRestrictionValue", "description" "The default value of the restriction. <code>bundle</code> and\n<code>bundleArray</code> restrictions never have a default value."}, "key" {"description" "The unique key that the product uses to identify the restriction,\ne.g. \"com.google.android.gm.fieldname\".", "type" "string"}, "nestedRestriction" {"items" {"$ref" "AppRestrictionsSchemaRestriction"}, "description" "For <code>bundle</code> or <code>bundleArray</code> restrictions, the list\nof nested restrictions. A <code>bundle</code> restriction is always nested\nwithin a <code>bundleArray</code> restriction, and a\n<code>bundleArray</code> restriction is at most two levels deep.", "type" "array"}, "title" {"description" "The name of the restriction.", "type" "string"}, "description" {"type" "string", "description" "A longer description of the restriction, giving more detail of what it\naffects."}, "entryValue" {"type" "array", "description" "For <code>choice</code> or <code>multiselect</code> restrictions, the list\nof possible entries' machine-readable values. These values should be used\nin the configuration, either as a single <code>string</code> value for a\n<code>choice</code> restriction or in a <code>stringArray</code> for a\n<code>multiselect</code> restriction.", "items" {"type" "string"}}}}, "DevicesListResponse" {"properties" {"device" {"description" "A managed device.", "items" {"$ref" "Device"}, "type" "array"}}, "type" "object", "id" "DevicesListResponse"}}}