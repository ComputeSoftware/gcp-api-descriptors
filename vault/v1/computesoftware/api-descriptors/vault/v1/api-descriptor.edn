#:compute.gcp.descriptor{:name "vault", :title "G Suite Vault API", :api-version "v1", :revision "20200416", :endpoint #:compute.gcp.descriptor{:url "https://vault.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"location" "query", "description" "JSONP", "type" "string"}, "uploadType" {"type" "string", "location" "query", "description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."}, "key" {"location" "query", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "type" "string"}, "access_token" {"location" "query", "description" "OAuth access token.", "type" "string"}, "oauth_token" {"type" "string", "location" "query", "description" "OAuth 2.0 token for the current user."}, "prettyPrint" {"location" "query", "description" "Returns response with indentations and line breaks.", "type" "boolean", "default" "true"}, "alt" {"enum" ["json" "media" "proto"], "type" "string", "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "location" "query", "description" "Data format for response.", "default" "json"}, "$.xgafv" {"type" "string", "enumDescriptions" ["v1 error format" "v2 error format"], "location" "query", "enum" ["1" "2"], "description" "V1 error format."}, "fields" {"location" "query", "description" "Selector specifying which fields to include in a partial response.", "type" "string"}, "upload_protocol" {"type" "string", "location" "query", "description" "Upload protocol for media (e.g. \"raw\", \"multipart\")."}, "quotaUser" {"description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "type" "string", "location" "query"}}, :op->info {"vault.matters.update" #:compute.gcp.descriptor{:http-method :put, :path "v1/matters/{matterId}", :request {"$ref" "Matter"}, :response {"$ref" "Matter"}, :parameters {"matterId" {"location" "path", "description" "The matter ID.", "required" true, "type" "string"}}, :description "Updates the specified matter.\nThis updates only the name and description of the matter, identified by\nmatter ID. Changes to any other fields are ignored.\nReturns the default view of the matter."}, "vault.matters.exports.get" #:compute.gcp.descriptor{:http-method :get, :path "v1/matters/{matterId}/exports/{exportId}", :response {"$ref" "Export"}, :parameters {"matterId" {"location" "path", "description" "The matter ID.", "required" true, "type" "string"}, "exportId" {"location" "path", "description" "The export ID.", "required" true, "type" "string"}}, :description "Gets an Export."}, "vault.matters.savedQueries.get" #:compute.gcp.descriptor{:http-method :get, :path "v1/matters/{matterId}/savedQueries/{savedQueryId}", :response {"$ref" "SavedQuery"}, :parameters {"matterId" {"required" true, "type" "string", "location" "path", "description" "The matter ID of the parent matter for which the saved query is to be\nretrieved."}, "savedQueryId" {"location" "path", "description" "ID of the saved query to be retrieved.", "required" true, "type" "string"}}, :description "Retrieves a saved query by Id."}, "vault.matters.holds.accounts.create" #:compute.gcp.descriptor{:http-method :post, :path "v1/matters/{matterId}/holds/{holdId}/accounts", :request {"$ref" "HeldAccount"}, :response {"$ref" "HeldAccount"}, :parameters {"matterId" {"required" true, "type" "string", "location" "path", "description" "The matter ID."}, "holdId" {"description" "The hold ID.", "required" true, "type" "string", "location" "path"}}, :description "Adds a HeldAccount to a hold. Accounts can only be added to a hold that\nhas no held_org_unit set. Attempting to add an account to an OU-based\nhold will result in an error."}, "vault.matters.holds.update" #:compute.gcp.descriptor{:http-method :put, :path "v1/matters/{matterId}/holds/{holdId}", :request {"$ref" "Hold"}, :response {"$ref" "Hold"}, :parameters {"matterId" {"description" "The matter ID.", "required" true, "type" "string", "location" "path"}, "holdId" {"description" "The ID of the hold.", "required" true, "type" "string", "location" "path"}}, :description "Updates the OU and/or query parameters of a hold. You cannot add accounts\nto a hold that covers an OU, nor can you add OUs to a hold that covers\nindividual accounts. Accounts listed in the hold will be ignored."}, "vault.matters.holds.list" #:compute.gcp.descriptor{:http-method :get, :path "v1/matters/{matterId}/holds", :response {"$ref" "ListHoldsResponse"}, :parameters {"view" {"location" "query", "enum" ["HOLD_VIEW_UNSPECIFIED" "BASIC_HOLD" "FULL_HOLD"], "description" "Specifies which parts of the Hold to return.", "type" "string"}, "matterId" {"description" "The matter ID.", "required" true, "type" "string", "location" "path"}, "pageToken" {"type" "string", "location" "query", "description" "The pagination token as returned in the response.\nAn empty token means start from the beginning."}, "pageSize" {"type" "integer", "location" "query", "description" "The number of holds to return in the response, between 0 and 100 inclusive.\nLeaving this empty, or as 0, is the same as page_size = 100.", "format" "int32"}}, :description "Lists holds within a matter. An empty page token in ListHoldsResponse\ndenotes no more holds to list."}, "vault.matters.holds.accounts.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1/matters/{matterId}/holds/{holdId}/accounts/{accountId}", :response {"$ref" "Empty"}, :parameters {"matterId" {"description" "The matter ID.", "required" true, "type" "string", "location" "path"}, "holdId" {"description" "The hold ID.", "required" true, "type" "string", "location" "path"}, "accountId" {"location" "path", "description" "The ID of the account to remove from the hold.", "required" true, "type" "string"}}, :description "Removes a HeldAccount from a hold. If this request leaves the hold with\nno held accounts, the hold will not apply to any accounts."}, "vault.matters.holds.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1/matters/{matterId}/holds/{holdId}", :response {"$ref" "Empty"}, :parameters {"holdId" {"required" true, "type" "string", "location" "path", "description" "The hold ID."}, "matterId" {"location" "path", "description" "The matter ID.", "required" true, "type" "string"}}, :description "Removes a hold by ID. This will release any HeldAccounts on this Hold."}, "vault.matters.holds.get" #:compute.gcp.descriptor{:http-method :get, :path "v1/matters/{matterId}/holds/{holdId}", :response {"$ref" "Hold"}, :parameters {"holdId" {"location" "path", "description" "The hold ID.", "required" true, "type" "string"}, "view" {"type" "string", "location" "query", "enum" ["HOLD_VIEW_UNSPECIFIED" "BASIC_HOLD" "FULL_HOLD"], "description" "Specifies which parts of the Hold to return."}, "matterId" {"location" "path", "description" "The matter ID.", "required" true, "type" "string"}}, :description "Gets a hold by ID."}, "vault.matters.holds.addHeldAccounts" #:compute.gcp.descriptor{:http-method :post, :path "v1/matters/{matterId}/holds/{holdId}:addHeldAccounts", :request {"$ref" "AddHeldAccountsRequest"}, :response {"$ref" "AddHeldAccountsResponse"}, :parameters {"holdId" {"required" true, "type" "string", "location" "path", "description" "The hold ID."}, "matterId" {"location" "path", "description" "The matter ID.", "required" true, "type" "string"}}, :description "Adds HeldAccounts to a hold. Returns a list of accounts that have been\nsuccessfully added. Accounts can only be added to an existing account-based\nhold."}, "vault.matters.addPermissions" #:compute.gcp.descriptor{:http-method :post, :path "v1/matters/{matterId}:addPermissions", :request {"$ref" "AddMatterPermissionsRequest"}, :response {"$ref" "MatterPermission"}, :parameters {"matterId" {"location" "path", "description" "The matter ID.", "required" true, "type" "string"}}, :description "Adds an account as a matter collaborator."}, "vault.matters.savedQueries.create" #:compute.gcp.descriptor{:http-method :post, :path "v1/matters/{matterId}/savedQueries", :request {"$ref" "SavedQuery"}, :response {"$ref" "SavedQuery"}, :parameters {"matterId" {"location" "path", "description" "The matter ID of the parent matter for which the saved query is to be\ncreated.", "required" true, "type" "string"}}, :description "Creates a saved query."}, "vault.matters.exports.list" #:compute.gcp.descriptor{:http-method :get, :path "v1/matters/{matterId}/exports", :response {"$ref" "ListExportsResponse"}, :parameters {"matterId" {"location" "path", "description" "The matter ID.", "required" true, "type" "string"}, "pageToken" {"type" "string", "location" "query", "description" "The pagination token as returned in the response."}, "pageSize" {"location" "query", "description" "The number of exports to return in the response.", "format" "int32", "type" "integer"}}, :description "Lists Exports."}, "vault.matters.holds.removeHeldAccounts" #:compute.gcp.descriptor{:http-method :post, :path "v1/matters/{matterId}/holds/{holdId}:removeHeldAccounts", :request {"$ref" "RemoveHeldAccountsRequest"}, :response {"$ref" "RemoveHeldAccountsResponse"}, :parameters {"holdId" {"location" "path", "description" "The hold ID.", "required" true, "type" "string"}, "matterId" {"description" "The matter ID.", "required" true, "type" "string", "location" "path"}}, :description "Removes HeldAccounts from a hold. Returns a list of statuses in the same\norder as the request. If this request leaves the hold with no held\naccounts, the hold will not apply to any accounts."}, "vault.matters.get" #:compute.gcp.descriptor{:http-method :get, :path "v1/matters/{matterId}", :response {"$ref" "Matter"}, :parameters {"view" {"type" "string", "location" "query", "enum" ["VIEW_UNSPECIFIED" "BASIC" "FULL"], "description" "Specifies which parts of the Matter to return in the response."}, "matterId" {"location" "path", "description" "The matter ID.", "required" true, "type" "string"}}, :description "Gets the specified matter."}, "vault.matters.removePermissions" #:compute.gcp.descriptor{:http-method :post, :path "v1/matters/{matterId}:removePermissions", :request {"$ref" "RemoveMatterPermissionsRequest"}, :response {"$ref" "Empty"}, :parameters {"matterId" {"location" "path", "description" "The matter ID.", "required" true, "type" "string"}}, :description "Removes an account as a matter collaborator."}, "vault.matters.savedQueries.list" #:compute.gcp.descriptor{:http-method :get, :path "v1/matters/{matterId}/savedQueries", :response {"$ref" "ListSavedQueriesResponse"}, :parameters {"matterId" {"description" "The matter ID of the parent matter for which the saved queries are to be\nretrieved.", "required" true, "type" "string", "location" "path"}, "pageToken" {"type" "string", "location" "query", "description" "The pagination token as returned in the previous response.\nAn empty token means start from the beginning."}, "pageSize" {"location" "query", "description" "The maximum number of saved queries to return.", "format" "int32", "type" "integer"}}, :description "Lists saved queries within a matter. An empty page token in\nListSavedQueriesResponse denotes no more saved queries to list."}, "vault.matters.exports.create" #:compute.gcp.descriptor{:http-method :post, :path "v1/matters/{matterId}/exports", :request {"$ref" "Export"}, :response {"$ref" "Export"}, :parameters {"matterId" {"description" "The matter ID.", "required" true, "type" "string", "location" "path"}}, :description "Creates an Export."}, "vault.matters.undelete" #:compute.gcp.descriptor{:http-method :post, :path "v1/matters/{matterId}:undelete", :request {"$ref" "UndeleteMatterRequest"}, :response {"$ref" "Matter"}, :parameters {"matterId" {"location" "path", "description" "The matter ID.", "required" true, "type" "string"}}, :description "Undeletes the specified matter. Returns matter with updated state."}, "vault.matters.holds.accounts.list" #:compute.gcp.descriptor{:http-method :get, :path "v1/matters/{matterId}/holds/{holdId}/accounts", :response {"$ref" "ListHeldAccountsResponse"}, :parameters {"matterId" {"required" true, "type" "string", "location" "path", "description" "The matter ID."}, "holdId" {"location" "path", "description" "The hold ID.", "required" true, "type" "string"}}, :description "Lists HeldAccounts for a hold. This will only list individually specified\nheld accounts. If the hold is on an OU, then use\n<a href=\"https://developers.google.com/admin-sdk/\">Admin SDK</a>\nto enumerate its members."}, "vault.matters.exports.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1/matters/{matterId}/exports/{exportId}", :response {"$ref" "Empty"}, :parameters {"matterId" {"description" "The matter ID.", "required" true, "type" "string", "location" "path"}, "exportId" {"location" "path", "description" "The export ID.", "required" true, "type" "string"}}, :description "Deletes an Export."}, "vault.matters.close" #:compute.gcp.descriptor{:http-method :post, :path "v1/matters/{matterId}:close", :request {"$ref" "CloseMatterRequest"}, :response {"$ref" "CloseMatterResponse"}, :parameters {"matterId" {"description" "The matter ID.", "required" true, "type" "string", "location" "path"}}, :description "Closes the specified matter. Returns matter with updated state."}, "vault.matters.create" #:compute.gcp.descriptor{:http-method :post, :path "v1/matters", :request {"$ref" "Matter"}, :response {"$ref" "Matter"}, :parameters {}, :description "Creates a new matter with the given name and description. The initial state\nis open, and the owner is the method caller. Returns the created matter\nwith default view."}, "vault.operations.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1/{+name}", :response {"$ref" "Empty"}, :parameters {"name" {"pattern" "^operations/.*$", "location" "path", "description" "The name of the operation resource to be deleted.", "required" true, "type" "string"}}, :description "Deletes a long-running operation. This method indicates that the client is\nno longer interested in the operation result. It does not cancel the\noperation. If the server doesn't support this method, it returns\n`google.rpc.Code.UNIMPLEMENTED`."}, "vault.matters.holds.create" #:compute.gcp.descriptor{:http-method :post, :path "v1/matters/{matterId}/holds", :request {"$ref" "Hold"}, :response {"$ref" "Hold"}, :parameters {"matterId" {"location" "path", "description" "The matter ID.", "required" true, "type" "string"}}, :description "Creates a hold in the given matter."}, "vault.matters.reopen" #:compute.gcp.descriptor{:http-method :post, :path "v1/matters/{matterId}:reopen", :request {"$ref" "ReopenMatterRequest"}, :response {"$ref" "ReopenMatterResponse"}, :parameters {"matterId" {"description" "The matter ID.", "required" true, "type" "string", "location" "path"}}, :description "Reopens the specified matter. Returns matter with updated state."}, "vault.matters.list" #:compute.gcp.descriptor{:http-method :get, :path "v1/matters", :response {"$ref" "ListMattersResponse"}, :parameters {"view" {"type" "string", "location" "query", "enum" ["VIEW_UNSPECIFIED" "BASIC" "FULL"], "description" "Specifies which parts of the matter to return in response."}, "state" {"location" "query", "enum" ["STATE_UNSPECIFIED" "OPEN" "CLOSED" "DELETED"], "description" "If set, list only matters with that specific state. The default is listing\nmatters of all states.", "type" "string"}, "pageToken" {"description" "The pagination token as returned in the response.", "type" "string", "location" "query"}, "pageSize" {"description" "The number of matters to return in the response.\nDefault and maximum are 100.", "format" "int32", "type" "integer", "location" "query"}}, :description "Lists matters the user has access to."}, "vault.matters.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1/matters/{matterId}", :response {"$ref" "Matter"}, :parameters {"matterId" {"location" "path", "description" "The matter ID", "required" true, "type" "string"}}, :description "Deletes the specified matter. Returns matter with updated state."}, "vault.matters.savedQueries.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1/matters/{matterId}/savedQueries/{savedQueryId}", :response {"$ref" "Empty"}, :parameters {"matterId" {"location" "path", "description" "The matter ID of the parent matter for which the saved query is to be\ndeleted.", "required" true, "type" "string"}, "savedQueryId" {"location" "path", "description" "ID of the saved query to be deleted.", "required" true, "type" "string"}}, :description "Deletes a saved query by Id."}}, :schemas {"HangoutsChatExportOptions" {"description" "The options for hangouts chat export.", "type" "object", "properties" {"exportFormat" {"type" "string", "enumDescriptions" ["No export format specified." "MBOX as export format." "PST as export format"], "enum" ["EXPORT_FORMAT_UNSPECIFIED" "MBOX" "PST"], "description" "The export format for hangouts chat export."}}, "id" "HangoutsChatExportOptions"}, "HeldMailQuery" {"id" "HeldMailQuery", "description" "Query options for mail holds.", "type" "object", "properties" {"startTime" {"description" "The start time range for the search query. These timestamps are in GMT and\nrounded down to the start of the given date.", "format" "google-datetime", "type" "string"}, "terms" {"description" "The search terms for the hold.", "type" "string"}, "endTime" {"description" "The end time range for the search query. These timestamps are in GMT and\nrounded down to the start of the given date.", "format" "google-datetime", "type" "string"}}}, "AddHeldAccountResult" {"description" "A status detailing the status of each account creation, and the\nHeldAccount, if successful.", "type" "object", "properties" {"account" {"$ref" "HeldAccount", "description" "If present, this account was successfully created."}, "status" {"$ref" "Status", "description" "This represents the success status. If failed, check message."}}, "id" "AddHeldAccountResult"}, "Empty" {"type" "object", "properties" {}, "id" "Empty", "description" "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`."}, "Matter" {"description" "Represents a matter.", "type" "object", "properties" {"state" {"enumDescriptions" ["The matter has no specified state." "This matter is open." "This matter is closed." "This matter is deleted."], "enum" ["STATE_UNSPECIFIED" "OPEN" "CLOSED" "DELETED"], "description" "The state of the matter.", "type" "string"}, "name" {"description" "The name of the matter.", "type" "string"}, "matterPermissions" {"description" "List of users and access to the matter. Currently there is no programmer\ndefined limit on the number of permissions a matter can have.", "type" "array", "items" {"$ref" "MatterPermission"}}, "description" {"description" "The description of the matter.", "type" "string"}, "matterId" {"type" "string", "description" "The matter ID which is generated by the server.\nShould be blank when creating a new matter."}}, "id" "Matter"}, "ListHoldsResponse" {"type" "object", "properties" {"holds" {"type" "array", "items" {"$ref" "Hold"}, "description" "The list of holds."}, "nextPageToken" {"type" "string", "description" "Page token to retrieve the next page of results in the list.\nIf this is empty, then there are no more holds to list."}}, "id" "ListHoldsResponse", "description" "The holds for a matter."}, "MatterPermission" {"description" "Currently each matter only has one owner, and all others are collaborators.\nWhen an account is purged, its corresponding MatterPermission resources\ncease to exist.", "type" "object", "properties" {"role" {"enum" ["ROLE_UNSPECIFIED" "COLLABORATOR" "OWNER"], "description" "The user's role in this matter.", "type" "string", "enumDescriptions" ["No role assigned." "A collaborator to the matter." "The owner of the matter."]}, "accountId" {"description" "The account ID, as provided by <a\nhref=\"https://developers.google.com/admin-sdk/\">Admin SDK</a>.", "type" "string"}}, "id" "MatterPermission"}, "HeldDriveQuery" {"description" "Query options for Drive holds.", "type" "object", "properties" {"includeTeamDriveFiles" {"description" "If true, include files in Team Drives in the hold.", "type" "boolean"}, "includeSharedDriveFiles" {"type" "boolean", "description" "If true, include files in shared drives in the hold."}}, "id" "HeldDriveQuery"}, "ListExportsResponse" {"description" "The holds for a matter.", "type" "object", "properties" {"exports" {"description" "The list of exports.", "type" "array", "items" {"$ref" "Export"}}, "nextPageToken" {"description" "Page token to retrieve the next page of results in the list.", "type" "string"}}, "id" "ListExportsResponse"}, "UndeleteMatterRequest" {"description" "Undelete a matter by ID.", "type" "object", "properties" {}, "id" "UndeleteMatterRequest"}, "ListMattersResponse" {"id" "ListMattersResponse", "description" "Provides the list of matters.", "type" "object", "properties" {"nextPageToken" {"description" "Page token to retrieve the next page of results in the list.", "type" "string"}, "matters" {"description" "List of matters.", "type" "array", "items" {"$ref" "Matter"}}}}, "MailExportOptions" {"type" "object", "properties" {"exportFormat" {"description" "The export file format.", "type" "string", "enumDescriptions" ["No export format specified." "MBOX as export format." "PST as export format"], "enum" ["EXPORT_FORMAT_UNSPECIFIED" "MBOX" "PST"]}, "showConfidentialModeContent" {"description" "Set to true to export confidential mode content.", "type" "boolean"}}, "id" "MailExportOptions", "description" "The options for mail export."}, "RemoveHeldAccountsResponse" {"description" "Response for batch delete held accounts.", "type" "object", "properties" {"statuses" {"description" "A list of statuses for deleted accounts. Results have the\nsame order as the request.", "type" "array", "items" {"$ref" "Status"}}}, "id" "RemoveHeldAccountsResponse"}, "ExportStats" {"id" "ExportStats", "description" "Stats of an export.", "type" "object", "properties" {"sizeInBytes" {"description" "The size of export in bytes.", "format" "int64", "type" "string"}, "exportedArtifactCount" {"description" "The number of documents already processed by the export.", "format" "int64", "type" "string"}, "totalArtifactCount" {"description" "The number of documents to be exported.", "format" "int64", "type" "string"}}}, "AccountInfo" {"description" "Accounts to search", "type" "object", "properties" {"emails" {"description" "A set of accounts to search.", "type" "array", "items" {"type" "string"}}}, "id" "AccountInfo"}, "HeldHangoutsChatQuery" {"type" "object", "properties" {"includeRooms" {"type" "boolean", "description" "If true, include rooms the user has participated in."}}, "id" "HeldHangoutsChatQuery", "description" "Query options for hangouts chat holds."}, "CorpusQuery" {"description" "Corpus specific queries.", "type" "object", "properties" {"mailQuery" {"$ref" "HeldMailQuery", "description" "Details pertaining to mail holds. If set, corpus must be mail."}, "groupsQuery" {"$ref" "HeldGroupsQuery", "description" "Details pertaining to Groups holds. If set, corpus must be Groups."}, "hangoutsChatQuery" {"$ref" "HeldHangoutsChatQuery", "description" "Details pertaining to Hangouts Chat holds. If set, corpus must be\nHangouts Chat."}, "driveQuery" {"$ref" "HeldDriveQuery", "description" "Details pertaining to Drive holds. If set, corpus must be Drive."}}, "id" "CorpusQuery"}, "HeldGroupsQuery" {"id" "HeldGroupsQuery", "description" "Query options for group holds.", "type" "object", "properties" {"startTime" {"description" "The start time range for the search query. These timestamps are in GMT and\nrounded down to the start of the given date.", "format" "google-datetime", "type" "string"}, "terms" {"description" "The search terms for the hold.", "type" "string"}, "endTime" {"description" "The end time range for the search query. These timestamps are in GMT and\nrounded down to the start of the given date.", "format" "google-datetime", "type" "string"}}}, "ExportOptions" {"description" "Export advanced options", "type" "object", "properties" {"groupsOptions" {"description" "Option available for groups export.", "$ref" "GroupsExportOptions"}, "driveOptions" {"description" "Option available for Drive export.", "$ref" "DriveExportOptions"}, "mailOptions" {"$ref" "MailExportOptions", "description" "Option available for mail export."}, "region" {"type" "string", "enumDescriptions" ["The region is unspecified. Will be treated the same as ANY." "Any region." "US region." "Europe region."], "enum" ["EXPORT_REGION_UNSPECIFIED" "ANY" "US" "EUROPE"], "description" "The requested export location."}, "hangoutsChatOptions" {"description" "Option available for hangouts chat export.", "$ref" "HangoutsChatExportOptions"}}, "id" "ExportOptions"}, "AddHeldAccountsRequest" {"id" "AddHeldAccountsRequest", "description" "Add a list of accounts to a hold.", "type" "object", "properties" {"emails" {"description" "Emails to identify which accounts to add. Only emails or only account_ids\nshould be specified, but not both.", "type" "array", "items" {"type" "string"}}, "accountIds" {"description" "Account IDs to identify which accounts to add. Only account_ids or only\nemails should be specified, but not both.", "type" "array", "items" {"type" "string"}}}}, "Status" {"type" "object", "properties" {"message" {"type" "string", "description" "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client."}, "details" {"description" "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.", "type" "array", "items" {"type" "object", "additionalProperties" {"type" "any", "description" "Properties of the object. Contains field @type with type URL."}}}, "code" {"type" "integer", "description" "The status code, which should be an enum value of google.rpc.Code.", "format" "int32"}}, "id" "Status", "description" "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}, "CloseMatterResponse" {"description" "Response to a CloseMatterRequest.", "type" "object", "properties" {"matter" {"$ref" "Matter", "description" "The updated matter, with state CLOSED."}}, "id" "CloseMatterResponse"}, "Query" {"description" "A query definition relevant for search & export.", "type" "object", "properties" {"driveOptions" {"$ref" "DriveOptions", "description" "For Drive search, specify more options in this field."}, "hangoutsChatOptions" {"$ref" "HangoutsChatOptions", "description" "For hangouts chat search, specify more options in this field. (read-only)"}, "orgUnitInfo" {"$ref" "OrgUnitInfo", "description" "When 'ORG_UNIT' is chosen as as search method, org_unit_info needs\nto be specified."}, "method" {"description" "The search method to use. This field is similar to the search_method field\nbut is introduced to support shared drives. It supports all\nsearch method types. In case the search_method is TEAM_DRIVE the response\nof this field will be SHARED_DRIVE only.", "type" "string", "enumDescriptions" ["A search method must be specified. If a request does not specify a\nsearch method, it will be rejected." "Will search all accounts provided in account_info." "Will search all accounts in the OU specified in org_unit_info." "Will search for all accounts in the Team Drive specified in\nteam_drive_info." "Will search for all accounts in the organization.\nNo need to set account_info or org_unit_info." "Will search in the Room specified in\nhangout_chats_info. (read-only)" "Will search for all accounts in the shared drive specified in\nshared_drive_info."], "enum" ["SEARCH_METHOD_UNSPECIFIED" "ACCOUNT" "ORG_UNIT" "TEAM_DRIVE" "ENTIRE_ORG" "ROOM" "SHARED_DRIVE"]}, "timeZone" {"description" "The time zone name.\nIt should be an IANA TZ name, such as \"America/Los_Angeles\".\nFor more information, see\n<a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\">Time\nZone</a>.", "type" "string"}, "teamDriveInfo" {"$ref" "TeamDriveInfo", "description" "When 'TEAM_DRIVE' is chosen as search method, team_drive_info needs to be\nspecified."}, "startTime" {"type" "string", "description" "The start time range for the search query. These timestamps are in GMT and\nrounded down to the start of the given date.", "format" "google-datetime"}, "dataScope" {"enum" ["DATA_SCOPE_UNSPECIFIED" "ALL_DATA" "HELD_DATA" "UNPROCESSED_DATA"], "description" "The data source to search from.", "type" "string", "enumDescriptions" ["No data scope specified." "All available data." "Data on hold." "Data not processed."]}, "corpus" {"type" "string", "enumDescriptions" ["No corpus specified." "Drive." "Mail." "Groups." "Hangouts Chat."], "enum" ["CORPUS_TYPE_UNSPECIFIED" "DRIVE" "MAIL" "GROUPS" "HANGOUTS_CHAT"], "description" "The corpus to search."}, "mailOptions" {"$ref" "MailOptions", "description" "For mail search, specify more options in this field."}, "terms" {"type" "string", "description" "The corpus-specific\n<a href=\"https://support.google.com/vault/answer/2474474\">search\noperators</a> used to generate search results."}, "accountInfo" {"$ref" "AccountInfo", "description" "When 'ACCOUNT' is chosen as search method,\naccount_info needs to be specified."}, "endTime" {"description" "The end time range for the search query. These timestamps are in GMT and\nrounded down to the start of the given date.", "format" "google-datetime", "type" "string"}, "sharedDriveInfo" {"$ref" "SharedDriveInfo", "description" "When 'SHARED_DRIVE' is chosen as search method, shared_drive_info needs\nto be specified."}, "searchMethod" {"type" "string", "enumDescriptions" ["A search method must be specified. If a request does not specify a\nsearch method, it will be rejected." "Will search all accounts provided in account_info." "Will search all accounts in the OU specified in org_unit_info." "Will search for all accounts in the Team Drive specified in\nteam_drive_info." "Will search for all accounts in the organization.\nNo need to set account_info or org_unit_info." "Will search in the Room specified in\nhangout_chats_info. (read-only)" "Will search for all accounts in the shared drive specified in\nshared_drive_info."], "enum" ["SEARCH_METHOD_UNSPECIFIED" "ACCOUNT" "ORG_UNIT" "TEAM_DRIVE" "ENTIRE_ORG" "ROOM" "SHARED_DRIVE"], "description" "The search method to use."}, "hangoutsChatInfo" {"$ref" "HangoutsChatInfo", "description" "When 'ROOM' is chosen as search method, hangout_chats_info needs to be\nspecified. (read-only)"}}, "id" "Query"}, "ListSavedQueriesResponse" {"description" "Definition of the response for method ListSaveQuery.", "type" "object", "properties" {"savedQueries" {"description" "List of output saved queries.", "type" "array", "items" {"$ref" "SavedQuery"}}, "nextPageToken" {"description" "Page token to retrieve the next page of results in the list.\nIf this is empty, then there are no more saved queries to list.", "type" "string"}}, "id" "ListSavedQueriesResponse"}, "ReopenMatterResponse" {"id" "ReopenMatterResponse", "description" "Response to a ReopenMatterRequest.", "type" "object", "properties" {"matter" {"$ref" "Matter", "description" "The updated matter, with state OPEN."}}}, "Export" {"description" "An export", "type" "object", "properties" {"matterId" {"description" "Output only. The matter ID.", "type" "string"}, "cloudStorageSink" {"$ref" "CloudStorageSink", "description" "Output only. Export sink for cloud storage files."}, "requester" {"$ref" "UserInfo", "description" "Output only. The requester of the export."}, "exportOptions" {"$ref" "ExportOptions", "description" "Advanced options of the export."}, "query" {"$ref" "Query", "description" "The search query being exported."}, "id" {"description" "Output only. The generated export ID.", "type" "string"}, "name" {"description" "The export name.", "type" "string"}, "createTime" {"type" "string", "description" "Output only. The time when the export was created.", "format" "google-datetime"}, "status" {"enum" ["EXPORT_STATUS_UNSPECIFIED" "COMPLETED" "FAILED" "IN_PROGRESS"], "description" "Output only. The export status.", "type" "string", "enumDescriptions" ["The status is unspecified." "The export completed." "The export failed." "The export is still being executed."]}, "stats" {"$ref" "ExportStats", "description" "Output only. Export statistics."}}, "id" "Export"}, "ReopenMatterRequest" {"type" "object", "properties" {}, "id" "ReopenMatterRequest", "description" "Reopen a matter by ID."}, "RemoveHeldAccountsRequest" {"type" "object", "properties" {"accountIds" {"type" "array", "items" {"type" "string"}, "description" "Account IDs to identify HeldAccounts to remove."}}, "id" "RemoveHeldAccountsRequest", "description" "Remove a list of accounts from a hold."}, "DriveOptions" {"type" "object", "properties" {"includeSharedDrives" {"description" "Set to true to include shared drive.", "type" "boolean"}, "versionDate" {"description" "Search the versions of the Drive file\nas of the reference date. These timestamps are in GMT and\nrounded down to the given date.", "format" "google-datetime", "type" "string"}, "includeTeamDrives" {"type" "boolean", "description" "Set to true to include Team Drive."}}, "id" "DriveOptions", "description" "Drive search advanced options"}, "HeldOrgUnit" {"type" "object", "properties" {"holdTime" {"description" "When the org unit was put on hold. This property is immutable.", "format" "google-datetime", "type" "string"}, "orgUnitId" {"description" "The org unit's immutable ID as provided by the Admin SDK.", "type" "string"}}, "id" "HeldOrgUnit", "description" "A organizational unit being held in a particular hold.\nThis structure is immutable."}, "CloudStorageFile" {"type" "object", "properties" {"bucketName" {"description" "The cloud storage bucket name of this export file.\nCan be used in cloud storage JSON/XML API.", "type" "string"}, "size" {"type" "string", "description" "The size of the export file.", "format" "int64"}, "md5Hash" {"type" "string", "description" "The md5 hash of the file."}, "objectName" {"description" "The cloud storage object name of this export file.\nCan be used in cloud storage JSON/XML API.", "type" "string"}}, "id" "CloudStorageFile", "description" "An export file on cloud storage"}, "MailOptions" {"type" "object", "properties" {"excludeDrafts" {"description" "Set to true to exclude drafts.", "type" "boolean"}}, "id" "MailOptions", "description" "Mail search advanced options"}, "RemoveMatterPermissionsRequest" {"type" "object", "properties" {"accountId" {"description" "The account ID.", "type" "string"}}, "id" "RemoveMatterPermissionsRequest", "description" "Remove an account as a matter collaborator."}, "AddMatterPermissionsRequest" {"type" "object", "properties" {"sendEmails" {"description" "True to send notification email to the added account.\nFalse to not send notification email.", "type" "boolean"}, "matterPermission" {"description" "The MatterPermission to add.", "$ref" "MatterPermission"}, "ccMe" {"type" "boolean", "description" "Only relevant if send_emails is true.\nTrue to CC requestor in the email message.\nFalse to not CC requestor."}}, "id" "AddMatterPermissionsRequest", "description" "Add an account with the permission specified. The role cannot be owner.\nIf an account already has a role in the matter, it will be\noverwritten."}, "SharedDriveInfo" {"description" "Shared drives to search", "type" "object", "properties" {"sharedDriveIds" {"description" "List of Shared drive IDs, as provided by <a\nhref=\"https://developers.google.com/drive\">Drive API</a>.", "type" "array", "items" {"type" "string"}}}, "id" "SharedDriveInfo"}, "CloudStorageSink" {"id" "CloudStorageSink", "description" "Export sink for cloud storage files.", "type" "object", "properties" {"files" {"description" "Output only. The exported files on cloud storage.", "type" "array", "items" {"$ref" "CloudStorageFile"}}}}, "HeldAccount" {"description" "An account being held in a particular hold. This structure is immutable.\nThis can be either a single user or a google group, depending on the corpus.", "type" "object", "properties" {"email" {"description" "The primary email address of the account. If used as an input, this takes\nprecedence over account ID.", "type" "string"}, "accountId" {"description" "The account's ID as provided by the\n<a href=\"https://developers.google.com/admin-sdk/\">Admin SDK</a>.", "type" "string"}, "firstName" {"description" "Output only. The first name of the account holder.", "type" "string"}, "holdTime" {"description" "Output only. When the account was put on hold.", "format" "google-datetime", "type" "string"}, "lastName" {"type" "string", "description" "Output only. The last name of the account holder."}}, "id" "HeldAccount"}, "CloseMatterRequest" {"type" "object", "properties" {}, "id" "CloseMatterRequest", "description" "Close a matter by ID."}, "DriveExportOptions" {"description" "The options for Drive export.", "type" "object", "properties" {"includeAccessInfo" {"type" "boolean", "description" "Set to true to include access level information for users\nwith <a\nhref=\"https://support.google.com/vault/answer/6099459#metadata\">indirect\naccess</a> to files."}}, "id" "DriveExportOptions"}, "OrgUnitInfo" {"description" "Org Unit to search", "type" "object", "properties" {"orgUnitId" {"description" "Org unit to search, as provided by the\n<a href=\"https://developers.google.com/admin-sdk/directory/\">Admin SDK\nDirectory API</a>.", "type" "string"}}, "id" "OrgUnitInfo"}, "SavedQuery" {"type" "object", "properties" {"matterId" {"type" "string", "description" "Output only. The matter ID of the associated matter.\nThe server does not look at this field during create and always uses matter\nid in the URL."}, "createTime" {"description" "Output only. The server generated timestamp at which saved query was\ncreated.", "format" "google-datetime", "type" "string"}, "savedQueryId" {"description" "A unique identifier for the saved query.", "type" "string"}, "displayName" {"description" "Name of the saved query.", "type" "string"}, "query" {"description" "The underlying Query object which contains all the information of the saved\nquery.", "$ref" "Query"}}, "id" "SavedQuery", "description" "Definition of the saved query."}, "GroupsExportOptions" {"description" "The options for groups export.", "type" "object", "properties" {"exportFormat" {"description" "The export format for groups export.", "type" "string", "enumDescriptions" ["No export format specified." "MBOX as export format." "PST as export format"], "enum" ["EXPORT_FORMAT_UNSPECIFIED" "MBOX" "PST"]}}, "id" "GroupsExportOptions"}, "HangoutsChatInfo" {"id" "HangoutsChatInfo", "description" "Accounts to search", "type" "object", "properties" {"roomId" {"description" "A set of rooms to search.", "type" "array", "items" {"type" "string"}}}}, "ListHeldAccountsResponse" {"description" "Returns a list of held accounts for a hold.", "type" "object", "properties" {"accounts" {"type" "array", "items" {"$ref" "HeldAccount"}, "description" "The held accounts on a hold."}}, "id" "ListHeldAccountsResponse"}, "HangoutsChatOptions" {"description" "Hangouts chat search advanced options", "type" "object", "properties" {"includeRooms" {"description" "Set to true to include rooms.", "type" "boolean"}}, "id" "HangoutsChatOptions"}, "Hold" {"description" "Represents a hold within Vault. A hold restricts purging of\nartifacts based on the combination of the query and accounts restrictions.\nA hold can be configured to either apply to an explicitly configured set\nof accounts, or can be applied to all members of an organizational unit.", "type" "object", "properties" {"query" {"description" "The corpus-specific query. If set, the corpusQuery must match corpus\ntype.", "$ref" "CorpusQuery"}, "orgUnit" {"description" "If set, the hold applies to all members of the organizational unit and\naccounts must be empty. This property is mutable. For groups holds,\nset the accounts field.", "$ref" "HeldOrgUnit"}, "corpus" {"enum" ["CORPUS_TYPE_UNSPECIFIED" "DRIVE" "MAIL" "GROUPS" "HANGOUTS_CHAT"], "description" "The corpus to be searched.", "type" "string", "enumDescriptions" ["No corpus specified." "Drive." "Mail." "Groups." "Hangouts Chat."]}, "updateTime" {"type" "string", "description" "The last time this hold was modified.", "format" "google-datetime"}, "name" {"type" "string", "description" "The name of the hold."}, "holdId" {"description" "The unique immutable ID of the hold. Assigned during creation.", "type" "string"}, "accounts" {"type" "array", "items" {"$ref" "HeldAccount"}, "description" "If set, the hold applies to the enumerated accounts and org_unit must be\nempty."}}, "id" "Hold"}, "TeamDriveInfo" {"type" "object", "properties" {"teamDriveIds" {"description" "List of Team Drive IDs, as provided by <a\nhref=\"https://developers.google.com/drive\">Drive API</a>.", "type" "array", "items" {"type" "string"}}}, "id" "TeamDriveInfo", "description" "Team Drives to search"}, "AddHeldAccountsResponse" {"type" "object", "properties" {"responses" {"type" "array", "items" {"$ref" "AddHeldAccountResult"}, "description" "The list of responses, in the same order as the batch request."}}, "id" "AddHeldAccountsResponse", "description" "Response for batch create held accounts."}, "UserInfo" {"description" "User's information.", "type" "object", "properties" {"email" {"description" "The email address of the user.", "type" "string"}, "displayName" {"description" "The displayed name of the user.", "type" "string"}}, "id" "UserInfo"}}}