#:compute.api-descriptor{:endpoint {:schemes ["https"], :host "translation.googleapis.com", :base-path "/language/translate"}, :op->spec {"language.translations.list" {:description "Translates input text, returning translated text.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/TranslationsListResponse"}}}, :parameters [{:collectionFormat "multi", :description "The customization id for translate", :in "query", :items {:type "string"}, :name "cid", :type "array"} {:description "The format of the source text, in either HTML (default) or plain-text. A\nvalue of \"html\" indicates HTML and a value of \"text\" indicates plain-text.", :enum ["html" "text"], :in "query", :name "format", :type "string"} {:description "The `model` type requested for this translation. Valid values are\nlisted in public documentation.", :in "query", :name "model", :type "string"} {:collectionFormat "multi", :description "The input text to translate. Repeat this parameter to perform translation\noperations on multiple text inputs.", :in "query", :items {:type "string"}, :name "q", :required true, :type "array"} {:description "The language of the source text, set to one of the language codes listed in\nLanguage Support. If the source language is not specified, the API will\nattempt to identify the source language automatically and return it within\nthe response.", :in "query", :name "source", :type "string"} {:description "The language to use for translation of the input text, set to one of the\nlanguage codes listed in Language Support.", :in "query", :name "target", :required true, :type "string"}], :operationId "language.translations.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v2", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/bearer_token"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/pp"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "language.translations.translate" {:description "Translates input text, returning translated text.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/TranslationsListResponse"}}}, :parameters [{:in "body", :name "body", :schema {"$ref" "#/definitions/TranslateTextRequest"}}], :operationId "language.translations.translate", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v2", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/bearer_token"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/pp"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "language.detections.list" {:description "Detects the language of text within a request.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/DetectionsListResponse"}}}, :parameters [{:collectionFormat "multi", :description "The input text upon which to perform language detection. Repeat this\nparameter to perform language detection on multiple text inputs.", :in "query", :items {:type "string"}, :name "q", :required true, :type "array"}], :operationId "language.detections.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v2/detect", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/bearer_token"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/pp"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "language.detections.detect" {:description "Detects the language of text within a request.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/DetectionsListResponse"}}}, :parameters [{:in "body", :name "body", :schema {"$ref" "#/definitions/DetectLanguageRequest"}}], :operationId "language.detections.detect", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v2/detect", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/bearer_token"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/pp"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "language.languages.list" {:description "Returns a list of supported languages for translation.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/LanguagesListResponse"}}}, :parameters [{:description "The model type for which supported languages should be returned.", :in "query", :name "model", :type "string"} {:description "The language to use to return localized, human readable names of supported\nlanguages.", :in "query", :name "target", :type "string"}], :operationId "language.languages.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v2/languages", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/bearer_token"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/pp"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}}, :parameters {:quotaUser {:description "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.", :in "query", :name "quotaUser", :type "string"}, :key {:description "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", :in "query", :name "key", :type "string"}, :alt {:default "json", :description "Data format for response.", :enum ["json" "media" "proto"], :in "query", :name "alt", :type "string"}, :bearer_token {:description "OAuth bearer token.", :in "query", :name "bearer_token", :type "string"}, :pp {:default true, :description "Pretty-print response.", :in "query", :name "pp", :type "boolean"}, :access_token {:description "OAuth access token.", :in "query", :name "access_token", :type "string"}, :fields {:description "Selector specifying which fields to include in a partial response.", :in "query", :name "fields", :type "string"}, :upload_protocol {:description "Upload protocol for media (e.g. \"raw\", \"multipart\").", :in "query", :name "upload_protocol", :type "string"}, :uploadType {:description "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", :in "query", :name "uploadType", :type "string"}, :oauth_token {:description "OAuth 2.0 token for the current user.", :in "query", :name "oauth_token", :type "string"}, :prettyPrint {:default true, :description "Returns response with indentations and line breaks.", :in "query", :name "prettyPrint", :type "boolean"}, "$.xgafv" {:description "V1 error format.", :enum ["1" "2"], :in "query", :name "$.xgafv", :type "string"}, :callback {:description "JSONP", :in "query", :name "callback", :type "string"}}, :definitions {:DetectionsListResponse {:properties {:detections {:description "A detections contains detection results of several text", :items {"$ref" "#/definitions/DetectionsResource"}, :type "array"}}, :type "object"}, :TranslationsListResponse {:description "The main language translation response message.", :properties {:translations {:description "Translations contains list of translation results of given text", :items {"$ref" "#/definitions/TranslationsResource"}, :type "array"}}, :type "object"}, :LanguagesListResponse {:properties {:languages {:description "List of source/target languages supported by the translation API. If target parameter is unspecified, the list is sorted by the ASCII code point order of the language code. If target parameter is specified, the list is sorted by the collation order of the language name in the target language.", :items {"$ref" "#/definitions/LanguagesResource"}, :type "array"}}, :type "object"}, :LanguagesResource {:properties {:language {:description "Supported language code, generally consisting of its ISO 639-1\nidentifier. (E.g. 'en', 'ja'). In certain cases, BCP-47 codes including\nlanguage + region identifiers are returned (e.g. 'zh-TW' and 'zh-CH')", :type "string"}, :name {:description "Human readable name of the language localized to the target language.", :type "string"}}, :type "object"}, :TranslateTextRequest {:description "The main translation request message for the Cloud Translation API.", :properties {:format {:description "The format of the source text, in either HTML (default) or plain-text. A\nvalue of \"html\" indicates HTML and a value of \"text\" indicates plain-text.", :type "string"}, :model {:description "The `model` type requested for this translation. Valid values are\nlisted in public documentation.", :type "string"}, :q {:description "The input text to translate. Repeat this parameter to perform translation\noperations on multiple text inputs.", :items {:type "string"}, :type "array"}, :source {:description "The language of the source text, set to one of the language codes listed in\nLanguage Support. If the source language is not specified, the API will\nattempt to identify the source language automatically and return it within\nthe response.", :type "string"}, :target {:description "The language to use for translation of the input text, set to one of the\nlanguage codes listed in Language Support.", :type "string"}}, :type "object"}, :TranslationsResource {:properties {:detectedSourceLanguage {:description "The source language of the initial request, detected automatically, if\nno source language was passed within the initial request. If the\nsource language was passed, auto-detection of the language will not\noccur and this field will be empty.", :type "string"}, :model {:description "The `model` type used for this translation. Valid values are\nlisted in public documentation. Can be different from requested `model`.\nPresent only if specific model type was explicitly requested.", :type "string"}, :translatedText {:description "Text translated into the target language.", :type "string"}}, :type "object"}, :DetectLanguageRequest {:description "The request message for language detection.", :properties {:q {:description "The input text upon which to perform language detection. Repeat this\nparameter to perform language detection on multiple text inputs.", :items {:type "string"}, :type "array"}}, :type "object"}, :DetectionsResource {:description "An array of languages which we detect for the given text The most likely language list first.", :items {:properties {:confidence {:description "The confidence of the detection result of this language.", :format "float", :type "number"}, :isReliable {:description "A boolean to indicate is the language detection result reliable.", :type "boolean"}, :language {:description "The language we detected.", :type "string"}}, :type "object"}, :type "array"}, :GetSupportedLanguagesRequest {:description "The request message for discovering supported languages.", :properties {:target {:description "The language to use to return localized, human readable names of supported\nlanguages.", :type "string"}}, :type "object"}}}