#:compute.gcp.descriptor{:name "dns", :title "Cloud DNS API", :api-version "v1", :revision "20210227", :endpoint #:compute.gcp.descriptor{:url "https://dns.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"type" "string", "location" "query", "description" "JSONP"}, "uploadType" {"description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "location" "query", "type" "string"}, "key" {"description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "type" "string", "location" "query"}, "access_token" {"description" "OAuth access token.", "location" "query", "type" "string"}, "oauth_token" {"description" "OAuth 2.0 token for the current user.", "type" "string", "location" "query"}, "prettyPrint" {"type" "boolean", "default" "true", "description" "Returns response with indentations and line breaks.", "location" "query"}, "alt" {"type" "string", "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "default" "json", "description" "Data format for response.", "enum" ["json" "media" "proto"], "location" "query"}, "$.xgafv" {"enumDescriptions" ["v1 error format" "v2 error format"], "description" "V1 error format.", "enum" ["1" "2"], "type" "string", "location" "query"}, "fields" {"type" "string", "location" "query", "description" "Selector specifying which fields to include in a partial response."}, "upload_protocol" {"type" "string", "description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "location" "query"}, "quotaUser" {"location" "query", "type" "string", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."}}, :op->info {"dns.policies.patch" #:compute.gcp.descriptor{:http-method :patch, :path "dns/v1/projects/{project}/policies/{policy}", :request {"$ref" "Policy"}, :response {"$ref" "PoliciesPatchResponse"}, :parameters {"project" {"location" "path", "description" "Identifies the project addressed by this request.", "type" "string", "required" true}, "clientOperationId" {"description" "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "type" "string", "location" "query"}, "policy" {"type" "string", "location" "path", "required" true, "description" "User given friendly name of the policy addressed by this request."}}, :description "Apply a partial update to an existing Policy."}, "dns.changes.create" #:compute.gcp.descriptor{:http-method :post, :path "dns/v1/projects/{project}/managedZones/{managedZone}/changes", :request {"$ref" "Change"}, :response {"$ref" "Change"}, :parameters {"clientOperationId" {"location" "query", "type" "string", "description" "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."}, "project" {"location" "path", "description" "Identifies the project addressed by this request.", "required" true, "type" "string"}, "managedZone" {"location" "path", "required" true, "description" "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.", "type" "string"}}, :description "Atomically updates the ResourceRecordSet collection."}, "dns.managedZones.get" #:compute.gcp.descriptor{:http-method :get, :path "dns/v1/projects/{project}/managedZones/{managedZone}", :response {"$ref" "ManagedZone"}, :parameters {"clientOperationId" {"location" "query", "description" "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "type" "string"}, "project" {"location" "path", "description" "Identifies the project addressed by this request.", "type" "string", "required" true}, "managedZone" {"required" true, "type" "string", "description" "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.", "location" "path"}}, :description "Fetch the representation of an existing ManagedZone."}, "dns.changes.get" #:compute.gcp.descriptor{:http-method :get, :path "dns/v1/projects/{project}/managedZones/{managedZone}/changes/{changeId}", :response {"$ref" "Change"}, :parameters {"changeId" {"required" true, "description" "The identifier of the requested change, from a previous ResourceRecordSetsChangeResponse.", "type" "string", "location" "path"}, "clientOperationId" {"type" "string", "description" "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "location" "query"}, "managedZone" {"location" "path", "type" "string", "description" "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.", "required" true}, "project" {"required" true, "location" "path", "description" "Identifies the project addressed by this request.", "type" "string"}}, :description "Fetches the representation of an existing Change."}, "dns.policies.create" #:compute.gcp.descriptor{:http-method :post, :path "dns/v1/projects/{project}/policies", :request {"$ref" "Policy"}, :response {"$ref" "Policy"}, :parameters {"project" {"required" true, "location" "path", "type" "string", "description" "Identifies the project addressed by this request."}, "clientOperationId" {"location" "query", "type" "string", "description" "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."}}, :description "Creates a new Policy."}, "dns.policies.delete" #:compute.gcp.descriptor{:http-method :delete, :path "dns/v1/projects/{project}/policies/{policy}", :parameters {"policy" {"type" "string", "required" true, "description" "User given friendly name of the policy addressed by this request.", "location" "path"}, "clientOperationId" {"description" "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "location" "query", "type" "string"}, "project" {"location" "path", "required" true, "description" "Identifies the project addressed by this request.", "type" "string"}}, :description "Deletes a previously created Policy. Fails if the policy is still being referenced by a network."}, "dns.managedZones.list" #:compute.gcp.descriptor{:http-method :get, :path "dns/v1/projects/{project}/managedZones", :response {"$ref" "ManagedZonesListResponse"}, :parameters {"project" {"required" true, "type" "string", "description" "Identifies the project addressed by this request.", "location" "path"}, "maxResults" {"description" "Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.", "type" "integer", "format" "int32", "location" "query"}, "dnsName" {"description" "Restricts the list to return only zones with this domain name.", "location" "query", "type" "string"}, "pageToken" {"location" "query", "type" "string", "description" "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request."}}, :description "Enumerate ManagedZones that have been created but not yet deleted."}, "dns.policies.update" #:compute.gcp.descriptor{:http-method :put, :path "dns/v1/projects/{project}/policies/{policy}", :request {"$ref" "Policy"}, :response {"$ref" "PoliciesUpdateResponse"}, :parameters {"clientOperationId" {"location" "query", "type" "string", "description" "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."}, "project" {"required" true, "type" "string", "description" "Identifies the project addressed by this request.", "location" "path"}, "policy" {"required" true, "description" "User given friendly name of the policy addressed by this request.", "location" "path", "type" "string"}}, :description "Update an existing Policy."}, "dns.managedZones.create" #:compute.gcp.descriptor{:http-method :post, :path "dns/v1/projects/{project}/managedZones", :request {"$ref" "ManagedZone"}, :response {"$ref" "ManagedZone"}, :parameters {"project" {"description" "Identifies the project addressed by this request.", "type" "string", "required" true, "location" "path"}, "clientOperationId" {"description" "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "type" "string", "location" "query"}}, :description "Create a new ManagedZone."}, "dns.resourceRecordSets.list" #:compute.gcp.descriptor{:http-method :get, :path "dns/v1/projects/{project}/managedZones/{managedZone}/rrsets", :response {"$ref" "ResourceRecordSetsListResponse"}, :parameters {"type" {"type" "string", "location" "query", "description" "Restricts the list to return only records of this type. If present, the \"name\" parameter must also be present."}, "pageToken" {"description" "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.", "type" "string", "location" "query"}, "managedZone" {"location" "path", "required" true, "type" "string", "description" "Identifies the managed zone addressed by this request. Can be the managed zone name or ID."}, "maxResults" {"format" "int32", "location" "query", "description" "Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.", "type" "integer"}, "project" {"required" true, "location" "path", "description" "Identifies the project addressed by this request.", "type" "string"}, "name" {"location" "query", "description" "Restricts the list to return only records with this fully qualified domain name.", "type" "string"}}, :description "Enumerates ResourceRecordSets that you have created but not yet deleted."}, "dns.policies.list" #:compute.gcp.descriptor{:http-method :get, :path "dns/v1/projects/{project}/policies", :response {"$ref" "PoliciesListResponse"}, :parameters {"pageToken" {"type" "string", "description" "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.", "location" "query"}, "maxResults" {"format" "int32", "location" "query", "description" "Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.", "type" "integer"}, "project" {"required" true, "type" "string", "location" "path", "description" "Identifies the project addressed by this request."}}, :description "Enumerates all Policies associated with a project."}, "dns.projects.get" #:compute.gcp.descriptor{:http-method :get, :path "dns/v1/projects/{project}", :response {"$ref" "Project"}, :parameters {"clientOperationId" {"description" "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "type" "string", "location" "query"}, "project" {"type" "string", "location" "path", "description" "Identifies the project addressed by this request.", "required" true}}, :description "Fetch the representation of an existing Project."}, "dns.managedZones.patch" #:compute.gcp.descriptor{:http-method :patch, :path "dns/v1/projects/{project}/managedZones/{managedZone}", :request {"$ref" "ManagedZone"}, :response {"$ref" "Operation"}, :parameters {"managedZone" {"type" "string", "description" "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.", "location" "path", "required" true}, "clientOperationId" {"location" "query", "type" "string", "description" "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."}, "project" {"location" "path", "type" "string", "description" "Identifies the project addressed by this request.", "required" true}}, :description "Apply a partial update to an existing ManagedZone."}, "dns.managedZones.delete" #:compute.gcp.descriptor{:http-method :delete, :path "dns/v1/projects/{project}/managedZones/{managedZone}", :parameters {"clientOperationId" {"type" "string", "location" "query", "description" "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."}, "managedZone" {"type" "string", "location" "path", "required" true, "description" "Identifies the managed zone addressed by this request. Can be the managed zone name or ID."}, "project" {"location" "path", "description" "Identifies the project addressed by this request.", "required" true, "type" "string"}}, :description "Delete a previously created ManagedZone."}, "dns.dnsKeys.list" #:compute.gcp.descriptor{:http-method :get, :path "dns/v1/projects/{project}/managedZones/{managedZone}/dnsKeys", :response {"$ref" "DnsKeysListResponse"}, :parameters {"pageToken" {"description" "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.", "location" "query", "type" "string"}, "maxResults" {"type" "integer", "format" "int32", "description" "Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.", "location" "query"}, "digestType" {"description" "An optional comma-separated list of digest types to compute and display for key signing keys. If omitted, the recommended digest type is computed and displayed.", "location" "query", "type" "string"}, "managedZone" {"type" "string", "required" true, "location" "path", "description" "Identifies the managed zone addressed by this request. Can be the managed zone name or ID."}, "project" {"type" "string", "required" true, "location" "path", "description" "Identifies the project addressed by this request."}}, :description "Enumerate DnsKeys to a ResourceRecordSet collection."}, "dns.managedZoneOperations.list" #:compute.gcp.descriptor{:http-method :get, :path "dns/v1/projects/{project}/managedZones/{managedZone}/operations", :response {"$ref" "ManagedZoneOperationsListResponse"}, :parameters {"pageToken" {"description" "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.", "type" "string", "location" "query"}, "managedZone" {"required" true, "type" "string", "location" "path", "description" "Identifies the managed zone addressed by this request."}, "sortBy" {"default" "startTime", "enumDescriptions" ["" ""], "description" "Sorting criterion. The only supported values are START_TIME and ID.", "location" "query", "enum" ["startTime" "id"], "type" "string"}, "project" {"location" "path", "type" "string", "description" "Identifies the project addressed by this request.", "required" true}, "maxResults" {"description" "Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return.", "type" "integer", "location" "query", "format" "int32"}}, :description "Enumerates Operations for the given ManagedZone."}, "dns.managedZones.update" #:compute.gcp.descriptor{:http-method :put, :path "dns/v1/projects/{project}/managedZones/{managedZone}", :request {"$ref" "ManagedZone"}, :response {"$ref" "Operation"}, :parameters {"clientOperationId" {"type" "string", "location" "query", "description" "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."}, "project" {"type" "string", "required" true, "description" "Identifies the project addressed by this request.", "location" "path"}, "managedZone" {"location" "path", "required" true, "type" "string", "description" "Identifies the managed zone addressed by this request. Can be the managed zone name or ID."}}, :description "Update an existing ManagedZone."}, "dns.dnsKeys.get" #:compute.gcp.descriptor{:http-method :get, :path "dns/v1/projects/{project}/managedZones/{managedZone}/dnsKeys/{dnsKeyId}", :response {"$ref" "DnsKey"}, :parameters {"dnsKeyId" {"location" "path", "description" "The identifier of the requested DnsKey.", "type" "string", "required" true}, "digestType" {"description" "An optional comma-separated list of digest types to compute and display for key signing keys. If omitted, the recommended digest type is computed and displayed.", "location" "query", "type" "string"}, "managedZone" {"type" "string", "required" true, "location" "path", "description" "Identifies the managed zone addressed by this request. Can be the managed zone name or ID."}, "clientOperationId" {"type" "string", "location" "query", "description" "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection."}, "project" {"type" "string", "location" "path", "description" "Identifies the project addressed by this request.", "required" true}}, :description "Fetch the representation of an existing DnsKey."}, "dns.managedZoneOperations.get" #:compute.gcp.descriptor{:http-method :get, :path "dns/v1/projects/{project}/managedZones/{managedZone}/operations/{operation}", :response {"$ref" "Operation"}, :parameters {"managedZone" {"type" "string", "description" "Identifies the managed zone addressed by this request.", "location" "path", "required" true}, "project" {"location" "path", "required" true, "description" "Identifies the project addressed by this request.", "type" "string"}, "operation" {"description" "Identifies the operation addressed by this request (ID of the operation).", "required" true, "location" "path", "type" "string"}, "clientOperationId" {"type" "string", "description" "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "location" "query"}}, :description "Fetches the representation of an existing Operation."}, "dns.policies.get" #:compute.gcp.descriptor{:http-method :get, :path "dns/v1/projects/{project}/policies/{policy}", :response {"$ref" "Policy"}, :parameters {"clientOperationId" {"type" "string", "description" "For mutating operation requests only. An optional identifier specified by the client. Must be unique for operation resources in the Operations collection.", "location" "query"}, "policy" {"type" "string", "required" true, "location" "path", "description" "User given friendly name of the policy addressed by this request."}, "project" {"required" true, "description" "Identifies the project addressed by this request.", "location" "path", "type" "string"}}, :description "Fetches the representation of an existing Policy."}, "dns.changes.list" #:compute.gcp.descriptor{:http-method :get, :path "dns/v1/projects/{project}/managedZones/{managedZone}/changes", :response {"$ref" "ChangesListResponse"}, :parameters {"managedZone" {"type" "string", "description" "Identifies the managed zone addressed by this request. Can be the managed zone name or ID.", "location" "path", "required" true}, "sortOrder" {"description" "Sorting order direction: 'ascending' or 'descending'.", "type" "string", "location" "query"}, "pageToken" {"description" "Optional. A tag returned by a previous list request that was truncated. Use this parameter to continue a previous list request.", "location" "query", "type" "string"}, "sortBy" {"default" "changeSequence", "description" "Sorting criterion. The only supported value is change sequence.", "location" "query", "enumDescriptions" [""], "type" "string", "enum" ["changeSequence"]}, "project" {"description" "Identifies the project addressed by this request.", "location" "path", "required" true, "type" "string"}, "maxResults" {"location" "query", "format" "int32", "type" "integer", "description" "Optional. Maximum number of results to be returned. If unspecified, the server decides how many results to return."}}, :description "Enumerates Changes to a ResourceRecordSet collection."}}, :schemas {"Quota" {"id" "Quota", "description" "Limits associated with a Project.", "properties" {"whitelistedKeySpecs" {"description" "DNSSEC algorithm and key length types that can be used for DnsKeys.", "type" "array", "items" {"$ref" "DnsKeySpec"}}, "resourceRecordsPerRrset" {"format" "int32", "type" "integer", "description" "Maximum allowed number of ResourceRecords per ResourceRecordSet."}, "networksPerManagedZone" {"description" "Maximum allowed number of networks to which a privately scoped zone can be attached.", "format" "int32", "type" "integer"}, "rrsetsPerManagedZone" {"description" "Maximum allowed number of ResourceRecordSets per zone in the project.", "type" "integer", "format" "int32"}, "rrsetDeletionsPerChange" {"description" "Maximum allowed number of ResourceRecordSets to delete per ChangesCreateRequest.", "type" "integer", "format" "int32"}, "targetNameServersPerPolicy" {"type" "integer", "format" "int32", "description" "Maximum allowed number of alternative target name servers per policy."}, "managedZones" {"format" "int32", "type" "integer", "description" "Maximum allowed number of managed zones in the project."}, "policies" {"format" "int32", "description" "Maximum allowed number of policies per project.", "type" "integer"}, "kind" {"default" "dns#quota", "type" "string"}, "targetNameServersPerManagedZone" {"format" "int32", "description" "Maximum allowed number of target name servers per managed forwarding zone.", "type" "integer"}, "totalRrdataSizePerChange" {"format" "int32", "type" "integer", "description" "Maximum allowed size for total rrdata in one ChangesCreateRequest in bytes."}, "rrsetAdditionsPerChange" {"type" "integer", "description" "Maximum allowed number of ResourceRecordSets to add per ChangesCreateRequest.", "format" "int32"}, "dnsKeysPerManagedZone" {"format" "int32", "description" "Maximum allowed number of DnsKeys per ManagedZone.", "type" "integer"}, "networksPerPolicy" {"description" "Maximum allowed number of networks per policy.", "type" "integer", "format" "int32"}, "managedZonesPerNetwork" {"format" "int32", "description" "Maximum allowed number of managed zones which can be attached to a network.", "type" "integer"}}, "type" "object"}, "PolicyAlternativeNameServerConfigTargetNameServer" {"type" "object", "properties" {"ipv4Address" {"description" "IPv4 address to forward to.", "type" "string"}, "kind" {"type" "string", "default" "dns#policyAlternativeNameServerConfigTargetNameServer"}, "forwardingPath" {"type" "string", "description" "Forwarding path for this TargetNameServer. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target.", "enumDescriptions" ["Cloud DNS makes forwarding decision based on IP address ranges; that is, RFC1918 addresses forward to the target through the VPC and non-RFC1918 addresses forward to the target through the internet" "Cloud DNS always forwards to this target through the VPC."], "enum" ["default" "private"]}}, "id" "PolicyAlternativeNameServerConfigTargetNameServer"}, "PoliciesListResponse" {"type" "object", "properties" {"policies" {"description" "The policy resources.", "type" "array", "items" {"$ref" "Policy"}}, "nextPageToken" {"type" "string", "description" "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. In this way you can retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. There is no way to retrieve a consistent snapshot of a collection larger than the maximum page size."}, "header" {"$ref" "ResponseHeader"}, "kind" {"type" "string", "default" "dns#policiesListResponse", "description" "Type of resource."}}, "id" "PoliciesListResponse"}, "ResourceRecordSetsListResponse" {"type" "object", "properties" {"header" {"$ref" "ResponseHeader"}, "nextPageToken" {"type" "string", "description" "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your pagination token. This lets you retrieve complete contents of even larger collections, one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of elements returned are an inconsistent view of the collection. You cannot retrieve a consistent snapshot of a collection larger than the maximum page size."}, "kind" {"type" "string", "default" "dns#resourceRecordSetsListResponse", "description" "Type of resource."}, "rrsets" {"items" {"$ref" "ResourceRecordSet"}, "type" "array", "description" "The resource record set resources."}}, "id" "ResourceRecordSetsListResponse"}, "ManagedZoneServiceDirectoryConfig" {"description" "Contains information about Service Directory-backed zones.", "id" "ManagedZoneServiceDirectoryConfig", "properties" {"namespace" {"description" "Contains information about the namespace associated with the zone.", "$ref" "ManagedZoneServiceDirectoryConfigNamespace"}, "kind" {"default" "dns#managedZoneServiceDirectoryConfig", "type" "string"}}, "type" "object"}, "ManagedZone" {"description" "A zone is a subtree of the DNS namespace under one administrative responsibility. A ManagedZone is a resource that represents a DNS zone hosted by the Cloud DNS service.", "type" "object", "properties" {"serviceDirectoryConfig" {"$ref" "ManagedZoneServiceDirectoryConfig", "description" "This field links to the associated service directory namespace. Do not set this field for public zones or forwarding zones."}, "nameServers" {"description" "Delegate your managed_zone to these virtual name servers; defined by the server (output only)", "type" "array", "items" {"type" "string"}}, "reverseLookupConfig" {"$ref" "ManagedZoneReverseLookupConfig", "description" "The presence of this field indicates that this is a managed reverse lookup zone and Cloud DNS resolves reverse lookup queries using automatically configured records for VPC resources. This only applies to networks listed under private_visibility_config."}, "id" {"type" "string", "format" "uint64", "description" "Unique identifier for the resource; defined by the server (output only)"}, "visibility" {"type" "string", "enum" ["public" "private"], "enumDescriptions" ["" ""], "description" "The zone's visibility: public zones are exposed to the Internet, while private zones are visible only to Virtual Private Cloud resources."}, "name" {"description" "User assigned name for this resource. Must be unique within the project. The name must be 1-63 characters long, must begin with a letter, end with a letter or digit, and only contain lowercase letters, digits or dashes.", "type" "string"}, "peeringConfig" {"$ref" "ManagedZonePeeringConfig", "description" "The presence of this field indicates that DNS Peering is enabled for this zone. The value of this field contains the network to peer with."}, "labels" {"additionalProperties" {"type" "string"}, "description" "User labels.", "type" "object"}, "privateVisibilityConfig" {"$ref" "ManagedZonePrivateVisibilityConfig", "description" "For privately visible zones, the set of Virtual Private Cloud resources that the zone is visible from."}, "kind" {"type" "string", "default" "dns#managedZone"}, "nameServerSet" {"type" "string", "description" "Optionally specifies the NameServerSet for this ManagedZone. A NameServerSet is a set of DNS name servers that all host the same ManagedZones. Most users leave this field unset. If you need to use this field, contact your account team."}, "creationTime" {"description" "The time that this resource was created on the server. This is in RFC3339 text format. Output only.", "type" "string"}, "forwardingConfig" {"description" "The presence for this field indicates that outbound forwarding is enabled for this zone. The value of this field contains the set of destinations to forward to.", "$ref" "ManagedZoneForwardingConfig"}, "dnssecConfig" {"$ref" "ManagedZoneDnsSecConfig", "description" "DNSSEC configuration."}, "description" {"description" "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the managed zone's function.", "type" "string"}, "dnsName" {"description" "The DNS name of this managed zone, for instance \"example.com.\".", "type" "string"}}, "id" "ManagedZone"}, "PoliciesPatchResponse" {"properties" {"header" {"$ref" "ResponseHeader"}, "policy" {"$ref" "Policy"}}, "type" "object", "id" "PoliciesPatchResponse"}, "DnsKeysListResponse" {"id" "DnsKeysListResponse", "type" "object", "properties" {"nextPageToken" {"type" "string", "description" "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your pagination token. In this way you can retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. There is no way to retrieve a \"snapshot\" of collections larger than the maximum page size."}, "header" {"$ref" "ResponseHeader"}, "kind" {"type" "string", "description" "Type of resource.", "default" "dns#dnsKeysListResponse"}, "dnsKeys" {"items" {"$ref" "DnsKey"}, "description" "The requested resources.", "type" "array"}}, "description" "The response to a request to enumerate DnsKeys in a ManagedZone."}, "ManagedZonePrivateVisibilityConfig" {"properties" {"networks" {"description" "The list of VPC networks that can see this zone.", "items" {"$ref" "ManagedZonePrivateVisibilityConfigNetwork"}, "type" "array"}, "kind" {"type" "string", "default" "dns#managedZonePrivateVisibilityConfig"}}, "id" "ManagedZonePrivateVisibilityConfig", "type" "object"}, "OperationManagedZoneContext" {"properties" {"oldValue" {"$ref" "ManagedZone", "description" "The pre-operation ManagedZone resource."}, "newValue" {"description" "The post-operation ManagedZone resource.", "$ref" "ManagedZone"}}, "id" "OperationManagedZoneContext", "type" "object"}, "ManagedZoneForwardingConfigNameServerTarget" {"properties" {"forwardingPath" {"type" "string", "enumDescriptions" ["Cloud DNS makes forwarding decisions based on address ranges; that is, RFC1918 addresses forward to the target through the VPC and non-RFC1918 addresses forward to the target through the internet" "Cloud DNS always forwards to this target through the VPC."], "enum" ["default" "private"], "description" "Forwarding path for this NameServerTarget. If unset or set to DEFAULT, Cloud DNS makes forwarding decisions based on IP address ranges; that is, RFC1918 addresses go to the VPC network, non-RFC1918 addresses go to the internet. When set to PRIVATE, Cloud DNS always sends queries through the VPC network for this target."}, "kind" {"type" "string", "default" "dns#managedZoneForwardingConfigNameServerTarget"}, "ipv4Address" {"description" "IPv4 address of a target name server.", "type" "string"}}, "id" "ManagedZoneForwardingConfigNameServerTarget", "type" "object"}, "OperationDnsKeyContext" {"properties" {"newValue" {"description" "The post-operation DnsKey resource.", "$ref" "DnsKey"}, "oldValue" {"description" "The pre-operation DnsKey resource.", "$ref" "DnsKey"}}, "type" "object", "id" "OperationDnsKeyContext"}, "ManagedZonesListResponse" {"properties" {"header" {"$ref" "ResponseHeader"}, "kind" {"type" "string", "default" "dns#managedZonesListResponse", "description" "Type of resource."}, "managedZones" {"type" "array", "items" {"$ref" "ManagedZone"}, "description" "The managed zone resources."}, "nextPageToken" {"description" "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. In this way you can retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. There is no way to retrieve a consistent snapshot of a collection larger than the maximum page size.", "type" "string"}}, "type" "object", "id" "ManagedZonesListResponse"}, "Operation" {"id" "Operation", "description" "An operation represents a successful mutation performed on a Cloud DNS resource. Operations provide: - An audit log of server resource mutations. - A way to recover/retry API calls in the case where the response is never received by the caller. Use the caller specified client_operation_id.", "type" "object", "properties" {"startTime" {"type" "string", "description" "The time that this operation was started by the server. This is in RFC3339 text format (output only)."}, "status" {"enum" ["pending" "done"], "enumDescriptions" ["" ""], "type" "string", "description" "Status of the operation. Can be one of the following: \"PENDING\" or \"DONE\" (output only). A status of \"DONE\" means that the request to update the authoritative servers has been sent, but the servers might not be updated yet."}, "user" {"type" "string", "description" "User who requested the operation, for example: user@example.com. cloud-dns-system for operations automatically done by the system. (output only)"}, "dnsKeyContext" {"$ref" "OperationDnsKeyContext", "description" "Only populated if the operation targeted a DnsKey (output only)."}, "type" {"type" "string", "description" "Type of the operation. Operations include insert, update, and delete (output only)."}, "zoneContext" {"$ref" "OperationManagedZoneContext", "description" "Only populated if the operation targeted a ManagedZone (output only)."}, "id" {"description" "Unique identifier for the resource. This is the client_operation_id if the client specified it when the mutation was initiated, otherwise, it is generated by the server. The name must be 1-63 characters long and match the regular expression [-a-z0-9]? (output only)", "type" "string"}, "kind" {"type" "string", "default" "dns#operation"}}}, "PolicyAlternativeNameServerConfig" {"id" "PolicyAlternativeNameServerConfig", "properties" {"kind" {"default" "dns#policyAlternativeNameServerConfig", "type" "string"}, "targetNameServers" {"description" "Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified.", "type" "array", "items" {"$ref" "PolicyAlternativeNameServerConfigTargetNameServer"}}}, "type" "object"}, "PoliciesUpdateResponse" {"properties" {"header" {"$ref" "ResponseHeader"}, "policy" {"$ref" "Policy"}}, "id" "PoliciesUpdateResponse", "type" "object"}, "PolicyNetwork" {"properties" {"networkUrl" {"type" "string", "description" "The fully qualified URL of the VPC network to bind to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"}, "kind" {"default" "dns#policyNetwork", "type" "string"}}, "id" "PolicyNetwork", "type" "object"}, "ChangesListResponse" {"id" "ChangesListResponse", "properties" {"nextPageToken" {"description" "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your pagination token. In this way you can retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. There is no way to retrieve a \"snapshot\" of collections larger than the maximum page size.", "type" "string"}, "header" {"$ref" "ResponseHeader"}, "kind" {"type" "string", "description" "Type of resource.", "default" "dns#changesListResponse"}, "changes" {"type" "array", "description" "The requested changes.", "items" {"$ref" "Change"}}}, "description" "The response to a request to enumerate Changes to a ResourceRecordSets collection.", "type" "object"}, "ManagedZonePeeringConfig" {"type" "object", "id" "ManagedZonePeeringConfig", "properties" {"targetNetwork" {"$ref" "ManagedZonePeeringConfigTargetNetwork", "description" "The network with which to peer."}, "kind" {"type" "string", "default" "dns#managedZonePeeringConfig"}}}, "DnsKeyDigest" {"type" "object", "id" "DnsKeyDigest", "properties" {"type" {"type" "string", "description" "Specifies the algorithm used to calculate this digest.", "enum" ["sha1" "sha256" "sha384"], "enumDescriptions" ["" "" ""]}, "digest" {"description" "The base-16 encoded bytes of this digest. Suitable for use in a DS resource record.", "type" "string"}}}, "ManagedZoneServiceDirectoryConfigNamespace" {"properties" {"kind" {"type" "string", "default" "dns#managedZoneServiceDirectoryConfigNamespace"}, "deletionTime" {"type" "string", "description" "The time that the namespace backing this zone was deleted; an empty string if it still exists. This is in RFC3339 text format. Output only."}, "namespaceUrl" {"type" "string", "description" "The fully qualified URL of the namespace associated with the zone. This should be formatted like https://servicedirectory.googleapis.com/v1/projects/{project}/locations/{location}/namespaces/{namespace}"}}, "type" "object", "id" "ManagedZoneServiceDirectoryConfigNamespace"}, "ResponseHeader" {"description" "Elements common to every response.", "properties" {"operationId" {"description" "For mutating operation requests that completed successfully. This is the client_operation_id if the client specified it, otherwise it is generated by the server (output only).", "type" "string"}}, "id" "ResponseHeader", "type" "object"}, "ManagedZoneOperationsListResponse" {"properties" {"header" {"$ref" "ResponseHeader"}, "operations" {"items" {"$ref" "Operation"}, "type" "array", "description" "The operation resources."}, "kind" {"type" "string", "default" "dns#managedZoneOperationsListResponse"}, "nextPageToken" {"description" "The presence of this field indicates that there exist more results following your last page of results in pagination order. To fetch them, make another list request using this value as your page token. In this way you can retrieve the complete contents of even very large collections one page at a time. However, if the contents of the collection change between the first and last paginated list request, the set of all elements returned are an inconsistent view of the collection. There is no way to retrieve a consistent snapshot of a collection larger than the maximum page size.", "type" "string"}}, "id" "ManagedZoneOperationsListResponse", "type" "object"}, "ManagedZonePrivateVisibilityConfigNetwork" {"properties" {"kind" {"default" "dns#managedZonePrivateVisibilityConfigNetwork", "type" "string"}, "networkUrl" {"description" "The fully qualified URL of the VPC network to bind to. Format this URL like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}", "type" "string"}}, "type" "object", "id" "ManagedZonePrivateVisibilityConfigNetwork"}, "Change" {"description" "A Change represents a set of ResourceRecordSet additions and deletions applied atomically to a ManagedZone. ResourceRecordSets within a ManagedZone are modified by creating a new Change element in the Changes collection. In turn the Changes collection also records the past modifications to the ResourceRecordSets in a ManagedZone. The current state of the ManagedZone is the sum effect of applying all Change elements in the Changes collection in sequence.", "id" "Change", "properties" {"id" {"description" "Unique identifier for the resource; defined by the server (output only).", "type" "string"}, "deletions" {"type" "array", "description" "Which ResourceRecordSets to remove? Must match existing data exactly.", "items" {"$ref" "ResourceRecordSet"}}, "additions" {"description" "Which ResourceRecordSets to add?", "type" "array", "items" {"$ref" "ResourceRecordSet"}}, "status" {"type" "string", "enumDescriptions" ["" ""], "enum" ["pending" "done"], "description" "Status of the operation (output only). A status of \"done\" means that the request to update the authoritative servers has been sent, but the servers might not be updated yet."}, "kind" {"type" "string", "default" "dns#change"}, "startTime" {"type" "string", "description" "The time that this operation was started by the server (output only). This is in RFC3339 text format."}, "isServing" {"type" "boolean", "description" "If the DNS queries for the zone will be served."}}, "type" "object"}, "ManagedZoneReverseLookupConfig" {"id" "ManagedZoneReverseLookupConfig", "properties" {"kind" {"type" "string", "default" "dns#managedZoneReverseLookupConfig"}}, "type" "object"}, "Project" {"id" "Project", "properties" {"quota" {"$ref" "Quota", "description" "Quotas assigned to this project (output only)."}, "kind" {"default" "dns#project", "type" "string"}, "id" {"description" "User assigned unique identifier for the resource (output only).", "type" "string"}, "number" {"format" "uint64", "description" "Unique numeric identifier for the resource; defined by the server (output only).", "type" "string"}}, "type" "object", "description" "A project resource. The project is a top level container for resources including Cloud DNS ManagedZones. Projects can be created only in the APIs console."}, "Policy" {"properties" {"id" {"description" "Unique identifier for the resource; defined by the server (output only).", "type" "string", "format" "uint64"}, "description" {"description" "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the policy's function.", "type" "string"}, "alternativeNameServerConfig" {"description" "Sets an alternative name server for the associated networks. When specified, all DNS queries are forwarded to a name server that you choose. Names such as .internal are not available when an alternative name server is specified.", "$ref" "PolicyAlternativeNameServerConfig"}, "enableInboundForwarding" {"description" "Allows networks bound to this policy to receive DNS queries sent by VMs or applications over VPN connections. When enabled, a virtual IP address is allocated from each of the subnetworks that are bound to this policy.", "type" "boolean"}, "name" {"description" "User-assigned name for this policy.", "type" "string"}, "networks" {"type" "array", "items" {"$ref" "PolicyNetwork"}, "description" "List of network names specifying networks to which this policy is applied."}, "enableLogging" {"description" "Controls whether logging is enabled for the networks bound to this policy. Defaults to no logging if not set.", "type" "boolean"}, "kind" {"type" "string", "default" "dns#policy"}}, "id" "Policy", "type" "object", "description" "A policy is a collection of DNS rules applied to one or more Virtual Private Cloud resources."}, "DnsKey" {"id" "DnsKey", "description" "A DNSSEC key pair.", "type" "object", "properties" {"isActive" {"description" "Active keys are used to sign subsequent changes to the ManagedZone. Inactive keys are still present as DNSKEY Resource Records for the use of resolvers validating existing signatures.", "type" "boolean"}, "keyLength" {"description" "Length of the key in bits. Specified at creation time, and then immutable.", "type" "integer", "format" "uint32"}, "keyTag" {"description" "The key tag is a non-cryptographic hash of the a DNSKEY resource record associated with this DnsKey. The key tag can be used to identify a DNSKEY more quickly (but it is not a unique identifier). In particular, the key tag is used in a parent zone's DS record to point at the DNSKEY in this child ManagedZone. The key tag is a number in the range [0, 65535] and the algorithm to calculate it is specified in RFC4034 Appendix B. Output only.", "format" "int32", "type" "integer"}, "id" {"description" "Unique identifier for the resource; defined by the server (output only).", "type" "string"}, "publicKey" {"type" "string", "description" "Base64 encoded public half of this key. Output only."}, "algorithm" {"enumDescriptions" ["" "" "" "" ""], "description" "String mnemonic specifying the DNSSEC algorithm of this key. Immutable after creation time.", "type" "string", "enum" ["rsasha1" "rsasha256" "rsasha512" "ecdsap256sha256" "ecdsap384sha384"]}, "kind" {"type" "string", "default" "dns#dnsKey"}, "type" {"enumDescriptions" ["" ""], "description" "One of \"KEY_SIGNING\" or \"ZONE_SIGNING\". Keys of type KEY_SIGNING have the Secure Entry Point flag set and, when active, are used to sign only resource record sets of type DNSKEY. Otherwise, the Secure Entry Point flag is cleared, and this key is used to sign only resource record sets of other types. Immutable after creation time.", "enum" ["keySigning" "zoneSigning"], "type" "string"}, "creationTime" {"type" "string", "description" "The time that this resource was created in the control plane. This is in RFC3339 text format. Output only."}, "digests" {"type" "array", "description" "Cryptographic hashes of the DNSKEY resource record associated with this DnsKey. These digests are needed to construct a DS record that points at this DNS key. Output only.", "items" {"$ref" "DnsKeyDigest"}}, "description" {"description" "A mutable string of at most 1024 characters associated with this resource for the user's convenience. Has no effect on the resource's function.", "type" "string"}}}, "ManagedZonePeeringConfigTargetNetwork" {"type" "object", "id" "ManagedZonePeeringConfigTargetNetwork", "properties" {"kind" {"type" "string", "default" "dns#managedZonePeeringConfigTargetNetwork"}, "deactivateTime" {"type" "string", "description" "The time at which the zone was deactivated, in RFC 3339 date-time format. An empty string indicates that the peering connection is active. The producer network can deactivate a zone. The zone is automatically deactivated if the producer network that the zone targeted is deleted. Output only."}, "networkUrl" {"type" "string", "description" "The fully qualified URL of the VPC network to forward queries to. This should be formatted like https://www.googleapis.com/compute/v1/projects/{project}/global/networks/{network}"}}}, "ResourceRecordSet" {"type" "object", "description" "A unit of data that is returned by the DNS servers.", "id" "ResourceRecordSet", "properties" {"name" {"description" "For example, www.example.com.", "type" "string"}, "type" {"description" "The identifier of a supported record type. See the list of Supported DNS record types.", "type" "string"}, "ttl" {"format" "int32", "description" "Number of seconds that this ResourceRecordSet can be cached by resolvers.", "type" "integer"}, "kind" {"type" "string", "default" "dns#resourceRecordSet"}, "signatureRrdatas" {"description" "As defined in RFC 4034 (section 3.2).", "items" {"type" "string"}, "type" "array"}, "rrdatas" {"type" "array", "items" {"type" "string"}, "description" "As defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1) -- see examples."}}}, "ManagedZoneForwardingConfig" {"id" "ManagedZoneForwardingConfig", "type" "object", "properties" {"kind" {"default" "dns#managedZoneForwardingConfig", "type" "string"}, "targetNameServers" {"type" "array", "description" "List of target name servers to forward to. Cloud DNS selects the best available name server if more than one target is given.", "items" {"$ref" "ManagedZoneForwardingConfigNameServerTarget"}}}}, "DnsKeySpec" {"description" "Parameters for DnsKey key generation. Used for generating initial keys for a new ManagedZone and as default when adding a new DnsKey.", "properties" {"algorithm" {"enum" ["rsasha1" "rsasha256" "rsasha512" "ecdsap256sha256" "ecdsap384sha384"], "description" "String mnemonic specifying the DNSSEC algorithm of this key.", "type" "string", "enumDescriptions" ["" "" "" "" ""]}, "keyType" {"enumDescriptions" ["" ""], "description" "Specifies whether this is a key signing key (KSK) or a zone signing key (ZSK). Key signing keys have the Secure Entry Point flag set and, when active, are only used to sign resource record sets of type DNSKEY. Zone signing keys do not have the Secure Entry Point flag set and are used to sign all other types of resource record sets.", "enum" ["keySigning" "zoneSigning"], "type" "string"}, "keyLength" {"type" "integer", "description" "Length of the keys in bits.", "format" "uint32"}, "kind" {"type" "string", "default" "dns#dnsKeySpec"}}, "id" "DnsKeySpec", "type" "object"}, "ManagedZoneDnsSecConfig" {"properties" {"defaultKeySpecs" {"items" {"$ref" "DnsKeySpec"}, "type" "array", "description" "Specifies parameters for generating initial DnsKeys for this ManagedZone. Can only be changed while the state is OFF."}, "nonExistence" {"type" "string", "enumDescriptions" ["" ""], "description" "Specifies the mechanism for authenticated denial-of-existence responses. Can only be changed while the state is OFF.", "enum" ["nsec" "nsec3"]}, "kind" {"type" "string", "default" "dns#managedZoneDnsSecConfig"}, "state" {"type" "string", "enum" ["off" "on" "transfer"], "enumDescriptions" ["DNSSEC is disabled; the zone is not signed." "DNSSEC is enabled; the zone is signed and fully managed." "DNSSEC is enabled, but in a \"transfer\" mode."], "description" "Specifies whether DNSSEC is enabled, and what mode it is in."}}, "id" "ManagedZoneDnsSecConfig", "type" "object"}}}