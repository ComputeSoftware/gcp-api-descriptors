#:compute.api-descriptor{:endpoint {:schemes ["https"], :host "jobs.googleapis.com", :base-path "/"}, :op->spec {"jobs.companies.list" {:description "Lists all companies associated with a Cloud Talent Solution account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ListCompaniesResponse"}}}, :parameters [{:description "Optional. Set to true if the companies request must have open jobs.\n\nDefaults to false.\n\nIf true, at most page_size of companies are fetched, among which\nonly those with open jobs are returned.", :in "query", :name "mustHaveOpenJobs", :type "boolean"} {:description "Optional. The maximum number of companies to be returned, at most 100.\nDefault is 100 if a non-positive number is provided.", :in "query", :name "pageSize", :type "integer"} {:description "Optional. The starting indicator from which to return results.", :in "query", :name "pageToken", :type "string"}], :operationId "jobs.companies.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v2/companies", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "jobs.jobs.search" {:description "Searches for jobs using the provided SearchJobsRequest.\n\nThis call constrains the visibility of jobs\npresent in the database, and only returns jobs that the caller has\npermission to search against.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/SearchJobsResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/SearchJobsRequest"}}], :operationId "jobs.jobs.search", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v2/jobs:search", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "jobs.companies.patch" {:description "Updates the specified company. Company names can't be updated. To update a\ncompany name, delete the company and all jobs associated with it, and only\nthen re-create them.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Company"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Company"}} {:description "Required during company update.\n\nThe resource name for a company. This is generated by the service when a\ncompany is created, for example,\n\"companies/0000aaaa-1111-bbbb-2222-cccc3333dddd\".", :in "path", :name "name", :required true, :type "string", :x-reservedExpansion true} {:description "Optional but strongly recommended to be provided for the best service\nexperience.\n\nIf update_company_fields is provided, only the specified fields in\ncompany are updated. Otherwise all the fields are updated.\n\nA field mask to specify the company fields to update. Valid values are:\n\n* displayName\n* website\n* imageUrl\n* companySize\n* distributorBillingCompanyId\n* companyInfoSources\n* careerPageLink\n* hiringAgency\n* hqLocation\n* eeoText\n* keywordSearchableCustomAttributes\n* title (deprecated)\n* keywordSearchableCustomFields (deprecated)", :in "query", :name "updateCompanyFields", :type "string"}], :operationId "jobs.companies.patch", :compute.gcp.impl.descriptor/http-method :patch, :compute.gcp.impl.descriptor/http-path "/v2/{name}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "jobs.jobs.histogram" {:description "Deprecated. Use SearchJobsRequest.histogram_facets instead to make\na single call with both search and histogram.\n\nRetrieves a histogram for the given\nGetHistogramRequest. This call provides a structured\ncount of jobs that match against the search query, grouped by specified\nfacets.\n\nThis call constrains the visibility of jobs\npresent in the database, and only counts jobs the caller has\npermission to search against.\n\nFor example, use this call to generate the\nnumber of jobs in the U.S. by state.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/GetHistogramResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/GetHistogramRequest"}}], :operationId "jobs.jobs.histogram", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v2/jobs:histogram", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "jobs.jobs.deleteByFilter" {:description "Deprecated. Use BatchDeleteJobs instead.\n\nDeletes the specified job by filter. You can specify whether to\nsynchronously wait for validation, indexing, and general processing to be\ncompleted before the response is returned.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Empty"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/DeleteJobsByFilterRequest"}}], :operationId "jobs.jobs.deleteByFilter", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v2/jobs:deleteByFilter", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "jobs.jobs.create" {:description "Creates a new job.\n\nTypically, the job becomes searchable within 10 seconds, but it may take\nup to 5 minutes.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Job"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/CreateJobRequest"}}], :operationId "jobs.jobs.create", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v2/jobs", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "jobs.companies.create" {:description "Creates a new company entity.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Company"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/Company"}}], :operationId "jobs.companies.create", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v2/companies", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "jobs.companies.get" {:description "Retrieves the specified company.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Company"}}}, :parameters [{:description "Required. Resource name of the company to retrieve,\nsuch as \"companies/0000aaaa-1111-bbbb-2222-cccc3333dddd\".", :in "path", :name "name", :required true, :type "string", :x-reservedExpansion true}], :operationId "jobs.companies.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v2/{name}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "jobs.companies.delete" {:description "Deletes the specified company.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Empty"}}}, :parameters [{:description "Deprecated. This field is not working anymore.\n\nOptional.\n\nIf set to true, this call waits for all processing steps to complete\nbefore the job is cleaned up. Otherwise, the call returns while some\nsteps are still taking place asynchronously, hence faster.", :in "query", :name "disableFastProcess", :type "boolean"} {:description "Required. The resource name of the company to be deleted,\nsuch as, \"companies/0000aaaa-1111-bbbb-2222-cccc3333dddd\".", :in "path", :name "name", :required true, :type "string", :x-reservedExpansion true}], :operationId "jobs.companies.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/v2/{name}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "jobs.complete" {:description "Completes the specified prefix with job keyword suggestions.\nIntended for use by a job search auto-complete search box.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/CompleteQueryResponse"}}}, :parameters [{:description "Optional. If provided, restricts completion to the specified company.", :in "query", :name "companyName", :type "string"} {:description "Required. The language of the query. This is\nthe BCP-47 language code, such as \"en-US\" or \"sr-Latn\".\nFor more information, see\n[Tags for Identifying Languages](https://tools.ietf.org/html/bcp47).\n\nFor CompletionType.JOB_TITLE type, only open jobs with same\nlanguage_code are returned.\n\nFor CompletionType.COMPANY_NAME type,\nonly companies having open jobs with same language_code are\nreturned.\n\nFor CompletionType.COMBINED type, only open jobs with same\nlanguage_code or companies having open jobs with same\nlanguage_code are returned.", :in "query", :name "languageCode", :type "string"} {:description "Required. Completion result count.\nThe maximum allowed page size is 10.", :in "query", :name "pageSize", :type "integer"} {:description "Required. The query used to generate suggestions.", :in "query", :name "query", :type "string"} {:description "Optional. The scope of the completion. The defaults is CompletionScope.PUBLIC.", :enum ["COMPLETION_SCOPE_UNSPECIFIED" "TENANT" "PUBLIC"], :in "query", :name "scope", :type "string"} {:description "Optional. The completion topic. The default is CompletionType.COMBINED.", :enum ["COMPLETION_TYPE_UNSPECIFIED" "JOB_TITLE" "COMPANY_NAME" "COMBINED"], :in "query", :name "type", :type "string"}], :operationId "jobs.complete", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v2:complete", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "jobs.jobs.list" {:description "Lists jobs by filter.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ListJobsResponse"}}}, :parameters [{:description "Required. The filter string specifies the jobs to be enumerated.\n\nSupported operator: =, AND\n\nThe fields eligible for filtering are:\n\n* `companyName` (Required)\n* `requisitionId` (Optional)\n\nSample Query:\n\n* companyName = \"companies/123\"\n* companyName = \"companies/123\" AND requisitionId = \"req-1\"", :in "query", :name "filter", :type "string"} {:description "Optional. If set to `true`, only Job.name, Job.requisition_id and\nJob.language_code will be returned.\n\nA typical use case is to synchronize job repositories.\n\nDefaults to false.", :in "query", :name "idsOnly", :type "boolean"} {:description "Optional. The maximum number of jobs to be returned per page of results.\n\nIf ids_only is set to true, the maximum allowed page size\nis 1000. Otherwise, the maximum allowed page size is 100.\n\nDefault is 100 if empty or a number < 1 is specified.", :in "query", :name "pageSize", :type "integer"} {:description "Optional. The starting point of a query result.", :in "query", :name "pageToken", :type "string"}], :operationId "jobs.jobs.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v2/jobs", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "jobs.jobs.searchForAlert" {:description "Searches for jobs using the provided SearchJobsRequest.\n\nThis API call is intended for the use case of targeting passive job\nseekers (for example, job seekers who have signed up to receive email\nalerts about potential job opportunities), and has different algorithmic\nadjustments that are targeted to passive job seekers.\n\nThis call constrains the visibility of jobs\npresent in the database, and only returns jobs the caller has\npermission to search against.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/SearchJobsResponse"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/SearchJobsRequest"}}], :operationId "jobs.jobs.searchForAlert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v2/jobs:searchForAlert", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "jobs.companies.jobs.list" {:description "Deprecated. Use ListJobs instead.\n\nLists all jobs associated with a company.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ListCompanyJobsResponse"}}}, :parameters [{:description "Required. The resource name of the company that owns the jobs to be listed,\nsuch as, \"companies/0000aaaa-1111-bbbb-2222-cccc3333dddd\".", :in "path", :name "companyName", :required true, :type "string", :x-reservedExpansion true} {:description "Optional. If set to `true`, only job ID, job requisition ID and language code will be\nreturned.\n\nA typical use is to synchronize job repositories.\n\nDefaults to false.", :in "query", :name "idsOnly", :type "boolean"} {:description "Deprecated. Please DO NOT use this field except for small companies.\nSuggest counting jobs page by page instead.\n\nOptional.\n\nSet to true if the total number of open jobs is to be returned.\n\nDefaults to false.", :in "query", :name "includeJobsCount", :type "boolean"} {:description "Optional. The requisition ID, also known as posting ID, assigned by the company\nto the job.\n\nThe maximum number of allowable characters is 225.", :in "query", :name "jobRequisitionId", :type "string"} {:description "Optional. The maximum number of jobs to be returned per page of results.\n\nIf ids_only is set to true, the maximum allowed page size\nis 1000. Otherwise, the maximum allowed page size is 100.\n\nDefault is 100 if empty or a number < 1 is specified.", :in "query", :name "pageSize", :type "integer"} {:description "Optional. The starting point of a query result.", :in "query", :name "pageToken", :type "string"}], :operationId "jobs.companies.jobs.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v2/{companyName}/jobs", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "jobs.jobs.batchDelete" {:description "Deletes a list of Job postings by filter.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Empty"}}}, :parameters [{:in "body", :name "body", :schema {:$ref "#/definitions/BatchDeleteJobsRequest"}}], :operationId "jobs.jobs.batchDelete", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v2/jobs:batchDelete", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}}, :parameters {:quotaUser {:description "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", :in "query", :name "quotaUser", :type "string"}, :key {:description "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", :in "query", :name "key", :type "string"}, :alt {:default "json", :description "Data format for response.", :enum ["json" "media" "proto"], :in "query", :name "alt", :type "string"}, :access_token {:description "OAuth access token.", :in "query", :name "access_token", :type "string"}, :fields {:description "Selector specifying which fields to include in a partial response.", :in "query", :name "fields", :type "string"}, :upload_protocol {:description "Upload protocol for media (e.g. \"raw\", \"multipart\").", :in "query", :name "upload_protocol", :type "string"}, :uploadType {:description "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", :in "query", :name "uploadType", :type "string"}, :oauth_token {:description "OAuth 2.0 token for the current user.", :in "query", :name "oauth_token", :type "string"}, :prettyPrint {:default true, :description "Returns response with indentations and line breaks.", :in "query", :name "prettyPrint", :type "boolean"}, "$.xgafv" {:description "V1 error format.", :enum ["1" "2"], :in "query", :name "$.xgafv", :type "string"}, :callback {:description "JSONP", :in "query", :name "callback", :type "string"}}, :definitions {:CustomField {:description "Resource that represents the custom data not captured by the standard fields.", :properties {:values {:description "Optional. The values of the custom data.", :items {:type "string"}, :type "array"}}, :type "object"}, :StringValues {:description "Represents array of string values.", :properties {:values {:description "Required. String values.", :items {:type "string"}, :type "array"}}, :type "object"}, :CompensationRange {:description "Compensation range.", :properties {:max {:$ref "#/definitions/Money", :description "Optional. The maximum amount of compensation. If left empty, the value is set\nto a maximal compensation value and the currency code is set to\nmatch the currency code of\nmin_compensation."}, :min {:$ref "#/definitions/Money", :description "Optional. The minimum amount of compensation. If left empty, the value is set\nto zero and the currency code is set to match the\ncurrency code of max_compensation."}}, :type "object"}, :RequestMetadata {:description "Input only.\n\nMeta information related to the job searcher or entity\nconducting the job search. This information is used to improve the\nperformance of the service.", :properties {:deviceInfo {:$ref "#/definitions/DeviceInfo", :description "Optional. The type of device used by the job seeker at the time of the call to the\nservice."}, :domain {:description "Required. The client-defined scope or source of the service call, which typically\nis the domain on\nwhich the service has been implemented and is currently being run.\n\nFor example, if the service is being run by client <em>Foo, Inc.</em>, on\njob board www.foo.com and career site www.bar.com, then this field is\nset to \"foo.com\" for use on the job board, and \"bar.com\" for use on the\ncareer site.\n\nIf this field is not available for some reason, send \"UNKNOWN\". Note that\nany improvements to the service model for a particular tenant site rely on\nthis field being set correctly to some domain.", :type "string"}, :sessionId {:description "Required. A unique session identification string. A session is defined as the\nduration of an end user's interaction with the service over a period.\nObfuscate this field for privacy concerns before\nproviding it to the API.\n\nIf this field is not available for some reason, please send \"UNKNOWN\". Note\nthat any improvements to the service model for a particular tenant site,\nrely on this field being set correctly to some unique session_id.", :type "string"}, :userId {:description "Required. A unique user identification string, as determined by the client. The\nclient is responsible for ensuring client-level uniqueness of this value\nin order to have the strongest positive impact on search quality.\nObfuscate this field for privacy concerns before\nproviding it to the service.\n\nIf this field is not available for some reason, please send \"UNKNOWN\". Note\nthat any improvements to the service model for a particular tenant site,\nrely on this field being set correctly to some unique user_id.", :type "string"}}, :type "object"}, :BucketRange {:description "Represents starting and ending value of a range in double.", :properties {:from {:description "Starting value of the bucket range.", :format "double", :type "number"}, :to {:description "Ending value of the bucket range.", :format "double", :type "number"}}, :type "object"}, :CustomFieldFilter {:description "Input only.\n\nCustom field filter of the search.", :properties {:queries {:description "Required. The query strings for the filter.", :items {:type "string"}, :type "array"}, :type {:description "Optional. The type of filter.\nDefaults to FilterType.OR.", :enum ["FILTER_TYPE_UNSPECIFIED" "OR" "AND" "NOT"], :type "string"}}, :type "object"}, :ListCompanyJobsResponse {:description "Deprecated. Use ListJobsResponse instead.\n\nOutput only.\n\nThe List jobs response object.", :properties {:jobs {:description "The Jobs for a given company.\n\nThe maximum number of items returned is based on the limit field\nprovided in the request.", :items {:$ref "#/definitions/Job"}, :type "array"}, :metadata {:$ref "#/definitions/ResponseMetadata", :description "Additional information for the API invocation, such as the request\ntracking id."}, :nextPageToken {:description "A token to retrieve the next page of results.", :type "string"}, :totalSize {:description "The total number of open jobs. The result will be\nempty if ListCompanyJobsRequest.include_jobs_count is not enabled\nor if no open jobs are available.", :format "int64", :type "string"}}, :type "object"}, :CompensationHistogramResult {:description "Output only.\n\nCompensation based histogram result.", :properties {:result {:$ref "#/definitions/NumericBucketingResult", :description "Histogram result."}, :type {:description "Type of the request, corresponding to\nCompensationHistogramRequest.type.", :enum ["COMPENSATION_HISTOGRAM_REQUEST_TYPE_UNSPECIFIED" "BASE" "ANNUALIZED_BASE" "ANNUALIZED_TOTAL"], :type "string"}}, :type "object"}, :ListJobsResponse {:description "Output only.\n\nList jobs response.", :properties {:jobs {:description "The Jobs for a given company.\n\nThe maximum number of items returned is based on the limit field\nprovided in the request.", :items {:$ref "#/definitions/Job"}, :type "array"}, :metadata {:$ref "#/definitions/ResponseMetadata", :description "Additional information for the API invocation, such as the request\ntracking id."}, :nextPageToken {:description "A token to retrieve the next page of results.", :type "string"}}, :type "object"}, :JobQuery {:description "Input only.\n\nThe query required to perform a search query or histogram.", :properties {:companyNames {:description "Optional. This filter specifies the company entities to search against.\n\nIf a value isn't specified, jobs are searched for against all\ncompanies.\n\nIf multiple values are specified, jobs are searched against the\ncompanies specified.\n\nAt most 20 company filters are allowed.", :items {:type "string"}, :type "array"}, :customAttributeFilter {:description "Optional. This filter specifies a structured syntax to match against the\nJob.custom_attributes marked as `filterable`.\n\nThe syntax for this expression is a subset of Google SQL syntax.\n\nSupported operators are: =, !=, <, <=, >, >= where the left of the operator\nis a custom field key and the right of the operator is a number or string\n(surrounded by quotes) value.\n\nSupported functions are LOWER(<field_name>) to\nperform case insensitive match and EMPTY(<field_name>) to filter on the\nexistence of a key.\n\nBoolean expressions (AND/OR/NOT) are supported up to 3 levels of\nnesting (for example, \"((A AND B AND C) OR NOT D) AND E\"), a maximum of 50\ncomparisons/functions are allowed in the expression. The expression\nmust be < 2000 characters in length.\n\nSample Query:\n(key1 = \"TEST\" OR LOWER(key1)=\"test\" OR NOT EMPTY(key1)) AND key2 > 100", :type "string"}, :companyDisplayNames {:description "Optional. This filter specifies the exact company display\nname of the jobs to search against.\n\nIf a value isn't specified, jobs within the search results are\nassociated with any company.\n\nIf multiple values are specified, jobs within the search results may be\nassociated with any of the specified companies.\n\nAt most 20 company display name filters are allowed.", :items {:type "string"}, :type "array"}, :languageCodes {:description "Optional. This filter specifies the locale of jobs to search against,\nfor example, \"en-US\".\n\nIf a value isn't specified, the search results can contain jobs in any\nlocale.\n\n\nLanguage codes should be in BCP-47 format, such as \"en-US\" or \"sr-Latn\".\nFor more information, see\n[Tags for Identifying Languages](https://tools.ietf.org/html/bcp47).\n\nAt most 10 language code filters are allowed.", :items {:type "string"}, :type "array"}, :compensationFilter {:$ref "#/definitions/CompensationFilter", :description "Optional. This search filter is applied only to\nJob.compensation_info. For example, if the filter is specified\nas \"Hourly job with per-hour compensation > $15\", only jobs meeting\nthese criteria are searched. If a filter isn't defined, all open jobs\nare searched."}, :locationFilters {:description "Optional. The location filter specifies geo-regions containing the jobs to\nsearch against. See LocationFilter for more information.\n\nIf a location value isn't specified, jobs fitting the other search\ncriteria are retrieved regardless of where they're located.\n\nIf multiple values are specified, jobs are retrieved from any of the\nspecified locations. If different values are specified for the\nLocationFilter.distance_in_miles parameter, the maximum provided\ndistance is used for all locations.\n\nAt most 5 location filters are allowed.", :items {:$ref "#/definitions/LocationFilter"}, :type "array"}, :disableSpellCheck {:description "Optional. This flag controls the spell-check feature. If false, the\nservice attempts to correct a misspelled query,\nfor example, \"enginee\" is corrected to \"engineer\".\n\nDefaults to false: a spell check is performed.", :type "boolean"}, :categories {:description "Optional. The category filter specifies the categories of jobs to search against.\nSee Category for more information.\n\nIf a value is not specified, jobs from any category are searched against.\n\nIf multiple values are specified, jobs from any of the specified\ncategories are searched against.", :items {:enum ["JOB_CATEGORY_UNSPECIFIED" "ACCOUNTING_AND_FINANCE" "ADMINISTRATIVE_AND_OFFICE" "ADVERTISING_AND_MARKETING" "ANIMAL_CARE" "ART_FASHION_AND_DESIGN" "BUSINESS_OPERATIONS" "CLEANING_AND_FACILITIES" "COMPUTER_AND_IT" "CONSTRUCTION" "CUSTOMER_SERVICE" "EDUCATION" "ENTERTAINMENT_AND_TRAVEL" "FARMING_AND_OUTDOORS" "HEALTHCARE" "HUMAN_RESOURCES" "INSTALLATION_MAINTENANCE_AND_REPAIR" "LEGAL" "MANAGEMENT" "MANUFACTURING_AND_WAREHOUSE" "MEDIA_COMMUNICATIONS_AND_WRITING" "OIL_GAS_AND_MINING" "PERSONAL_CARE_AND_SERVICES" "PROTECTIVE_SERVICES" "REAL_ESTATE" "RESTAURANT_AND_HOSPITALITY" "SALES_AND_RETAIL" "SCIENCE_AND_ENGINEERING" "SOCIAL_SERVICES_AND_NON_PROFIT" "SPORTS_FITNESS_AND_RECREATION" "TRANSPORTATION_AND_LOGISTICS"], :type "string"}, :type "array"}, :publishDateRange {:description "Optional. Jobs published within a range specified by this filter are searched\nagainst, for example, DateRange.PAST_MONTH. If a value isn't\nspecified, all open jobs are searched against regardless of their\npublished date.", :enum ["DATE_RANGE_UNSPECIFIED" "PAST_24_HOURS" "PAST_WEEK" "PAST_MONTH" "PAST_YEAR" "PAST_3_DAYS"], :type "string"}, :commuteFilter {:$ref "#/definitions/CommutePreference", :description "Optional. Allows filtering jobs by commute time with different travel methods (for\n example, driving or public transit). Note: This only works with COMMUTE\n MODE. When specified, [JobQuery.location_filters] is\n ignored.\n\n Currently we don't support sorting by commute time."}, :query {:description "Optional. The query string that matches against the job title, description, and\nlocation fields.\n\nThe maximum query size is 255 bytes.", :type "string"}, :employmentTypes {:description "Optional. The employment type filter specifies the employment type of jobs to\nsearch against, such as EmploymentType.FULL_TIME.\n\nIf a value is not specified, jobs in the search results include any\nemployment type.\n\nIf multiple values are specified, jobs in the search results include\nany of the specified employment types.", :items {:enum ["EMPLOYMENT_TYPE_UNSPECIFIED" "FULL_TIME" "PART_TIME" "CONTRACTOR" "TEMPORARY" "INTERN" "VOLUNTEER" "PER_DIEM" "CONTRACT_TO_HIRE" "FLY_IN_FLY_OUT" "OTHER"], :type "string"}, :type "array"}}, :type "object"}, :DeleteJobsByFilterRequest {:description "Deprecated. Use BatchDeleteJobsRequest instead.\n\nInput only.\n\nDelete job by filter request.\n\nThe job typically becomes unsearchable within 10 seconds, but it may take\nup to 5 minutes.", :properties {:disableFastProcess {:description "Optional. If set to true, this call waits for all processing steps to complete\nbefore the job is cleaned up. Otherwise, the call returns while some\nsteps are still taking place asynchronously, hence faster.", :type "boolean"}, :filter {:$ref "#/definitions/Filter", :description "Required. Restrictions on the scope of the delete request."}}, :type "object"}, :SpellingCorrection {:description "Output only.\n\nSpell check result.", :properties {:corrected {:description "Indicates if the query was corrected by the spell checker.", :type "boolean"}, :correctedText {:description "Correction output consisting of the corrected keyword string.", :type "string"}}, :type "object"}, :CustomAttribute {:description "Custom attribute values that are either filterable or non-filterable.", :properties {:filterable {:description "Optional. If the `filterable` flag is true, custom field values are searchable.\nIf false, values are not searchable.\n\nDefault is false.", :type "boolean"}, :longValue {:description "Optional but at least one of string_values or long_value must\nbe specified.\n\nThis field is used to perform number range search.\n(`EQ`, `GT`, `GE`, `LE`, `LT`) over filterable `long_value`. For\n`long_value`, a value between Long.MIN and Long.MAX is allowed.", :format "int64", :type "string"}, :stringValues {:$ref "#/definitions/StringValues", :description "Optional but at least one of string_values or long_value must\nbe specified.\n\nThis field is used to perform a string match (`CASE_SENSITIVE_MATCH` or\n`CASE_INSENSITIVE_MATCH`) search.\nFor filterable `string_values`, a maximum total number of 200 values\nis allowed, with each `string_value` has a byte size of no more than\n255B. For unfilterable `string_values`, the maximum total byte size of\nunfilterable `string_values` is 50KB.\n\nEmpty strings are not allowed."}}, :type "object"}, :Filter {:description "Deprecated. Use BatchDeleteJobsRequest instead.\n\nInput only.\n\nFilter for jobs to be deleted.", :properties {:requisitionId {:description "Required. The requisition ID (or posting ID) assigned by the client to identify a\njob. This is intended for client identification and tracking of\nlistings.\nname takes precedence over this field\nThe maximum number of allowed characters is 225.", :type "string"}}, :type "object"}, :CreateJobRequest {:description "Input only.\n\nCreate job request.", :properties {:disableStreetAddressResolution {:description "Deprecated. Please use processing_options. This flag is ignored if\nprocessing_options is set.\n\nOptional.\n\nIf set to `true`, the service does not attempt to resolve a\nmore precise address for the job.", :type "boolean"}, :job {:$ref "#/definitions/Job", :description "Required. The Job to be created."}, :processingOptions {:$ref "#/definitions/JobProcessingOptions", :description "Optional. Options for job processing."}}, :type "object"}, :CompleteQueryResponse {:description "Output only.\n\nResponse of auto-complete query.", :properties {:completionResults {:description "Results of the matching job/company candidates.", :items {:$ref "#/definitions/CompletionResult"}, :type "array"}, :metadata {:$ref "#/definitions/ResponseMetadata", :description "Additional information for the API invocation, such as the request\ntracking id."}}, :type "object"}, :CompensationFilter {:description "Input only.\n\nFilter on job compensation type and amount.", :properties {:includeJobsWithUnspecifiedCompensationRange {:description "Optional. Whether to include jobs whose compensation range is unspecified.", :type "boolean"}, :range {:$ref "#/definitions/CompensationRange", :description "Optional. Compensation range."}, :type {:description "Required. Type of filter.", :enum ["FILTER_TYPE_UNSPECIFIED" "UNIT_ONLY" "UNIT_AND_AMOUNT" "ANNUALIZED_BASE_AMOUNT" "ANNUALIZED_TOTAL_AMOUNT"], :type "string"}, :units {:description "Required. Specify desired `base compensation entry's`\nCompensationInfo.CompensationUnit.", :items {:enum ["COMPENSATION_UNIT_UNSPECIFIED" "HOURLY" "DAILY" "WEEKLY" "MONTHLY" "YEARLY" "ONE_TIME" "OTHER_COMPENSATION_UNIT"], :type "string"}, :type "array"}}, :type "object"}, :CompensationHistogramRequest {:description "Input only.\n\nCompensation based histogram request.", :properties {:bucketingOption {:$ref "#/definitions/NumericBucketingOption", :description "Required. Numeric histogram options, like buckets, whether include min or max value."}, :type {:description "Required. Type of the request, representing which field the histogramming should be\nperformed over. A single request can only specify one histogram of each\n`CompensationHistogramRequestType`.", :enum ["COMPENSATION_HISTOGRAM_REQUEST_TYPE_UNSPECIFIED" "BASE" "ANNUALIZED_BASE" "ANNUALIZED_TOTAL"], :type "string"}}, :type "object"}, :CompensationInfo {:description "Job compensation details.", :properties {:amount {:$ref "#/definitions/Money", :description "Deprecated. Use entries instead.\n\nOptional.\n\nThe amount of compensation or pay for the job.\nAs an alternative, compensation_amount_min and\ncompensation_amount_max may be used to define a range of\ncompensation."}, :annualizedBaseCompensationRange {:$ref "#/definitions/CompensationRange", :description "Output only. Annualized base compensation range. Computed as\nbase compensation entry's CompensationEntry.compensation times\nCompensationEntry.expected_units_per_year.\n\nSee CompensationEntry for explanation on compensation annualization."}, :annualizedTotalCompensationRange {:$ref "#/definitions/CompensationRange", :description "Output only. Annualized total compensation range. Computed as\nall compensation entries' CompensationEntry.compensation times\nCompensationEntry.expected_units_per_year.\n\nSee CompensationEntry for explanation on compensation annualization."}, :entries {:description "Optional. Job compensation information.\n\nAt most one entry can be of type\nCompensationInfo.CompensationType.BASE, which is\nreferred as ** base compensation entry ** for the job.", :items {:$ref "#/definitions/CompensationEntry"}, :type "array"}, :max {:$ref "#/definitions/Money", :description "Deprecated. Use entries instead.\n\nOptional.\n\nAn upper bound on a range for compensation or pay for the job.\nThe currency type is specified in compensation_amount."}, :min {:$ref "#/definitions/Money", :description "Deprecated. Use entries instead.\n\nOptional.\n\nA lower bound on a range for compensation or pay for the job.\nThe currency type is specified in compensation_amount."}, :type {:description "Deprecated. Use entries instead.\n\nOptional.\n\nType of job compensation.", :enum ["JOB_COMPENSATION_TYPE_UNSPECIFIED" "HOURLY" "SALARY" "PER_PROJECT" "COMMISSION" "OTHER_TYPE"], :type "string"}}, :type "object"}, :CustomAttributeHistogramRequest {:description "Custom attributes histogram request. An error will be thrown if neither\nstring_value_histogram or long_value_histogram_bucketing_option has\nbeen defined.", :properties {:key {:description "Required. Specifies the custom field key to perform a histogram on. If specified\nwithout `long_value_histogram_bucketing_option`, histogram on string values\nof the given `key` is triggered, otherwise histogram is performed on long\nvalues.", :type "string"}, :longValueHistogramBucketingOption {:$ref "#/definitions/NumericBucketingOption", :description "Optional. Specifies buckets used to perform a range histogram on Job's\nfilterable long custom field values, or min/max value requirements."}, :stringValueHistogram {:description "Optional. If set to true, the response will include the histogram value for\neach key as a string.", :type "boolean"}}, :type "object"}, :DeviceInfo {:description "Input only.\n\nDevice information collected from the job seeker, candidate, or\nother entity conducting the job search. Providing this information improves\nthe quality of the search results across devices.", :properties {:deviceType {:description "Optional. Type of the device.", :enum ["DEVICE_TYPE_UNSPECIFIED" "WEB" "MOBILE_WEB" "ANDROID" "IOS" "BOT" "OTHER"], :type "string"}, :id {:description "Optional. A device-specific ID. The ID must be a unique identifier that distinguishes\nthe device from other devices.", :type "string"}}, :type "object"}, :ExtendedCompensationInfoCompensationEntry {:description "Deprecated. See CompensationInfo.\n\nA compensation entry that represents one component of compensation, such\nas base pay, bonus, or other compensation type.\n\nAnnualization: One compensation entry can be annualized if\n- it contains valid amount or range.\n- and its expected_units_per_year is set or can be derived.\nIts annualized range is determined as (amount or range) times\nexpected_units_per_year.", :properties {:amount {:$ref "#/definitions/ExtendedCompensationInfoDecimal", :description "Optional. Monetary amount."}, :description {:description "Optional. Compensation description.", :type "string"}, :expectedUnitsPerYear {:$ref "#/definitions/ExtendedCompensationInfoDecimal", :description "Optional. Expected number of units paid each year. If not specified, when\nJob.employment_types is FULLTIME, a default value is inferred\nbased on unit. Default values:\n- HOURLY: 2080\n- DAILY: 260\n- WEEKLY: 52\n- MONTHLY: 12\n- ANNUAL: 1"}, :range {:$ref "#/definitions/ExtendedCompensationInfoCompensationRange", :description "Optional. Compensation range."}, :type {:description "Required. Compensation type.", :enum ["EXTENDED_COMPENSATION_TYPE_UNSPECIFIED" "BASE" "BONUS" "SIGNING_BONUS" "EQUITY" "PROFIT_SHARING" "COMMISSIONS" "TIPS" "OTHER_COMPENSATION_TYPE"], :type "string"}, :unit {:description "Optional. Frequency of the specified amount.\n\nDefault is CompensationUnit.COMPENSATION_UNIT_UNSPECIFIED.", :enum ["EXTENDED_COMPENSATION_UNIT_UNSPECIFIED" "HOURLY" "DAILY" "WEEKLY" "MONTHLY" "YEARLY" "ONE_TIME" "OTHER_COMPENSATION_UNIT"], :type "string"}, :unspecified {:description "Optional. Indicates compensation amount and range are unset.", :type "boolean"}}, :type "object"}, :SearchJobsRequest {:description "Input only.\n\nThe Request body of the `SearchJobs` call.", :properties {:sortBy {:description "Optional. The criteria determining how search results are sorted.\nDefaults to SortBy.RELEVANCE_DESC if no value is specified.", :enum ["SORT_BY_UNSPECIFIED" "RELEVANCE_DESC" "PUBLISHED_DATE_DESC" "UPDATED_DATE_DESC" "TITLE" "TITLE_DESC" "ANNUALIZED_BASE_COMPENSATION" "ANNUALIZED_TOTAL_COMPENSATION" "ANNUALIZED_BASE_COMPENSATION_DESC" "ANNUALIZED_TOTAL_COMPENSATION_DESC"], :type "string"}, :disableRelevanceThresholding {:description "Optional. Controls whether to disable relevance thresholding. Relevance\nthresholding removes jobs that have low relevance in search results,\nfor example, removing \"Assistant to the CEO\" positions from the search\nresults of a search for \"CEO\".\n\nDisabling relevance thresholding improves the accuracy of subsequent\nsearch requests.\n\nDefaults to false.", :type "boolean"}, :offset {:description "Optional. An integer that specifies the current offset (that is, starting result\nlocation, amongst the jobs deemed by the API as relevant) in search\nresults. This field is only considered if page_token is unset.\n\nFor example, 0 means to  return results starting from the first matching\njob, and 10 means to return from the 11th job. This can be used for\npagination, (for example, pageSize = 10 and offset = 10 means to return\nfrom the second page).", :format "int32", :type "integer"}, :filters {:$ref "#/definitions/JobFilters", :description "Deprecated. Use query instead.\n\nOptional.\n\nRestrictions on the scope of the search request, such as filtering\nby location."}, :requestMetadata {:$ref "#/definitions/RequestMetadata", :description "Required. The meta information collected about the job searcher, used to improve the\nsearch quality of the service. The identifiers, (such as `user_id`) are\nprovided by users, and must be unique and consistent."}, :mode {:description "Required. Mode of a search.", :enum ["SEARCH_MODE_UNSPECIFIED" "JOB_SEARCH" "FEATURED_JOB_SEARCH" "EMAIL_ALERT_SEARCH"], :type "string"}, :enableBroadening {:description "Optional. Controls whether to broaden the search when it produces sparse results.\nBroadened queries append results to the end of the matching results\nlist.\n\nDefaults to false.", :type "boolean"}, :histogramFacets {:$ref "#/definitions/HistogramFacets", :description "Optional. Restrictions on what fields to perform histogram on, such as\n`COMPANY_SIZE` etc."}, :enablePreciseResultSize {:description "Optional. Controls if the search job request requires the return of a precise\ncount of the first 300 results. Setting this to `true` ensures\nconsistency in the number of results per page. Best practice is to set this\nvalue to true if a client allows users to jump directly to a\nnon-sequential search results page.\n\nEnabling this flag may adversely impact performance.\n\nDefaults to false.", :type "boolean"}, :pageToken {:description "Optional. The token specifying the current offset within\nsearch results. See SearchJobsResponse.next_page_token for\nan explanation of how to obtain the next set of query results.", :type "string"}, :pageSize {:description "Optional. A limit on the number of jobs returned in the search results.\nIncreasing this value above the default value of 10 can increase search\nresponse time. The value can be between 1 and 100.", :format "int32", :type "integer"}, :jobView {:description "Optional. The number of job attributes returned for jobs in the\nsearch response. Defaults to JobView.SMALL if no value is specified.", :enum ["JOB_VIEW_UNSPECIFIED" "SMALL" "MINIMAL" "FULL"], :type "string"}, :query {:$ref "#/definitions/JobQuery", :description "Optional. Query used to search against jobs, such as keyword, location filters, etc."}, :orderBy {:description "Deprecated. Use sort_by instead.\n\nOptional.\n\nThe criteria determining how search results are sorted.\nDefaults to SortBy.RELEVANCE_DESC if no value is specified.", :enum ["SORT_BY_UNSPECIFIED" "RELEVANCE_DESC" "PUBLISHED_DATE_DESC" "UPDATED_DATE_DESC" "TITLE" "TITLE_DESC" "ANNUALIZED_BASE_COMPENSATION" "ANNUALIZED_TOTAL_COMPENSATION" "ANNUALIZED_BASE_COMPENSATION_DESC" "ANNUALIZED_TOTAL_COMPENSATION_DESC"], :type "string"}}, :type "object"}, :GetHistogramRequest {:description "Deprecated. Use SearchJobsRequest.histogram_facets instead to make\na single call with both search and histogram.\n\nInput only.\n\nA request for the `GetHistogram` method.", :properties {:allowBroadening {:description "Optional. Controls whether to broaden the search to avoid too few results for a\ngiven query in instances where a search has sparse results. Results from a\nbroadened query is a superset of the results from the original query.\n\nDefaults to false.", :type "boolean"}, :filters {:$ref "#/definitions/JobFilters", :description "Deprecated. Use query instead.\n\nOptional.\n\nRestrictions on the scope of the histogram."}, :query {:$ref "#/definitions/JobQuery", :description "Optional. Query used to search against jobs, such as keyword, location filters, etc."}, :requestMetadata {:$ref "#/definitions/RequestMetadata", :description "Meta information, such as `user_id`, collected from the job searcher or\nother entity conducting a job search, is used to improve the service's\nsearch quality. Users determine identifier values, which must be\nunique and consist."}, :searchTypes {:description "Required. A list of facets that specify the histogram data to be calculated\nagainst and returned.\n\nHistogram response times can be slow, and counts\ncan be approximations. This call may be temporarily or permanently removed\nprior to the production release of Cloud Talent Solution.", :items {:enum ["JOB_FIELD_UNSPECIFIED" "COMPANY_ID" "EMPLOYMENT_TYPE" "COMPANY_SIZE" "DATE_PUBLISHED" "CUSTOM_FIELD_1" "CUSTOM_FIELD_2" "CUSTOM_FIELD_3" "CUSTOM_FIELD_4" "CUSTOM_FIELD_5" "CUSTOM_FIELD_6" "CUSTOM_FIELD_7" "CUSTOM_FIELD_8" "CUSTOM_FIELD_9" "CUSTOM_FIELD_10" "CUSTOM_FIELD_11" "CUSTOM_FIELD_12" "CUSTOM_FIELD_13" "CUSTOM_FIELD_14" "CUSTOM_FIELD_15" "CUSTOM_FIELD_16" "CUSTOM_FIELD_17" "CUSTOM_FIELD_18" "CUSTOM_FIELD_19" "CUSTOM_FIELD_20" "EDUCATION_LEVEL" "EXPERIENCE_LEVEL" "ADMIN1" "COUNTRY" "CITY" "LOCALE" "LANGUAGE" "CATEGORY" "CITY_COORDINATE" "ADMIN1_COUNTRY" "COMPANY_TITLE" "COMPANY_DISPLAY_NAME" "BASE_COMPENSATION_UNIT"], :type "string"}, :type "array"}}, :type "object"}, :CompensationEntry {:description "A compensation entry that represents one component of compensation, such\nas base pay, bonus, or other compensation type.\n\nAnnualization: One compensation entry can be annualized if\n- it contains valid amount or range.\n- and its expected_units_per_year is set or can be derived.\nIts annualized range is determined as (amount or range) times\nexpected_units_per_year.", :properties {:amount {:$ref "#/definitions/Money", :description "Optional. Compensation amount."}, :description {:description "Optional. Compensation description.  For example, could\nindicate equity terms or provide additional context to an estimated\nbonus.", :type "string"}, :expectedUnitsPerYear {:description "Optional. Expected number of units paid each year. If not specified, when\nJob.employment_types is FULLTIME, a default value is inferred\nbased on unit. Default values:\n- HOURLY: 2080\n- DAILY: 260\n- WEEKLY: 52\n- MONTHLY: 12\n- ANNUAL: 1", :format "double", :type "number"}, :range {:$ref "#/definitions/CompensationRange", :description "Optional. Compensation range."}, :type {:description "Required. Compensation type.", :enum ["COMPENSATION_TYPE_UNSPECIFIED" "BASE" "BONUS" "SIGNING_BONUS" "EQUITY" "PROFIT_SHARING" "COMMISSIONS" "TIPS" "OTHER_COMPENSATION_TYPE"], :type "string"}, :unit {:description "Optional. Frequency of the specified amount.\n\nDefault is CompensationUnit.COMPENSATION_UNIT_UNSPECIFIED.", :enum ["COMPENSATION_UNIT_UNSPECIFIED" "HOURLY" "DAILY" "WEEKLY" "MONTHLY" "YEARLY" "ONE_TIME" "OTHER_COMPENSATION_UNIT"], :type "string"}}, :type "object"}, :Company {:description "A Company resource represents a company in the service. A company is the\nentity that owns job listings, that is, the hiring entity responsible for\nemploying applicants for the job position.", :properties {:hqLocation {:description "Optional. The street address of the company's main headquarters, which may be\ndifferent from the job location. The service attempts\nto geolocate the provided address, and populates a more specific\nlocation wherever possible in structured_company_hq_location.", :type "string"}, :companySize {:description "Optional. The employer's company size.", :enum ["COMPANY_SIZE_UNSPECIFIED" "MINI" "SMALL" "SMEDIUM" "MEDIUM" "BIG" "BIGGER" "GIANT"], :type "string"}, :companyInfoSources {:description "Optional. Identifiers external to the application that help to further identify\nthe employer.", :items {:$ref "#/definitions/CompanyInfoSource"}, :type "array"}, :keywordSearchableCustomAttributes {:description "Optional. A list of keys of filterable Job.custom_attributes, whose\ncorresponding `string_values` are used in keyword search. Jobs with\n`string_values` under these specified field keys are returned if any\nof the values matches the search keyword. Custom field values with\nparenthesis, brackets and special symbols might not be properly searchable,\nand those keyword queries need to be surrounded by quotes.", :items {:type "string"}, :type "array"}, :displayName {:description "Required. The name of the employer to be displayed with the job,\nfor example, \"Google, LLC.\".", :type "string"}, :disableLocationOptimization {:description "Deprecated. Do not use this field.\n\nOptional.\n\nThis field is no longer used. Any value set to it is ignored.", :type "boolean"}, :name {:description "Required during company update.\n\nThe resource name for a company. This is generated by the service when a\ncompany is created, for example,\n\"companies/0000aaaa-1111-bbbb-2222-cccc3333dddd\".", :type "string"}, :eeoText {:description "Optional. Equal Employment Opportunity legal disclaimer text to be\nassociated with all jobs, and typically to be displayed in all\nroles.\n\nThe maximum number of allowed characters is 500.", :type "string"}, :suspended {:description "Output only. Indicates whether a company is flagged to be suspended from public\navailability by the service when job content appears suspicious,\nabusive, or spammy.", :type "boolean"}, :distributorBillingCompanyId {:description "Optional. The unique company identifier provided by the client to identify an\nemployer for billing purposes. Recommended practice is to use\nthe distributor_company_id.\n\nDefaults to same value as distributor_company_id when a value\nis not provided.", :type "string"}, :title {:description "Deprecated. Use display_name instead.\n\nRequired.\n\nThe name of the employer to be displayed with the job,\nfor example, \"Google, LLC.\".", :type "string"}, :imageUrl {:description "Optional. A URL that hosts the employer's company logo. If provided,\nthe logo image should be squared at 80x80 pixels.\n\nThe url must be a Google Photos or Google Album url.\nOnly images in these Google sub-domains are accepted.", :type "string"}, :careerPageLink {:description "Optional. The URL to employer's career site or careers page on the employer's web\nsite.", :type "string"}, :structuredCompanyHqLocation {:$ref "#/definitions/JobLocation", :description "Output only. A structured headquarters location of the company,\nresolved from hq_location if possible."}, :hiringAgency {:description "Optional. Set to true if it is the hiring agency that post jobs for other\nemployers.\n\nDefaults to false if not provided.", :type "boolean"}, :website {:description "Optional. The URL representing the company's primary web site or home page,\nsuch as, \"www.google.com\".", :type "string"}, :distributorCompanyId {:description "Required. A client's company identifier, used to uniquely identify the\ncompany. If an employer has a subsidiary or sub-brand, such as \"Alphabet\"\nand \"Google\", which the client wishes to use as the company displayed on\nthe job. Best practice is to create a distinct company identifier for each\ndistinct brand displayed.\n\nThe maximum number of allowed characters is 255.", :type "string"}, :keywordSearchableCustomFields {:description "Deprecated. Use keyword_searchable_custom_attributes instead.\n\nOptional.\n\nA list of filterable custom fields that should be used in keyword\nsearch. The jobs of this company are returned if any of these custom\nfields matches the search keyword. Custom field values with parenthesis,\nbrackets and special symbols might not be properly searchable, and those\nkeyword queries need to be surrounded by quotes.", :items {:format "int32", :type "integer"}, :type "array"}}, :type "object"}, :ListCompaniesResponse {:description "Output only.\n\nThe List companies response object.", :properties {:companies {:description "Companies for the current client.", :items {:$ref "#/definitions/Company"}, :type "array"}, :metadata {:$ref "#/definitions/ResponseMetadata", :description "Additional information for the API invocation, such as the request\ntracking id."}, :nextPageToken {:description "A token to retrieve the next page of results.", :type "string"}}, :type "object"}, :SearchJobsResponse {:description "Output only.\n\nResponse for SearchJob method.", :properties {:appliedJobLocationFilters {:description "The location filters that the service applied to the specified query. If\nany filters are lat-lng based, the JobLocation.location_type is\nJobLocation.LocationType#LOCATION_TYPE_UNSPECIFIED.", :items {:$ref "#/definitions/JobLocation"}, :type "array"}, :spellResult {:$ref "#/definitions/SpellingCorrection", :description "The spell checking result, and correction."}, :nextPageToken {:description "The token that specifies the starting position of the next page of results.\nThis field is empty if there are no more results.", :type "string"}, :totalSize {:description "The precise result count, which is available only if the client set\nenable_precise_result_size to `true` or if the response\nis the last page of results. Otherwise, the value will be `-1`.", :format "int64", :type "string"}, :numJobsFromBroadenedQuery {:description "If query broadening is enabled, we may append additional results from the\nbroadened query. This number indicates how many of the jobs returned in the\njobs field are from the broadened query. These results are always at the\nend of the jobs list. In particular, a value of 0 means all the jobs in the\njobs list are from the original (without broadening) query. If this\nfield is non-zero, subsequent requests with offset after this result set\nshould contain all broadened results.", :format "int32", :type "integer"}, :appliedCommuteFilter {:$ref "#/definitions/CommutePreference", :description "The commute filter the service applied to the specified query. This\ninformation is only available when query has a valid CommutePreference."}, :matchingJobs {:description "The Job entities that match the specified SearchJobsRequest.", :items {:$ref "#/definitions/MatchingJob"}, :type "array"}, :jobView {:description "Corresponds to SearchJobsRequest.job_view.", :enum ["JOB_VIEW_UNSPECIFIED" "SMALL" "MINIMAL" "FULL"], :type "string"}, :estimatedTotalSize {:description "An estimation of the number of jobs that match the specified query.\n\nThis number is not guaranteed to be accurate. For accurate results,\nseenenable_precise_result_size.", :format "int64", :type "string"}, :histogramResults {:$ref "#/definitions/HistogramResults", :description "The histogram results that match specified\nSearchJobsRequest.HistogramFacets."}, :metadata {:$ref "#/definitions/ResponseMetadata", :description "Additional information for the API invocation, such as the request\ntracking id."}}, :type "object"}, :NumericBucketingResult {:description "Output only.\n\nCustom numeric bucketing result.", :properties {:counts {:description "Count within each bucket. Its size is the length of\nNumericBucketingOption.bucket_bounds plus 1.", :items {:$ref "#/definitions/BucketizedCount"}, :type "array"}, :maxValue {:description "Stores the maximum value of the numeric field. Will be populated only if\n[NumericBucketingOption.requires_min_max] is set to true.", :format "double", :type "number"}, :minValue {:description "Stores the minimum value of the numeric field. Will be populated only if\n[NumericBucketingOption.requires_min_max] is set to true.", :format "double", :type "number"}}, :type "object"}, :ExtendedCompensationInfoCompensationRange {:description "Deprecated. See CompensationInfo.\n\nCompensation range.", :properties {:max {:$ref "#/definitions/ExtendedCompensationInfoDecimal", :description "Required. Maximum value."}, :min {:$ref "#/definitions/ExtendedCompensationInfoDecimal", :description "Required. Minimum value."}}, :type "object"}, :ExtendedCompensationInfo {:description "Deprecated. Use CompensationInfo.\n\nDescribes job compensation.", :properties {:annualizedBaseCompensationRange {:$ref "#/definitions/ExtendedCompensationInfoCompensationRange", :description "Output only. Annualized base compensation range."}, :annualizedBaseCompensationUnspecified {:description "Output only. Indicates annualized base compensation range cannot be derived, due to\nthe job's base compensation entry cannot be annualized.\nSee CompensationEntry for explanation on annualization and base\ncompensation entry.", :type "boolean"}, :annualizedTotalCompensationRange {:$ref "#/definitions/ExtendedCompensationInfoCompensationRange", :description "Output only. Annualized total compensation range."}, :annualizedTotalCompensationUnspecified {:description "Output only. Indicates annualized total compensation range cannot be derived, due to\nthe job's all CompensationEntry cannot be annualized.\nSee CompensationEntry for explanation on annualization and base\ncompensation entry.", :type "boolean"}, :currency {:description "Optional. A 3-letter [ISO 4217](https://www.iso.org/iso-4217-currency-codes.html)\ncurrency code.", :type "string"}, :entries {:description "Optional. Job compensation information.\n\nAt most one entry can be of type\nExtendedCompensationInfo.CompensationType.BASE, which is\nreferred as ** base compensation entry ** for the job.", :items {:$ref "#/definitions/ExtendedCompensationInfoCompensationEntry"}, :type "array"}}, :type "object"}, :HistogramResults {:description "Output only.\n\nHistogram results that matches HistogramFacets specified in\nSearchJobsRequest.", :properties {:compensationHistogramResults {:description "Specifies compensation field-based histogram results that matches\nHistogramFacets.compensation_histogram_requests.", :items {:$ref "#/definitions/CompensationHistogramResult"}, :type "array"}, :customAttributeHistogramResults {:description "Specifies histogram results for custom attributes that\nmatches HistogramFacets.custom_attribute_histogram_facets.", :items {:$ref "#/definitions/CustomAttributeHistogramResult"}, :type "array"}, :simpleHistogramResults {:description "Specifies histogram results that matches\nHistogramFacets.simple_histogram_facets.", :items {:$ref "#/definitions/HistogramResult"}, :type "array"}}, :type "object"}, :Empty {:description "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.", :properties {}, :type "object"}, :PostalAddress {:description "Represents a postal address, e.g. for postal delivery or payments addresses.\nGiven a postal address, a postal service can deliver items to a premise, P.O.\nBox or similar.\nIt is not intended to model geographical locations (roads, towns,\nmountains).\n\nIn typical usage an address would be created via user input or from importing\nexisting data, depending on the type of process.\n\nAdvice on address input / editing:\n - Use an i18n-ready address widget such as\n   https://github.com/google/libaddressinput)\n- Users should not be presented with UI elements for input or editing of\n  fields outside countries where that field is used.\n\nFor more guidance on how to use this schema, please see:\nhttps://support.google.com/business/answer/6397478", :properties {:sortingCode {:description "Optional. Additional, country-specific, sorting code. This is not used\nin most regions. Where it is used, the value is either a string like\n\"CEDEX\", optionally followed by a number (e.g. \"CEDEX 7\"), or just a number\nalone, representing the \"sector code\" (Jamaica), \"delivery area indicator\"\n(Malawi) or \"post office indicator\" (e.g. Côte d'Ivoire).", :type "string"}, :locality {:description "Optional. Generally refers to the city/town portion of the address.\nExamples: US city, IT comune, UK post town.\nIn regions of the world where localities are not well defined or do not fit\ninto this structure well, leave locality empty and use address_lines.", :type "string"}, :revision {:description "The schema revision of the `PostalAddress`. This must be set to 0, which is\nthe latest revision.\n\nAll new revisions **must** be backward compatible with old revisions.", :format "int32", :type "integer"}, :administrativeArea {:description "Optional. Highest administrative subdivision which is used for postal\naddresses of a country or region.\nFor example, this can be a state, a province, an oblast, or a prefecture.\nSpecifically, for Spain this is the province and not the autonomous\ncommunity (e.g. \"Barcelona\" and not \"Catalonia\").\nMany countries don't use an administrative area in postal addresses. E.g.\nin Switzerland this should be left unpopulated.", :type "string"}, :addressLines {:description "Unstructured address lines describing the lower levels of an address.\n\nBecause values in address_lines do not have type information and may\nsometimes contain multiple values in a single field (e.g.\n\"Austin, TX\"), it is important that the line order is clear. The order of\naddress lines should be \"envelope order\" for the country/region of the\naddress. In places where this can vary (e.g. Japan), address_language is\nused to make it explicit (e.g. \"ja\" for large-to-small ordering and\n\"ja-Latn\" or \"en\" for small-to-large). This way, the most specific line of\nan address can be selected based on the language.\n\nThe minimum permitted structural representation of an address consists\nof a region_code with all remaining information placed in the\naddress_lines. It would be possible to format such an address very\napproximately without geocoding, but no semantic reasoning could be\nmade about any of the address components until it was at least\npartially resolved.\n\nCreating an address only containing a region_code and address_lines, and\nthen geocoding is the recommended way to handle completely unstructured\naddresses (as opposed to guessing which parts of the address should be\nlocalities or administrative areas).", :items {:type "string"}, :type "array"}, :organization {:description "Optional. The name of the organization at the address.", :type "string"}, :recipients {:description "Optional. The recipient at the address.\nThis field may, under certain circumstances, contain multiline information.\nFor example, it might contain \"care of\" information.", :items {:type "string"}, :type "array"}, :languageCode {:description "Optional. BCP-47 language code of the contents of this address (if\nknown). This is often the UI language of the input form or is expected\nto match one of the languages used in the address' country/region, or their\ntransliterated equivalents.\nThis can affect formatting in certain countries, but is not critical\nto the correctness of the data and will never affect any validation or\nother non-formatting related operations.\n\nIf this value is not known, it should be omitted (rather than specifying a\npossibly incorrect default).\n\nExamples: \"zh-Hant\", \"ja\", \"ja-Latn\", \"en\".", :type "string"}, :regionCode {:description "Required. CLDR region code of the country/region of the address. This\nis never inferred and it is up to the user to ensure the value is\ncorrect. See http://cldr.unicode.org/ and\nhttp://www.unicode.org/cldr/charts/30/supplemental/territory_information.html\nfor details. Example: \"CH\" for Switzerland.", :type "string"}, :postalCode {:description "Optional. Postal code of the address. Not all countries use or require\npostal codes to be present, but where they are used, they may trigger\nadditional validation with other parts of the address (e.g. state/zip\nvalidation in the U.S.A.).", :type "string"}, :sublocality {:description "Optional. Sublocality of the address.\nFor example, this can be neighborhoods, boroughs, districts.", :type "string"}}, :type "object"}, :CommutePreference {:description "Input only.\n\nParameters needed for commute search.", :properties {:allowNonStreetLevelAddress {:description "Optional. If `true`, jobs without street level addresses may also be returned.\nFor city level addresses, the city center is used. For state and coarser\nlevel addresses, text matching is used.\nIf this field is set to `false` or is not specified, only jobs that include\nstreet level addresses will be returned by commute search.", :type "boolean"}, :departureHourLocal {:description "Optional. The departure hour to use to calculate traffic impact. Accepts an\ninteger between 0 and 23, representing the hour in the time zone of the\nstart_location. Must not be present if road_traffic is specified.", :format "int32", :type "integer"}, :method {:description "Required. The method of transportation for which to calculate the commute time.", :enum ["COMMUTE_METHOD_UNSPECIFIED" "DRIVING" "TRANSIT"], :type "string"}, :roadTraffic {:description "Optional. Specifies the traffic density to use when calculating commute time.\nMust not be present if departure_hour_local is specified.", :enum ["ROAD_TRAFFIC_UNSPECIFIED" "TRAFFIC_FREE" "BUSY_HOUR"], :type "string"}, :startLocation {:$ref "#/definitions/LatLng", :description "Required. The latitude and longitude of the location from which to calculate the\ncommute time."}, :travelTime {:description "Required. The maximum travel time in seconds. The maximum allowed value is `3600s`\n(one hour). Format is `123s`.", :format "google-duration", :type "string"}}, :type "object"}, :BatchDeleteJobsRequest {:description "Input only.\n\nBatch delete jobs request.", :properties {:filter {:description "Required. The filter string specifies the jobs to be deleted.\n\nSupported operator: =, AND\n\nThe fields eligible for filtering are:\n\n* `companyName` (Required)\n* `requisitionId` (Required)\n\nSample Query: companyName = \"companies/123\" AND requisitionId = \"req-1\"", :type "string"}}, :type "object"}, :LatLng {:description "An object representing a latitude/longitude pair. This is expressed as a pair\nof doubles representing degrees latitude and degrees longitude. Unless\nspecified otherwise, this must conform to the\n<a href=\"http://www.unoosa.org/pdf/icg/2012/template/WGS_84.pdf\">WGS84\nstandard</a>. Values must be within normalized ranges.", :properties {:latitude {:description "The latitude in degrees. It must be in the range [-90.0, +90.0].", :format "double", :type "number"}, :longitude {:description "The longitude in degrees. It must be in the range [-180.0, +180.0].", :format "double", :type "number"}}, :type "object"}, :Job {:description "A Job resource represents a job posting (also referred to as a \"job listing\"\nor \"job requisition\"). A job belongs to a Company, which is the hiring\nentity responsible for the job.", :properties {:description {:description "Required. The description of the job, which typically includes a multi-paragraph\ndescription of the company and related information. Separate fields are\nprovided on the job object for responsibilities,\nqualifications, and other job characteristics. Use of\nthese separate job fields is recommended.\n\nThis field accepts and sanitizes HTML input, and also accepts\nbold, italic, ordered list, and unordered list markup tags.\n\nThe maximum number of allowed characters is 100,000.", :type "string"}, :department {:description "Optional. The department or functional area within the company with the open\nposition.\n\nThe maximum number of allowed characters is 255.", :type "string"}, :applicationEmailList {:description "Optional but at least one of application_urls,\napplication_email_list or application_instruction must be\nspecified.\n\nUse this field to specify email address(es) to which resumes or\napplications can be sent.\n\nThe maximum number of allowed characters is 255.", :items {:type "string"}, :type "array"}, :unindexedCustomFields {:additionalProperties {:$ref "#/definitions/CustomField"}, :description "Deprecated. Use custom_attributes instead.\n\nOptional.\n\nA map of fields to hold non-filterable custom job attributes, similar to\nfilterable_custom_fields. These fields are distinct in that the data\nin these fields are not indexed. Therefore, the client cannot search\nagainst them, nor can the client use them to list jobs.\n\nThe key of the map can be any valid string.", :type "object"}, :requisitionId {:description "Required. The requisition ID, also referred to as the posting ID, assigned by the\nclient to identify a job. This field is intended to be used by clients\nfor client identification and tracking of listings. A job is not allowed\nto be created if there is another job with the same requisition_id,\ncompany_name and language_code.\n\nThe maximum number of allowed characters is 255.", :type "string"}, :name {:description "Required during job update.\n\nResource name assigned to a job by the API, for example, \"/jobs/foo\". Use\nof this field in job queries and API calls is preferred over the use of\nrequisition_id since this value is unique.", :type "string"}, :filterableCustomFields {:additionalProperties {:$ref "#/definitions/CustomField"}, :description "Deprecated. Use custom_attributes instead.\n\nOptional.\n\nA map of fields to hold filterable custom job attributes not captured by\nthe standard fields such as job_title, company_name, or\nlevel. These custom fields store arbitrary\nstring values, and can be used for purposes not covered by\nthe structured fields. For the best search experience, use of the\nstructured rather than custom fields is recommended.\n\nData stored in these custom fields fields are indexed and\nsearched against by keyword searches (see\nSearchJobsRequest.custom_field_filters][]).\n\nThe map key must be a number between 1-20. If an invalid key is\nprovided on job create or update, an error is returned.", :type "object"}, :extendedCompensationInfo {:$ref "#/definitions/ExtendedCompensationInfo", :description "Deprecated. Always use compensation_info.\n\nOptional.\n\nJob compensation information.\n\nThis field replaces compensation_info. Only\nCompensationInfo.entries or extended_compensation_info can be set,\notherwise an exception is thrown."}, :startDate {:$ref "#/definitions/Date", :description "Optional. The start date of the job in UTC time zone. Typically this field\nis used for contracting engagements.\nDates prior to 1970/1/1 and invalid date formats are ignored."}, :createTime {:description "Output only. The timestamp when this job was created.", :format "google-datetime", :type "string"}, :customAttributes {:additionalProperties {:$ref "#/definitions/CustomAttribute"}, :description "Optional. A map of fields to hold both filterable and non-filterable custom job\nattributes that are not covered by the provided structured fields.\n\nThis field is a more general combination of the deprecated id-based\nfilterable_custom_fields and string-based\nnon_filterable_custom_fields.\n\nThe keys of the map are strings up to 64 bytes and must match the\npattern: a-zA-Z*.\n\nAt most 100 filterable and at most 100 unfilterable keys are supported.\nFor filterable `string_values`, across all keys at most 200 values are\nallowed, with each string no more than 255 characters. For unfilterable\n`string_values`, the maximum total size of `string_values` across all keys\nis 50KB.", :type "object"}, :applicationUrls {:description "Optional but at least one of application_urls,\napplication_email_list or application_instruction must be\nspecified.\n\nUse this URL field to direct an applicant to a website, for example to\nlink to an online application form.\n\nThe maximum number of allowed characters is 2,000.", :items {:type "string"}, :type "array"}, :applicationInstruction {:description "Optional but at least one of application_urls,\napplication_email_list or application_instruction must be\nspecified.\n\nUse this field to provide instructions, such as \"Mail your application\nto ...\", that a candidate can follow to apply for the job.\n\nThis field accepts and sanitizes HTML input, and also accepts\nbold, italic, ordered list, and unordered list markup tags.\n\nThe maximum number of allowed characters is 3,000.", :type "string"}, :jobLocations {:description "Output only. Structured locations of the job, resolved from locations.", :items {:$ref "#/definitions/JobLocation"}, :type "array"}, :publishDate {:$ref "#/definitions/Date", :description "Optional. The date this job was most recently published in UTC format. The default\nvalue is the time the request arrives at the server."}, :companyTitle {:description "Deprecated. Use company_display_name instead.\n\nOutput only.\n\nThe name of the company listing the job.", :type "string"}, :responsibilities {:description "Optional. A description of job responsibilities. The use of this field is\nrecommended as an alternative to using the more general description\nfield.\n\nThis field accepts and sanitizes HTML input, and also accepts\nbold, italic, ordered list, and unordered list markup tags.\n\nThe maximum number of allowed characters is 10,000.", :type "string"}, :companyDisplayName {:description "Output only. The name of the company listing the job.", :type "string"}, :updateTime {:description "Output only. The timestamp when this job was last updated.", :format "google-datetime", :type "string"}, :region {:description "Optional. The job Region (for example, state, country) throughout which the job\nis available. If this field is set, a\nLocationFilter in a search query within the job region\nfinds this job if an exact location match is not specified.\nIf this field is set, setting job locations\nto the same location level as this field is strongly recommended.", :enum ["REGION_UNSPECIFIED" "STATE_WIDE" "NATION_WIDE" "TELECOMMUTE"], :type "string"}, :level {:description "Optional. The experience level associated with the job, such as \"Entry Level\".", :enum ["JOB_LEVEL_UNSPECIFIED" "ENTRY_LEVEL" "EXPERIENCED" "MANAGER" "DIRECTOR" "EXECUTIVE"], :type "string"}, :qualifications {:description "Optional. A description of the qualifications required to perform the\njob. The use of this field is recommended\nas an alternative to using the more general description field.\n\nThis field accepts and sanitizes HTML input, and also accepts\nbold, italic, ordered list, and unordered list markup tags.\n\nThe maximum number of allowed characters is 10,000.", :type "string"}, :locations {:description "Optional but strongly recommended for the best service experience.\n\nLocation(s) where the emploeyer is looking to hire for this job posting.\n\nSpecifying the full street address(es) of the hiring location enables\nbetter API results, especially job searches by commute time.\n\nAt most 50 locations are allowed for best search performance. If a job has\nmore locations, it is suggested to split it into multiple jobs with unique\nrequisition_ids (e.g. 'ReqA' becomes 'ReqA-1', 'ReqA-2', etc.) as\nmultiple jobs with the same requisition_id, company_name and\nlanguage_code are not allowed. If the original requisition_id must\nbe preserved, a custom field should be used for storage. It is also\nsuggested to group the locations that close to each other in the same job\nfor better search experience.\n\nThe maximum number of allowed characters is 500.", :items {:type "string"}, :type "array"}, :endDate {:$ref "#/definitions/Date", :description "Optional. The end date of the job in UTC time zone. Typically this field\nis used for contracting engagements.\nDates prior to 1970/1/1 and invalid date formats are ignored."}, :promotionValue {:description "Optional. A promotion value of the job, as determined by the client.\nThe value determines the sort order of the jobs returned when searching for\njobs using the featured jobs search call, with higher promotional values\nbeing returned first and ties being resolved by relevance sort. Only the\njobs with a promotionValue >0 are returned in a FEATURED_JOB_SEARCH.\n\nDefault value is 0, and negative values are treated as 0.", :format "int32", :type "integer"}, :languageCode {:description "Optional. The language of the posting. This field is distinct from\nany requirements for fluency that are associated with the job.\n\nLanguage codes must be in BCP-47 format, such as \"en-US\" or \"sr-Latn\".\nFor more information, see\n[Tags for Identifying Languages](https://tools.ietf.org/html/bcp47){:\nclass=\"external\" target=\"_blank\" }.\n\nIf this field is unspecified and Job.description is present, detected\nlanguage code based on Job.description is assigned, otherwise\ndefaults to 'en_US'.", :type "string"}, :benefits {:description "Optional. The benefits included with the job.", :items {:enum ["JOB_BENEFIT_TYPE_UNSPECIFIED" "CHILD_CARE" "DENTAL" "DOMESTIC_PARTNER" "FLEXIBLE_HOURS" "MEDICAL" "LIFE_INSURANCE" "PARENTAL_LEAVE" "RETIREMENT_PLAN" "SICK_DAYS" "TELECOMMUTE" "VACATION" "VISION"], :type "string"}, :type "array"}, :referenceUrl {:description "Output only. The URL of a web page that displays job details.", :type "string"}, :expireTime {:description "Optional but strongly recommended for the best service\nexperience.\n\nThe expiration timestamp of the job. After this timestamp, the\njob is marked as expired, and it no longer appears in search results. The\nexpired job can't be deleted or listed by the DeleteJob and\nListJobs APIs, but it can be retrieved with the GetJob API or\nupdated with the UpdateJob API. An expired job can be updated and\nopened again by using a future expiration timestamp. Updating an expired\njob fails if there is another existing open job with same\nrequisition_id, company_name and language_code.\n\nThe expired jobs are retained in our system for 90 days. However, the\noverall expired job count cannot exceed 3 times the maximum of open jobs\ncount over the past week, otherwise jobs with earlier expire time are\ncleaned first. Expired jobs are no longer accessible after they are cleaned\nout.\nThe format of this field is RFC 3339 date strings. Example:\n2000-01-01T00:00:00.999999999Z\nSee\n[https://www.ietf.org/rfc/rfc3339.txt](https://www.ietf.org/rfc/rfc3339.txt).\n\nA valid date range is between 1970-01-01T00:00:00.0Z and\n2100-12-31T23:59:59.999Z. Invalid dates are ignored and treated as expire\ntime not provided.\n\nIf this value is not provided at the time of job creation or is invalid,\nthe job posting expires after 30 days from the job's creation time. For\nexample, if the job was created on 2017/01/01 13:00AM UTC with an\nunspecified expiration date, the job expires after 2017/01/31 13:00AM UTC.\n\nIf this value is not provided but expiry_date is, expiry_date is\nused.\n\nIf this value is not provided on job update, it depends on the field masks\nset by UpdateJobRequest.update_job_fields. If the field masks include\nexpiry_time, or the masks are empty meaning that every field is\nupdated, the job posting expires after 30 days from the job's last\nupdate time. Otherwise the expiration date isn't updated.", :format "google-datetime", :type "string"}, :compensationInfo {:$ref "#/definitions/CompensationInfo", :description "Optional. Job compensation information."}, :distributorCompanyId {:description "Optional but one of company_name or distributor_company_id must be\nprovided.\n\nA unique company identifier used by job distributors to identify an\nemployer's company entity. company_name takes precedence over\nthis field, and is the recommended field to use to identify companies.\n\nThe maximum number of allowed characters is 255.", :type "string"}, :companyName {:description "Optional but one of company_name or distributor_company_id must be\nprovided.\n\nThe resource name of the company listing the job, such as\n/companies/foo. This field takes precedence over the\ndistributor-assigned company identifier, distributor_company_id.", :type "string"}, :employmentTypes {:description "Optional. The employment type(s) of a job, for example,\nfull time or\npart time.", :items {:enum ["EMPLOYMENT_TYPE_UNSPECIFIED" "FULL_TIME" "PART_TIME" "CONTRACTOR" "TEMPORARY" "INTERN" "VOLUNTEER" "PER_DIEM" "CONTRACT_TO_HIRE" "FLY_IN_FLY_OUT" "OTHER"], :type "string"}, :type "array"}, :expiryDate {:$ref "#/definitions/Date", :description "Deprecated. Use expire_time instead.\n\nOptional but strongly recommended to be provided for the best service\nexperience.\n\nThe expiration date of the job in UTC time. After 12 am on this date, the\njob is marked as expired, and it no longer appears in search results.\nThe expired job can't be deleted or listed by the DeleteJob and\nListJobs APIs, but it can be retrieved with the GetJob API or\nupdated with the UpdateJob API. An expired job can be updated and\nopened again by using a future expiration date. It can also remain expired.\nUpdating an expired job to be open fails if there is another existing open\njob with same requisition_id, company_name and language_code.\n\nThe expired jobs are retained in our system for 90 days. However, the\noverall expired job count cannot exceed 3 times the maximum of open jobs\ncount over the past week, otherwise jobs with earlier expire time are\nremoved first. Expired jobs are no longer accessible after they are cleaned\nout.\n\nA valid date range is between 1970/1/1 and 2100/12/31. Invalid dates are\nignored and treated as expiry date not provided.\n\nIf this value is not provided on job creation or is invalid, the job\nposting expires after 30 days from the job's creation time. For example, if\nthe job was created on 2017/01/01 13:00AM UTC with an unspecified\nexpiration date, the job expires after 2017/01/31 13:00AM UTC.\n\nIf this value is not provided on job update, it depends on the field masks\nset by UpdateJobRequest.update_job_fields. If the field masks include\nexpiry_date, or the masks are empty meaning that every field is\nupdated, the job expires after 30 days from the job's last update time.\nOtherwise the expiration date isn't updated."}, :educationLevels {:description "Optional. The desired education level for the job, such as\n\"Bachelors\", \"Masters\", \"Doctorate\".", :items {:enum ["EDUCATION_LEVEL_UNSPECIFIED" "HIGH_SCHOOL" "ASSOCIATE" "BACHELORS" "MASTERS" "DOCTORATE" "NO_DEGREE_REQUIRED"], :type "string"}, :type "array"}, :jobTitle {:description "Required. The title of the job, such as \"Software Engineer\"\n\nThe maximum number of allowed characters is 500.", :type "string"}, :visibility {:description "Optional. The visibility of the job.\nDefaults to JobVisibility.PRIVATE if not specified.\nCurrently only JobVisibility.PRIVATE is supported.", :enum ["JOB_VISIBILITY_UNSPECIFIED" "PRIVATE" "GOOGLE" "PUBLIC"], :type "string"}, :incentives {:description "Optional. A description of bonus, commission, and other compensation\nincentives associated with the job not including salary or pay.\n\nThe maximum number of allowed characters is 10,000.", :type "string"}}, :type "object"}, :HistogramFacets {:description "Input only.\n\nHistogram facets to be specified in SearchJobsRequest.", :properties {:compensationHistogramFacets {:description "Optional. Specifies compensation field-based histogram requests.\nDuplicate values of CompensationHistogramRequest.type are not allowed.", :items {:$ref "#/definitions/CompensationHistogramRequest"}, :type "array"}, :customAttributeHistogramFacets {:description "Optional. Specifies the custom attributes histogram requests.\nDuplicate values of CustomAttributeHistogramRequest.key are not\nallowed.", :items {:$ref "#/definitions/CustomAttributeHistogramRequest"}, :type "array"}, :simpleHistogramFacets {:description "Optional. Specifies the simple type of histogram facets, for example,\n`COMPANY_SIZE`, `EMPLOYMENT_TYPE` etc. This field is equivalent to\nGetHistogramRequest.", :items {:enum ["JOB_FIELD_UNSPECIFIED" "COMPANY_ID" "EMPLOYMENT_TYPE" "COMPANY_SIZE" "DATE_PUBLISHED" "CUSTOM_FIELD_1" "CUSTOM_FIELD_2" "CUSTOM_FIELD_3" "CUSTOM_FIELD_4" "CUSTOM_FIELD_5" "CUSTOM_FIELD_6" "CUSTOM_FIELD_7" "CUSTOM_FIELD_8" "CUSTOM_FIELD_9" "CUSTOM_FIELD_10" "CUSTOM_FIELD_11" "CUSTOM_FIELD_12" "CUSTOM_FIELD_13" "CUSTOM_FIELD_14" "CUSTOM_FIELD_15" "CUSTOM_FIELD_16" "CUSTOM_FIELD_17" "CUSTOM_FIELD_18" "CUSTOM_FIELD_19" "CUSTOM_FIELD_20" "EDUCATION_LEVEL" "EXPERIENCE_LEVEL" "ADMIN1" "COUNTRY" "CITY" "LOCALE" "LANGUAGE" "CATEGORY" "CITY_COORDINATE" "ADMIN1_COUNTRY" "COMPANY_TITLE" "COMPANY_DISPLAY_NAME" "BASE_COMPENSATION_UNIT"], :type "string"}, :type "array"}}, :type "object"}, :Money {:description "Represents an amount of money with its currency type.", :properties {:currencyCode {:description "The 3-letter currency code defined in ISO 4217.", :type "string"}, :nanos {:description "Number of nano (10^-9) units of the amount.\nThe value must be between -999,999,999 and +999,999,999 inclusive.\nIf `units` is positive, `nanos` must be positive or zero.\nIf `units` is zero, `nanos` can be positive, zero, or negative.\nIf `units` is negative, `nanos` must be negative or zero.\nFor example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.", :format "int32", :type "integer"}, :units {:description "The whole units of the amount.\nFor example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.", :format "int64", :type "string"}}, :type "object"}, :JobLocation {:description "Output only.\n\nA resource that represents a location with full geographic\ninformation.", :properties {:latLng {:$ref "#/definitions/LatLng", :description "An object representing a latitude/longitude pair."}, :locationType {:description "The type of a location, which corresponds to the address lines field of\nPostalAddress. For example, \"Downtown, Atlanta, GA, USA\" has a type of\nLocationType#NEIGHBORHOOD, and \"Kansas City, KS, USA\" has a type of\nLocationType#LOCALITY.", :enum ["LOCATION_TYPE_UNSPECIFIED" "COUNTRY" "ADMINISTRATIVE_AREA" "SUB_ADMINISTRATIVE_AREA" "LOCALITY" "POSTAL_CODE" "SUB_LOCALITY" "SUB_LOCALITY_1" "SUB_LOCALITY_2" "NEIGHBORHOOD" "STREET_ADDRESS"], :type "string"}, :postalAddress {:$ref "#/definitions/PostalAddress", :description "Postal address of the location that includes human readable information,\nsuch as postal delivery and payments addresses. Given a postal address,\na postal service can deliver items to a premises, P.O. Box, or other\ndelivery location."}, :radiusMeters {:description "Radius in meters of the job location. This value is derived from the\nlocation bounding box in which a circle with the specified radius\ncentered from LatLng coves the area associated with the job location.\nFor example, currently, \"Mountain View, CA, USA\" has a radius of\n7885.79 meters.", :format "double", :type "number"}}, :type "object"}, :Date {:description "Represents a whole or partial calendar date, e.g. a birthday. The time of day\nand time zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. This can represent:\n\n* A full date, with non-zero year, month and day values\n* A month and day value, with a zero year, e.g. an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, e.g. a credit card expiration date\n\nRelated types are google.type.TimeOfDay and `google.protobuf.Timestamp`.", :properties {:day {:description "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year by itself or a year and month where the day is not\nsignificant.", :format "int32", :type "integer"}, :month {:description "Month of year. Must be from 1 to 12, or 0 if specifying a year without a\nmonth and day.", :format "int32", :type "integer"}, :year {:description "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.", :format "int32", :type "integer"}}, :type "object"}, :CompanyInfoSource {:description "A resource that represents an external  Google identifier for a company,\nfor example, a Google+ business page or a Google Maps business page.\nFor unsupported types, use `unknown_type_id`.", :properties {:freebaseMid {:description "Optional. The Google's Knowledge Graph value for the employer's company.", :type "string"}, :gplusId {:description "Optional. The numeric identifier for the employer's Google+ business page.", :type "string"}, :mapsCid {:description "Optional. The numeric identifier for the employer's headquarters on Google Maps,\nnamely, the Google Maps CID (cell id).", :type "string"}, :unknownTypeId {:description "Optional. A Google identifier that does not match any of the other types.", :type "string"}}, :type "object"}, :GetHistogramResponse {:description "Deprecated. Use SearchJobsRequest.histogram_facets instead to make\na single call with both search and histogram.\n\nOutput only.\n\nThe response of the GetHistogram method.", :properties {:metadata {:$ref "#/definitions/ResponseMetadata", :description "Additional information for the API invocation, such as the request\ntracking id."}, :results {:description "The Histogram results.", :items {:$ref "#/definitions/HistogramResult"}, :type "array"}}, :type "object"}, :CompletionResult {:description "Output only.\n\nResource that represents completion results.", :properties {:imageUrl {:description "The URL for the company logo if `type=COMPANY_NAME`.", :type "string"}, :suggestion {:description "The suggestion for the query.", :type "string"}, :type {:description "The completion topic.", :enum ["COMPLETION_TYPE_UNSPECIFIED" "JOB_TITLE" "COMPANY_NAME" "COMBINED"], :type "string"}}, :type "object"}, :MatchingJob {:description "Output only.\n\nJob entry with metadata inside SearchJobsResponse.", :properties {:commuteInfo {:$ref "#/definitions/CommuteInfo", :description "Commute information which is generated based on specified\n CommutePreference."}, :job {:$ref "#/definitions/Job", :description "Job resource that matches the specified SearchJobsRequest."}, :jobSummary {:description "A summary of the job with core information that's displayed on the search\nresults listing page.", :type "string"}, :jobTitleSnippet {:description "Contains snippets of text from the Job.job_title field most\nclosely matching a search query's keywords, if available. The matching\nquery keywords are enclosed in HTML bold tags.", :type "string"}, :searchTextSnippet {:description "Contains snippets of text from the Job.description and similar\nfields that most closely match a search query's keywords, if available.\nAll HTML tags in the original fields are stripped when returned in this\nfield, and matching query keywords are enclosed in HTML bold tags.", :type "string"}}, :type "object"}, :ExtendedCompensationInfoDecimal {:description "Deprecated. See CompensationInfo.\n\nDecimal number.", :properties {:micros {:description "Micro (10^-6) units.\nThe value must be between -999,999 and +999,999 inclusive.\nIf `units` is positive, `micros` must be positive or zero.\nIf `units` is zero, `micros` can be positive, zero, or negative.\nIf `units` is negative, `micros` must be negative or zero.\nFor example -1.75 is represented as `units`=-1 and `micros`=-750,000.", :format "int32", :type "integer"}, :units {:description "Whole units.", :format "int64", :type "string"}}, :type "object"}, :JobProcessingOptions {:description "Input only.\n\nOptions for job processing.", :properties {:disableStreetAddressResolution {:description "Optional. If set to `true`, the service does not attempt to resolve a\nmore precise address for the job.", :type "boolean"}, :htmlSanitization {:description "Optional. Option for job HTML content sanitization. Applied fields are:\n\n* description\n* applicationInstruction\n* incentives\n* qualifications\n* responsibilities\n\nHTML tags in these fields may be stripped if sanitiazation is not disabled.\n\nDefaults to HtmlSanitization.SIMPLE_FORMATTING_ONLY.", :enum ["HTML_SANITIZATION_UNSPECIFIED" "HTML_SANITIZATION_DISABLED" "SIMPLE_FORMATTING_ONLY"], :type "string"}}, :type "object"}, :ResponseMetadata {:description "Output only.\n\nAdditional information returned to client, such as debugging\ninformation.", :properties {:experimentIdList {:description "Identifiers for the versions of the search algorithm used during\nthis API invocation if multiple algorithms are used.\nThe default value is empty.\nFor search response only.", :items {:format "int32", :type "integer"}, :type "array"}, :mode {:description "For search response only. Indicates the mode of a performed search.", :enum ["SEARCH_MODE_UNSPECIFIED" "JOB_SEARCH" "FEATURED_JOB_SEARCH" "EMAIL_ALERT_SEARCH"], :type "string"}, :requestId {:description "A unique id associated with this call.\nThis id is logged for tracking purposes.", :type "string"}}, :type "object"}, :MendelDebugInput {:description "Message representing input to a Mendel server for debug forcing.\nSee go/mendel-debug-forcing for more details.\nNext ID: 2", :properties {:namespacedDebugInput {:additionalProperties {:$ref "#/definitions/NamespacedDebugInput"}, :description "When a request spans multiple servers, a MendelDebugInput may travel with\nthe request and take effect in all the servers. This field is a map of\nnamespaces to NamespacedMendelDebugInput protos. In a single server, up to\ntwo NamespacedMendelDebugInput protos are applied:\n1. NamespacedMendelDebugInput with the global namespace (key == \"\").\n2. NamespacedMendelDebugInput with the server's namespace.\nWhen both NamespacedMendelDebugInput protos are present, they are merged.\nSee go/mendel-debug-forcing for more details.", :type "object"}}, :type "object"}, :CustomAttributeHistogramResult {:description "Output only.\n\nCustom attribute histogram result.", :properties {:key {:description "Stores the key of custom attribute the histogram is performed on.", :type "string"}, :longValueHistogramResult {:$ref "#/definitions/NumericBucketingResult", :description "Stores bucketed histogram counting result or min/max values for\ncustom attribute long values associated with `key`."}, :stringValueHistogramResult {:additionalProperties {:format "int32", :type "integer"}, :description "Stores a map from the values of string custom field associated\nwith `key` to the number of jobs with that value in this histogram result.", :type "object"}}, :type "object"}, :ExtendedCompensationFilter {:description "Deprecated. Always use CompensationFilter.\n\nInput only.\n\nFilter on job compensation type and amount.", :properties {:compensationRange {:$ref "#/definitions/ExtendedCompensationInfoCompensationRange", :description "Optional. Compensation range."}, :compensationUnits {:description "Required. Specify desired `base compensation entry's`\nExtendedCompensationInfo.CompensationUnit.", :items {:enum ["EXTENDED_COMPENSATION_UNIT_UNSPECIFIED" "HOURLY" "DAILY" "WEEKLY" "MONTHLY" "YEARLY" "ONE_TIME" "OTHER_COMPENSATION_UNIT"], :type "string"}, :type "array"}, :currency {:description "Optional. Specify currency in 3-letter\n[ISO 4217](https://www.iso.org/iso-4217-currency-codes.html) format. If\nunspecified, jobs are returned regardless of currency.", :type "string"}, :includeJobWithUnspecifiedCompensationRange {:description "Optional. Whether to include jobs whose compensation range is unspecified.", :type "boolean"}, :type {:description "Required. Type of filter.", :enum ["FILTER_TYPE_UNSPECIFIED" "UNIT_ONLY" "UNIT_AND_AMOUNT" "ANNUALIZED_BASE_AMOUNT" "ANNUALIZED_TOTAL_AMOUNT"], :type "string"}}, :type "object"}, :NamespacedDebugInput {:description "Next ID: 15", :properties {:forcedRollouts {:additionalProperties {:type "boolean"}, :description "Rollouts to force in a particular experiment state.\nMap from rollout name to rollout value.", :type "object"}, :conditionallyForcedExps {:description "Set of experiment ids to be conditionally forced.\nThese ids will be forced only if their conditions and their parent\ndomain's conditions are true.", :items {:format "int32", :type "integer"}, :type "array"}, :conditionallyForcedExpTags {:description "Set of experiment tags to be conditionally forced.\nThe experiments with these tags will be forced only if their conditions\nand their parent domain's conditions are true.", :items {:type "string"}, :type "array"}, :disableExps {:description "Set of experiment ids to be disabled.\nIf an experiment is disabled, it is never selected nor forced.\nIf an aggregate experiment is disabled, its partitions are disabled\ntogether. If an experiment with an enrollment is disabled, the enrollment\nis disabled together. If an ID corresponds to a domain, the domain itself\nand all descendant experiments and domains are disabled together.", :items {:format "int32", :type "integer"}, :type "array"}, :disableOrganicSelection {:description "If true, disable organic experiment selection (at all diversion points).\nOrganic selection means experiment selection process based on traffic\nallocation and diversion condition evaluation.\nThis does not disable selection of forced experiments.\n\nThis is useful in cases when it is not known whether experiment selection\nbehavior is responsible for a error or breakage. Disabling organic\nselection may help to isolate the cause of a given problem.", :type "boolean"}, :conditionallyForcedExpNames {:description "Set of experiment names to be conditionally forced.\nThese experiments will be forced only if their conditions and their\nparent domain's conditions are true.", :items {:type "string"}, :type "array"}, :absolutelyForcedExpTags {:description "Set of experiment tags to be absolutely forced.\nThe experiments with these tags will be forced without evaluating the\nconditions.", :items {:type "string"}, :type "array"}, :disableManualEnrollmentSelection {:description "If true, disable manual enrollment selection (at all diversion points).\nManual enrollment selection means experiment selection process based on\nthe request's manual enrollment states (a.k.a. opt-in experiments).\nThis does not disable selection of forced experiments.", :type "boolean"}, :absolutelyForcedExps {:description "Set of experiment ids to be absolutely forced.\nThese ids will be forced without evaluating the conditions.", :items {:format "int32", :type "integer"}, :type "array"}, :disableAutomaticEnrollmentSelection {:description "If true, disable automatic enrollment selection (at all diversion\npoints). Automatic enrollment selection means experiment selection\nprocess based on the experiment's automatic enrollment condition. This\ndoes not disable selection of forced experiments.", :type "boolean"}, :absolutelyForcedExpNames {:description "Set of experiment names to be absolutely forced.\nThese experiments will be forced without evaluating the conditions.", :items {:type "string"}, :type "array"}, :forcedFlags {:additionalProperties {:type "string"}, :description "Flags to force in a particular experiment state.\nMap from flag name to flag value.", :type "object"}, :disableExpTags {:description "Set of experiment tags to be disabled. All experiments that are tagged\nwith one or more of these tags are disabled.\nIf an experiment is disabled, it is never selected nor forced.\nIf an aggregate experiment is disabled, its partitions are disabled\ntogether. If an experiment with an enrollment is disabled, the enrollment\nis disabled together.", :items {:type "string"}, :type "array"}, :disableExpNames {:description "Set of experiment names to be disabled.\nIf an experiment is disabled, it is never selected nor forced.\nIf an aggregate experiment is disabled, its partitions are disabled\ntogether. If an experiment with an enrollment is disabled, the enrollment\nis disabled together. If a name corresponds to a domain, the domain\nitself and all descendant experiments and domains are disabled together.", :items {:type "string"}, :type "array"}}, :type "object"}, :UpdateJobRequest {:description "Input only.\n\nUpdate job request.", :properties {:disableStreetAddressResolution {:description "Deprecated. Please use processing_options. This flag is ignored if\nprocessing_options is set.\n\nOptional.\n\nIf set to `true`, the service does not attempt resolve a more precise\naddress for the job.", :type "boolean"}, :job {:$ref "#/definitions/Job", :description "Required. The Job to be updated."}, :processingOptions {:$ref "#/definitions/JobProcessingOptions", :description "Optional. Options for job processing.\n\nUpdateJobRequest.disable_street_address_resolution is ignored if this\nflag is set."}, :updateJobFields {:description "Optional but strongly recommended to be provided for the best service\nexperience.\n\nIf update_job_fields is provided, only the specified fields in\njob are updated. Otherwise all the fields are updated.\n\nA field mask to restrict the fields that are updated. Valid values are:\n\n* jobTitle\n* employmentTypes\n* description\n* applicationUrls\n* applicationEmailList\n* applicationInstruction\n* responsibilities\n* qualifications\n* educationLevels\n* level\n* department\n* startDate\n* endDate\n* compensationInfo\n* incentives\n* languageCode\n* benefits\n* expireTime\n* customAttributes\n* visibility\n* publishDate\n* promotionValue\n* locations\n* region\n* expiryDate (deprecated)\n* filterableCustomFields (deprecated)\n* unindexedCustomFields (deprecated)", :format "google-fieldmask", :type "string"}}, :type "object"}, :NumericBucketingOption {:description "Input only.\n\nUse this field to specify bucketing option for the histogram search response.", :properties {:bucketBounds {:description "Required. Two adjacent values form a histogram bucket. Values should be in\nascending order. For example, if [5, 10, 15] are provided, four buckets are\ncreated: (-inf, 5), 5, 10), [10, 15), [15, inf). At most 20\n[buckets_bound is supported.", :items {:format "double", :type "number"}, :type "array"}, :requiresMinMax {:description "Optional. If set to true, the histogram result includes minimum/maximum\nvalue of the numeric field.", :type "boolean"}}, :type "object"}, :LocationFilter {:description "Input only.\n\nGeographic region of the search.", :properties {:distanceInMiles {:description "Optional. The distance_in_miles is applied when the location being searched for is\nidentified as a city or smaller. When the location being searched for is a\nstate or larger, this field is ignored.", :format "double", :type "number"}, :isTelecommute {:description "Optional. Allows the client to return jobs without a\nset location, specifically, telecommuting jobs (telecomuting is considered\nby the service as a special location.\nJob.allow_telecommute indicates if a job permits telecommuting.\nIf this field is true, telecommuting jobs are searched, and\nname and lat_lng are\nignored.\nThis filter can be used by itself to search exclusively for telecommuting\njobs, or it can be combined with another location\nfilter to search for a combination of job locations,\nsuch as \"Mountain View\" or \"telecommuting\" jobs. However, when used in\ncombination with other location filters, telecommuting jobs can be\ntreated as less relevant than other jobs in the search response.", :type "boolean"}, :latLng {:$ref "#/definitions/LatLng", :description "Optional. The latitude and longitude of the geographic center from which to\nsearch. This field is ignored if `location_name` is provided."}, :name {:description "Optional. The address name, such as \"Mountain View\" or \"Bay Area\".", :type "string"}, :regionCode {:description "Optional. CLDR region code of the country/region of the address. This will be used\nto address ambiguity of the user-input location, e.g. \"Liverpool\"\nagainst \"Liverpool, NY, US\" or \"Liverpool, UK\".\n\nSet this field if all the jobs to search against are from a same region,\nor jobs are world-wide but the job seeker is from a specific region.\n\nSee http://cldr.unicode.org/ and\nhttp://www.unicode.org/cldr/charts/30/supplemental/territory_information.html\nfor details. Example: \"CH\" for Switzerland.", :type "string"}}, :type "object"}, :BucketizedCount {:description "Represents count of jobs within one bucket.", :properties {:count {:description "Number of jobs whose numeric field value fall into `range`.", :format "int32", :type "integer"}, :range {:$ref "#/definitions/BucketRange", :description "Bucket range on which histogram was performed for the numeric field,\nthat is, the count represents number of jobs in this range."}}, :type "object"}, :HistogramResult {:description "Output only.\n\nResult of a histogram call. The response contains the histogram map for the\nsearch type specified by HistogramResult.field.\nThe response is a map of each filter value to the corresponding count of\njobs for that filter.", :properties {:searchType {:description "The Histogram search filters.", :enum ["JOB_FIELD_UNSPECIFIED" "COMPANY_ID" "EMPLOYMENT_TYPE" "COMPANY_SIZE" "DATE_PUBLISHED" "CUSTOM_FIELD_1" "CUSTOM_FIELD_2" "CUSTOM_FIELD_3" "CUSTOM_FIELD_4" "CUSTOM_FIELD_5" "CUSTOM_FIELD_6" "CUSTOM_FIELD_7" "CUSTOM_FIELD_8" "CUSTOM_FIELD_9" "CUSTOM_FIELD_10" "CUSTOM_FIELD_11" "CUSTOM_FIELD_12" "CUSTOM_FIELD_13" "CUSTOM_FIELD_14" "CUSTOM_FIELD_15" "CUSTOM_FIELD_16" "CUSTOM_FIELD_17" "CUSTOM_FIELD_18" "CUSTOM_FIELD_19" "CUSTOM_FIELD_20" "EDUCATION_LEVEL" "EXPERIENCE_LEVEL" "ADMIN1" "COUNTRY" "CITY" "LOCALE" "LANGUAGE" "CATEGORY" "CITY_COORDINATE" "ADMIN1_COUNTRY" "COMPANY_TITLE" "COMPANY_DISPLAY_NAME" "BASE_COMPENSATION_UNIT"], :type "string"}, :values {:additionalProperties {:format "int32", :type "integer"}, :description "A map from the values of field to the number of jobs with that value\nin this search result.\n\nKey: search type (filter names, such as the companyName).\n\nValues: the count of jobs that match the filter for this search.", :type "object"}}, :type "object"}, :JobFilters {:description "Input only.\n\nDeprecated. Use JobQuery instead.\n\nThe filters required to perform a search query or histogram.", :properties {:companyNames {:description "Optional. The company names filter specifies the company entities to search\nagainst.\n\nIf a value is not specified, jobs are searched for against all companies.\n\nIf multiple values are specified, jobs are searched against the\nspecified companies.\n\nAt most 20 company filters are allowed.", :items {:type "string"}, :type "array"}, :customAttributeFilter {:description "Optional. This filter specifies a structured syntax to match against the\nJob.custom_attributes that are marked as `filterable`.\n\nThe syntax for this expression is a subset of Google SQL syntax.\n\nSupported operators are: =, !=, <, <=, >, >= where the left of the operator\nis a custom field key and the right of the operator is a number or string\n(surrounded by quotes) value.\n\nSupported functions are LOWER(<field_name>) to\nperform case insensitive match and EMPTY(<field_name>) to filter on the\nexistence of a key.\n\nBoolean expressions (AND/OR/NOT) are supported up to 3 levels of\nnesting (For example, \"((A AND B AND C) OR NOT D) AND E\"), and there can\nbe a maximum of 100 comparisons/functions in the expression. The expression\nmust be < 3000 bytes in length.\n\nSample Query:\n(key1 = \"TEST\" OR LOWER(key1)=\"test\" OR NOT EMPTY(key1)) AND key2 > 100", :type "string"}, :extendedCompensationFilter {:$ref "#/definitions/ExtendedCompensationFilter", :description "Deprecated. Always use compensation_filter.\n\nOptional.\n\nThis search filter is applied only to\nJob.extended_compensation_info. For example, if the filter is specified\nas \"Hourly job with per-hour compensation > $15\", only jobs that meet\nthese criteria are searched. If a filter is not defined, all open jobs\nare searched."}, :languageCodes {:description "Optional. This filter specifies the locale of jobs to search against,\nfor example, \"en-US\".\n\nIf a value is not specified, the search results may contain jobs in any\nlocale.\n\n\nLanguage codes should be in BCP-47 format, for example, \"en-US\" or\n\"sr-Latn\". For more information, see [Tags for Identifying\nLanguages](https://tools.ietf.org/html/bcp47).\n\nAt most 10 language code filters are allowed.", :items {:type "string"}, :type "array"}, :compensationFilter {:$ref "#/definitions/CompensationFilter", :description "Optional. This search filter is applied only to\nJob.compensation_info. For example, if the filter is specified\nas \"Hourly job with per-hour compensation > $15\", only jobs that meet\nthis criteria are searched. If a filter is not defined, all open jobs\nare searched."}, :companyTitles {:description "Optional. This filter specifies the exact company titles\nof jobs to search against.\n\nIf a value is not specified, jobs within the search results can be\nassociated with any company.\n\nIf multiple values are specified, jobs within the search results may be\nassociated with any of the specified companies.\n\nAt most 20 company title filters are allowed.", :items {:type "string"}, :type "array"}, :locationFilters {:description "Optional. The location filter specifies geo-regions containing the jobs to\nsearch against. See LocationFilter for more information.\n\nIf a location value is not specified, jobs are retrieved\nfrom all locations.\n\nIf multiple values are specified, jobs are retrieved from any of the\nspecified locations. If different values are specified for the\nLocationFilter.distance_in_miles parameter, the maximum provided\ndistance is used for all locations.\n\nAt most 5 location filters are allowed.", :items {:$ref "#/definitions/LocationFilter"}, :type "array"}, :customFieldFilters {:additionalProperties {:$ref "#/definitions/CustomFieldFilter"}, :description "Deprecated. Use custom_attribute_filter instead.\n\nOptional.\n\nThis filter specifies searching against\ncustom field values. See Job.filterable_custom_fields for information.\nThe key value specifies a number between 1-20 (the service\nsupports 20 custom fields) corresponding to the desired custom field map\nvalue. If an invalid key is provided or specified together with\ncustom_attribute_filter, an error is thrown.", :type "object"}, :disableSpellCheck {:description "Optional. This flag controls the spell-check feature. If false, the\nservice attempts to correct a misspelled query,\nfor example, \"enginee\" is corrected to \"engineer\".\n\nDefaults to false: a spell check is performed.", :type "boolean"}, :categories {:description "Optional. The category filter specifies the categories of jobs to search against.\nSee Category for more information.\n\nIf a value is not specified, jobs from any category are searched against.\n\nIf multiple values are specified, jobs from any of the specified\ncategories are searched against.", :items {:enum ["JOB_CATEGORY_UNSPECIFIED" "ACCOUNTING_AND_FINANCE" "ADMINISTRATIVE_AND_OFFICE" "ADVERTISING_AND_MARKETING" "ANIMAL_CARE" "ART_FASHION_AND_DESIGN" "BUSINESS_OPERATIONS" "CLEANING_AND_FACILITIES" "COMPUTER_AND_IT" "CONSTRUCTION" "CUSTOMER_SERVICE" "EDUCATION" "ENTERTAINMENT_AND_TRAVEL" "FARMING_AND_OUTDOORS" "HEALTHCARE" "HUMAN_RESOURCES" "INSTALLATION_MAINTENANCE_AND_REPAIR" "LEGAL" "MANAGEMENT" "MANUFACTURING_AND_WAREHOUSE" "MEDIA_COMMUNICATIONS_AND_WRITING" "OIL_GAS_AND_MINING" "PERSONAL_CARE_AND_SERVICES" "PROTECTIVE_SERVICES" "REAL_ESTATE" "RESTAURANT_AND_HOSPITALITY" "SALES_AND_RETAIL" "SCIENCE_AND_ENGINEERING" "SOCIAL_SERVICES_AND_NON_PROFIT" "SPORTS_FITNESS_AND_RECREATION" "TRANSPORTATION_AND_LOGISTICS"], :type "string"}, :type "array"}, :publishDateRange {:description "Optional. Jobs published within a range specified by this filter are searched\nagainst, for example, DateRange.PAST_MONTH. If a value is not\nspecified, all open jobs are searched against regardless of the\ndate they were published.", :enum ["DATE_RANGE_UNSPECIFIED" "PAST_24_HOURS" "PAST_WEEK" "PAST_MONTH" "PAST_YEAR" "PAST_3_DAYS"], :type "string"}, :commuteFilter {:$ref "#/definitions/CommutePreference", :description "Optional. Allows filtering jobs by commute time with different travel methods (e.g.\n driving or public transit). Note: this only works with COMMUTE\n MODE. When specified, [JobFilters.location_filters] will be\n ignored.\n\n Currently we do not support sorting by commute time."}, :tenantJobOnly {:description "Deprecated. Do not use this field.\n\nThis flag controls whether the job search should be restricted to jobs\nowned by the current user.\n\nDefaults to false where all jobs accessible to the\nuser are searched against.", :type "boolean"}, :query {:description "Optional. The query filter contains the keywords that match against the job\ntitle, description, and location fields.\n\nThe maximum query size is 255 bytes/characters.", :type "string"}, :employmentTypes {:description "Optional. The employment type filter specifies the employment type of jobs to\nsearch against, such as EmploymentType.FULL_TIME.\n\nIf a value is not specified, jobs in the search results include any\nemployment type.\n\nIf multiple values are specified, jobs in the search results include any\nof the specified employment types.", :items {:enum ["EMPLOYMENT_TYPE_UNSPECIFIED" "FULL_TIME" "PART_TIME" "CONTRACTOR" "TEMPORARY" "INTERN" "VOLUNTEER" "PER_DIEM" "CONTRACT_TO_HIRE" "FLY_IN_FLY_OUT" "OTHER"], :type "string"}, :type "array"}}, :type "object"}, :CommuteInfo {:description "Output only.\n\nCommute details related to this job.", :properties {:jobLocation {:$ref "#/definitions/JobLocation", :description "Location used as the destination in the commute calculation."}, :travelDuration {:description "The number of seconds required to travel to the job location from the query\nlocation. A duration of 0 seconds indicates that the job is not\nreachable within the requested duration, but was returned as part of an\nexpanded query.", :format "google-duration", :type "string"}}, :type "object"}}}