#:compute.gcp.descriptor{:name "speech", :title "Cloud Speech-to-Text API", :api-version "v1p1beta1", :revision "20210209", :endpoint #:compute.gcp.descriptor{:url "https://speech.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"type" "string", "description" "JSONP", "location" "query"}, "uploadType" {"description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "location" "query", "type" "string"}, "key" {"type" "string", "location" "query", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."}, "access_token" {"location" "query", "description" "OAuth access token.", "type" "string"}, "oauth_token" {"type" "string", "description" "OAuth 2.0 token for the current user.", "location" "query"}, "prettyPrint" {"type" "boolean", "default" "true", "description" "Returns response with indentations and line breaks.", "location" "query"}, "alt" {"enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "type" "string", "description" "Data format for response.", "enum" ["json" "media" "proto"], "location" "query", "default" "json"}, "$.xgafv" {"enum" ["1" "2"], "type" "string", "description" "V1 error format.", "enumDescriptions" ["v1 error format" "v2 error format"], "location" "query"}, "fields" {"description" "Selector specifying which fields to include in a partial response.", "location" "query", "type" "string"}, "upload_protocol" {"description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "type" "string", "location" "query"}, "quotaUser" {"location" "query", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "type" "string"}}, :op->info {"speech.operations.get" #:compute.gcp.descriptor{:http-method :get, :path "v1p1beta1/operations/{+name}", :response {"$ref" "Operation"}, :parameters {"name" {"type" "string", "pattern" "^.*$", "required" true, "description" "The name of the operation resource.", "location" "path"}}, :description "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service."}, "speech.operations.list" #:compute.gcp.descriptor{:http-method :get, :path "v1p1beta1/operations", :response {"$ref" "ListOperationsResponse"}, :parameters {"pageToken" {"location" "query", "description" "The standard list page token.", "type" "string"}, "filter" {"type" "string", "description" "The standard list filter.", "location" "query"}, "pageSize" {"location" "query", "format" "int32", "description" "The standard list page size.", "type" "integer"}, "name" {"type" "string", "location" "query", "description" "The name of the operation's parent resource."}}, :description "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."}, "speech.speech.longrunningrecognize" #:compute.gcp.descriptor{:http-method :post, :path "v1p1beta1/speech:longrunningrecognize", :request {"$ref" "LongRunningRecognizeRequest"}, :response {"$ref" "Operation"}, :parameters {}, :description "Performs asynchronous speech recognition: receive results via the google.longrunning.Operations interface. Returns either an `Operation.error` or an `Operation.response` which contains a `LongRunningRecognizeResponse` message. For more information on asynchronous speech recognition, see the [how-to](https://cloud.google.com/speech-to-text/docs/async-recognize)."}, "speech.speech.recognize" #:compute.gcp.descriptor{:http-method :post, :path "v1p1beta1/speech:recognize", :request {"$ref" "RecognizeRequest"}, :response {"$ref" "RecognizeResponse"}, :parameters {}, :description "Performs synchronous speech recognition: receive results after all audio has been sent and processed."}}, :schemas {"RecognitionConfig" {"description" "Provides information to the recognizer that specifies how to process the request.", "id" "RecognitionConfig", "type" "object", "properties" {"enableWordTimeOffsets" {"type" "boolean", "description" "If `true`, the top result includes a list of words and the start and end time offsets (timestamps) for those words. If `false`, no word-level time offset information is returned. The default is `false`."}, "adaptation" {"description" "Speech adaptation configuration improves the accuracy of speech recognition. When speech adaptation is set it supersedes the `speech_contexts` field. For more information, see the [speech adaptation](https://cloud.google.com/speech-to-text/docs/context-strength) documentation.", "$ref" "SpeechAdaptation"}, "sampleRateHertz" {"type" "integer", "format" "int32", "description" "Sample rate in Hertz of the audio data sent in all `RecognitionAudio` messages. Valid values are: 8000-48000. 16000 is optimal. For best results, set the sampling rate of the audio source to 16000 Hz. If that's not possible, use the native sample rate of the audio source (instead of re-sampling). This field is optional for FLAC and WAV audio files, but is required for all other audio formats. For details, see AudioEncoding."}, "model" {"description" "Which model to select for the given request. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then we auto-select a model based on the parameters in the RecognitionConfig. *Model* *Description* command_and_search Best for short queries such as voice commands or voice search. phone_call Best for audio that originated from a phone call (typically recorded at an 8khz sampling rate). video Best for audio that originated from from video or includes multiple speakers. Ideally the audio is recorded at a 16khz or greater sampling rate. This is a premium model that costs more than the standard rate. default Best for audio that is not one of the specific audio models. For example, long-form audio. Ideally the audio is high-fidelity, recorded at a 16khz or greater sampling rate. ", "type" "string"}, "diarizationSpeakerCount" {"type" "integer", "format" "int32", "description" "If set, specifies the estimated number of speakers in the conversation. Defaults to '2'. Ignored unless enable_speaker_diarization is set to true. Note: Use diarization_config instead."}, "alternativeLanguageCodes" {"type" "array", "description" "A list of up to 3 additional [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tags, listing possible alternative languages of the supplied audio. See [Language Support](https://cloud.google.com/speech-to-text/docs/languages) for a list of the currently supported language codes. If alternative languages are listed, recognition result will contain recognition in the most likely language detected including the main language_code. The recognition result will include the language tag of the language detected in the audio. Note: This feature is only supported for Voice Command and Voice Search use cases and performance may vary for other use cases (e.g., phone call transcription).", "items" {"type" "string"}}, "languageCode" {"description" "Required. The language of the supplied audio as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\". See [Language Support](https://cloud.google.com/speech-to-text/docs/languages) for a list of the currently supported language codes.", "type" "string"}, "enableSpeakerDiarization" {"type" "boolean", "description" "If 'true', enables speaker detection for each recognized word in the top alternative of the recognition result using a speaker_tag provided in the WordInfo. Note: Use diarization_config instead."}, "encoding" {"description" "Encoding of audio data sent in all `RecognitionAudio` messages. This field is optional for `FLAC` and `WAV` audio files and required for all other audio formats. For details, see AudioEncoding.", "enumDescriptions" ["Not specified." "Uncompressed 16-bit signed little-endian samples (Linear PCM)." "`FLAC` (Free Lossless Audio Codec) is the recommended encoding because it is lossless--therefore recognition is not compromised--and requires only about half the bandwidth of `LINEAR16`. `FLAC` stream encoding supports 16-bit and 24-bit samples, however, not all fields in `STREAMINFO` are supported." "8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law." "Adaptive Multi-Rate Narrowband codec. `sample_rate_hertz` must be 8000." "Adaptive Multi-Rate Wideband codec. `sample_rate_hertz` must be 16000." "Opus encoded audio frames in Ogg container ([OggOpus](https://wiki.xiph.org/OggOpus)). `sample_rate_hertz` must be one of 8000, 12000, 16000, 24000, or 48000." "Although the use of lossy encodings is not recommended, if a very low bitrate encoding is required, `OGG_OPUS` is highly preferred over Speex encoding. The [Speex](https://speex.org/) encoding supported by Cloud Speech API has a header byte in each block, as in MIME type `audio/x-speex-with-header-byte`. It is a variant of the RTP Speex encoding defined in [RFC 5574](https://tools.ietf.org/html/rfc5574). The stream is a sequence of blocks, one block per RTP packet. Each block starts with a byte containing the length of the block, in bytes, followed by one or more frames of Speex data, padded to an integral number of bytes (octets) as specified in RFC 5574. In other words, each RTP header is replaced with a single byte containing the block length. Only Speex wideband is supported. `sample_rate_hertz` must be 16000." "MP3 audio. MP3 encoding is a Beta feature and only available in v1p1beta1. Support all standard MP3 bitrates (which range from 32-320 kbps). When using this encoding, `sample_rate_hertz` has to match the sample rate of the file being used."], "enum" ["ENCODING_UNSPECIFIED" "LINEAR16" "FLAC" "MULAW" "AMR" "AMR_WB" "OGG_OPUS" "SPEEX_WITH_HEADER_BYTE" "MP3"], "type" "string"}, "enableWordConfidence" {"description" "If `true`, the top result includes a list of words and the confidence for those words. If `false`, no word-level confidence information is returned. The default is `false`.", "type" "boolean"}, "maxAlternatives" {"format" "int32", "description" "Maximum number of recognition hypotheses to be returned. Specifically, the maximum number of `SpeechRecognitionAlternative` messages within each `SpeechRecognitionResult`. The server may return fewer than `max_alternatives`. Valid values are `0`-`30`. A value of `0` or `1` will return a maximum of one. If omitted, will return a maximum of one.", "type" "integer"}, "diarizationConfig" {"description" "Config to enable speaker diarization and set additional parameters to make diarization better suited for your application. Note: When this is enabled, we send all the words from the beginning of the audio for the top alternative in every consecutive STREAMING responses. This is done in order to improve our speaker tags as our models learn to identify the speakers in the conversation over time. For non-streaming requests, the diarization results will be provided only in the top alternative of the FINAL SpeechRecognitionResult.", "$ref" "SpeakerDiarizationConfig"}, "useEnhanced" {"description" "Set to true to use an enhanced model for speech recognition. If `use_enhanced` is set to true and the `model` field is not set, then an appropriate enhanced model is chosen if an enhanced model exists for the audio. If `use_enhanced` is true and an enhanced version of the specified model does not exist, then the speech is recognized using the standard version of the specified model.", "type" "boolean"}, "metadata" {"$ref" "RecognitionMetadata", "description" "Metadata regarding this request."}, "profanityFilter" {"description" "If set to `true`, the server will attempt to filter out profanities, replacing all but the initial character in each filtered word with asterisks, e.g. \"f***\". If set to `false` or omitted, profanities won't be filtered out.", "type" "boolean"}, "audioChannelCount" {"description" "The number of channels in the input audio data. ONLY set this for MULTI-CHANNEL recognition. Valid values for LINEAR16 and FLAC are `1`-`8`. Valid values for OGG_OPUS are '1'-'254'. Valid value for MULAW, AMR, AMR_WB and SPEEX_WITH_HEADER_BYTE is only `1`. If `0` or omitted, defaults to one channel (mono). Note: We only recognize the first channel by default. To perform independent recognition on each channel set `enable_separate_recognition_per_channel` to 'true'.", "format" "int32", "type" "integer"}, "enableSeparateRecognitionPerChannel" {"type" "boolean", "description" "This needs to be set to `true` explicitly and `audio_channel_count` > 1 to get each channel recognized separately. The recognition result will contain a `channel_tag` field to state which channel that result belongs to. If this is not true, we will only recognize the first channel. The request is billed cumulatively for all channels recognized: `audio_channel_count` multiplied by the length of the audio."}, "enableAutomaticPunctuation" {"type" "boolean", "description" "If 'true', adds punctuation to recognition result hypotheses. This feature is only available in select languages. Setting this for requests in other languages has no effect at all. The default 'false' value does not add punctuation to result hypotheses."}, "speechContexts" {"type" "array", "items" {"$ref" "SpeechContext"}, "description" "Array of SpeechContext. A means to provide context to assist the speech recognition. For more information, see [speech adaptation](https://cloud.google.com/speech-to-text/docs/context-strength)."}}}, "LongRunningRecognizeMetadata" {"properties" {"lastUpdateTime" {"description" "Time of the most recent processing update.", "format" "google-datetime", "type" "string"}, "startTime" {"format" "google-datetime", "description" "Time when the request was received.", "type" "string"}, "uri" {"type" "string", "description" "Output only. The URI of the audio file being transcribed. Empty if the audio was sent as byte content.", "readOnly" true}, "progressPercent" {"type" "integer", "format" "int32", "description" "Approximate percentage of audio processed thus far. Guaranteed to be 100 when the audio is fully processed and the results are available."}}, "description" "Describes the progress of a long-running `LongRunningRecognize` call. It is included in the `metadata` field of the `Operation` returned by the `GetOperation` call of the `google::longrunning::Operations` service.", "id" "LongRunningRecognizeMetadata", "type" "object"}, "ListOperationsResponse" {"properties" {"operations" {"type" "array", "description" "A list of operations that matches the specified filter in the request.", "items" {"$ref" "Operation"}}, "nextPageToken" {"description" "The standard List next-page token.", "type" "string"}}, "type" "object", "description" "The response message for Operations.ListOperations.", "id" "ListOperationsResponse"}, "RecognitionMetadata" {"description" "Description of audio data to be recognized.", "id" "RecognitionMetadata", "type" "object", "properties" {"obfuscatedId" {"format" "int64", "description" "Obfuscated (privacy-protected) ID of the user, to identify number of unique users using the service.", "type" "string"}, "interactionType" {"type" "string", "description" "The use case most closely describing the audio content to be recognized.", "enumDescriptions" ["Use case is either unknown or is something other than one of the other values below." "Multiple people in a conversation or discussion. For example in a meeting with two or more people actively participating. Typically all the primary people speaking would be in the same room (if not, see PHONE_CALL)" "One or more persons lecturing or presenting to others, mostly uninterrupted." "A phone-call or video-conference in which two or more people, who are not in the same room, are actively participating." "A recorded message intended for another person to listen to." "Professionally produced audio (eg. TV Show, Podcast)." "Transcribe spoken questions and queries into text." "Transcribe voice commands, such as for controlling a device." "Transcribe speech to text to create a written document, such as a text-message, email or report."], "enum" ["INTERACTION_TYPE_UNSPECIFIED" "DISCUSSION" "PRESENTATION" "PHONE_CALL" "VOICEMAIL" "PROFESSIONALLY_PRODUCED" "VOICE_SEARCH" "VOICE_COMMAND" "DICTATION"]}, "originalMediaType" {"enum" ["ORIGINAL_MEDIA_TYPE_UNSPECIFIED" "AUDIO" "VIDEO"], "description" "The original media the speech was recorded on.", "enumDescriptions" ["Unknown original media type." "The speech data is an audio recording." "The speech data originally recorded on a video."], "type" "string"}, "audioTopic" {"type" "string", "description" "Description of the content. Eg. \"Recordings of federal supreme court hearings from 2012\"."}, "originalMimeType" {"type" "string", "description" "Mime type of the original audio file. For example `audio/m4a`, `audio/x-alaw-basic`, `audio/mp3`, `audio/3gpp`. A list of possible audio mime types is maintained at http://www.iana.org/assignments/media-types/media-types.xhtml#audio"}, "recordingDeviceType" {"enumDescriptions" ["The recording device is unknown." "Speech was recorded on a smartphone." "Speech was recorded using a personal computer or tablet." "Speech was recorded over a phone line." "Speech was recorded in a vehicle." "Speech was recorded outdoors." "Speech was recorded indoors."], "description" "The type of device the speech was recorded with.", "enum" ["RECORDING_DEVICE_TYPE_UNSPECIFIED" "SMARTPHONE" "PC" "PHONE_LINE" "VEHICLE" "OTHER_OUTDOOR_DEVICE" "OTHER_INDOOR_DEVICE"], "type" "string"}, "industryNaicsCodeOfAudio" {"format" "uint32", "type" "integer", "description" "The industry vertical to which this speech recognition request most closely applies. This is most indicative of the topics contained in the audio. Use the 6-digit NAICS code to identify the industry vertical - see https://www.naics.com/search/."}, "microphoneDistance" {"type" "string", "enumDescriptions" ["Audio type is not known." "The audio was captured from a closely placed microphone. Eg. phone, dictaphone, or handheld microphone. Generally if there speaker is within 1 meter of the microphone." "The speaker if within 3 meters of the microphone." "The speaker is more than 3 meters away from the microphone."], "description" "The audio type that most closely describes the audio being recognized.", "enum" ["MICROPHONE_DISTANCE_UNSPECIFIED" "NEARFIELD" "MIDFIELD" "FARFIELD"]}, "recordingDeviceName" {"type" "string", "description" "The device used to make the recording. Examples 'Nexus 5X' or 'Polycom SoundStation IP 6000' or 'POTS' or 'VoIP' or 'Cardioid Microphone'."}}}, "LongRunningRecognizeRequest" {"type" "object", "properties" {"config" {"description" "Required. Provides information to the recognizer that specifies how to process the request.", "$ref" "RecognitionConfig"}, "audio" {"$ref" "RecognitionAudio", "description" "Required. The audio data to be recognized."}}, "id" "LongRunningRecognizeRequest", "description" "The top-level message sent by the client for the `LongRunningRecognize` method."}, "Phrase" {"description" "A phrases containing words and phrase \"hints\" so that the speech recognition is more likely to recognize them. This can be used to improve the accuracy for specific words and phrases, for example, if specific commands are typically spoken by the user. This can also be used to add additional words to the vocabulary of the recognizer. See [usage limits](https://cloud.google.com/speech-to-text/quotas#content). List items can also include pre-built or custom classes containing groups of words that represent common concepts that occur in natural language. For example, rather than providing a phrase hint for every month of the year (e.g. \"i was born in january\", \"i was born in febuary\", ...), use the pre-built `$MONTH` class improves the likelihood of correctly transcribing audio that includes months (e.g. \"i was born in $month\"). To refer to pre-built classes, use the class' symbol prepended with `$` e.g. `$MONTH`. To refer to custom classes that were defined inline in the request, set the class's `custom_class_id` to a string unique to all class resources and inline classes. Then use the class' id wrapped in $`{...}` e.g. \"${my-months}\". To refer to custom classes resources, use the class' id wrapped in `${}` (e.g. `${my-months}`).", "id" "Phrase", "type" "object", "properties" {"value" {"description" "The phrase itself.", "type" "string"}, "boost" {"description" "Hint Boost. Overrides the boost set at the phrase set level. Positive value will increase the probability that a specific phrase will be recognized over other similar sounding phrases. The higher the boost, the higher the chance of false positive recognition as well. Negative boost values would correspond to anti-biasing. Anti-biasing is not enabled, so negative boost will simply be ignored. Though `boost` can accept a wide range of positive values, most use cases are best served with values between 0 and 20. We recommend using a binary search approach to finding the optimal value for your use case. Speech recognition will skip PhraseSets with a boost value of 0.", "type" "number", "format" "float"}}}, "Operation" {"properties" {"name" {"type" "string", "description" "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."}, "done" {"type" "boolean", "description" "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."}, "response" {"description" "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.", "type" "object", "additionalProperties" {"type" "any", "description" "Properties of the object. Contains field @type with type URL."}}, "error" {"$ref" "Status", "description" "The error result of the operation in case of failure or cancellation."}, "metadata" {"description" "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.", "type" "object", "additionalProperties" {"description" "Properties of the object. Contains field @type with type URL.", "type" "any"}}}, "type" "object", "id" "Operation", "description" "This resource represents a long-running operation that is the result of a network API call."}, "SpeechAdaptation" {"type" "object", "id" "SpeechAdaptation", "properties" {"customClasses" {"type" "array", "items" {"$ref" "CustomClass"}, "description" "A collection of custom classes. To specify the classes inline, leave the class' `name` blank and fill in the rest of its fields, giving it a unique `custom_class_id`. Refer to the inline defined class in phrase hints by its `custom_class_id`."}, "phraseSets" {"items" {"$ref" "PhraseSet"}, "type" "array", "description" "A collection of phrase sets. To specify the hints inline, leave the phrase set's `name` blank and fill in the rest of its fields. Any phrase set can use any custom class."}}, "description" "Speech adaptation configuration."}, "LongRunningRecognizeResponse" {"description" "The only message returned to the client by the `LongRunningRecognize` method. It contains the result as zero or more sequential `SpeechRecognitionResult` messages. It is included in the `result.response` field of the `Operation` returned by the `GetOperation` call of the `google::longrunning::Operations` service.", "properties" {"results" {"description" "Sequential list of transcription results corresponding to sequential portions of audio.", "type" "array", "items" {"$ref" "SpeechRecognitionResult"}}}, "type" "object", "id" "LongRunningRecognizeResponse"}, "Status" {"id" "Status", "properties" {"details" {"items" {"additionalProperties" {"type" "any", "description" "Properties of the object. Contains field @type with type URL."}, "type" "object"}, "description" "A list of messages that carry the error details. There is a common set of message types for APIs to use.", "type" "array"}, "code" {"format" "int32", "description" "The status code, which should be an enum value of google.rpc.Code.", "type" "integer"}, "message" {"description" "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.", "type" "string"}}, "type" "object", "description" "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."}, "RecognizeRequest" {"id" "RecognizeRequest", "properties" {"audio" {"description" "Required. The audio data to be recognized.", "$ref" "RecognitionAudio"}, "config" {"$ref" "RecognitionConfig", "description" "Required. Provides information to the recognizer that specifies how to process the request."}}, "type" "object", "description" "The top-level message sent by the client for the `Recognize` method."}, "SpeakerDiarizationConfig" {"id" "SpeakerDiarizationConfig", "properties" {"minSpeakerCount" {"type" "integer", "format" "int32", "description" "Minimum number of speakers in the conversation. This range gives you more flexibility by allowing the system to automatically determine the correct number of speakers. If not set, the default value is 2."}, "speakerTag" {"readOnly" true, "format" "int32", "description" "Output only. Unused.", "type" "integer"}, "enableSpeakerDiarization" {"description" "If 'true', enables speaker detection for each recognized word in the top alternative of the recognition result using a speaker_tag provided in the WordInfo.", "type" "boolean"}, "maxSpeakerCount" {"description" "Maximum number of speakers in the conversation. This range gives you more flexibility by allowing the system to automatically determine the correct number of speakers. If not set, the default value is 6.", "format" "int32", "type" "integer"}}, "type" "object", "description" "Config to enable speaker diarization."}, "RecognitionAudio" {"id" "RecognitionAudio", "description" "Contains audio data in the encoding specified in the `RecognitionConfig`. Either `content` or `uri` must be supplied. Supplying both or neither returns google.rpc.Code.INVALID_ARGUMENT. See [content limits](https://cloud.google.com/speech-to-text/quotas#content).", "properties" {"uri" {"description" "URI that points to a file that contains audio data bytes as specified in `RecognitionConfig`. The file must not be compressed (for example, gzip). Currently, only Google Cloud Storage URIs are supported, which must be specified in the following format: `gs://bucket_name/object_name` (other URI formats return google.rpc.Code.INVALID_ARGUMENT). For more information, see [Request URIs](https://cloud.google.com/storage/docs/reference-uris).", "type" "string"}, "content" {"format" "byte", "description" "The audio data bytes encoded as specified in `RecognitionConfig`. Note: as with all bytes fields, proto buffers use a pure binary representation, whereas JSON representations use base64.", "type" "string"}}, "type" "object"}, "RecognizeResponse" {"id" "RecognizeResponse", "properties" {"results" {"description" "Sequential list of transcription results corresponding to sequential portions of audio.", "type" "array", "items" {"$ref" "SpeechRecognitionResult"}}}, "type" "object", "description" "The only message returned to the client by the `Recognize` method. It contains the result as zero or more sequential `SpeechRecognitionResult` messages."}, "WordInfo" {"description" "Word-specific information for recognized words.", "id" "WordInfo", "type" "object", "properties" {"speakerTag" {"format" "int32", "type" "integer", "description" "Output only. A distinct integer value is assigned for every speaker within the audio. This field specifies which one of those speakers was detected to have spoken this word. Value ranges from '1' to diarization_speaker_count. speaker_tag is set if enable_speaker_diarization = 'true' and only in the top alternative.", "readOnly" true}, "confidence" {"type" "number", "format" "float", "description" "The confidence estimate between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. This field is set only for the top alternative of a non-streaming result or, of a streaming result where `is_final=true`. This field is not guaranteed to be accurate and users should not rely on it to be always provided. The default of 0.0 is a sentinel value indicating `confidence` was not set."}, "endTime" {"type" "string", "description" "Time offset relative to the beginning of the audio, and corresponding to the end of the spoken word. This field is only set if `enable_word_time_offsets=true` and only in the top hypothesis. This is an experimental feature and the accuracy of the time offset can vary.", "format" "google-duration"}, "word" {"description" "The word corresponding to this set of information.", "type" "string"}, "startTime" {"type" "string", "description" "Time offset relative to the beginning of the audio, and corresponding to the start of the spoken word. This field is only set if `enable_word_time_offsets=true` and only in the top hypothesis. This is an experimental feature and the accuracy of the time offset can vary.", "format" "google-duration"}}}, "SpeechRecognitionAlternative" {"description" "Alternative hypotheses (a.k.a. n-best list).", "properties" {"transcript" {"type" "string", "description" "Transcript text representing the words that the user spoke."}, "words" {"type" "array", "items" {"$ref" "WordInfo"}, "description" "A list of word-specific information for each recognized word. Note: When `enable_speaker_diarization` is true, you will see all the words from the beginning of the audio."}, "confidence" {"format" "float", "description" "The confidence estimate between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. This field is set only for the top alternative of a non-streaming result or, of a streaming result where `is_final=true`. This field is not guaranteed to be accurate and users should not rely on it to be always provided. The default of 0.0 is a sentinel value indicating `confidence` was not set.", "type" "number"}}, "id" "SpeechRecognitionAlternative", "type" "object"}, "PhraseSet" {"description" "Provides \"hints\" to the speech recognizer to favor specific words and phrases in the results.", "id" "PhraseSet", "properties" {"phrases" {"type" "array", "description" "A list of word and phrases.", "items" {"$ref" "Phrase"}}, "boost" {"format" "float", "description" "Hint Boost. Positive value will increase the probability that a specific phrase will be recognized over other similar sounding phrases. The higher the boost, the higher the chance of false positive recognition as well. Negative boost values would correspond to anti-biasing. Anti-biasing is not enabled, so negative boost will simply be ignored. Though `boost` can accept a wide range of positive values, most use cases are best served with values between 0 (exclusive) and 20. We recommend using a binary search approach to finding the optimal value for your use case. Speech recognition will skip PhraseSets with a boost value of 0.", "type" "number"}, "name" {"description" "The resource name of the phrase set.", "type" "string"}}, "type" "object"}, "SpeechRecognitionResult" {"type" "object", "description" "A speech recognition result corresponding to a portion of the audio.", "properties" {"languageCode" {"description" "Output only. The [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag of the language in this result. This language code was detected to have the most likelihood of being spoken in the audio.", "type" "string", "readOnly" true}, "alternatives" {"items" {"$ref" "SpeechRecognitionAlternative"}, "description" "May contain one or more recognition hypotheses (up to the maximum specified in `max_alternatives`). These alternatives are ordered in terms of accuracy, with the top (first) alternative being the most probable, as ranked by the recognizer.", "type" "array"}, "channelTag" {"description" "For multi-channel audio, this is the channel number corresponding to the recognized result for the audio from that channel. For audio_channel_count = N, its output values can range from '1' to 'N'.", "format" "int32", "type" "integer"}}, "id" "SpeechRecognitionResult"}, "CustomClass" {"description" "A set of words or phrases that represents a common concept likely to appear in your audio, for example a list of passenger ship names. CustomClass items can be substituted into placeholders that you set in PhraseSet phrases.", "type" "object", "properties" {"name" {"type" "string", "description" "The resource name of the custom class."}, "customClassId" {"type" "string", "description" "If this custom class is a resource, the custom_class_id is the resource id of the CustomClass. Case sensitive."}, "items" {"items" {"$ref" "ClassItem"}, "type" "array", "description" "A collection of class items."}}, "id" "CustomClass"}, "SpeechContext" {"id" "SpeechContext", "type" "object", "description" "Provides \"hints\" to the speech recognizer to favor specific words and phrases in the results.", "properties" {"phrases" {"description" "A list of strings containing words and phrases \"hints\" so that the speech recognition is more likely to recognize them. This can be used to improve the accuracy for specific words and phrases, for example, if specific commands are typically spoken by the user. This can also be used to add additional words to the vocabulary of the recognizer. See [usage limits](https://cloud.google.com/speech-to-text/quotas#content). List items can also be set to classes for groups of words that represent common concepts that occur in natural language. For example, rather than providing phrase hints for every month of the year, using the $MONTH class improves the likelihood of correctly transcribing audio that includes months.", "items" {"type" "string"}, "type" "array"}, "boost" {"format" "float", "type" "number", "description" "Hint Boost. Positive value will increase the probability that a specific phrase will be recognized over other similar sounding phrases. The higher the boost, the higher the chance of false positive recognition as well. Negative boost values would correspond to anti-biasing. Anti-biasing is not enabled, so negative boost will simply be ignored. Though `boost` can accept a wide range of positive values, most use cases are best served with values between 0 and 20. We recommend using a binary search approach to finding the optimal value for your use case."}}}, "ClassItem" {"id" "ClassItem", "type" "object", "description" "An item of the class.", "properties" {"value" {"type" "string", "description" "The class item's value."}}}}}