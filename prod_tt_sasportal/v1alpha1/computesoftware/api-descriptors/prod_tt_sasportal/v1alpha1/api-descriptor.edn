#:compute.gcp.descriptor{:name "prod_tt_sasportal", :title "SAS Portal API (Testing)", :api-version "v1alpha1", :revision "20200426", :endpoint #:compute.gcp.descriptor{:url "https://prod-tt-sasportal.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"location" "query", "description" "JSONP", "type" "string"}, "uploadType" {"location" "query", "description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "type" "string"}, "key" {"description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "type" "string", "location" "query"}, "access_token" {"location" "query", "description" "OAuth access token.", "type" "string"}, "oauth_token" {"location" "query", "description" "OAuth 2.0 token for the current user.", "type" "string"}, "prettyPrint" {"default" "true", "type" "boolean", "location" "query", "description" "Returns response with indentations and line breaks."}, "alt" {"description" "Data format for response.", "default" "json", "enum" ["json" "media" "proto"], "type" "string", "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "location" "query"}, "$.xgafv" {"description" "V1 error format.", "type" "string", "enumDescriptions" ["v1 error format" "v2 error format"], "location" "query", "enum" ["1" "2"]}, "fields" {"location" "query", "description" "Selector specifying which fields to include in a partial response.", "type" "string"}, "upload_protocol" {"type" "string", "location" "query", "description" "Upload protocol for media (e.g. \"raw\", \"multipart\")."}, "quotaUser" {"type" "string", "location" "query", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."}}, :op->info {"prod_tt_sasportal.installer.generateSecret" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/installer:generateSecret", :request {"$ref" "SasPortalGenerateSecretRequest"}, :response {"$ref" "SasPortalGenerateSecretResponse"}, :parameters {}, :description "Generates a secret to be used with the ValidateInstaller method"}, "prod_tt_sasportal.customers.nodes.create" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/customers/{customersId}/nodes", :request {"$ref" "SasPortalNode"}, :response {"$ref" "SasPortalNode"}, :parameters {"parent" {"description" "Required. The parent resource name where the node is to be created.", "type" "string", "required" true, "pattern" "^customers/[^/]+$", "location" "path"}}, :description "Creates a new node."}, "prod_tt_sasportal.nodes.nodes.nodes.create" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/nodes", :request {"$ref" "SasPortalNode"}, :response {"$ref" "SasPortalNode"}, :parameters {"parent" {"description" "Required. The parent resource name where the node is to be created.", "type" "string", "required" true, "pattern" "^nodes/[^/]+/nodes/[^/]+$", "location" "path"}}, :description "Creates a new node."}, "prod_tt_sasportal.nodes.devices.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1alpha1/nodes/{nodesId}/devices/{devicesId}", :response {"$ref" "SasPortalEmpty"}, :parameters {"name" {"type" "string", "required" true, "pattern" "^nodes/[^/]+/devices/[^/]+$", "location" "path", "description" "Required. The name of the device."}}, :description "Deletes a device."}, "prod_tt_sasportal.customers.get" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/customers/{customersId}", :response {"$ref" "SasPortalCustomer"}, :parameters {"name" {"type" "string", "required" true, "pattern" "^customers/[^/]+$", "location" "path", "description" "Required. The name of the customer."}}, :description "Returns a requested customer."}, "prod_tt_sasportal.customers.devices.updateSigned" #:compute.gcp.descriptor{:http-method :patch, :path "v1alpha1/customers/{customersId}/devices/{devicesId}:updateSigned", :request {"$ref" "SasPortalUpdateSignedDeviceRequest"}, :response {"$ref" "SasPortalDevice"}, :parameters {"name" {"type" "string", "required" true, "pattern" "^customers/[^/]+/devices/[^/]+$", "location" "path", "description" "Required. The name of the device to update."}}, :description "Updates a signed device."}, "prod_tt_sasportal.policies.set" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/policies:set", :request {"$ref" "SasPortalSetPolicyRequest"}, :response {"$ref" "SasPortalPolicy"}, :parameters {}, :description "Sets the access control policy on the specified resource. Replaces any\nexisting policy."}, "prod_tt_sasportal.customers.devices.list" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/customers/{customersId}/devices", :response {"$ref" "SasPortalListDevicesResponse"}, :parameters {"parent" {"description" "Required. The name of the parent resource.", "type" "string", "required" true, "pattern" "^customers/[^/]+$", "location" "path"}, "filter" {"location" "query", "description" "The filter expression. The filter should have one of the following\nformats: \"sn=123454\" or \"display_name=MyDevice\". sn\ncorresponds to serial_number of the device. The filter is case insensitive.", "type" "string"}, "pageToken" {"location" "query", "description" "A pagination token returned from a previous call to ListDevices\nthat indicates where this listing should continue from.", "type" "string"}, "pageSize" {"location" "query", "format" "int32", "description" "The maximum number of devices to return in the response.\nIf empty or zero, all devices will be listed.\nMust be in the range [0, 1000].", "type" "integer"}}, :description "Lists devices under a node or customer."}, "prod_tt_sasportal.customers.nodes.get" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/customers/{customersId}/nodes/{nodesId}", :response {"$ref" "SasPortalNode"}, :parameters {"name" {"pattern" "^customers/[^/]+/nodes/[^/]+$", "location" "path", "description" "Required. The name of the node.", "type" "string", "required" true}}, :description "Returns a requested node."}, "prod_tt_sasportal.nodes.devices.patch" #:compute.gcp.descriptor{:http-method :patch, :path "v1alpha1/nodes/{nodesId}/devices/{devicesId}", :request {"$ref" "SasPortalDevice"}, :response {"$ref" "SasPortalDevice"}, :parameters {"name" {"location" "path", "description" "Output only. The resource path name.", "type" "string", "required" true, "pattern" "^nodes/[^/]+/devices/[^/]+$"}, "updateMask" {"format" "google-fieldmask", "description" "Fields to be updated.", "type" "string", "location" "query"}}, :description "Updates a device."}, "prod_tt_sasportal.customers.nodes.patch" #:compute.gcp.descriptor{:http-method :patch, :path "v1alpha1/customers/{customersId}/nodes/{nodesId}", :request {"$ref" "SasPortalNode"}, :response {"$ref" "SasPortalNode"}, :parameters {"name" {"description" "Output only. Resource name.", "type" "string", "required" true, "pattern" "^customers/[^/]+/nodes/[^/]+$", "location" "path"}, "updateMask" {"type" "string", "location" "query", "format" "google-fieldmask", "description" "Fields to be updated."}}, :description "Updates an existing node."}, "prod_tt_sasportal.nodes.nodes.patch" #:compute.gcp.descriptor{:http-method :patch, :path "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}", :request {"$ref" "SasPortalNode"}, :response {"$ref" "SasPortalNode"}, :parameters {"updateMask" {"location" "query", "format" "google-fieldmask", "description" "Fields to be updated.", "type" "string"}, "name" {"pattern" "^nodes/[^/]+/nodes/[^/]+$", "location" "path", "description" "Output only. Resource name.", "type" "string", "required" true}}, :description "Updates an existing node."}, "prod_tt_sasportal.nodes.nodes.move" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}:move", :request {"$ref" "SasPortalMoveNodeRequest"}, :response {"$ref" "SasPortalOperation"}, :parameters {"name" {"pattern" "^nodes/[^/]+/nodes/[^/]+$", "location" "path", "description" "Required. The name of the node to\nmove.", "type" "string", "required" true}}, :description "Moves a node under another node or customer."}, "prod_tt_sasportal.nodes.devices.create" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/nodes/{nodesId}/devices", :request {"$ref" "SasPortalDevice"}, :response {"$ref" "SasPortalDevice"}, :parameters {"parent" {"location" "path", "description" "Required. The name of the parent resource.", "type" "string", "required" true, "pattern" "^nodes/[^/]+$"}}, :description "Creates a device under a node or customer."}, "prod_tt_sasportal.nodes.devices.updateSigned" #:compute.gcp.descriptor{:http-method :patch, :path "v1alpha1/nodes/{nodesId}/devices/{devicesId}:updateSigned", :request {"$ref" "SasPortalUpdateSignedDeviceRequest"}, :response {"$ref" "SasPortalDevice"}, :parameters {"name" {"location" "path", "description" "Required. The name of the device to update.", "type" "string", "required" true, "pattern" "^nodes/[^/]+/devices/[^/]+$"}}, :description "Updates a signed device."}, "prod_tt_sasportal.nodes.nodes.devices.bulk" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices:bulk", :request {"$ref" "SasPortalBulkCreateDeviceRequest"}, :response {"$ref" "SasPortalBulkCreateDeviceResponse"}, :parameters {"parent" {"location" "path", "description" "Required. The name of the parent resource.", "type" "string", "required" true, "pattern" "^nodes/[^/]+/nodes/[^/]+$"}}, :description "Creates a device under a node or customer. Returned devices are unordered."}, "prod_tt_sasportal.customers.devices.bulk" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/customers/{customersId}/devices:bulk", :request {"$ref" "SasPortalBulkCreateDeviceRequest"}, :response {"$ref" "SasPortalBulkCreateDeviceResponse"}, :parameters {"parent" {"location" "path", "description" "Required. The name of the parent resource.", "type" "string", "required" true, "pattern" "^customers/[^/]+$"}}, :description "Creates a device under a node or customer. Returned devices are unordered."}, "prod_tt_sasportal.customers.devices.signDevice" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/customers/{customersId}/devices/{devicesId}:signDevice", :request {"$ref" "SasPortalSignDeviceRequest"}, :response {"$ref" "SasPortalEmpty"}, :parameters {"name" {"location" "path", "description" "Output only. The resource path name.", "type" "string", "required" true, "pattern" "^customers/[^/]+/devices/[^/]+$"}}, :description "Signs a device."}, "prod_tt_sasportal.customers.devices.create" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/customers/{customersId}/devices", :request {"$ref" "SasPortalDevice"}, :response {"$ref" "SasPortalDevice"}, :parameters {"parent" {"description" "Required. The name of the parent resource.", "type" "string", "required" true, "pattern" "^customers/[^/]+$", "location" "path"}}, :description "Creates a device under a node or customer."}, "prod_tt_sasportal.customers.nodes.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1alpha1/customers/{customersId}/nodes/{nodesId}", :response {"$ref" "SasPortalEmpty"}, :parameters {"name" {"location" "path", "description" "Required. The name of the node.", "type" "string", "required" true, "pattern" "^customers/[^/]+/nodes/[^/]+$"}}, :description "Deletes a node."}, "prod_tt_sasportal.customers.list" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/customers", :response {"$ref" "SasPortalListCustomersResponse"}, :parameters {"pageToken" {"type" "string", "location" "query", "description" "A pagination token returned from a previous call to ListCustomers method that indicates where\nthis listing should continue from."}, "pageSize" {"location" "query", "format" "int32", "description" "The maximum number of customers\nto return in the response.", "type" "integer"}}, :description "Returns a list of requested customers."}, "prod_tt_sasportal.nodes.devices.get" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/nodes/{nodesId}/devices/{devicesId}", :response {"$ref" "SasPortalDevice"}, :parameters {"name" {"location" "path", "description" "Required. The name of the device.", "type" "string", "required" true, "pattern" "^nodes/[^/]+/devices/[^/]+$"}}, :description "Gets details about a device."}, "prod_tt_sasportal.installer.validate" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/installer:validate", :request {"$ref" "SasPortalValidateInstallerRequest"}, :response {"$ref" "SasPortalValidateInstallerResponse"}, :parameters {}, :description "Validates the identity of a Certified Professional Installer (CPI)."}, "prod_tt_sasportal.customers.patch" #:compute.gcp.descriptor{:http-method :patch, :path "v1alpha1/customers/{customersId}", :request {"$ref" "SasPortalCustomer"}, :response {"$ref" "SasPortalCustomer"}, :parameters {"name" {"location" "path", "description" "Output only. Resource name of the customer.", "type" "string", "required" true, "pattern" "^customers/[^/]+$"}, "updateMask" {"location" "query", "format" "google-fieldmask", "description" "Fields to be updated.", "type" "string"}}, :description "Updates an existing customer."}, "prod_tt_sasportal.nodes.nodes.devices.create" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices", :request {"$ref" "SasPortalDevice"}, :response {"$ref" "SasPortalDevice"}, :parameters {"parent" {"pattern" "^nodes/[^/]+/nodes/[^/]+$", "location" "path", "description" "Required. The name of the parent resource.", "type" "string", "required" true}}, :description "Creates a device under a node or customer."}, "prod_tt_sasportal.customers.nodes.move" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/customers/{customersId}/nodes/{nodesId}:move", :request {"$ref" "SasPortalMoveNodeRequest"}, :response {"$ref" "SasPortalOperation"}, :parameters {"name" {"type" "string", "required" true, "pattern" "^customers/[^/]+/nodes/[^/]+$", "location" "path", "description" "Required. The name of the node to\nmove."}}, :description "Moves a node under another node or customer."}, "prod_tt_sasportal.customers.nodes.list" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/customers/{customersId}/nodes", :response {"$ref" "SasPortalListNodesResponse"}, :parameters {"pageToken" {"location" "query", "description" "A pagination token returned from a previous call to ListNodes method\nthat indicates where this listing should continue from.", "type" "string"}, "pageSize" {"type" "integer", "location" "query", "format" "int32", "description" "The maximum number of nodes to return in the response."}, "parent" {"pattern" "^customers/[^/]+$", "location" "path", "description" "Required. The parent resource name, for example, \"nodes/1\".", "type" "string", "required" true}}, :description "Lists nodes."}, "prod_tt_sasportal.nodes.nodes.devices.list" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices", :response {"$ref" "SasPortalListDevicesResponse"}, :parameters {"pageToken" {"description" "A pagination token returned from a previous call to ListDevices\nthat indicates where this listing should continue from.", "type" "string", "location" "query"}, "pageSize" {"location" "query", "format" "int32", "description" "The maximum number of devices to return in the response.\nIf empty or zero, all devices will be listed.\nMust be in the range [0, 1000].", "type" "integer"}, "parent" {"description" "Required. The name of the parent resource.", "type" "string", "required" true, "pattern" "^nodes/[^/]+/nodes/[^/]+$", "location" "path"}, "filter" {"description" "The filter expression. The filter should have one of the following\nformats: \"sn=123454\" or \"display_name=MyDevice\". sn\ncorresponds to serial_number of the device. The filter is case insensitive.", "type" "string", "location" "query"}}, :description "Lists devices under a node or customer."}, "prod_tt_sasportal.nodes.devices.signDevice" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/nodes/{nodesId}/devices/{devicesId}:signDevice", :request {"$ref" "SasPortalSignDeviceRequest"}, :response {"$ref" "SasPortalEmpty"}, :parameters {"name" {"location" "path", "description" "Output only. The resource path name.", "type" "string", "required" true, "pattern" "^nodes/[^/]+/devices/[^/]+$"}}, :description "Signs a device."}, "prod_tt_sasportal.customers.devices.patch" #:compute.gcp.descriptor{:http-method :patch, :path "v1alpha1/customers/{customersId}/devices/{devicesId}", :request {"$ref" "SasPortalDevice"}, :response {"$ref" "SasPortalDevice"}, :parameters {"name" {"location" "path", "description" "Output only. The resource path name.", "type" "string", "required" true, "pattern" "^customers/[^/]+/devices/[^/]+$"}, "updateMask" {"format" "google-fieldmask", "description" "Fields to be updated.", "type" "string", "location" "query"}}, :description "Updates a device."}, "prod_tt_sasportal.nodes.nodes.nodes.list" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/nodes", :response {"$ref" "SasPortalListNodesResponse"}, :parameters {"parent" {"description" "Required. The parent resource name, for example, \"nodes/1\".", "type" "string", "required" true, "pattern" "^nodes/[^/]+/nodes/[^/]+$", "location" "path"}, "pageToken" {"location" "query", "description" "A pagination token returned from a previous call to ListNodes method\nthat indicates where this listing should continue from.", "type" "string"}, "pageSize" {"format" "int32", "description" "The maximum number of nodes to return in the response.", "type" "integer", "location" "query"}}, :description "Lists nodes."}, "prod_tt_sasportal.customers.devices.get" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/customers/{customersId}/devices/{devicesId}", :response {"$ref" "SasPortalDevice"}, :parameters {"name" {"description" "Required. The name of the device.", "type" "string", "required" true, "pattern" "^customers/[^/]+/devices/[^/]+$", "location" "path"}}, :description "Gets details about a device."}, "prod_tt_sasportal.nodes.nodes.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}", :response {"$ref" "SasPortalEmpty"}, :parameters {"name" {"pattern" "^nodes/[^/]+/nodes/[^/]+$", "location" "path", "description" "Required. The name of the node.", "type" "string", "required" true}}, :description "Deletes a node."}, "prod_tt_sasportal.nodes.nodes.devices.createSigned" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices:createSigned", :request {"$ref" "SasPortalCreateSignedDeviceRequest"}, :response {"$ref" "SasPortalDevice"}, :parameters {"parent" {"type" "string", "required" true, "pattern" "^nodes/[^/]+/nodes/[^/]+$", "location" "path", "description" "Required. The name of the parent resource."}}, :description "Creates a signed device under a\nnode or customer."}, "prod_tt_sasportal.nodes.nodes.create" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/nodes/{nodesId}/nodes", :request {"$ref" "SasPortalNode"}, :response {"$ref" "SasPortalNode"}, :parameters {"parent" {"pattern" "^nodes/[^/]+$", "location" "path", "description" "Required. The parent resource name where the node is to be created.", "type" "string", "required" true}}, :description "Creates a new node."}, "prod_tt_sasportal.customers.nodes.nodes.create" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/customers/{customersId}/nodes/{nodesId}/nodes", :request {"$ref" "SasPortalNode"}, :response {"$ref" "SasPortalNode"}, :parameters {"parent" {"type" "string", "required" true, "pattern" "^customers/[^/]+/nodes/[^/]+$", "location" "path", "description" "Required. The parent resource name where the node is to be created."}}, :description "Creates a new node."}, "prod_tt_sasportal.nodes.devices.bulk" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/nodes/{nodesId}/devices:bulk", :request {"$ref" "SasPortalBulkCreateDeviceRequest"}, :response {"$ref" "SasPortalBulkCreateDeviceResponse"}, :parameters {"parent" {"description" "Required. The name of the parent resource.", "type" "string", "required" true, "pattern" "^nodes/[^/]+$", "location" "path"}}, :description "Creates a device under a node or customer. Returned devices are unordered."}, "prod_tt_sasportal.nodes.nodes.get" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}", :response {"$ref" "SasPortalNode"}, :parameters {"name" {"description" "Required. The name of the node.", "type" "string", "required" true, "pattern" "^nodes/[^/]+/nodes/[^/]+$", "location" "path"}}, :description "Returns a requested node."}, "prod_tt_sasportal.nodes.devices.move" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/nodes/{nodesId}/devices/{devicesId}:move", :request {"$ref" "SasPortalMoveDeviceRequest"}, :response {"$ref" "SasPortalOperation"}, :parameters {"name" {"location" "path", "description" "Required. The name of the device to move.", "type" "string", "required" true, "pattern" "^nodes/[^/]+/devices/[^/]+$"}}, :description "Moves a device under another node or customer."}, "prod_tt_sasportal.nodes.devices.list" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/nodes/{nodesId}/devices", :response {"$ref" "SasPortalListDevicesResponse"}, :parameters {"parent" {"description" "Required. The name of the parent resource.", "type" "string", "required" true, "pattern" "^nodes/[^/]+$", "location" "path"}, "filter" {"location" "query", "description" "The filter expression. The filter should have one of the following\nformats: \"sn=123454\" or \"display_name=MyDevice\". sn\ncorresponds to serial_number of the device. The filter is case insensitive.", "type" "string"}, "pageToken" {"location" "query", "description" "A pagination token returned from a previous call to ListDevices\nthat indicates where this listing should continue from.", "type" "string"}, "pageSize" {"location" "query", "format" "int32", "description" "The maximum number of devices to return in the response.\nIf empty or zero, all devices will be listed.\nMust be in the range [0, 1000].", "type" "integer"}}, :description "Lists devices under a node or customer."}, "prod_tt_sasportal.customers.devices.createSigned" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/customers/{customersId}/devices:createSigned", :request {"$ref" "SasPortalCreateSignedDeviceRequest"}, :response {"$ref" "SasPortalDevice"}, :parameters {"parent" {"type" "string", "required" true, "pattern" "^customers/[^/]+$", "location" "path", "description" "Required. The name of the parent resource."}}, :description "Creates a signed device under a\nnode or customer."}, "prod_tt_sasportal.customers.devices.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1alpha1/customers/{customersId}/devices/{devicesId}", :response {"$ref" "SasPortalEmpty"}, :parameters {"name" {"pattern" "^customers/[^/]+/devices/[^/]+$", "location" "path", "description" "Required. The name of the device.", "type" "string", "required" true}}, :description "Deletes a device."}, "prod_tt_sasportal.customers.nodes.nodes.list" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/customers/{customersId}/nodes/{nodesId}/nodes", :response {"$ref" "SasPortalListNodesResponse"}, :parameters {"parent" {"type" "string", "required" true, "pattern" "^customers/[^/]+/nodes/[^/]+$", "location" "path", "description" "Required. The parent resource name, for example, \"nodes/1\"."}, "pageToken" {"type" "string", "location" "query", "description" "A pagination token returned from a previous call to ListNodes method\nthat indicates where this listing should continue from."}, "pageSize" {"format" "int32", "description" "The maximum number of nodes to return in the response.", "type" "integer", "location" "query"}}, :description "Lists nodes."}, "prod_tt_sasportal.nodes.devices.createSigned" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/nodes/{nodesId}/devices:createSigned", :request {"$ref" "SasPortalCreateSignedDeviceRequest"}, :response {"$ref" "SasPortalDevice"}, :parameters {"parent" {"pattern" "^nodes/[^/]+$", "location" "path", "description" "Required. The name of the parent resource.", "type" "string", "required" true}}, :description "Creates a signed device under a\nnode or customer."}, "prod_tt_sasportal.nodes.nodes.list" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/nodes/{nodesId}/nodes", :response {"$ref" "SasPortalListNodesResponse"}, :parameters {"pageToken" {"type" "string", "location" "query", "description" "A pagination token returned from a previous call to ListNodes method\nthat indicates where this listing should continue from."}, "pageSize" {"format" "int32", "description" "The maximum number of nodes to return in the response.", "type" "integer", "location" "query"}, "parent" {"pattern" "^nodes/[^/]+$", "location" "path", "description" "Required. The parent resource name, for example, \"nodes/1\".", "type" "string", "required" true}}, :description "Lists nodes."}, "prod_tt_sasportal.policies.get" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/policies:get", :request {"$ref" "SasPortalGetPolicyRequest"}, :response {"$ref" "SasPortalPolicy"}, :parameters {}, :description "Gets the access control policy for a resource.\nReturns an empty policy if the resource exists and does not have a policy\nset."}, "prod_tt_sasportal.policies.test" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/policies:test", :request {"$ref" "SasPortalTestPermissionsRequest"}, :response {"$ref" "SasPortalTestPermissionsResponse"}, :parameters {}, :description "Returns permissions that a caller has on the specified resource."}, "prod_tt_sasportal.customers.devices.move" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/customers/{customersId}/devices/{devicesId}:move", :request {"$ref" "SasPortalMoveDeviceRequest"}, :response {"$ref" "SasPortalOperation"}, :parameters {"name" {"pattern" "^customers/[^/]+/devices/[^/]+$", "location" "path", "description" "Required. The name of the device to move.", "type" "string", "required" true}}, :description "Moves a device under another node or customer."}}, :schemas {"SasPortalAssignment" {"description" "Associates `members` with a `role`.", "type" "object", "properties" {"members" {"description" "The identities the role is assigned to. It can have the following\nvalues:\n\n* `{user_email}`: An email address that represents a specific\n   Google account. For example: `alice@gmail.com`.\n\n* `{group_email}`: An email address that represents a Google\n   group.  For example, `viewers@gmail.com`.", "items" {"type" "string"}, "type" "array"}, "role" {"description" "Required. Role that is assigned to `members`.", "type" "string"}}, "id" "SasPortalAssignment"}, "SasPortalCustomer" {"type" "object", "properties" {"name" {"description" "Output only. Resource name of the customer.", "type" "string"}, "displayName" {"type" "string", "description" "Required. Name of the organization that the customer entity represents."}, "sasUserIds" {"items" {"type" "string"}, "type" "array", "description" "User IDs used by the devices belonging to this customer."}}, "id" "SasPortalCustomer", "description" "Entity representing a SAS customer."}, "SasPortalInstallationParams" {"id" "SasPortalInstallationParams", "description" "Information about the device installation parameters.", "type" "object", "properties" {"indoorDeployment" {"type" "boolean", "description" "Whether the device antenna is indoor or not. True: indoor. False:\noutdoor."}, "antennaAzimuth" {"format" "int32", "description" "Boresight direction of the horizontal plane of the antenna in\ndegrees with respect to true north. The value of this parameter\nis an integer with a value between 0 and 359 inclusive. A value\nof 0 degrees means true north; a value of 90 degrees means\neast. This parameter is optional for Category A devices and\nconditional for Category B devices.", "type" "integer"}, "height" {"format" "double", "description" "Device antenna height in meters. When the heightType parameter\nvalue is \"AGL\", the antenna height should be given relative to\nground level. When the heightType parameter value is \"AMSL\", it\nis given with respect to WGS84 datum.", "type" "number"}, "antennaDowntilt" {"type" "integer", "format" "int32", "description" "Antenna downtilt in degrees and is an integer with a value\nbetween -90 and +90 inclusive; a negative value means the antenna\nis tilted up (above horizontal). This parameter is optional for\nCategory A devices and conditional for Category B devices."}, "antennaModel" {"description" "If an external antenna is used, the antenna model is optionally\nprovided in this field. The string has a maximum length of 128\noctets.", "type" "string"}, "longitude" {"format" "double", "description" "Longitude of the device antenna location. in degrees relative to\nthe WGS 84 datum. The allowed range is from -180.000000 to\n+180.000000. Positive values represent longitudes east of the\nprime meridian; negative values west of the prime\nmeridian.", "type" "number"}, "latitude" {"type" "number", "format" "double", "description" "Latitude of the device antenna location in degrees relative to\nthe WGS 84 datum. The allowed range is from -90.000000 to\n+90.000000. Positive values represent latitudes north of the\nequator; negative values south of the equator."}, "antennaBeamwidth" {"format" "int32", "description" "3-dB antenna beamwidth of the antenna in the horizontal-plane in\ndegrees.  This parameter is an unsigned integer having a value\nbetween 0 and 360 (degrees) inclusive; it is optional for\nCategory A devices and conditional for Category B devices.", "type" "integer"}, "horizontalAccuracy" {"format" "double", "description" "A positive number in meters to indicate accuracy of the device\nantenna horizontal location. This optional parameter should only\nbe present if its value is less than the FCC requirement of 50\nmeters.", "type" "number"}, "eirpCapability" {"format" "int32", "description" "This parameter is the maximum device EIRP in units of dBm/10MHz\nand is an integer with a value between -127 and +47 (dBm/10 MHz)\ninclusive. If not included, SAS interprets it as maximum\nallowable EIRP in units of dBm/10MHz for device category.", "type" "integer"}, "verticalAccuracy" {"format" "double", "description" "A positive number in meters to indicate accuracy of the device\nantenna vertical location. This optional parameter should only be\npresent if its value is less than the FCC requirement of 3\nmeters.", "type" "number"}, "heightType" {"enumDescriptions" ["Unspecified height type." "AGL height is measured relative to the ground level." "AMSL height is measured relative to the mean sea level."], "enum" ["HEIGHT_TYPE_UNSPECIFIED" "HEIGHT_TYPE_AGL" "HEIGHT_TYPE_AMSL"], "description" "Specifies how the height is measured.", "type" "string"}, "cpeCbsdIndication" {"type" "boolean", "description" "If present, this parameter specifies whether the CBSD is a CPE-CBSD or not."}, "antennaGain" {"format" "int32", "description" "Peak antenna gain in dBi. This parameter is an integer with a\nvalue between -127 and +128 (dBi) inclusive.", "type" "integer"}}}, "SasPortalNode" {"type" "object", "properties" {"sasUserIds" {"description" "User ids used by the devices belonging to this node.", "items" {"type" "string"}, "type" "array"}, "name" {"description" "Output only. Resource name.", "type" "string"}, "displayName" {"type" "string", "description" "The node's display name."}}, "id" "SasPortalNode", "description" "The Node."}, "SasPortalDeviceConfig" {"description" "Information about the device configuration.", "type" "object", "properties" {"airInterface" {"description" "Information about this device's air interface.", "$ref" "SasPortalDeviceAirInterface"}, "model" {"$ref" "SasPortalDeviceModel", "description" "Information about this device model."}, "userId" {"type" "string", "description" "The identifier of a device user."}, "measurementCapabilities" {"description" "Measurement reporting capabilities of the device.", "items" {"type" "string", "enum" ["MEASUREMENT_CAPABILITY_UNSPECIFIED" "MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITH_GRANT" "MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITHOUT_GRANT"]}, "type" "array", "enumDescriptions" ["" "" ""]}, "callSign" {"type" "string", "description" "The call sign of the device operator."}, "updateTime" {"format" "google-datetime", "description" "Output-only. The last time the device configuration was edited.", "type" "string"}, "installationParams" {"$ref" "SasPortalInstallationParams", "description" "Installation parameters for the device."}, "state" {"description" "State of the configuration.", "type" "string", "enumDescriptions" ["" "" ""], "enum" ["DEVICE_CONFIG_STATE_UNSPECIFIED" "DRAFT" "FINAL"]}, "isSigned" {"description" "Output-only. Whether the configuration has been signed by a CPI.", "type" "boolean"}, "category" {"enumDescriptions" ["Unspecified device category." "Category A." "Category B."], "enum" ["DEVICE_CATEGORY_UNSPECIFIED" "DEVICE_CATEGORY_A" "DEVICE_CATEGORY_B"], "description" "FCC category of the device.", "type" "string"}}, "id" "SasPortalDeviceConfig"}, "SasPortalCreateSignedDeviceRequest" {"description" "Request for CreateSignedDevice method.", "type" "object", "properties" {"installerId" {"type" "string", "description" "Required. Unique installer id (cpiId) from the Certified Professional\nInstallers database."}, "encodedDevice" {"format" "byte", "description" "Required. JSON Web Token signed using a CPI private key. Payload\nmust be the JSON encoding of the [Device]. The user_id field must be set.", "type" "string"}}, "id" "SasPortalCreateSignedDeviceRequest"}, "SasPortalSignDeviceRequest" {"id" "SasPortalSignDeviceRequest", "description" "Request for SignDevice method.", "type" "object", "properties" {"device" {"$ref" "SasPortalDevice", "description" "Required. The device to sign.\nThe device fields name, fcc_id and serial_number must be set.\nThe user_id field must be set."}}}, "SasPortalValidateInstallerResponse" {"description" "Response for ValidateInstaller method]\n[spectrum.sas.portal.v1alpha1.DeviceManager.ValidateInstaller].", "type" "object", "properties" {}, "id" "SasPortalValidateInstallerResponse"}, "SasPortalValidateInstallerRequest" {"type" "object", "properties" {"secret" {"description" "Required. Secret returned by the GenerateSecret method.", "type" "string"}, "encodedSecret" {"type" "string", "description" "Required. JSON Web Token signed using a CPI private key. Payload\nmust include a \"secret\" claim whose value is the secret."}, "installerId" {"type" "string", "description" "Required. Unique installer id (cpiId) from the Certified\nProfessional Installers database."}}, "id" "SasPortalValidateInstallerRequest", "description" "Request for ValidateInstaller method."}, "SasPortalDeviceGrant" {"description" "Device grant. It is an authorization provided by the Spectrum\nAccess System to a device to transmit using specified operating\nparameters after a successful heartbeat by the device.", "type" "object", "properties" {"maxEirp" {"type" "number", "format" "double", "description" "Maximum Equivalent Isotropically Radiated Power (EIRP) permitted\nby the grant. The maximum EIRP is in units of dBm/MHz. The\nvalue of maxEirp represents the average (RMS) EIRP that would be\nmeasured by the procedure defined in FCC part 96.41(e)(3)."}, "expireTime" {"type" "string", "format" "google-datetime", "description" "The expiration time of the grant."}, "state" {"enum" ["GRANT_STATE_UNSPECIFIED" "GRANT_STATE_GRANTED" "GRANT_STATE_TERMINATED" "GRANT_STATE_SUSPENDED" "GRANT_STATE_AUTHORIZED" "GRANT_STATE_EXPIRED"], "description" "State of the grant.", "type" "string", "enumDescriptions" ["" "The grant has been granted but the device is not heartbeating on it." "The grant has been terminated by the SAS." "The grant has been suspended by the SAS." "The device is currently transmitting." "The grant has expired."]}, "moveList" {"description" "The DPA move lists on which this grant appears.", "items" {"$ref" "SasPortalDpaMoveList"}, "type" "array"}, "channelType" {"description" "Type of channel used.", "type" "string", "enumDescriptions" ["" "" ""], "enum" ["CHANNEL_TYPE_UNSPECIFIED" "CHANNEL_TYPE_GAA" "CHANNEL_TYPE_PAL"]}, "frequencyRange" {"description" "The transmission frequency range.", "$ref" "SasPortalFrequencyRange"}, "suspensionReason" {"description" "If the grant is suspended, the reason(s) for suspension.", "items" {"type" "string"}, "type" "array"}}, "id" "SasPortalDeviceGrant"}, "SasPortalTestPermissionsResponse" {"type" "object", "properties" {"permissions" {"items" {"type" "string"}, "type" "array", "description" "A set of permissions that the caller is allowed."}}, "id" "SasPortalTestPermissionsResponse", "description" "Response message for `TestPermissions` method."}, "SasPortalDeviceModel" {"description" "Information about the model of the device.", "type" "object", "properties" {"firmwareVersion" {"description" "The firmware version of the device.", "type" "string"}, "softwareVersion" {"type" "string", "description" "The software version of the device."}, "name" {"description" "The name of the device model.", "type" "string"}, "vendor" {"description" "The name of the device vendor.", "type" "string"}, "hardwareVersion" {"type" "string", "description" "The hardware version of the device."}}, "id" "SasPortalDeviceModel"}, "SasPortalUpdateSignedDeviceRequest" {"id" "SasPortalUpdateSignedDeviceRequest", "description" "Request for UpdateSignedDevice method.", "type" "object", "properties" {"installerId" {"description" "Required. Unique installer ID (CPI ID) from the Certified Professional\nInstallers database.", "type" "string"}, "encodedDevice" {"format" "byte", "description" "Required. The JSON Web Token signed using a CPI private key. Payload\nmust be the JSON encoding\nof the device. The user_id field must be set.", "type" "string"}}}, "SasPortalOperation" {"description" "This resource represents a long-running operation that is the result of a\nnetwork API call.", "type" "object", "properties" {"done" {"description" "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.", "type" "boolean"}, "response" {"additionalProperties" {"description" "Properties of the object. Contains field @type with type URL.", "type" "any"}, "description" "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.", "type" "object"}, "name" {"description" "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`.", "type" "string"}, "error" {"$ref" "SasPortalStatus", "description" "The error result of the operation in case of failure or cancellation."}, "metadata" {"description" "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.", "type" "object", "additionalProperties" {"description" "Properties of the object. Contains field @type with type URL.", "type" "any"}}}, "id" "SasPortalOperation"}, "SasPortalTestPermissionsRequest" {"description" "Request message for `TestPermissions` method.", "type" "object", "properties" {"resource" {"type" "string", "description" "Required. The resource for which the permissions are being requested."}, "permissions" {"items" {"type" "string"}, "type" "array", "description" "The set of permissions to check for the `resource`."}}, "id" "SasPortalTestPermissionsRequest"}, "SasPortalListDevicesResponse" {"id" "SasPortalListDevicesResponse", "description" "Response for ListDevices method.", "type" "object", "properties" {"devices" {"items" {"$ref" "SasPortalDevice"}, "type" "array", "description" "The devices that match the request."}, "nextPageToken" {"description" "A pagination token returned from a previous call to ListDevices method\nthat indicates from where listing should continue. If the field\nis missing or empty, it means there is no more devices.", "type" "string"}}}, "SasPortalDevice" {"type" "object", "properties" {"fccId" {"description" "The FCC identifier of the device.", "type" "string"}, "grants" {"items" {"$ref" "SasPortalDeviceGrant"}, "type" "array", "description" "Output only. Grants held by the device."}, "serialNumber" {"description" "A serial number assigned to the device by the device\nmanufacturer.", "type" "string"}, "displayName" {"description" "Device display name.", "type" "string"}, "preloadedConfig" {"$ref" "SasPortalDeviceConfig", "description" "Configuration of the device, as specified via SAS Portal API."}, "state" {"enum" ["DEVICE_STATE_UNSPECIFIED" "RESERVED" "REGISTERED" "DEREGISTERED"], "description" "Output only. Device state.", "type" "string", "enumDescriptions" ["Unspecified state." "Device created in the SAS Portal, however, not yet registered\nwith SAS." "Device registered with SAS." "Device de-registered with SAS."]}, "name" {"type" "string", "description" "Output only. The resource path name."}, "activeConfig" {"description" "Output only. Current configuration of the device as registered to the SAS.", "$ref" "SasPortalDeviceConfig"}}, "id" "SasPortalDevice"}, "SasPortalBulkCreateDeviceResponse" {"description" "Response for BulkCreateDevice method.", "type" "object", "properties" {"devices" {"items" {"$ref" "SasPortalDevice"}, "type" "array", "description" "Required. The devices that were imported."}}, "id" "SasPortalBulkCreateDeviceResponse"}, "SasPortalGenerateSecretResponse" {"description" "Response for GenerateSecret method.", "type" "object", "properties" {"secret" {"description" "The secret generated by the string and used by\n[ValidateInstaller] method.", "type" "string"}}, "id" "SasPortalGenerateSecretResponse"}, "SasPortalFrequencyRange" {"id" "SasPortalFrequencyRange", "description" "Frequency range from `low_frequency` to `high_frequency`.", "type" "object", "properties" {"lowFrequencyMhz" {"format" "double", "description" "The lowest frequency of the frequency range in MHz.", "type" "number"}, "highFrequencyMhz" {"format" "double", "description" "The highest frequency of the frequency range in MHz.", "type" "number"}}}, "SasPortalPolicy" {"description" "Defines an access control policy to the resources.", "type" "object", "properties" {"assignments" {"items" {"$ref" "SasPortalAssignment"}, "type" "array"}, "etag" {"format" "byte", "description" "The [etag] is used for optimistic concurrency control as a way to\nhelp prevent simultaneous updates of a policy from overwriting\neach other.  It is strongly suggested that systems make use of\nthe [etag] in the read-modify-write cycle to perform policy\nupdates in order to avoid race conditions: An [etag] is returned\nin the response to [GetPolicy], and systems are expected to put\nthat etag in the request to [SetPolicy] to ensure that their\nchange will be applied to the same version of the policy.\n\nIf no [etag] is provided in the call to [SetPolicy], then the\nexisting policy is overwritten blindly.", "type" "string"}}, "id" "SasPortalPolicy"}, "SasPortalListCustomersResponse" {"id" "SasPortalListCustomersResponse", "description" "Response for `ListCustomers`.", "type" "object", "properties" {"nextPageToken" {"description" "A pagination token returned from a previous call to ListCustomers method that indicates from\nwhere listing should continue. If the field is missing or empty, it means\nthere are no more customers.", "type" "string"}, "customers" {"description" "The list of customers that\nmatch the request.", "items" {"$ref" "SasPortalCustomer"}, "type" "array"}}}, "SasPortalDpaMoveList" {"type" "object", "properties" {"frequencyRange" {"$ref" "SasPortalFrequencyRange", "description" "The frequency range that the move list affects."}, "dpaId" {"description" "The ID of the DPA.", "type" "string"}}, "id" "SasPortalDpaMoveList", "description" "An entry in a DPA's move list."}, "SasPortalGetPolicyRequest" {"type" "object", "properties" {"resource" {"type" "string", "description" "Required. The resource for which the policy is being requested."}}, "id" "SasPortalGetPolicyRequest", "description" "Request message for `GetPolicy` method."}, "SasPortalMoveNodeRequest" {"description" "Request for MoveNode method.", "type" "object", "properties" {"destination" {"description" "Required. The name of the new parent resource node or Customer) to reparent the node under.", "type" "string"}}, "id" "SasPortalMoveNodeRequest"}, "SasPortalSetPolicyRequest" {"id" "SasPortalSetPolicyRequest", "description" "Request message for `SetPolicy` method.", "type" "object", "properties" {"policy" {"$ref" "SasPortalPolicy", "description" "Required. The policy to be applied to the `resource`."}, "resource" {"type" "string", "description" "Required. The resource for which the policy is being specified. This policy\nreplaces any existing policy."}}}, "SasPortalDeviceAirInterface" {"description" "Information about the device's air interface.", "type" "object", "properties" {"supportedSpec" {"type" "string", "description" "This field is related to the radioTechnology field and provides the air\ninterface specification that the CBSD is compliant with at the time of\nregistration.\n\nOptional"}, "radioTechnology" {"enumDescriptions" ["" "" "" "" "" "" "" "" ""], "enum" ["RADIO_TECHNOLOGY_UNSPECIFIED" "E_UTRA" "CAMBIUM_NETWORKS" "FOUR_G_BBW_SAA_1" "NR" "DOODLE_CBRS" "CW" "REDLINE" "TARANA_WIRELESS"], "description" "This field specifies the radio access technology that is used for the CBSD.\n\nConditional", "type" "string"}}, "id" "SasPortalDeviceAirInterface"}, "SasPortalStatus" {"description" "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).", "type" "object", "properties" {"code" {"format" "int32", "description" "The status code, which should be an enum value of google.rpc.Code.", "type" "integer"}, "message" {"type" "string", "description" "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client."}, "details" {"description" "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.", "items" {"type" "object", "additionalProperties" {"type" "any", "description" "Properties of the object. Contains field @type with type URL."}}, "type" "array"}}, "id" "SasPortalStatus"}, "SasPortalListNodesResponse" {"id" "SasPortalListNodesResponse", "description" "Response for ListNodes method.", "type" "object", "properties" {"nextPageToken" {"description" "A pagination token returned from a previous call to\nListNodes method\nthat indicates from where listing should continue. If the field is missing\nor empty, it means there is no more nodes.", "type" "string"}, "nodes" {"description" "The nodes that match the request.", "items" {"$ref" "SasPortalNode"}, "type" "array"}}}, "SasPortalEmpty" {"id" "SasPortalEmpty", "description" "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.", "type" "object", "properties" {}}, "SasPortalGenerateSecretRequest" {"description" "Request for GenerateSecret method]\n[spectrum.sas.portal.v1alpha1.DeviceManager.GenerateSecret].", "type" "object", "properties" {}, "id" "SasPortalGenerateSecretRequest"}, "SasPortalBulkCreateDeviceRequest" {"description" "Request for BulkCreateDevice method.", "type" "object", "properties" {"csv" {"description" "Required. A csv with each row representing a [device]. Each row must\nconform to the regulations described on CreateDeviceRequest's device field.", "type" "string"}}, "id" "SasPortalBulkCreateDeviceRequest"}, "SasPortalMoveDeviceRequest" {"id" "SasPortalMoveDeviceRequest", "description" "Request for MoveDevice method.", "type" "object", "properties" {"destination" {"description" "Required. The name of the new parent resource (Node or Customer) to\nreparent the device under.", "type" "string"}}}}}