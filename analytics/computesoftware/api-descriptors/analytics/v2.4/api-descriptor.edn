#:compute.api-descriptor{:endpoint {:schemes ["https"], :host "www.googleapis.com", :base-path "/analytics/v2.4"}, :op->spec {"analytics.data.get" {:description "Returns Analytics report data for a view (profile).", :responses {"200" {:description "Successful response"}}, :parameters [{:description "A comma-separated list of Analytics dimensions. E.g., 'ga:browser,ga:city'.", :in "query", :name "dimensions", :type "string"} {:description "End date for fetching report data. All requests should specify an end date formatted as YYYY-MM-DD.", :in "query", :name "end-date", :required true, :type "string"} {:description "A comma-separated list of dimension or metric filters to be applied to the report data.", :in "query", :name "filters", :type "string"} {:description "Unique table ID for retrieving report data. Table ID is of the form ga:XXXX, where XXXX is the Analytics view (profile) ID.", :in "query", :name "ids", :required true, :type "string"} {:description "The maximum number of entries to include in this feed.", :in "query", :name "max-results", :type "integer"} {:description "A comma-separated list of Analytics metrics. E.g., 'ga:sessions,ga:pageviews'. At least one metric must be specified to retrieve a valid Analytics report.", :in "query", :name "metrics", :required true, :type "string"} {:description "An Analytics advanced segment to be applied to the report data.", :in "query", :name "segment", :type "string"} {:description "A comma-separated list of dimensions or metrics that determine the sort order for the report data.", :in "query", :name "sort", :type "string"} {:description "Start date for fetching report data. All requests should specify a start date formatted as YYYY-MM-DD.", :in "query", :name "start-date", :required true, :type "string"} {:description "An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.", :in "query", :minimum 1, :name "start-index", :type "integer"}], :operationId "analytics.data.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/data", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/alt"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/userIp"}]}, "analytics.management.accounts.list" {:description "Lists all accounts to which the user has access.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "The maximum number of accounts to include in this response.", :in "query", :name "max-results", :type "integer"} {:description "An index of the first account to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.", :in "query", :minimum 1, :name "start-index", :type "integer"}], :operationId "analytics.management.accounts.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/management/accounts", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/alt"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/userIp"}]}, "analytics.management.webproperties.list" {:description "Lists web properties to which the user has access.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "Account ID to retrieve web properties for. Can either be a specific account ID or '~all', which refers to all the accounts that user has access to.", :in "path", :name "accountId", :required true, :type "string"} {:description "The maximum number of web properties to include in this response.", :in "query", :name "max-results", :type "integer"} {:description "An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.", :in "query", :minimum 1, :name "start-index", :type "integer"}], :operationId "analytics.management.webproperties.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/management/accounts/{accountId}/webproperties", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/alt"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/userIp"}]}, "analytics.management.profiles.list" {:description "Lists views (profiles) to which the user has access.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "Account ID for the views (profiles) to retrieve. Can either be a specific account ID or '~all', which refers to all the accounts to which the user has access.", :in "path", :name "accountId", :required true, :type "string"} {:description "The maximum number of views (profiles) to include in this response.", :in "query", :name "max-results", :type "integer"} {:description "An index of the first entity to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.", :in "query", :minimum 1, :name "start-index", :type "integer"} {:description "Web property ID for the views (profiles) to retrieve. Can either be a specific web property ID or '~all', which refers to all the web properties to which the user has access.", :in "path", :name "webPropertyId", :required true, :type "string"}], :operationId "analytics.management.profiles.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/alt"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/userIp"}]}, "analytics.management.goals.list" {:description "Lists goals to which the user has access.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "Account ID to retrieve goals for. Can either be a specific account ID or '~all', which refers to all the accounts that user has access to.", :in "path", :name "accountId", :required true, :type "string"} {:description "The maximum number of goals to include in this response.", :in "query", :name "max-results", :type "integer"} {:description "View (Profile) ID to retrieve goals for. Can either be a specific view (profile) ID or '~all', which refers to all the views (profiles) that user has access to.", :in "path", :name "profileId", :required true, :type "string"} {:description "An index of the first goal to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.", :in "query", :minimum 1, :name "start-index", :type "integer"} {:description "Web property ID to retrieve goals for. Can either be a specific web property ID or '~all', which refers to all the web properties that user has access to.", :in "path", :name "webPropertyId", :required true, :type "string"}], :operationId "analytics.management.goals.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/management/accounts/{accountId}/webproperties/{webPropertyId}/profiles/{profileId}/goals", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/alt"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/userIp"}]}, "analytics.management.segments.list" {:description "Lists advanced segments to which the user has access.", :responses {"200" {:description "Successful response"}}, :parameters [{:description "The maximum number of advanced segments to include in this response.", :in "query", :name "max-results", :type "integer"} {:description "An index of the first advanced segment to retrieve. Use this parameter as a pagination mechanism along with the max-results parameter.", :in "query", :minimum 1, :name "start-index", :type "integer"}], :operationId "analytics.management.segments.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/management/segments", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/alt"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/userIp"}]}}, :parameters {:alt {:default "atom", :description "Data format for the response.", :enum ["atom"], :in "query", :name "alt", :type "string"}, :fields {:description "Selector specifying which fields to include in a partial response.", :in "query", :name "fields", :type "string"}, :key {:description "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", :in "query", :name "key", :type "string"}, :oauth_token {:description "OAuth 2.0 token for the current user.", :in "query", :name "oauth_token", :type "string"}, :prettyPrint {:default false, :description "Returns response with indentations and line breaks.", :in "query", :name "prettyPrint", :type "boolean"}, :quotaUser {:description "An opaque string that represents a user for quota purposes. Must not exceed 40 characters.", :in "query", :name "quotaUser", :type "string"}, :userIp {:description "Deprecated. Please use quotaUser instead.", :in "query", :name "userIp", :type "string"}}, :definitions nil}