#:compute.gcp.descriptor{:name "books", :title "Books API", :api-version "v1", :revision "20210220", :endpoint #:compute.gcp.descriptor{:url "https://books.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"description" "JSONP", "location" "query", "type" "string"}, "uploadType" {"type" "string", "location" "query", "description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."}, "key" {"type" "string", "location" "query", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."}, "access_token" {"location" "query", "type" "string", "description" "OAuth access token."}, "oauth_token" {"description" "OAuth 2.0 token for the current user.", "location" "query", "type" "string"}, "prettyPrint" {"location" "query", "type" "boolean", "description" "Returns response with indentations and line breaks.", "default" "true"}, "alt" {"location" "query", "default" "json", "enum" ["json" "media" "proto"], "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "type" "string", "description" "Data format for response."}, "$.xgafv" {"description" "V1 error format.", "enumDescriptions" ["v1 error format" "v2 error format"], "type" "string", "location" "query", "enum" ["1" "2"]}, "fields" {"description" "Selector specifying which fields to include in a partial response.", "location" "query", "type" "string"}, "upload_protocol" {"location" "query", "description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "type" "string"}, "quotaUser" {"location" "query", "type" "string", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."}}, :op->info {"books.mylibrary.bookshelves.list" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/mylibrary/bookshelves", :response {"$ref" "Bookshelves"}, :parameters {"source" {"type" "string", "description" "String to identify the originator of this request.", "location" "query"}}, :description "Retrieves a list of bookshelves belonging to the authenticated user."}, "books.mylibrary.readingpositions.setPosition" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/mylibrary/readingpositions/{volumeId}/setPosition", :response {"$ref" "Empty"}, :parameters {"deviceCookie" {"description" "Random persistent device cookie optional on set position.", "type" "string", "location" "query"}, "contentVersion" {"description" "Volume content version for which this reading position applies.", "type" "string", "location" "query"}, "action" {"location" "query", "enumDescriptions" ["" "User chose bookmark within volume." "User selected chapter from list." "Next page event." "Previous page event." "User navigated to page." "User chose search results within volume."], "description" "Action that caused this reading position to be set.", "type" "string", "enum" ["ACTION_UNDEFINED" "bookmark" "chapter" "next-page" "prev-page" "scroll" "search"]}, "volumeId" {"required" true, "type" "string", "location" "path", "description" "ID of volume for which to update the reading position."}, "source" {"type" "string", "location" "query", "description" "String to identify the originator of this request."}, "timestamp" {"type" "string", "required" true, "description" "RFC 3339 UTC format timestamp associated with this reading position.", "location" "query"}, "position" {"location" "query", "description" "Position string for the new volume reading position.", "required" true, "type" "string"}}, :description "Sets my reading position information for a volume."}, "books.promooffer.dismiss" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/promooffer/dismiss", :response {"$ref" "Empty"}, :parameters {"product" {"type" "string", "location" "query", "description" "device product"}, "model" {"type" "string", "description" "device model", "location" "query"}, "serial" {"description" "device serial", "type" "string", "location" "query"}, "manufacturer" {"type" "string", "description" "device manufacturer", "location" "query"}, "offerId" {"location" "query", "type" "string", "description" "Offer to dimiss"}, "androidId" {"type" "string", "location" "query", "description" "device android_id"}, "device" {"description" "device device", "type" "string", "location" "query"}}, :description "Marks the promo offer as dismissed."}, "books.myconfig.getUserSettings" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/myconfig/getUserSettings", :response {"$ref" "Usersettings"}, :parameters {"country" {"location" "query", "description" "Unused. Added only to workaround TEX mandatory request template requirement", "type" "string"}}, :description "Gets the current settings for the user."}, "books.layers.list" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/volumes/{volumeId}/layersummary", :response {"$ref" "Layersummaries"}, :parameters {"volumeId" {"type" "string", "description" "The volume to retrieve layers for.", "required" true, "location" "path"}, "contentVersion" {"description" "The content version for the requested volume.", "type" "string", "location" "query"}, "maxResults" {"minimum" "0", "type" "integer", "format" "uint32", "description" "Maximum number of results to return", "location" "query", "maximum" "200"}, "pageToken" {"description" "The value of the nextToken from the previous page.", "type" "string", "location" "query"}, "source" {"type" "string", "description" "String to identify the originator of this request.", "location" "query"}}, :description "List the layer summaries for a volume."}, "books.personalizedstream.get" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/personalizedstream/get", :response {"$ref" "Discoveryclusters"}, :parameters {"source" {"type" "string", "location" "query", "description" "String to identify the originator of this request."}, "maxAllowedMaturityRating" {"type" "string", "location" "query", "enum" ["MAX_ALLOWED_MATURITY_RATING_UNDEFINED" "MATURE" "not-mature"], "description" "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.", "enumDescriptions" ["" "Show books which are rated mature or lower." "Show books which are rated not mature."]}, "locale" {"location" "query", "description" "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.", "type" "string"}}, :description "Returns a stream of personalized book clusters"}, "books.bookshelves.list" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/users/{userId}/bookshelves", :response {"$ref" "Bookshelves"}, :parameters {"source" {"description" "String to identify the originator of this request.", "location" "query", "type" "string"}, "userId" {"description" "ID of user for whom to retrieve bookshelves.", "type" "string", "required" true, "location" "path"}}, :description "Retrieves a list of public bookshelves for the specified user."}, "books.dictionary.listOfflineMetadata" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/dictionary/listOfflineMetadata", :response {"$ref" "Metadata"}, :parameters {"cpksver" {"location" "query", "required" true, "type" "string", "description" "The device/version ID from which to request the data."}}, :description "Returns a list of offline dictionary metadata available"}, "books.promooffer.accept" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/promooffer/accept", :response {"$ref" "Empty"}, :parameters {"device" {"description" "device device", "location" "query", "type" "string"}, "offerId" {"location" "query", "type" "string"}, "model" {"type" "string", "description" "device model", "location" "query"}, "manufacturer" {"description" "device manufacturer", "type" "string", "location" "query"}, "androidId" {"description" "device android_id", "type" "string", "location" "query"}, "volumeId" {"type" "string", "description" "Volume id to exercise the offer", "location" "query"}, "serial" {"description" "device serial", "location" "query", "type" "string"}, "product" {"type" "string", "location" "query", "description" "device product"}}, :description "Accepts the promo offer."}, "books.mylibrary.bookshelves.addVolume" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/mylibrary/bookshelves/{shelf}/addVolume", :response {"$ref" "Empty"}, :parameters {"volumeId" {"description" "ID of volume to add.", "type" "string", "location" "query", "required" true}, "shelf" {"location" "path", "description" "ID of bookshelf to which to add a volume.", "type" "string", "required" true}, "reason" {"description" "The reason for which the book is added to the library.", "enum" ["REASON_UNDEFINED" "IOS_PREX" "IOS_SEARCH" "ONBOARDING"], "location" "query", "type" "string", "enumDescriptions" ["" "Volumes added from the PREX flow on iOS." "Volumes added from the Search flow on iOS." "Volumes added from the Onboarding flow."]}, "source" {"description" "String to identify the originator of this request.", "location" "query", "type" "string"}}, :description "Adds a volume to a bookshelf."}, "books.myconfig.requestAccess" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/myconfig/requestAccess", :response {"$ref" "RequestAccessData"}, :parameters {"nonce" {"location" "query", "required" true, "description" "The client nonce value.", "type" "string"}, "source" {"type" "string", "required" true, "location" "query", "description" "String to identify the originator of this request."}, "licenseTypes" {"enum" ["LICENSE_TYPES_UNDEFINED" "BOTH" "CONCURRENT" "DOWNLOAD"], "description" "The type of access license to request. If not specified, the default is BOTH.", "enumDescriptions" ["" "Both concurrent and download licenses." "Concurrent access license." "Offline download access license."], "type" "string", "location" "query"}, "cpksver" {"type" "string", "description" "The device/version ID from which to request the restrictions.", "location" "query", "required" true}, "locale" {"location" "query", "description" "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.", "type" "string"}, "volumeId" {"required" true, "location" "query", "type" "string", "description" "The volume to request concurrent/download restrictions for."}}, :description "Request concurrent and download access restrictions."}, "books.volumes.useruploaded.list" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/volumes/useruploaded", :response {"$ref" "Volumes"}, :parameters {"locale" {"location" "query", "type" "string", "description" "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations."}, "source" {"location" "query", "type" "string", "description" "String to identify the originator of this request."}, "maxResults" {"type" "integer", "format" "uint32", "maximum" "40", "description" "Maximum number of results to return.", "minimum" "0", "location" "query"}, "startIndex" {"type" "integer", "format" "uint32", "minimum" "0", "location" "query", "description" "Index of the first result to return (starts at 0)"}, "volumeId" {"repeated" true, "location" "query", "description" "The ids of the volumes to be returned. If not specified all that match the processingState are returned.", "type" "string"}, "processingState" {"enumDescriptions" ["" "The volume processing hase failed." "The volume processing was completed." "The volume processing is not completed."], "type" "string", "repeated" true, "location" "query", "enum" ["PROCESSING_STATE_UNDEFINED" "COMPLETED_FAILED" "COMPLETED_SUCCESS" "RUNNING"], "description" "The processing state of the user uploaded volumes to be returned."}}, :description "Return a list of books uploaded by the current user."}, "books.notification.get" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/notification/get", :response {"$ref" "Notification"}, :parameters {"locale" {"description" "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating notification title and body.", "type" "string", "location" "query"}, "source" {"type" "string", "location" "query", "description" "String to identify the originator of this request."}, "notification_id" {"description" "String to identify the notification.", "type" "string", "location" "query", "required" true}}, :description "Returns notification details for a given notification id."}, "books.onboarding.listCategoryVolumes" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/onboarding/listCategoryVolumes", :response {"$ref" "Volume2"}, :parameters {"categoryId" {"repeated" true, "location" "query", "type" "string", "description" "List of category ids requested."}, "maxAllowedMaturityRating" {"location" "query", "type" "string", "enum" ["MAX_ALLOWED_MATURITY_RATING_UNDEFINED" "MATURE" "not-mature"], "enumDescriptions" ["" "Show books which are rated mature or lower." "Show books which are rated not mature."], "description" "The maximum allowed maturity rating of returned volumes. Books with a higher maturity rating are filtered out."}, "pageSize" {"location" "query", "type" "integer", "description" "Number of maximum results per page to be included in the response.", "format" "uint32"}, "pageToken" {"location" "query", "description" "The value of the nextToken from the previous page.", "type" "string"}, "locale" {"type" "string", "location" "query", "description" "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset."}}, :description "List available volumes under categories for onboarding experience."}, "books.layers.annotationData.list" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/volumes/{volumeId}/layers/{layerId}/data", :response {"$ref" "Annotationsdata"}, :parameters {"pageToken" {"description" "The value of the nextToken from the previous page.", "location" "query", "type" "string"}, "w" {"location" "query", "type" "integer", "format" "int32", "description" "The requested pixel width for any images. If width is provided height must also be provided."}, "contentVersion" {"description" "The content version for the requested volume.", "location" "query", "type" "string", "required" true}, "scale" {"minimum" "0", "format" "int32", "description" "The requested scale for the image.", "type" "integer", "location" "query"}, "updatedMax" {"location" "query", "type" "string", "description" "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive)."}, "updatedMin" {"type" "string", "location" "query", "description" "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive)."}, "maxResults" {"format" "uint32", "minimum" "0", "location" "query", "description" "Maximum number of results to return", "maximum" "200", "type" "integer"}, "locale" {"description" "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.", "type" "string", "location" "query"}, "layerId" {"location" "path", "description" "The ID for the layer to get the annotation data.", "type" "string", "required" true}, "volumeId" {"type" "string", "location" "path", "required" true, "description" "The volume to retrieve annotation data for."}, "source" {"description" "String to identify the originator of this request.", "type" "string", "location" "query"}, "h" {"format" "int32", "location" "query", "type" "integer", "description" "The requested pixel height for any images. If height is provided width must also be provided."}, "annotationDataId" {"description" "The list of Annotation Data Ids to retrieve. Pagination is ignored if this is set.", "type" "string", "repeated" true, "location" "query"}}, :description "Gets the annotation data for a volume and layer."}, "books.layers.volumeAnnotations.get" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}", :response {"$ref" "Volumeannotation"}, :parameters {"layerId" {"required" true, "description" "The ID for the layer to get the annotations.", "location" "path", "type" "string"}, "source" {"location" "query", "type" "string", "description" "String to identify the originator of this request."}, "volumeId" {"type" "string", "location" "path", "description" "The volume to retrieve annotations for.", "required" true}, "annotationId" {"location" "path", "description" "The ID of the volume annotation to retrieve.", "type" "string", "required" true}, "locale" {"description" "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.", "location" "query", "type" "string"}}, :description "Gets the volume annotation."}, "books.mylibrary.annotations.update" #:compute.gcp.descriptor{:http-method :put, :path "books/v1/mylibrary/annotations/{annotationId}", :request {"$ref" "Annotation"}, :response {"$ref" "Annotation"}, :parameters {"annotationId" {"required" true, "description" "The ID for the annotation to update.", "type" "string", "location" "path"}, "source" {"description" "String to identify the originator of this request.", "type" "string", "location" "query"}}, :description "Updates an existing annotation."}, "books.bookshelves.get" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/users/{userId}/bookshelves/{shelf}", :response {"$ref" "Bookshelf"}, :parameters {"source" {"type" "string", "location" "query", "description" "String to identify the originator of this request."}, "userId" {"location" "path", "type" "string", "description" "ID of user for whom to retrieve bookshelves.", "required" true}, "shelf" {"required" true, "description" "ID of bookshelf to retrieve.", "location" "path", "type" "string"}}, :description "Retrieves metadata for a specific bookshelf for the specified user."}, "books.volumes.get" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/volumes/{volumeId}", :response {"$ref" "Volume"}, :parameters {"projection" {"description" "Restrict information returned to a set of selected fields.", "enum" ["PROJECTION_UNDEFINED" "FULL" "LITE"], "type" "string", "enumDescriptions" ["" "Includes all volume data." "Includes a subset of fields in volumeInfo and accessInfo."], "location" "query"}, "partner" {"description" "Brand results for partner ID.", "type" "string", "location" "query"}, "user_library_consistent_read" {"location" "query", "type" "boolean"}, "source" {"type" "string", "location" "query", "description" "string to identify the originator of this request."}, "volumeId" {"location" "path", "required" true, "description" "ID of volume to retrieve.", "type" "string"}, "includeNonComicsSeries" {"location" "query", "type" "boolean", "description" "Set to true to include non-comics series. Defaults to false."}, "country" {"type" "string", "location" "query", "description" "ISO-3166-1 code to override the IP-based location."}}, :description "Gets volume information for a single volume."}, "books.volumes.list" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/volumes", :response {"$ref" "Volumes"}, :parameters {"startIndex" {"minimum" "0", "format" "uint32", "type" "integer", "description" "Index of the first result to return (starts at 0)", "location" "query"}, "libraryRestrict" {"enumDescriptions" ["" "Restrict to the user's library, any shelf." "Do not restrict based on user's library."], "location" "query", "description" "Restrict search to this user's library.", "type" "string", "enum" ["LIBRARY_RESTRICT_UNDEFINED" "my-library" "no-restrict"]}, "q" {"location" "query", "type" "string", "required" true, "description" "Full-text search query string."}, "maxAllowedMaturityRating" {"enum" ["MAX_ALLOWED_MATURITY_RATING_UNDEFINED" "MATURE" "not-mature"], "type" "string", "location" "query", "enumDescriptions" ["" "Show books which are rated mature or lower." "Show books which are rated not mature."], "description" "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out."}, "download" {"location" "query", "description" "Restrict to volumes by download availability.", "enumDescriptions" ["" "All volumes with epub."], "type" "string", "enum" ["DOWNLOAD_UNDEFINED" "EPUB"]}, "maxResults" {"location" "query", "description" "Maximum number of results to return.", "type" "integer", "maximum" "40", "minimum" "0", "format" "uint32"}, "orderBy" {"enum" ["ORDER_BY_UNDEFINED" "newest" "relevance"], "description" "Sort search results.", "type" "string", "enumDescriptions" ["" "Most recently published." "Relevance to search terms."], "location" "query"}, "printType" {"location" "query", "description" "Restrict to books or magazines.", "enum" ["PRINT_TYPE_UNDEFINED" "ALL" "BOOKS" "MAGAZINES"], "type" "string", "enumDescriptions" ["" "All volume content types." "Just books." "Just magazines."]}, "langRestrict" {"location" "query", "description" "Restrict results to books with this language code.", "type" "string"}, "filter" {"enum" ["FILTER_UNDEFINED" "ebooks" "free-ebooks" "full" "paid-ebooks" "partial"], "location" "query", "type" "string", "description" "Filter search results.", "enumDescriptions" ["" "All Google eBooks." "Google eBook with full volume text viewability." "Public can view entire volume text." "Google eBook with a price." "Public able to see parts of text."]}, "source" {"description" "String to identify the originator of this request.", "type" "string", "location" "query"}, "projection" {"description" "Restrict information returned to a set of selected fields.", "type" "string", "location" "query", "enum" ["PROJECTION_UNDEFINED" "FULL" "LITE"], "enumDescriptions" ["" "Includes all volume data." "Includes a subset of fields in volumeInfo and accessInfo."]}, "partner" {"location" "query", "type" "string", "description" "Restrict and brand results for partner ID."}, "showPreorders" {"type" "boolean", "location" "query", "description" "Set to true to show books available for preorder. Defaults to false."}}, :description "Performs a book search."}, "books.volumes.recommended.list" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/volumes/recommended", :response {"$ref" "Volumes"}, :parameters {"locale" {"description" "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.", "location" "query", "type" "string"}, "maxAllowedMaturityRating" {"description" "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.", "location" "query", "enum" ["MAX_ALLOWED_MATURITY_RATING_UNDEFINED" "MATURE" "not-mature"], "type" "string", "enumDescriptions" ["" "Show books which are rated mature or lower." "Show books which are rated not mature."]}, "source" {"description" "String to identify the originator of this request.", "location" "query", "type" "string"}}, :description "Return a list of recommended books for the current user."}, "books.mylibrary.bookshelves.volumes.list" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/mylibrary/bookshelves/{shelf}/volumes", :response {"$ref" "Volumes"}, :parameters {"projection" {"type" "string", "enumDescriptions" ["" "Includes all volume data." "Includes a subset of fields in volumeInfo and accessInfo."], "location" "query", "description" "Restrict information returned to a set of selected fields.", "enum" ["PROJECTION_UNDEFINED" "FULL" "LITE"]}, "shelf" {"type" "string", "required" true, "description" "The bookshelf ID or name retrieve volumes for.", "location" "path"}, "startIndex" {"format" "uint32", "minimum" "0", "type" "integer", "description" "Index of the first element to return (starts at 0)", "location" "query"}, "showPreorders" {"location" "query", "type" "boolean", "description" "Set to true to show pre-ordered books. Defaults to false."}, "maxResults" {"format" "uint32", "minimum" "0", "location" "query", "type" "integer", "description" "Maximum number of results to return"}, "q" {"type" "string", "description" "Full-text search query string in this bookshelf.", "location" "query"}, "source" {"location" "query", "type" "string", "description" "String to identify the originator of this request."}, "country" {"type" "string", "location" "query", "description" "ISO-3166-1 code to override the IP-based location."}}, :description "Gets volume information for volumes on a bookshelf."}, "books.mylibrary.annotations.insert" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/mylibrary/annotations", :request {"$ref" "Annotation"}, :response {"$ref" "Annotation"}, :parameters {"showOnlySummaryInResponse" {"type" "boolean", "location" "query", "description" "Requests that only the summary of the specified layer be provided in the response."}, "annotationId" {"type" "string", "location" "query", "description" "The ID for the annotation to insert."}, "source" {"description" "String to identify the originator of this request.", "location" "query", "type" "string"}, "country" {"description" "ISO-3166-1 code to override the IP-based location.", "location" "query", "type" "string"}}, :description "Inserts a new annotation."}, "books.mylibrary.bookshelves.removeVolume" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/mylibrary/bookshelves/{shelf}/removeVolume", :response {"$ref" "Empty"}, :parameters {"reason" {"description" "The reason for which the book is removed from the library.", "enumDescriptions" ["" "Samples removed from the Onboarding flow."], "enum" ["REASON_UNDEFINED" "ONBOARDING"], "type" "string", "location" "query"}, "shelf" {"description" "ID of bookshelf from which to remove a volume.", "required" true, "type" "string", "location" "path"}, "source" {"description" "String to identify the originator of this request.", "type" "string", "location" "query"}, "volumeId" {"location" "query", "description" "ID of volume to remove.", "required" true, "type" "string"}}, :description "Removes a volume from a bookshelf."}, "books.myconfig.syncVolumeLicenses" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/myconfig/syncVolumeLicenses", :response {"$ref" "Volumes"}, :parameters {"features" {"type" "string", "enumDescriptions" ["" "Client supports rentals."], "description" "List of features supported by the client, i.e., 'RENTALS'", "enum" ["FEATURES_UNDEFINED" "RENTALS"], "repeated" true, "location" "query"}, "showPreorders" {"type" "boolean", "description" "Set to true to show pre-ordered books. Defaults to false.", "location" "query"}, "locale" {"description" "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.", "type" "string", "location" "query"}, "nonce" {"description" "The client nonce value.", "type" "string", "required" true, "location" "query"}, "source" {"description" "String to identify the originator of this request.", "type" "string", "required" true, "location" "query"}, "includeNonComicsSeries" {"type" "boolean", "location" "query", "description" "Set to true to include non-comics series. Defaults to false."}, "cpksver" {"description" "The device/version ID from which to release the restriction.", "required" true, "location" "query", "type" "string"}, "volumeIds" {"repeated" true, "description" "The volume(s) to request download restrictions for.", "type" "string", "location" "query"}}, :description "Request downloaded content access for specified volumes on the My eBooks shelf."}, "books.myconfig.updateUserSettings" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/myconfig/updateUserSettings", :request {"$ref" "Usersettings"}, :response {"$ref" "Usersettings"}, :parameters {}, :description "Sets the settings for the user. If a sub-object is specified, it will overwrite the existing sub-object stored in the server. Unspecified sub-objects will retain the existing value."}, "books.mylibrary.annotations.delete" #:compute.gcp.descriptor{:http-method :delete, :path "books/v1/mylibrary/annotations/{annotationId}", :response {"$ref" "Empty"}, :parameters {"source" {"location" "query", "type" "string", "description" "String to identify the originator of this request."}, "annotationId" {"required" true, "type" "string", "location" "path", "description" "The ID for the annotation to delete."}}, :description "Deletes an annotation."}, "books.familysharing.unshare" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/familysharing/unshare", :response {"$ref" "Empty"}, :parameters {"docId" {"description" "The docid to unshare.", "type" "string", "location" "query"}, "volumeId" {"location" "query", "type" "string", "description" "The volume to unshare."}, "source" {"location" "query", "description" "String to identify the originator of this request.", "type" "string"}}, :description "Initiates revoking content that has already been shared with the user's family. Empty response indicates success."}, "books.familysharing.getFamilyInfo" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/familysharing/getFamilyInfo", :response {"$ref" "FamilyInfo"}, :parameters {"source" {"location" "query", "description" "String to identify the originator of this request.", "type" "string"}}, :description "Gets information regarding the family that the user is part of."}, "books.volumes.mybooks.list" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/volumes/mybooks", :response {"$ref" "Volumes"}, :parameters {"country" {"description" "ISO-3166-1 code to override the IP-based location.", "location" "query", "type" "string"}, "startIndex" {"location" "query", "type" "integer", "format" "uint32", "description" "Index of the first result to return (starts at 0)", "minimum" "0"}, "maxResults" {"maximum" "100", "description" "Maximum number of results to return.", "type" "integer", "format" "uint32", "location" "query", "minimum" "0"}, "locale" {"description" "ISO-639-1 language and ISO-3166-1 country code. Ex:'en_US'. Used for generating recommendations.", "location" "query", "type" "string"}, "processingState" {"enum" ["PROCESSING_STATE_UNDEFINED" "COMPLETED_FAILED" "COMPLETED_SUCCESS" "RUNNING"], "location" "query", "repeated" true, "type" "string", "enumDescriptions" ["" "The volume processing hase failed." "The volume processing was completed." "The volume processing is not completed."], "description" "The processing state of the user uploaded volumes to be returned. Applicable only if the UPLOADED is specified in the acquireMethod."}, "acquireMethod" {"repeated" true, "description" "How the book was acquired", "enum" ["ACQUIRE_METHOD_UNDEFINED" "FAMILY_SHARED" "PREORDERED" "PREVIOUSLY_RENTED" "PUBLIC_DOMAIN" "PURCHASED" "RENTED" "SAMPLE" "UPLOADED"], "type" "string", "location" "query", "enumDescriptions" ["" "Books acquired via Family Sharing" "Preordered books (not yet available)" "User-rented books past their expiration time" "Public domain books" "Purchased books" "User-rented books" "Sample books" "User uploaded books"]}, "source" {"description" "String to identify the originator of this request.", "location" "query", "type" "string"}}, :description "Return a list of books in My Library."}, "books.series.get" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/series/get", :response {"$ref" "Series"}, :parameters {"series_id" {"location" "query", "description" "String that identifies the series", "type" "string", "required" true, "repeated" true}}, :description "Returns Series metadata for the given series ids."}, "books.myconfig.releaseDownloadAccess" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/myconfig/releaseDownloadAccess", :response {"$ref" "DownloadAccesses"}, :parameters {"volumeIds" {"required" true, "location" "query", "repeated" true, "type" "string", "description" "The volume(s) to release restrictions for."}, "cpksver" {"location" "query", "required" true, "type" "string", "description" "The device/version ID from which to release the restriction."}, "locale" {"location" "query", "description" "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.", "type" "string"}, "source" {"location" "query", "description" "String to identify the originator of this request.", "type" "string"}}, :description "Release downloaded content access restriction."}, "books.volumes.associated.list" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/volumes/{volumeId}/associated", :response {"$ref" "Volumes"}, :parameters {"volumeId" {"description" "ID of the source volume.", "location" "path", "type" "string", "required" true}, "association" {"enum" ["ASSOCIATION_UNDEFINED" "end-of-sample" "end-of-volume" "related-for-play"], "enumDescriptions" ["" "Recommendations for display end-of-sample." "Recommendations for display end-of-volume." "Related volumes for Play Store."], "description" "Association type.", "location" "query", "type" "string"}, "maxAllowedMaturityRating" {"enum" ["MAX_ALLOWED_MATURITY_RATING_UNDEFINED" "MATURE" "not-mature"], "type" "string", "location" "query", "description" "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.", "enumDescriptions" ["" "Show books which are rated mature or lower." "Show books which are rated not mature."]}, "locale" {"location" "query", "description" "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.", "type" "string"}, "source" {"location" "query", "description" "String to identify the originator of this request.", "type" "string"}}, :description "Return a list of associated books."}, "books.bookshelves.volumes.list" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/users/{userId}/bookshelves/{shelf}/volumes", :response {"$ref" "Volumes"}, :parameters {"maxResults" {"minimum" "0", "format" "uint32", "location" "query", "type" "integer", "description" "Maximum number of results to return"}, "source" {"description" "String to identify the originator of this request.", "type" "string", "location" "query"}, "shelf" {"location" "path", "type" "string", "required" true, "description" "ID of bookshelf to retrieve volumes."}, "userId" {"location" "path", "description" "ID of user for whom to retrieve bookshelf volumes.", "type" "string", "required" true}, "showPreorders" {"description" "Set to true to show pre-ordered books. Defaults to false.", "location" "query", "type" "boolean"}, "startIndex" {"description" "Index of the first element to return (starts at 0)", "format" "uint32", "type" "integer", "minimum" "0", "location" "query"}}, :description "Retrieves volumes in a specific bookshelf for the specified user."}, "books.promooffer.get" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/promooffer/get", :response {"$ref" "Offers"}, :parameters {"serial" {"type" "string", "location" "query", "description" "device serial"}, "device" {"location" "query", "description" "device device", "type" "string"}, "product" {"description" "device product", "type" "string", "location" "query"}, "model" {"type" "string", "location" "query", "description" "device model"}, "androidId" {"location" "query", "description" "device android_id", "type" "string"}, "manufacturer" {"location" "query", "description" "device manufacturer", "type" "string"}}, :description "Returns a list of promo offers available to the user"}, "books.layers.get" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/volumes/{volumeId}/layersummary/{summaryId}", :response {"$ref" "Layersummary"}, :parameters {"summaryId" {"type" "string", "description" "The ID for the layer to get the summary for.", "location" "path", "required" true}, "volumeId" {"type" "string", "location" "path", "required" true, "description" "The volume to retrieve layers for."}, "source" {"location" "query", "type" "string", "description" "String to identify the originator of this request."}, "contentVersion" {"description" "The content version for the requested volume.", "type" "string", "location" "query"}}, :description "Gets the layer summary for a volume."}, "books.mylibrary.bookshelves.get" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/mylibrary/bookshelves/{shelf}", :response {"$ref" "Bookshelf"}, :parameters {"source" {"description" "String to identify the originator of this request.", "type" "string", "location" "query"}, "shelf" {"location" "path", "required" true, "type" "string", "description" "ID of bookshelf to retrieve."}}, :description "Retrieves metadata for a specific bookshelf belonging to the authenticated user."}, "books.mylibrary.annotations.list" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/mylibrary/annotations", :response {"$ref" "Annotations"}, :parameters {"pageToken" {"description" "The value of the nextToken from the previous page.", "location" "query", "type" "string"}, "contentVersion" {"description" "The content version for the requested volume.", "location" "query", "type" "string"}, "updatedMax" {"location" "query", "description" "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive).", "type" "string"}, "updatedMin" {"location" "query", "description" "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).", "type" "string"}, "maxResults" {"maximum" "40", "description" "Maximum number of results to return", "format" "uint32", "minimum" "0", "type" "integer", "location" "query"}, "layerId" {"description" "The layer ID to limit annotation by.", "type" "string", "location" "query"}, "showDeleted" {"type" "boolean", "description" "Set to true to return deleted annotations. updatedMin must be in the request to use this. Defaults to false.", "location" "query"}, "volumeId" {"location" "query", "description" "The volume to restrict annotations to.", "type" "string"}, "source" {"type" "string", "description" "String to identify the originator of this request.", "location" "query"}, "layerIds" {"description" "The layer ID(s) to limit annotation by.", "repeated" true, "location" "query", "type" "string"}}, :description "Retrieves a list of annotations, possibly filtered."}, "books.onboarding.listCategories" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/onboarding/listCategories", :response {"$ref" "Category"}, :parameters {"locale" {"description" "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset.", "location" "query", "type" "string"}}, :description "List categories for onboarding experience."}, "books.cloudloading.addBook" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/cloudloading/addBook", :response {"$ref" "BooksCloudloadingResource"}, :parameters {"upload_client_token" {"type" "string", "location" "query", "description" "Scotty upload token."}, "drive_document_id" {"type" "string", "location" "query", "description" "A drive document id. The upload_client_token must not be set."}, "mime_type" {"description" "The document MIME type. It can be set only if the drive_document_id is set.", "type" "string", "location" "query"}, "name" {"location" "query", "type" "string", "description" "The document name. It can be set only if the drive_document_id is set."}}, :description "Add a user-upload volume and triggers processing."}, "books.familysharing.share" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/familysharing/share", :response {"$ref" "Empty"}, :parameters {"docId" {"location" "query", "type" "string", "description" "The docid to share."}, "volumeId" {"location" "query", "type" "string", "description" "The volume to share."}, "source" {"type" "string", "location" "query", "description" "String to identify the originator of this request."}}, :description "Initiates sharing of the content with the user's family. Empty response indicates success."}, "books.cloudloading.deleteBook" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/cloudloading/deleteBook", :response {"$ref" "Empty"}, :parameters {"volumeId" {"description" "The id of the book to be removed.", "location" "query", "required" true, "type" "string"}}, :description "Remove the book and its contents"}, "books.mylibrary.readingpositions.get" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/mylibrary/readingpositions/{volumeId}", :response {"$ref" "ReadingPosition"}, :parameters {"volumeId" {"description" "ID of volume for which to retrieve a reading position.", "required" true, "type" "string", "location" "path"}, "source" {"type" "string", "description" "String to identify the originator of this request.", "location" "query"}, "contentVersion" {"description" "Volume content version for which this reading position is requested.", "location" "query", "type" "string"}}, :description "Retrieves my reading position information for a volume."}, "books.cloudloading.updateBook" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/cloudloading/updateBook", :request {"$ref" "BooksCloudloadingResource"}, :response {"$ref" "BooksCloudloadingResource"}, :parameters {}, :description "Updates a user-upload volume."}, "books.mylibrary.bookshelves.clearVolumes" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes", :response {"$ref" "Empty"}, :parameters {"shelf" {"required" true, "location" "path", "type" "string", "description" "ID of bookshelf from which to remove a volume."}, "source" {"type" "string", "description" "String to identify the originator of this request.", "location" "query"}}, :description "Clears all volumes from a bookshelf."}, "books.mylibrary.bookshelves.moveVolume" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/mylibrary/bookshelves/{shelf}/moveVolume", :response {"$ref" "Empty"}, :parameters {"source" {"type" "string", "location" "query", "description" "String to identify the originator of this request."}, "volumeId" {"type" "string", "location" "query", "required" true, "description" "ID of volume to move."}, "volumePosition" {"description" "Position on shelf to move the item (0 puts the item before the current first item, 1 puts it between the first and the second and so on.)", "type" "integer", "required" true, "location" "query", "format" "int32"}, "shelf" {"description" "ID of bookshelf with the volume.", "required" true, "type" "string", "location" "path"}}, :description "Moves a volume within a bookshelf."}, "books.layers.volumeAnnotations.list" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/volumes/{volumeId}/layers/{layerId}", :response {"$ref" "Volumeannotations"}, :parameters {"pageToken" {"description" "The value of the nextToken from the previous page.", "type" "string", "location" "query"}, "volumeAnnotationsVersion" {"description" "The version of the volume annotations that you are requesting.", "location" "query", "type" "string"}, "contentVersion" {"required" true, "location" "query", "type" "string", "description" "The content version for the requested volume."}, "endPosition" {"description" "The end position to end retrieving data from.", "type" "string", "location" "query"}, "startPosition" {"location" "query", "type" "string", "description" "The start position to start retrieving data from."}, "updatedMax" {"description" "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive).", "type" "string", "location" "query"}, "updatedMin" {"location" "query", "type" "string", "description" "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive)."}, "endOffset" {"type" "string", "location" "query", "description" "The end offset to end retrieving data from."}, "maxResults" {"type" "integer", "location" "query", "description" "Maximum number of results to return", "format" "uint32", "maximum" "200", "minimum" "0"}, "locale" {"description" "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.", "location" "query", "type" "string"}, "layerId" {"location" "path", "required" true, "type" "string", "description" "The ID for the layer to get the annotations."}, "startOffset" {"description" "The start offset to start retrieving data from.", "location" "query", "type" "string"}, "showDeleted" {"description" "Set to true to return deleted annotations. updatedMin must be in the request to use this. Defaults to false.", "type" "boolean", "location" "query"}, "volumeId" {"location" "path", "type" "string", "description" "The volume to retrieve annotations for.", "required" true}, "source" {"location" "query", "type" "string", "description" "String to identify the originator of this request."}}, :description "Gets the volume annotations for a volume and layer."}, "books.volumes.recommended.rate" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/volumes/recommended/rate", :response {"$ref" "BooksVolumesRecommendedRateResponse"}, :parameters {"rating" {"location" "query", "description" "Rating to be given to the volume.", "enum" ["RATING_UNDEFINED" "HAVE_IT" "NOT_INTERESTED"], "type" "string", "required" true, "enumDescriptions" ["" "Rating indicating a dismissal due to ownership." "Rating indicating a negative dismissal of a volume."]}, "source" {"location" "query", "type" "string", "description" "String to identify the originator of this request."}, "volumeId" {"description" "ID of the source volume.", "required" true, "location" "query", "type" "string"}, "locale" {"type" "string", "location" "query", "description" "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations."}}, :description "Rate a recommended book for the current user."}, "books.series.membership.get" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/series/membership/get", :response {"$ref" "Seriesmembership"}, :parameters {"series_id" {"type" "string", "description" "String that identifies the series", "location" "query", "required" true}, "page_size" {"type" "integer", "description" "Number of maximum results per page to be included in the response.", "location" "query", "format" "uint32"}, "page_token" {"location" "query", "type" "string", "description" "The value of the nextToken from the previous page."}}, :description "Returns Series membership data given the series id."}, "books.layers.annotationData.get" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}", :response {"$ref" "DictionaryAnnotationdata"}, :parameters {"w" {"type" "integer", "location" "query", "format" "int32", "description" "The requested pixel width for any images. If width is provided height must also be provided."}, "contentVersion" {"type" "string", "description" "The content version for the volume you are trying to retrieve.", "required" true, "location" "query"}, "scale" {"format" "int32", "type" "integer", "description" "The requested scale for the image.", "location" "query", "minimum" "0"}, "locale" {"location" "query", "type" "string", "description" "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'."}, "layerId" {"required" true, "description" "The ID for the layer to get the annotations.", "type" "string", "location" "path"}, "allowWebDefinitions" {"type" "boolean", "location" "query", "description" "For the dictionary layer. Whether or not to allow web definitions."}, "volumeId" {"type" "string", "location" "path", "required" true, "description" "The volume to retrieve annotations for."}, "source" {"type" "string", "location" "query", "description" "String to identify the originator of this request."}, "h" {"format" "int32", "type" "integer", "location" "query", "description" "The requested pixel height for any images. If height is provided width must also be provided."}, "annotationDataId" {"required" true, "description" "The ID of the annotation data to retrieve.", "location" "path", "type" "string"}}, :description "Gets the annotation data."}, "books.mylibrary.annotations.summary" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/mylibrary/annotations/summary", :response {"$ref" "AnnotationsSummary"}, :parameters {"layerIds" {"repeated" true, "type" "string", "description" "Array of layer IDs to get the summary for.", "required" true, "location" "query"}, "volumeId" {"description" "Volume id to get the summary for.", "required" true, "location" "query", "type" "string"}}, :description "Gets the summary of specified layers."}}, :schemas {"Annotation" {"properties" {"created" {"type" "string", "description" "Timestamp for the created time of this annotation."}, "currentVersionRanges" {"description" "Selection ranges for the most recent content version.", "properties" {"cfiRange" {"description" "Range in CFI format for this annotation for version above.", "$ref" "BooksAnnotationsRange"}, "contentVersion" {"type" "string", "description" "Content version applicable to ranges below."}, "gbImageRange" {"description" "Range in GB image format for this annotation for version above.", "$ref" "BooksAnnotationsRange"}, "imageCfiRange" {"$ref" "BooksAnnotationsRange", "description" "Range in image CFI format for this annotation for version above."}, "gbTextRange" {"description" "Range in GB text format for this annotation for version above.", "$ref" "BooksAnnotationsRange"}}, "type" "object"}, "id" {"description" "Id of this annotation, in the form of a GUID.", "type" "string"}, "layerId" {"description" "The layer this annotation is for.", "type" "string"}, "selfLink" {"description" "URL to this resource.", "type" "string"}, "highlightStyle" {"description" "The highlight style for this annotation.", "type" "string"}, "kind" {"type" "string", "description" "Resource type."}, "layerSummary" {"properties" {"allowedCharacterCount" {"format" "int32", "type" "integer", "description" "Maximum allowed characters on this layer, especially for the \"copy\" layer."}, "remainingCharacterCount" {"format" "int32", "description" "Remaining allowed characters on this layer, especially for the \"copy\" layer.", "type" "integer"}, "limitType" {"type" "string", "description" "Type of limitation on this layer. \"limited\" or \"unlimited\" for the \"copy\" layer."}}, "type" "object"}, "volumeId" {"description" "The volume that this annotation belongs to.", "type" "string"}, "deleted" {"description" "Indicates that this annotation is deleted.", "type" "boolean"}, "clientVersionRanges" {"description" "Selection ranges sent from the client.", "type" "object", "properties" {"imageCfiRange" {"$ref" "BooksAnnotationsRange", "description" "Range in image CFI format for this annotation sent by client."}, "gbImageRange" {"$ref" "BooksAnnotationsRange", "description" "Range in GB image format for this annotation sent by client."}, "gbTextRange" {"description" "Range in GB text format for this annotation sent by client.", "$ref" "BooksAnnotationsRange"}, "contentVersion" {"type" "string", "description" "Content version the client sent in."}, "cfiRange" {"description" "Range in CFI format for this annotation sent by client.", "$ref" "BooksAnnotationsRange"}}}, "updated" {"type" "string", "description" "Timestamp for the last time this annotation was modified."}, "afterSelectedText" {"type" "string", "description" "Anchor text after excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty."}, "selectedText" {"type" "string", "description" "Excerpt from the volume."}, "data" {"type" "string", "description" "User-created data for this annotation."}, "pageIds" {"items" {"type" "string"}, "type" "array", "description" "Pages that this annotation spans."}, "beforeSelectedText" {"description" "Anchor text before excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty.", "type" "string"}}, "id" "Annotation", "type" "object"}, "Empty" {"description" "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.", "id" "Empty", "properties" {}, "type" "object"}, "Layersummaries" {"properties" {"totalItems" {"type" "integer", "description" "The total number of layer summaries found.", "format" "int32"}, "items" {"description" "A list of layer summary items.", "type" "array", "items" {"$ref" "Layersummary"}}, "kind" {"description" "Resource type.", "type" "string"}}, "id" "Layersummaries", "type" "object"}, "Review" {"id" "Review", "properties" {"author" {"description" "Author of this review.", "properties" {"displayName" {"description" "Name of this person.", "type" "string"}}, "type" "object"}, "fullTextUrl" {"description" "URL for the full review text, for reviews gathered from the web.", "type" "string"}, "content" {"description" "Review text.", "type" "string"}, "kind" {"type" "string", "description" "Resource type for a review."}, "title" {"type" "string", "description" "Title for this review."}, "volumeId" {"type" "string", "description" "Volume that this review is for."}, "source" {"type" "object", "description" "Information regarding the source of this review, when the review is not from a Google Books user.", "properties" {"description" {"description" "Name of the source.", "type" "string"}, "extraDescription" {"description" "Extra text about the source of the review.", "type" "string"}, "url" {"type" "string", "description" "URL of the source of the review."}}}, "type" {"type" "string", "description" "Source type for this review. Possible values are EDITORIAL, WEB_USER or GOOGLE_USER."}, "date" {"description" "Date of this review.", "type" "string"}, "rating" {"type" "string", "description" "Star rating for this review. Possible values are ONE, TWO, THREE, FOUR, FIVE or NOT_RATED."}}, "type" "object"}, "Geolayerdata" {"properties" {"geo" {"type" "object", "properties" {"longitude" {"format" "double", "description" "The longitude of the location.", "type" "number"}, "viewport" {"properties" {"lo" {"properties" {"longitude" {"format" "double", "type" "number"}, "latitude" {"format" "double", "type" "number"}}, "type" "object"}, "hi" {"type" "object", "properties" {"longitude" {"type" "number", "format" "double"}, "latitude" {"type" "number", "format" "double"}}}}, "type" "object", "description" "The viewport for showing this location. This is a latitude, longitude rectangle."}, "zoom" {"type" "integer", "format" "int32", "description" "The Zoom level to use for the map. Zoom levels between 0 (the lowest zoom level, in which the entire world can be seen on one map) to 21+ (down to individual buildings). See: https: //developers.google.com/maps/documentation/staticmaps/#Zoomlevels"}, "cachePolicy" {"type" "string", "description" "The cache policy active for this data. EX: UNRESTRICTED, RESTRICTED, NEVER"}, "mapType" {"type" "string", "description" "The type of map that should be used for this location. EX: HYBRID, ROADMAP, SATELLITE, TERRAIN"}, "boundary" {"items" {"type" "string"}, "type" "array", "description" "The boundary of the location as a set of loops containing pairs of latitude, longitude coordinates."}, "latitude" {"type" "number", "description" "The latitude of the location.", "format" "double"}, "countryCode" {"type" "string", "description" "The country code of the location."}}}, "common" {"properties" {"snippetUrl" {"type" "string", "description" "The URL for information for this location. Ex: wikipedia link."}, "lang" {"description" "The language of the information url and description.", "type" "string"}, "title" {"description" "The display title and localized canonical name to use when searching for this entity on Google search.", "type" "string"}, "previewImageUrl" {"description" "The URL for the preview image information.", "type" "string"}, "snippet" {"description" "The description for this location.", "type" "string"}}, "type" "object"}, "kind" {"type" "string"}}, "id" "Geolayerdata", "type" "object"}, "Category" {"properties" {"kind" {"description" "Resource type.", "type" "string"}, "items" {"description" "A list of onboarding categories.", "type" "array", "items" {"type" "object", "properties" {"categoryId" {"type" "string"}, "name" {"type" "string"}, "badgeUrl" {"type" "string"}}}}}, "type" "object", "id" "Category"}, "Volume" {"properties" {"layerInfo" {"properties" {"layers" {"type" "array", "items" {"type" "object", "properties" {"layerId" {"description" "The layer id of this layer (e.g. \"geo\").", "type" "string"}, "volumeAnnotationsVersion" {"type" "string", "description" "The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately."}}}, "description" "A layer should appear here if and only if the layer exists for this book."}}, "description" "What layers exist in this volume and high level information about them.", "type" "object"}, "volumeInfo" {"properties" {"pageCount" {"description" "Total number of pages as per publisher metadata.", "type" "integer", "format" "int32"}, "canonicalVolumeLink" {"type" "string", "description" "Canonical URL for a volume. (In LITE projection.)"}, "publishedDate" {"description" "Date of publication. (In LITE projection.)", "type" "string"}, "mainCategory" {"description" "The main category to which this volume belongs. It will be the category from the categories list returned below that has the highest weight.", "type" "string"}, "infoLink" {"description" "URL to view information about this volume on the Google Books site. (In LITE projection)", "type" "string"}, "contentVersion" {"description" "An identifier for the version of the volume content (text & images). (In LITE projection)", "type" "string"}, "ratingsCount" {"description" "The number of review ratings for this volume.", "type" "integer", "format" "int32"}, "previewLink" {"type" "string", "description" "URL to preview this volume on the Google Books site."}, "samplePageCount" {"format" "int32", "type" "integer", "description" "Total number of sample pages as per publisher metadata."}, "seriesInfo" {"$ref" "Volumeseriesinfo"}, "authors" {"type" "array", "description" "The names of the authors and/or editors for this volume. (In LITE projection)", "items" {"type" "string"}}, "maturityRating" {"type" "string"}, "categories" {"description" "A list of subject categories, such as \"Fiction\", \"Suspense\", etc.", "items" {"type" "string"}, "type" "array"}, "averageRating" {"description" "The mean review rating for this volume. (min = 1.0, max = 5.0)", "type" "number", "format" "double"}, "imageLinks" {"properties" {"small" {"description" "Image link for small size (width of ~300 pixels). (In LITE projection)", "type" "string"}, "smallThumbnail" {"type" "string", "description" "Image link for small thumbnail size (width of ~80 pixels). (In LITE projection)"}, "large" {"description" "Image link for large size (width of ~800 pixels). (In LITE projection)", "type" "string"}, "thumbnail" {"type" "string", "description" "Image link for thumbnail size (width of ~128 pixels). (In LITE projection)"}, "medium" {"type" "string", "description" "Image link for medium size (width of ~575 pixels). (In LITE projection)"}, "extraLarge" {"type" "string", "description" "Image link for extra large size (width of ~1280 pixels). (In LITE projection)"}}, "type" "object", "description" "A list of image links for all the sizes that are available. (In LITE projection.)"}, "dimensions" {"type" "object", "description" "Physical dimensions of this volume.", "properties" {"thickness" {"type" "string", "description" "Thickness of this volume (in cm)."}, "width" {"description" "Width of this volume (in cm).", "type" "string"}, "height" {"description" "Height or length of this volume (in cm).", "type" "string"}}}, "comicsContent" {"type" "boolean", "description" "Whether the volume has comics content."}, "printedPageCount" {"format" "int32", "type" "integer", "description" "Total number of printed pages in generated pdf representation."}, "printType" {"type" "string", "description" "Type of publication of this volume. Possible values are BOOK or MAGAZINE."}, "industryIdentifiers" {"description" "Industry standard identifiers for this volume.", "items" {"properties" {"type" {"type" "string", "description" "Identifier type. Possible values are ISBN_10, ISBN_13, ISSN and OTHER."}, "identifier" {"description" "Industry specific volume identifier.", "type" "string"}}, "type" "object"}, "type" "array"}, "subtitle" {"type" "string", "description" "Volume subtitle. (In LITE projection.)"}, "allowAnonLogging" {"type" "boolean", "description" "Whether anonymous logging should be allowed."}, "title" {"type" "string", "description" "Volume title. (In LITE projection.)"}, "publisher" {"type" "string", "description" "Publisher of this volume. (In LITE projection.)"}, "panelizationSummary" {"description" "A top-level summary of the panelization info in this volume.", "properties" {"imageBubbleVersion" {"type" "string"}, "containsEpubBubbles" {"type" "boolean"}, "containsImageBubbles" {"type" "boolean"}, "epubBubbleVersion" {"type" "string"}}, "type" "object"}, "readingModes" {"type" "object", "properties" {"image" {"type" "boolean"}, "text" {"type" "boolean"}}, "description" "The reading modes available for this volume."}, "language" {"description" "Best language for this volume (based on content). It is the two-letter ISO 639-1 code such as 'fr', 'en', etc.", "type" "string"}, "description" {"type" "string", "description" "A synopsis of the volume. The text of the description is formatted in HTML and includes simple formatting elements, such as b, i, and br tags. (In LITE projection.)"}}, "type" "object", "description" "General volume information."}, "id" {"type" "string", "description" "Unique identifier for a volume. (In LITE projection.)"}, "accessInfo" {"properties" {"country" {"description" "The two-letter ISO_3166-1 country code for which this access information is valid. (In LITE projection.)", "type" "string"}, "driveImportedContentLink" {"description" "URL to the Google Drive viewer if this volume is uploaded by the user by selecting the file from Google Drive.", "type" "string"}, "pdf" {"type" "object", "description" "Information about pdf content. (In LITE projection.)", "properties" {"downloadLink" {"description" "URL to download pdf. (In LITE projection.)", "type" "string"}, "isAvailable" {"type" "boolean", "description" "Is a scanned image pdf available either as public domain or for purchase. (In LITE projection.)"}, "acsTokenLink" {"type" "string", "description" "URL to retrieve ACS token for pdf download. (In LITE projection.)"}}}, "epub" {"type" "object", "description" "Information about epub content. (In LITE projection.)", "properties" {"downloadLink" {"type" "string", "description" "URL to download epub. (In LITE projection.)"}, "acsTokenLink" {"description" "URL to retrieve ACS token for epub download. (In LITE projection.)", "type" "string"}, "isAvailable" {"description" "Is a flowing text epub available either as public domain or for purchase. (In LITE projection.)", "type" "boolean"}}}, "embeddable" {"type" "boolean", "description" "Whether this volume can be embedded in a viewport using the Embedded Viewer API."}, "webReaderLink" {"description" "URL to read this volume on the Google Books site. Link will not allow users to read non-viewable volumes.", "type" "string"}, "publicDomain" {"type" "boolean", "description" "Whether or not this book is public domain in the country listed above."}, "downloadAccess" {"description" "Information about a volume's download license access restrictions.", "$ref" "DownloadAccessRestriction"}, "viewOrderUrl" {"type" "string", "description" "For ordered but not yet processed orders, we give a URL that can be used to go to the appropriate Google Wallet page."}, "explicitOfflineLicenseManagement" {"description" "Whether this volume requires that the client explicitly request offline download license rather than have it done automatically when loading the content, if the client supports it.", "type" "boolean"}, "quoteSharingAllowed" {"type" "boolean", "description" "Whether quote sharing is allowed for this volume."}, "textToSpeechPermission" {"type" "string", "description" "Whether text-to-speech is permitted for this volume. Values can be ALLOWED, ALLOWED_FOR_ACCESSIBILITY, or NOT_ALLOWED."}, "viewability" {"type" "string", "description" "The read access of a volume. Possible values are PARTIAL, ALL_PAGES, NO_PAGES or UNKNOWN. This value depends on the country listed above. A value of PARTIAL means that the publisher has allowed some portion of the volume to be viewed publicly, without purchase. This can apply to eBooks as well as non-eBooks. Public domain books will always have a value of ALL_PAGES."}, "accessViewStatus" {"description" "Combines the access and viewability of this volume into a single status field for this user. Values can be FULL_PURCHASED, FULL_PUBLIC_DOMAIN, SAMPLE or NONE. (In LITE projection.)", "type" "string"}}, "type" "object", "description" "Any information about a volume related to reading or obtaining that volume text. This information can depend on country (books may be public domain in one country but not in another, e.g.)."}, "saleInfo" {"type" "object", "properties" {"saleability" {"description" "Whether or not this book is available for sale or offered for free in the Google eBookstore for the country listed above. Possible values are FOR_SALE, FOR_RENTAL_ONLY, FOR_SALE_AND_RENTAL, FREE, NOT_FOR_SALE, or FOR_PREORDER.", "type" "string"}, "retailPrice" {"type" "object", "properties" {"amount" {"type" "number", "format" "double", "description" "Amount in the currency listed below. (In LITE projection.)"}, "currencyCode" {"description" "An ISO 4217, three-letter currency code. (In LITE projection.)", "type" "string"}}, "description" "The actual selling price of the book. This is the same as the suggested retail or list price unless there are offers or discounts on this volume. (In LITE projection.)"}, "offers" {"description" "Offers available for this volume (sales and rentals).", "items" {"type" "object", "properties" {"finskyOfferType" {"type" "integer", "description" "The finsky offer type (e.g., PURCHASE=0 RENTAL=3)", "format" "int32"}, "listPrice" {"description" "Offer list (=undiscounted) price in Micros.", "type" "object", "properties" {"amountInMicros" {"format" "double", "type" "number"}, "currencyCode" {"type" "string"}}}, "retailPrice" {"properties" {"currencyCode" {"type" "string"}, "amountInMicros" {"type" "number", "format" "double"}}, "type" "object", "description" "Offer retail (=discounted) price in Micros"}, "giftable" {"description" "Indicates whether the offer is giftable.", "type" "boolean"}, "rentalDuration" {"description" "The rental duration (for rental offers only).", "type" "object", "properties" {"count" {"type" "number", "format" "double"}, "unit" {"type" "string"}}}}}, "type" "array"}, "listPrice" {"properties" {"amount" {"description" "Amount in the currency listed below. (In LITE projection.)", "format" "double", "type" "number"}, "currencyCode" {"description" "An ISO 4217, three-letter currency code. (In LITE projection.)", "type" "string"}}, "type" "object", "description" "Suggested retail price. (In LITE projection.)"}, "isEbook" {"type" "boolean", "description" "Whether or not this volume is an eBook (can be added to the My eBooks shelf)."}, "onSaleDate" {"type" "string", "description" "The date on which this book is available for sale."}, "buyLink" {"type" "string", "description" "URL to purchase this volume on the Google Books site. (In LITE projection)"}, "country" {"description" "The two-letter ISO_3166-1 country code for which this sale information is valid. (In LITE projection.)", "type" "string"}}, "description" "Any information about a volume related to the eBookstore and/or purchaseability. This information can depend on the country where the request originates from (i.e. books may not be for sale in certain countries)."}, "userInfo" {"type" "object", "properties" {"isPreordered" {"type" "boolean", "description" "Whether or not this volume was pre-ordered by the authenticated user making the request. (In LITE projection.)"}, "userUploadedVolumeInfo" {"properties" {"processingState" {"type" "string"}}, "type" "object"}, "isInMyBooks" {"description" "Whether or not this volume is currently in \"my books.\"", "type" "boolean"}, "copy" {"type" "object", "description" "Copy/Paste accounting information.", "properties" {"updated" {"type" "string"}, "allowedCharacterCount" {"format" "int32", "type" "integer"}, "remainingCharacterCount" {"type" "integer", "format" "int32"}, "limitType" {"type" "string"}}}, "review" {"description" "This user's review of this volume, if one exists.", "$ref" "Review"}, "acquisitionType" {"type" "integer", "description" "How this volume was acquired.", "format" "int32"}, "familySharing" {"description" "Information on the ability to share with the family.", "type" "object", "properties" {"familyRole" {"type" "string", "description" "The role of the user in the family."}, "isSharingAllowed" {"type" "boolean", "description" "Whether or not this volume can be shared with the family by the user. This includes sharing eligibility of both the volume and the user. If the value is true, the user can initiate a family sharing action."}, "isSharingDisabledByFop" {"description" "Whether or not sharing this volume is temporarily disabled due to issues with the Family Wallet.", "type" "boolean"}}}, "isFamilySharedFromUser" {"type" "boolean", "description" "Whether or not the user shared this volume with the family."}, "acquiredTime" {"type" "string", "description" "Timestamp when this volume was acquired by the user. (RFC 3339 UTC date-time format) Acquiring includes purchase, user upload, receiving family sharing, etc."}, "isUploaded" {"description" "Whether or not this volume was user uploaded.", "type" "boolean"}, "isFamilySharingAllowed" {"type" "boolean", "description" "Deprecated: Replaced by familySharing."}, "entitlementType" {"format" "int32", "description" "Whether this volume is purchased, sample, pd download etc.", "type" "integer"}, "isFamilySharingDisabledByFop" {"description" "Deprecated: Replaced by familySharing.", "type" "boolean"}, "rentalPeriod" {"description" "Period during this book is/was a valid rental.", "type" "object", "properties" {"startUtcSec" {"format" "int64", "type" "string"}, "endUtcSec" {"type" "string", "format" "int64"}}}, "readingPosition" {"description" "The user's current reading position in the volume, if one is available. (In LITE projection.)", "$ref" "ReadingPosition"}, "updated" {"type" "string", "description" "Timestamp when this volume was last modified by a user action, such as a reading position update, volume purchase or writing a review. (RFC 3339 UTC date-time format)."}, "rentalState" {"type" "string", "description" "Whether this book is an active or an expired rental."}, "isPurchased" {"type" "boolean", "description" "Whether or not this volume was purchased by the authenticated user making the request. (In LITE projection.)"}, "isFamilySharedToUser" {"type" "boolean", "description" "Whether or not the user received this volume through family sharing."}}, "description" "User specific information related to this volume. (e.g. page this user last read or whether they purchased this book)"}, "selfLink" {"type" "string", "description" "URL to this resource. (In LITE projection.)"}, "searchInfo" {"description" "Search result information related to this volume.", "properties" {"textSnippet" {"description" "A text snippet containing the search query.", "type" "string"}}, "type" "object"}, "etag" {"description" "Opaque identifier for a specific version of a volume resource. (In LITE projection)", "type" "string"}, "kind" {"description" "Resource type for a volume. (In LITE projection.)", "type" "string"}, "recommendedInfo" {"properties" {"explanation" {"description" "A text explaining why this volume is recommended.", "type" "string"}}, "description" "Recommendation related information for this volume.", "type" "object"}}, "id" "Volume", "type" "object"}, "Bookshelves" {"id" "Bookshelves", "properties" {"kind" {"type" "string", "description" "Resource type."}, "items" {"description" "A list of bookshelves.", "type" "array", "items" {"$ref" "Bookshelf"}}}, "type" "object"}, "BooksCloudloadingResource" {"type" "object", "properties" {"processingState" {"type" "string"}, "volumeId" {"type" "string"}, "author" {"type" "string"}, "title" {"type" "string"}}, "id" "BooksCloudloadingResource"}, "BooksVolumesRecommendedRateResponse" {"id" "BooksVolumesRecommendedRateResponse", "type" "object", "properties" {"consistency_token" {"type" "string"}}}, "DownloadAccessRestriction" {"id" "DownloadAccessRestriction", "type" "object", "properties" {"message" {"type" "string", "description" "Error/warning message."}, "downloadsAcquired" {"type" "integer", "format" "int32", "description" "If restricted, the number of content download licenses already acquired (including the requesting client, if licensed)."}, "deviceAllowed" {"description" "If restricted, whether access is granted for this (user, device, volume).", "type" "boolean"}, "justAcquired" {"type" "boolean", "description" "If deviceAllowed, whether access was just acquired with this request."}, "signature" {"description" "Response signature.", "type" "string"}, "maxDownloadDevices" {"type" "integer", "description" "If restricted, the maximum number of content download licenses for this volume.", "format" "int32"}, "kind" {"type" "string", "description" "Resource type."}, "volumeId" {"description" "Identifies the volume for which this entry applies.", "type" "string"}, "source" {"description" "Client app identifier for verification. Download access and client-validation only.", "type" "string"}, "restricted" {"type" "boolean", "description" "Whether this volume has any download access restrictions."}, "reasonCode" {"type" "string", "description" "Error/warning reason code. Additional codes may be added in the future. 0 OK 100 ACCESS_DENIED_PUBLISHER_LIMIT 101 ACCESS_DENIED_LIMIT 200 WARNING_USED_LAST_ACCESS"}, "nonce" {"type" "string", "description" "Client nonce for verification. Download access and client-validation only."}}}, "Volumeannotation" {"type" "object", "properties" {"annotationDataLink" {"description" "Link to get data for this annotation.", "type" "string"}, "annotationType" {"type" "string", "description" "The type of annotation this is."}, "id" {"type" "string", "description" "Unique id of this volume annotation."}, "layerId" {"description" "The Layer this annotation is for.", "type" "string"}, "selfLink" {"type" "string", "description" "URL to this resource."}, "kind" {"description" "Resource Type", "type" "string"}, "volumeId" {"description" "The Volume this annotation is for.", "type" "string"}, "deleted" {"description" "Indicates that this annotation is deleted.", "type" "boolean"}, "updated" {"type" "string", "description" "Timestamp for the last time this anntoation was updated. (RFC 3339 UTC date-time format)."}, "annotationDataId" {"description" "The annotation data id for this volume annotation.", "type" "string"}, "contentRanges" {"description" "The content ranges to identify the selected text.", "type" "object", "properties" {"gbTextRange" {"$ref" "BooksAnnotationsRange", "description" "Range in GB text format for this annotation for version above."}, "gbImageRange" {"$ref" "BooksAnnotationsRange", "description" "Range in GB image format for this annotation for version above."}, "contentVersion" {"type" "string", "description" "Content version applicable to ranges below."}, "cfiRange" {"description" "Range in CFI format for this annotation for version above.", "$ref" "BooksAnnotationsRange"}}}, "selectedText" {"type" "string", "description" "Excerpt from the volume."}, "data" {"type" "string", "description" "Data for this annotation."}, "pageIds" {"type" "array", "items" {"type" "string"}, "description" "Pages the annotation spans."}}, "id" "Volumeannotation"}, "Annotations" {"type" "object", "id" "Annotations", "properties" {"totalItems" {"description" "Total number of annotations found. This may be greater than the number of notes returned in this response if results have been paginated.", "type" "integer", "format" "int32"}, "nextPageToken" {"type" "string", "description" "Token to pass in for pagination for the next page. This will not be present if this request does not have more results."}, "items" {"type" "array", "description" "A list of annotations.", "items" {"$ref" "Annotation"}}, "kind" {"type" "string", "description" "Resource type."}}}, "Layersummary" {"type" "object", "properties" {"volumeAnnotationsVersion" {"description" "The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately.", "type" "string"}, "contentVersion" {"type" "string", "description" "The content version this resource is for."}, "dataCount" {"format" "int32", "type" "integer", "description" "The number of data items for this layer."}, "annotationsDataLink" {"type" "string", "description" "Link to get data for this annotation."}, "id" {"type" "string", "description" "Unique id of this layer summary."}, "annotationsLink" {"description" "The link to get the annotations for this layer.", "type" "string"}, "annotationCount" {"description" "The number of annotations for this layer.", "format" "int32", "type" "integer"}, "layerId" {"description" "The layer id for this summary.", "type" "string"}, "annotationTypes" {"description" "The list of annotation types contained for this layer.", "type" "array", "items" {"type" "string"}}, "selfLink" {"description" "URL to this resource.", "type" "string"}, "kind" {"description" "Resource Type", "type" "string"}, "volumeId" {"type" "string", "description" "The volume id this resource is for."}, "updated" {"description" "Timestamp for the last time an item in this layer was updated. (RFC 3339 UTC date-time format).", "type" "string"}}, "id" "Layersummary"}, "Discoveryclusters" {"type" "object", "id" "Discoveryclusters", "properties" {"totalClusters" {"format" "int32", "type" "integer"}, "clusters" {"type" "array", "items" {"properties" {"uid" {"type" "string"}, "totalVolumes" {"type" "integer", "format" "int32"}, "title" {"type" "string"}, "volumes" {"items" {"$ref" "Volume"}, "type" "array"}, "subTitle" {"type" "string"}, "banner_with_content_container" {"type" "object", "properties" {"moreButtonUrl" {"type" "string"}, "textColorArgb" {"type" "string"}, "maskColorArgb" {"type" "string"}, "moreButtonText" {"type" "string"}, "fillColorArgb" {"type" "string"}, "imageUrl" {"type" "string"}}}}, "type" "object"}}, "kind" {"description" "Resorce type.", "type" "string"}}}, "Annotationsdata" {"id" "Annotationsdata", "properties" {"kind" {"description" "Resource type", "type" "string"}, "nextPageToken" {"description" "Token to pass in for pagination for the next page. This will not be present if this request does not have more results.", "type" "string"}, "totalItems" {"type" "integer", "description" "The total number of volume annotations found.", "format" "int32"}, "items" {"type" "array", "items" {"$ref" "GeoAnnotationdata"}, "description" "A list of Annotation Data."}}, "type" "object"}, "ReadingPosition" {"type" "object", "id" "ReadingPosition", "properties" {"epubCfiPosition" {"type" "string", "description" "Position in an EPUB as a CFI."}, "gbTextPosition" {"type" "string", "description" "Position in a volume for text-based content."}, "gbImagePosition" {"description" "Position in a volume for image-based content.", "type" "string"}, "updated" {"type" "string", "description" "Timestamp when this reading position was last updated (formatted UTC timestamp with millisecond resolution)."}, "kind" {"description" "Resource type for a reading position.", "type" "string"}, "volumeId" {"description" "Volume id associated with this reading position.", "type" "string"}, "pdfPosition" {"type" "string", "description" "Position in a PDF file."}}}, "Volumeseriesinfo" {"properties" {"bookDisplayNumber" {"type" "string", "description" "The display number string. This should be used only for display purposes and the actual sequence should be inferred from the below orderNumber."}, "shortSeriesBookTitle" {"type" "string", "description" "Short book title in the context of the series."}, "kind" {"type" "string", "description" "Resource type."}, "volumeSeries" {"items" {"type" "object", "properties" {"seriesId" {"description" "The series id.", "type" "string"}, "issue" {"items" {"type" "object", "properties" {"issueOrderNumber" {"type" "integer", "format" "int32"}, "issueDisplayNumber" {"type" "string"}}}, "type" "array", "description" "List of issues. Applicable only for Collection Edition and Omnibus."}, "orderNumber" {"type" "integer", "description" "The book order number in the series.", "format" "int32"}, "seriesBookType" {"type" "string", "description" "The book type in the context of series. Examples - Single Issue, Collection Edition, etc."}}}, "type" "array"}}, "id" "Volumeseriesinfo", "type" "object"}, "Volume2" {"properties" {"items" {"description" "A list of volumes.", "items" {"$ref" "Volume"}, "type" "array"}, "kind" {"type" "string", "description" "Resource type."}, "nextPageToken" {"type" "string"}}, "id" "Volume2", "type" "object"}, "Bookshelf" {"properties" {"volumeCount" {"type" "integer", "format" "int32", "description" "Number of volumes in this bookshelf."}, "created" {"type" "string", "description" "Created time for this bookshelf (formatted UTC timestamp with millisecond resolution)."}, "access" {"type" "string", "description" "Whether this bookshelf is PUBLIC or PRIVATE."}, "id" {"type" "integer", "format" "int32", "description" "Id of this bookshelf, only unique by user."}, "volumesLastUpdated" {"description" "Last time a volume was added or removed from this bookshelf (formatted UTC timestamp with millisecond resolution).", "type" "string"}, "selfLink" {"type" "string", "description" "URL to this resource."}, "kind" {"type" "string", "description" "Resource type for bookshelf metadata."}, "title" {"type" "string", "description" "Title of this bookshelf."}, "updated" {"type" "string", "description" "Last modified time of this bookshelf (formatted UTC timestamp with millisecond resolution)."}, "description" {"type" "string", "description" "Description of this bookshelf."}}, "id" "Bookshelf", "type" "object"}, "ConcurrentAccessRestriction" {"properties" {"message" {"description" "Error/warning message.", "type" "string"}, "timeWindowSeconds" {"description" "Time in seconds for license auto-expiration.", "format" "int32", "type" "integer"}, "deviceAllowed" {"description" "Whether access is granted for this (user, device, volume).", "type" "boolean"}, "signature" {"description" "Response signature.", "type" "string"}, "kind" {"type" "string", "description" "Resource type."}, "volumeId" {"description" "Identifies the volume for which this entry applies.", "type" "string"}, "source" {"description" "Client app identifier for verification. Download access and client-validation only.", "type" "string"}, "restricted" {"type" "boolean", "description" "Whether this volume has any concurrent access restrictions."}, "reasonCode" {"type" "string", "description" "Error/warning reason code."}, "nonce" {"type" "string", "description" "Client nonce for verification. Download access and client-validation only."}, "maxConcurrentDevices" {"description" "The maximum number of concurrent access licenses for this volume.", "type" "integer", "format" "int32"}}, "id" "ConcurrentAccessRestriction", "type" "object"}, "FamilyInfo" {"type" "object", "properties" {"membership" {"properties" {"allowedMaturityRating" {"type" "string", "description" "The maximum allowed maturity rating for the user."}, "isInFamily" {"type" "boolean"}, "acquirePermission" {"description" "Restrictions on user buying and acquiring content.", "type" "string"}, "ageGroup" {"description" "The age group of the user.", "type" "string"}, "role" {"type" "string", "description" "The role of the user in the family."}}, "description" "Family membership info of the user that made the request.", "type" "object"}, "kind" {"description" "Resource type.", "type" "string"}}, "id" "FamilyInfo"}, "DownloadAccesses" {"id" "DownloadAccesses", "type" "object", "properties" {"downloadAccessList" {"items" {"$ref" "DownloadAccessRestriction"}, "description" "A list of download access responses.", "type" "array"}, "kind" {"type" "string", "description" "Resource type."}}}, "Dictlayerdata" {"properties" {"common" {"type" "object", "properties" {"title" {"type" "string", "description" "The display title and localized canonical name to use when searching for this entity on Google search."}}}, "dict" {"properties" {"source" {"description" "The source, url and attribution for this dictionary data.", "type" "object", "properties" {"url" {"type" "string"}, "attribution" {"type" "string"}}}, "words" {"type" "array", "items" {"properties" {"derivatives" {"items" {"properties" {"text" {"type" "string"}, "source" {"properties" {"url" {"type" "string"}, "attribution" {"type" "string"}}, "type" "object"}}, "type" "object"}, "type" "array"}, "senses" {"type" "array", "items" {"properties" {"synonyms" {"items" {"type" "object", "properties" {"source" {"type" "object", "properties" {"attribution" {"type" "string"}, "url" {"type" "string"}}}, "text" {"type" "string"}}}, "type" "array"}, "pronunciationUrl" {"type" "string"}, "partOfSpeech" {"type" "string"}, "syllabification" {"type" "string"}, "pronunciation" {"type" "string"}, "conjugations" {"items" {"type" "object", "properties" {"value" {"type" "string"}, "type" {"type" "string"}}}, "type" "array"}, "definitions" {"type" "array", "items" {"properties" {"definition" {"type" "string"}, "examples" {"type" "array", "items" {"type" "object", "properties" {"text" {"type" "string"}, "source" {"type" "object", "properties" {"url" {"type" "string"}, "attribution" {"type" "string"}}}}}}}, "type" "object"}}, "source" {"type" "object", "properties" {"url" {"type" "string"}, "attribution" {"type" "string"}}}}, "type" "object"}}, "source" {"description" "The words with different meanings but not related words, e.g. \"go\" (game) and \"go\" (verb).", "properties" {"attribution" {"type" "string"}, "url" {"type" "string"}}, "type" "object"}, "examples" {"type" "array", "items" {"properties" {"text" {"type" "string"}, "source" {"type" "object", "properties" {"attribution" {"type" "string"}, "url" {"type" "string"}}}}, "type" "object"}}}, "type" "object"}}}, "type" "object"}, "kind" {"type" "string"}}, "type" "object", "id" "Dictlayerdata"}, "RequestAccessData" {"id" "RequestAccessData", "properties" {"downloadAccess" {"$ref" "DownloadAccessRestriction", "description" "A download access response."}, "kind" {"description" "Resource type.", "type" "string"}, "concurrentAccess" {"$ref" "ConcurrentAccessRestriction", "description" "A concurrent access response."}}, "type" "object"}, "Metadata" {"properties" {"items" {"description" "A list of offline dictionary metadata.", "items" {"type" "object", "properties" {"download_url" {"type" "string"}, "size" {"type" "string", "format" "int64"}, "encrypted_key" {"type" "string"}, "language" {"type" "string"}, "version" {"format" "int64", "type" "string"}}}, "type" "array"}, "kind" {"type" "string", "description" "Resource type."}}, "type" "object", "id" "Metadata"}, "Series" {"properties" {"series" {"type" "array", "items" {"type" "object", "properties" {"bannerImageUrl" {"type" "string"}, "isComplete" {"type" "boolean"}, "imageUrl" {"type" "string"}, "seriesId" {"type" "string"}, "eligibleForSubscription" {"type" "boolean"}, "seriesFormatType" {"type" "string"}, "subscriptionId" {"type" "string"}, "seriesSubscriptionReleaseInfo" {"type" "object", "properties" {"nextReleaseInfo" {"properties" {"currencyCode" {"type" "string"}, "amountInMicros" {"format" "double", "type" "number"}, "releaseTime" {"type" "string"}, "releaseNumber" {"type" "string"}}, "type" "object"}, "seriesSubscriptionType" {"type" "string"}, "currentReleaseInfo" {"type" "object", "properties" {"releaseTime" {"type" "string"}, "amountInMicros" {"type" "number", "format" "double"}, "currencyCode" {"type" "string"}, "releaseNumber" {"type" "string"}}}, "cancelTime" {"type" "string"}}}, "title" {"type" "string"}, "seriesType" {"type" "string"}}}}, "kind" {"type" "string", "description" "Resource type."}}, "type" "object", "id" "Series"}, "Volumeannotations" {"type" "object", "properties" {"version" {"type" "string", "description" "The version string for all of the volume annotations in this layer (not just the ones in this response). Note: the version string doesn't apply to the annotation data, just the information in this response (e.g. the location of annotations in the book)."}, "items" {"items" {"$ref" "Volumeannotation"}, "description" "A list of volume annotations.", "type" "array"}, "nextPageToken" {"description" "Token to pass in for pagination for the next page. This will not be present if this request does not have more results.", "type" "string"}, "totalItems" {"format" "int32", "type" "integer", "description" "The total number of volume annotations found."}, "kind" {"type" "string", "description" "Resource type"}}, "id" "Volumeannotations"}, "GeoAnnotationdata" {"properties" {"annotationType" {"type" "string", "description" "The type of annotation this data is for."}, "id" {"type" "string", "description" "Unique id for this annotation data."}, "layerId" {"description" "The Layer id for this data. *", "type" "string"}, "selfLink" {"type" "string", "description" "URL for this resource. *"}, "kind" {"type" "string", "description" "Resource Type"}, "volumeId" {"description" "The volume id for this data. *", "type" "string"}, "updated" {"type" "string", "description" "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format)."}, "encodedData" {"description" "Base64 encoded data for this annotation data.", "type" "string", "format" "byte"}, "data" {"$ref" "Geolayerdata", "description" "JSON encoded data for this geo annotation data. Emitted with name 'data' in JSON output. Either this or dict_data will be populated."}}, "type" "object", "id" "GeoAnnotationdata"}, "Seriesmembership" {"type" "object", "properties" {"member" {"items" {"$ref" "Volume"}, "type" "array"}, "nextPageToken" {"type" "string"}, "kind" {"type" "string", "description" "Resorce type."}}, "id" "Seriesmembership"}, "Usersettings" {"id" "Usersettings", "type" "object", "properties" {"kind" {"type" "string", "description" "Resource type."}, "notesExport" {"properties" {"isEnabled" {"type" "boolean"}, "folderName" {"type" "string"}}, "description" "User settings in sub-objects, each for different purposes.", "type" "object"}, "notification" {"type" "object", "properties" {"matchMyInterests" {"type" "object", "properties" {"opted_state" {"type" "string"}}}, "rewardExpirations" {"properties" {"opted_state" {"type" "string"}}, "type" "object"}, "moreFromAuthors" {"properties" {"opted_state" {"type" "string"}}, "type" "object"}, "moreFromSeries" {"type" "object", "properties" {"opted_state" {"type" "string"}}}, "priceDrop" {"type" "object", "properties" {"opted_state" {"type" "string"}}}}}}}, "Offers" {"properties" {"kind" {"type" "string", "description" "Resource type."}, "items" {"type" "array", "description" "A list of offers.", "items" {"properties" {"items" {"type" "array", "items" {"properties" {"coverUrl" {"type" "string"}, "canonicalVolumeLink" {"type" "string"}, "author" {"type" "string"}, "volumeId" {"type" "string"}, "description" {"type" "string"}, "title" {"type" "string"}}, "type" "object"}}, "artUrl" {"type" "string"}, "gservicesKey" {"type" "string"}, "id" {"type" "string"}}, "type" "object"}}}, "id" "Offers", "type" "object"}, "BooksAnnotationsRange" {"id" "BooksAnnotationsRange", "type" "object", "properties" {"startPosition" {"type" "string", "description" "The starting position for the range."}, "endOffset" {"description" "The offset from the ending position.", "type" "string"}, "endPosition" {"description" "The ending position for the range.", "type" "string"}, "startOffset" {"description" "The offset from the starting position.", "type" "string"}}}, "Notification" {"properties" {"notification_type" {"type" "string"}, "show_notification_settings_action" {"type" "boolean"}, "is_document_mature" {"type" "boolean"}, "pcampaign_id" {"type" "string"}, "notificationGroup" {"type" "string"}, "body" {"type" "string"}, "doc_id" {"type" "string"}, "dont_show_notification" {"type" "boolean"}, "doc_type" {"type" "string"}, "targetUrl" {"type" "string"}, "kind" {"type" "string", "description" "Resource type."}, "title" {"type" "string"}, "timeToExpireMs" {"format" "int64", "type" "string"}, "reason" {"type" "string"}, "iconUrl" {"type" "string"}, "crmExperimentIds" {"items" {"format" "int64", "type" "string"}, "type" "array", "description" "The list of crm experiment ids."}}, "type" "object", "id" "Notification"}, "Volumes" {"properties" {"totalItems" {"format" "int32", "description" "Total number of volumes found. This might be greater than the number of volumes returned in this response if results have been paginated.", "type" "integer"}, "items" {"type" "array", "items" {"$ref" "Volume"}, "description" "A list of volumes."}, "kind" {"type" "string", "description" "Resource type."}}, "type" "object", "id" "Volumes"}, "AnnotationsSummary" {"id" "AnnotationsSummary", "type" "object", "properties" {"layers" {"type" "array", "items" {"type" "object", "properties" {"remainingCharacterCount" {"type" "integer", "format" "int32"}, "updated" {"type" "string"}, "layerId" {"type" "string"}, "allowedCharacterCount" {"format" "int32", "type" "integer"}, "limitType" {"type" "string"}}}}, "kind" {"type" "string"}}}, "DictionaryAnnotationdata" {"id" "DictionaryAnnotationdata", "type" "object", "properties" {"annotationType" {"description" "The type of annotation this data is for.", "type" "string"}, "id" {"type" "string", "description" "Unique id for this annotation data."}, "layerId" {"description" "The Layer id for this data. *", "type" "string"}, "selfLink" {"description" "URL for this resource. *", "type" "string"}, "kind" {"description" "Resource Type", "type" "string"}, "volumeId" {"description" "The volume id for this data. *", "type" "string"}, "updated" {"type" "string", "description" "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format)."}, "encodedData" {"type" "string", "description" "Base64 encoded data for this annotation data.", "format" "byte"}, "data" {"description" "JSON encoded data for this dictionary annotation data. Emitted with name 'data' in JSON output. Either this or geo_data will be populated.", "$ref" "Dictlayerdata"}}}}}