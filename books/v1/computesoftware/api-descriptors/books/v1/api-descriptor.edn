#:compute.gcp.descriptor{:name "books", :title "Books API", :api-version "v1", :revision "20200710", :endpoint #:compute.gcp.descriptor{:url "https://www.googleapis.com/", :batch-path "batch/books/v1", :service-path ""}, :parameters {"callback" {"location" "query", "type" "string", "description" "JSONP"}, "uploadType" {"description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "location" "query", "type" "string"}, "key" {"description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "type" "string", "location" "query"}, "access_token" {"location" "query", "type" "string", "description" "OAuth access token."}, "oauth_token" {"type" "string", "description" "OAuth 2.0 token for the current user.", "location" "query"}, "prettyPrint" {"type" "boolean", "description" "Returns response with indentations and line breaks.", "default" "true", "location" "query"}, "alt" {"type" "string", "description" "Data format for response.", "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "enum" ["json" "media" "proto"], "default" "json", "location" "query"}, "$.xgafv" {"enumDescriptions" ["v1 error format" "v2 error format"], "enum" ["1" "2"], "description" "V1 error format.", "location" "query", "type" "string"}, "fields" {"type" "string", "location" "query", "description" "Selector specifying which fields to include in a partial response."}, "upload_protocol" {"type" "string", "location" "query", "description" "Upload protocol for media (e.g. \"raw\", \"multipart\")."}, "quotaUser" {"description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "type" "string", "location" "query"}}, :op->info {"books.mylibrary.bookshelves.list" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/mylibrary/bookshelves", :response {"$ref" "Bookshelves"}, :parameters {"source" {"type" "string", "location" "query", "description" "String to identify the originator of this request."}}, :description "Retrieves a list of bookshelves belonging to the authenticated user."}, "books.mylibrary.readingpositions.setPosition" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/mylibrary/readingpositions/{volumeId}/setPosition", :response {"$ref" "Empty"}, :parameters {"action" {"type" "string", "description" "Action that caused this reading position to be set.", "location" "query", "enum" ["ACTION_UNDEFINED" "bookmark" "chapter" "next-page" "prev-page" "scroll" "search"]}, "source" {"description" "String to identify the originator of this request.", "type" "string", "location" "query"}, "deviceCookie" {"location" "query", "type" "string", "description" "Random persistent device cookie optional on set position."}, "volumeId" {"description" "ID of volume for which to update the reading position.", "type" "string", "required" true, "location" "path"}, "contentVersion" {"location" "query", "description" "Volume content version for which this reading position applies.", "type" "string"}, "position" {"description" "Position string for the new volume reading position.", "location" "query", "type" "string"}, "timestamp" {"location" "query", "type" "string", "description" "RFC 3339 UTC format timestamp associated with this reading position."}}, :description "Sets my reading position information for a volume."}, "books.promooffer.dismiss" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/promooffer/dismiss", :response {"$ref" "Empty"}, :parameters {"device" {"description" "device device", "type" "string", "location" "query"}, "model" {"type" "string", "description" "device model", "location" "query"}, "androidId" {"location" "query", "description" "device android_id", "type" "string"}, "product" {"description" "device product", "location" "query", "type" "string"}, "serial" {"location" "query", "description" "device serial", "type" "string"}, "offerId" {"location" "query", "type" "string", "description" "Offer to dimiss"}, "manufacturer" {"type" "string", "description" "device manufacturer", "location" "query"}}, :description "Marks the promo offer as dismissed."}, "books.myconfig.getUserSettings" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/myconfig/getUserSettings", :response {"$ref" "Usersettings"}, :parameters {"country" {"description" "Unused. Added only to workaround TEX mandatory request template requirement", "location" "query", "type" "string"}}, :description "Gets the current settings for the user."}, "books.layers.list" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/volumes/{volumeId}/layersummary", :response {"$ref" "Layersummaries"}, :parameters {"maxResults" {"location" "query", "format" "uint32", "type" "integer", "description" "Maximum number of results to return"}, "pageToken" {"description" "The value of the nextToken from the previous page.", "location" "query", "type" "string"}, "source" {"type" "string", "description" "String to identify the originator of this request.", "location" "query"}, "contentVersion" {"type" "string", "location" "query", "description" "The content version for the requested volume."}, "volumeId" {"type" "string", "description" "The volume to retrieve layers for.", "location" "path", "required" true}}, :description "List the layer summaries for a volume."}, "books.personalizedstream.get" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/personalizedstream/get", :response {"$ref" "Discoveryclusters"}, :parameters {"locale" {"description" "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for\ngenerating recommendations.", "location" "query", "type" "string"}, "maxAllowedMaturityRating" {"description" "The maximum allowed maturity rating of returned recommendations. Books with\na higher maturity rating are filtered out.", "type" "string", "location" "query", "enum" ["MAX_ALLOWED_MATURITY_RATING_UNDEFINED" "MATURE" "not-mature"]}, "source" {"description" "String to identify the originator of this request.", "type" "string", "location" "query"}}, :description "Returns a stream of personalized book clusters"}, "books.bookshelves.list" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/users/{userId}/bookshelves", :response {"$ref" "Bookshelves"}, :parameters {"source" {"type" "string", "description" "String to identify the originator of this request.", "location" "query"}, "userId" {"description" "ID of user for whom to retrieve bookshelves.", "location" "path", "required" true, "type" "string"}}, :description "Retrieves a list of public bookshelves for the specified user."}, "books.dictionary.listOfflineMetadata" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/dictionary/listOfflineMetadata", :response {"$ref" "Metadata"}, :parameters {"cpksver" {"description" "The device/version ID from which to request the data.", "location" "query", "type" "string"}}, :description "Returns a list of offline dictionary metadata available"}, "books.promooffer.accept" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/promooffer/accept", :response {"$ref" "Empty"}, :parameters {"manufacturer" {"description" "device manufacturer", "type" "string", "location" "query"}, "device" {"type" "string", "description" "device device", "location" "query"}, "androidId" {"location" "query", "type" "string", "description" "device android_id"}, "product" {"location" "query", "type" "string", "description" "device product"}, "serial" {"location" "query", "description" "device serial", "type" "string"}, "offerId" {"type" "string", "location" "query"}, "model" {"type" "string", "description" "device model", "location" "query"}, "volumeId" {"type" "string", "location" "query", "description" "Volume id to exercise the offer"}}, :description "Accepts the promo offer."}, "books.mylibrary.bookshelves.addVolume" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/mylibrary/bookshelves/{shelf}/addVolume", :response {"$ref" "Empty"}, :parameters {"shelf" {"required" true, "type" "string", "description" "ID of bookshelf to which to add a volume.", "location" "path"}, "source" {"location" "query", "description" "String to identify the originator of this request.", "type" "string"}, "reason" {"type" "string", "enum" ["REASON_UNDEFINED" "IOS_PREX" "IOS_SEARCH" "ONBOARDING"], "description" "The reason for which the book is added to the library.", "location" "query"}, "volumeId" {"type" "string", "description" "ID of volume to add.", "location" "query"}}, :description "Adds a volume to a bookshelf."}, "books.myconfig.requestAccess" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/myconfig/requestAccess", :response {"$ref" "RequestAccessData"}, :parameters {"locale" {"type" "string", "description" "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.", "location" "query"}, "source" {"location" "query", "type" "string", "description" "String to identify the originator of this request."}, "nonce" {"description" "The client nonce value.", "type" "string", "location" "query"}, "licenseTypes" {"description" "The type of access license to request. If not specified, the default is\nBOTH.", "type" "string", "location" "query", "enum" ["LICENSE_TYPES_UNDEFINED" "BOTH" "CONCURRENT" "DOWNLOAD"]}, "cpksver" {"description" "The device/version ID from which to request the restrictions.", "type" "string", "location" "query"}, "volumeId" {"description" "The volume to request concurrent/download restrictions for.", "location" "query", "type" "string"}}, :description "Request concurrent and download access restrictions."}, "books.volumes.useruploaded.list" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/volumes/useruploaded", :response {"$ref" "Volumes"}, :parameters {"locale" {"location" "query", "description" "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for\ngenerating recommendations.", "type" "string"}, "volumeId" {"description" "The ids of the volumes to be returned. If not specified all that match the\nprocessingState are returned.", "type" "string", "repeated" true, "location" "query"}, "startIndex" {"description" "Index of the first result to return (starts at 0)", "location" "query", "type" "integer", "format" "uint32"}, "source" {"location" "query", "description" "String to identify the originator of this request.", "type" "string"}, "processingState" {"location" "query", "enum" ["PROCESSING_STATE_UNDEFINED" "COMPLETED_FAILED" "COMPLETED_SUCCESS" "RUNNING"], "description" "The processing state of the user uploaded volumes to be returned.", "type" "string", "repeated" true}, "maxResults" {"location" "query", "type" "integer", "description" "Maximum number of results to return.", "format" "uint32"}}, :description "Return a list of books uploaded by the current user."}, "books.notification.get" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/notification/get", :response {"$ref" "Notification"}, :parameters {"source" {"location" "query", "type" "string", "description" "String to identify the originator of this request."}, "locale" {"type" "string", "description" "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for\ngenerating notification title and body.", "location" "query"}, "notification_id" {"location" "query", "type" "string", "description" "String to identify the notification."}}, :description "Returns notification details for a given notification id."}, "books.onboarding.listCategoryVolumes" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/onboarding/listCategoryVolumes", :response {"$ref" "Volume2"}, :parameters {"categoryId" {"type" "string", "repeated" true, "description" "List of category ids requested.", "location" "query"}, "pageSize" {"type" "integer", "location" "query", "format" "uint32", "description" "Number of maximum results per page to be included in the response."}, "pageToken" {"type" "string", "description" "The value of the nextToken from the previous page.", "location" "query"}, "locale" {"description" "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset.", "type" "string", "location" "query"}, "maxAllowedMaturityRating" {"description" "The maximum allowed maturity rating of returned volumes. Books with a\nhigher maturity rating are filtered out.", "type" "string", "location" "query", "enum" ["MAX_ALLOWED_MATURITY_RATING_UNDEFINED" "MATURE" "not-mature"]}}, :description "List available volumes under categories for onboarding experience."}, "books.layers.annotationData.list" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/volumes/{volumeId}/layers/{layerId}/data", :response {"$ref" "Annotationsdata"}, :parameters {"pageToken" {"description" "The value of the nextToken from the previous page.", "location" "query", "type" "string"}, "w" {"format" "int32", "location" "query", "description" "The requested pixel width for any images. If width is provided height must\nalso be provided.", "type" "integer"}, "contentVersion" {"description" "The content version for the requested volume.", "type" "string", "location" "query"}, "scale" {"format" "int32", "location" "query", "type" "integer", "description" "The requested scale for the image."}, "updatedMax" {"description" "RFC 3339 timestamp to restrict to items updated prior to this timestamp\n(exclusive).", "location" "query", "type" "string"}, "updatedMin" {"description" "RFC 3339 timestamp to restrict to items updated since this timestamp\n(inclusive).", "type" "string", "location" "query"}, "maxResults" {"description" "Maximum number of results to return", "location" "query", "type" "integer", "format" "uint32"}, "locale" {"description" "The locale information for the data. ISO-639-1 language and ISO-3166-1\ncountry code. Ex: 'en_US'.", "type" "string", "location" "query"}, "layerId" {"location" "path", "type" "string", "required" true, "description" "The ID for the layer to get the annotation data."}, "volumeId" {"location" "path", "type" "string", "description" "The volume to retrieve annotation data for.", "required" true}, "source" {"location" "query", "type" "string", "description" "String to identify the originator of this request."}, "h" {"format" "int32", "location" "query", "type" "integer", "description" "The requested pixel height for any images. If height is provided width must\nalso be provided."}, "annotationDataId" {"location" "query", "description" "The list of Annotation Data Ids to retrieve. Pagination is ignored if this\nis set.", "type" "string", "repeated" true}}, :description "Gets the annotation data for a volume and layer."}, "books.layers.volumeAnnotations.get" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}", :response {"$ref" "Volumeannotation"}, :parameters {"locale" {"location" "query", "type" "string", "description" "The locale information for the data. ISO-639-1 language and ISO-3166-1\ncountry code. Ex: 'en_US'."}, "annotationId" {"location" "path", "description" "The ID of the volume annotation to retrieve.", "required" true, "type" "string"}, "source" {"location" "query", "description" "String to identify the originator of this request.", "type" "string"}, "layerId" {"required" true, "location" "path", "description" "The ID for the layer to get the annotations.", "type" "string"}, "volumeId" {"required" true, "type" "string", "location" "path", "description" "The volume to retrieve annotations for."}}, :description "Gets the volume annotation."}, "books.mylibrary.annotations.update" #:compute.gcp.descriptor{:http-method :put, :path "books/v1/mylibrary/annotations/{annotationId}", :request {"$ref" "Annotation"}, :response {"$ref" "Annotation"}, :parameters {"source" {"type" "string", "description" "String to identify the originator of this request.", "location" "query"}, "annotationId" {"required" true, "location" "path", "description" "The ID for the annotation to update.", "type" "string"}}, :description "Updates an existing annotation."}, "books.bookshelves.get" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/users/{userId}/bookshelves/{shelf}", :response {"$ref" "Bookshelf"}, :parameters {"source" {"description" "String to identify the originator of this request.", "location" "query", "type" "string"}, "userId" {"location" "path", "required" true, "type" "string", "description" "ID of user for whom to retrieve bookshelves."}, "shelf" {"type" "string", "required" true, "location" "path", "description" "ID of bookshelf to retrieve."}}, :description "Retrieves metadata for a specific bookshelf for the specified user."}, "books.volumes.get" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/volumes/{volumeId}", :response {"$ref" "Volume"}, :parameters {"includeNonComicsSeries" {"type" "boolean", "location" "query", "description" "Set to true to include non-comics series. Defaults to false."}, "user_library_consistent_read" {"location" "query", "type" "boolean"}, "country" {"type" "string", "description" "ISO-3166-1 code to override the IP-based location.", "location" "query"}, "projection" {"type" "string", "location" "query", "description" "Restrict information returned to a set of selected fields.", "enum" ["PROJECTION_UNDEFINED" "FULL" "LITE"]}, "partner" {"description" "Brand results for partner ID.", "location" "query", "type" "string"}, "source" {"type" "string", "description" "string  to identify the originator of this request.", "location" "query"}, "volumeId" {"type" "string", "location" "path", "required" true, "description" "ID of volume to retrieve."}}, :description "Gets volume information for a single volume."}, "books.volumes.list" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/volumes", :response {"$ref" "Volumes"}, :parameters {"startIndex" {"description" "Index of the first result to return (starts at 0)", "format" "uint32", "type" "integer", "location" "query"}, "libraryRestrict" {"location" "query", "enum" ["LIBRARY_RESTRICT_UNDEFINED" "my-library" "no-restrict"], "description" "Restrict search to this user's library.", "type" "string"}, "q" {"type" "string", "location" "query", "description" "Full-text search query string."}, "maxAllowedMaturityRating" {"type" "string", "location" "query", "description" "The maximum allowed maturity rating of returned recommendations. Books with\na higher maturity rating are filtered out.", "enum" ["MAX_ALLOWED_MATURITY_RATING_UNDEFINED" "MATURE" "not-mature"]}, "download" {"location" "query", "description" "Restrict to volumes by download availability.", "enum" ["DOWNLOAD_UNDEFINED" "EPUB"], "type" "string"}, "maxResults" {"description" "Maximum number of results to return.", "format" "uint32", "location" "query", "type" "integer"}, "orderBy" {"description" "Sort search results.", "location" "query", "type" "string", "enum" ["ORDER_BY_UNDEFINED" "newest" "relevance"]}, "printType" {"description" "Restrict to books or magazines.", "type" "string", "location" "query", "enum" ["PRINT_TYPE_UNDEFINED" "ALL" "BOOKS" "MAGAZINES"]}, "langRestrict" {"type" "string", "description" "Restrict results to books with this language code.", "location" "query"}, "filter" {"location" "query", "type" "string", "enum" ["FILTER_UNDEFINED" "ebooks" "free-ebooks" "full" "paid-ebooks" "partial"], "description" "Filter search results."}, "source" {"description" "String to identify the originator of this request.", "location" "query", "type" "string"}, "projection" {"enum" ["PROJECTION_UNDEFINED" "FULL" "LITE"], "location" "query", "type" "string", "description" "Restrict information returned to a set of selected fields."}, "partner" {"location" "query", "type" "string", "description" "Restrict and brand results for partner ID."}, "showPreorders" {"description" "Set to true to show books available for preorder. Defaults to false.", "type" "boolean", "location" "query"}}, :description "Performs a book search."}, "books.volumes.recommended.list" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/volumes/recommended", :response {"$ref" "Volumes"}, :parameters {"source" {"location" "query", "description" "String to identify the originator of this request.", "type" "string"}, "locale" {"type" "string", "location" "query", "description" "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for\ngenerating recommendations."}, "maxAllowedMaturityRating" {"description" "The maximum allowed maturity rating of returned recommendations. Books with\na higher maturity rating are filtered out.", "location" "query", "type" "string", "enum" ["MAX_ALLOWED_MATURITY_RATING_UNDEFINED" "MATURE" "not-mature"]}}, :description "Return a list of recommended books for the current user."}, "books.mylibrary.bookshelves.volumes.list" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/mylibrary/bookshelves/{shelf}/volumes", :response {"$ref" "Volumes"}, :parameters {"country" {"location" "query", "type" "string", "description" "ISO-3166-1 code to override the IP-based location."}, "startIndex" {"location" "query", "type" "integer", "description" "Index of the first element to return (starts at 0)", "format" "uint32"}, "source" {"type" "string", "location" "query", "description" "String to identify the originator of this request."}, "showPreorders" {"type" "boolean", "description" "Set to true to show pre-ordered books. Defaults to false.", "location" "query"}, "projection" {"description" "Restrict information returned to a set of selected fields.", "type" "string", "location" "query", "enum" ["PROJECTION_UNDEFINED" "FULL" "LITE"]}, "q" {"type" "string", "location" "query", "description" "Full-text search query string in this bookshelf."}, "maxResults" {"location" "query", "format" "uint32", "description" "Maximum number of results to return", "type" "integer"}, "shelf" {"type" "string", "required" true, "location" "path", "description" "The bookshelf ID or name retrieve volumes for."}}, :description "Gets volume information for volumes on a bookshelf."}, "books.mylibrary.annotations.insert" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/mylibrary/annotations", :request {"$ref" "Annotation"}, :response {"$ref" "Annotation"}, :parameters {"showOnlySummaryInResponse" {"description" "Requests that only the summary of the specified layer be provided in the\nresponse.", "location" "query", "type" "boolean"}, "annotationId" {"type" "string", "location" "query", "description" "The ID for the annotation to insert."}, "source" {"type" "string", "description" "String to identify the originator of this request.", "location" "query"}, "country" {"description" "ISO-3166-1 code to override the IP-based location.", "location" "query", "type" "string"}}, :description "Inserts a new annotation."}, "books.mylibrary.bookshelves.removeVolume" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/mylibrary/bookshelves/{shelf}/removeVolume", :response {"$ref" "Empty"}, :parameters {"reason" {"description" "The reason for which the book is removed from the library.", "enum" ["REASON_UNDEFINED" "ONBOARDING"], "type" "string", "location" "query"}, "source" {"type" "string", "description" "String to identify the originator of this request.", "location" "query"}, "shelf" {"location" "path", "type" "string", "description" "ID of bookshelf from which to remove a volume.", "required" true}, "volumeId" {"location" "query", "type" "string", "description" "ID of volume to remove."}}, :description "Removes a volume from a bookshelf."}, "books.myconfig.syncVolumeLicenses" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/myconfig/syncVolumeLicenses", :response {"$ref" "Volumes"}, :parameters {"features" {"repeated" true, "description" "List of features supported by the client, i.e., 'RENTALS'", "enum" ["FEATURES_UNDEFINED" "RENTALS"], "type" "string", "location" "query"}, "volumeIds" {"repeated" true, "type" "string", "location" "query", "description" "The volume(s) to request download restrictions for."}, "nonce" {"location" "query", "description" "The client nonce value.", "type" "string"}, "source" {"description" "String to identify the originator of this request.", "type" "string", "location" "query"}, "showPreorders" {"type" "boolean", "location" "query", "description" "Set to true to show pre-ordered books. Defaults to false."}, "includeNonComicsSeries" {"description" "Set to true to include non-comics series. Defaults to false.", "type" "boolean", "location" "query"}, "cpksver" {"description" "The device/version ID from which to release the restriction.", "type" "string", "location" "query"}, "locale" {"type" "string", "description" "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.", "location" "query"}}, :description "Request downloaded content access for specified volumes on the My eBooks\nshelf."}, "books.myconfig.updateUserSettings" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/myconfig/updateUserSettings", :request {"$ref" "Usersettings"}, :response {"$ref" "Usersettings"}, :parameters {}, :description "Sets the settings for the user. If a sub-object is specified, it will\noverwrite the existing sub-object stored in the server. Unspecified\nsub-objects will retain the existing value."}, "books.mylibrary.annotations.delete" #:compute.gcp.descriptor{:http-method :delete, :path "books/v1/mylibrary/annotations/{annotationId}", :response {"$ref" "Empty"}, :parameters {"source" {"location" "query", "type" "string", "description" "String to identify the originator of this request."}, "annotationId" {"description" "The ID for the annotation to delete.", "type" "string", "required" true, "location" "path"}}, :description "Deletes an annotation."}, "books.familysharing.unshare" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/familysharing/unshare", :response {"$ref" "Empty"}, :parameters {"source" {"location" "query", "type" "string", "description" "String to identify the originator of this request."}, "docId" {"location" "query", "type" "string", "description" "The docid to unshare."}, "volumeId" {"location" "query", "type" "string", "description" "The volume to unshare."}}, :description "Initiates revoking content that has already been shared with the user's\nfamily. Empty response indicates success."}, "books.familysharing.getFamilyInfo" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/familysharing/getFamilyInfo", :response {"$ref" "FamilyInfo"}, :parameters {"source" {"location" "query", "type" "string", "description" "String to identify the originator of this request."}}, :description "Gets information regarding the family that the user is part of."}, "books.volumes.mybooks.list" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/volumes/mybooks", :response {"$ref" "Volumes"}, :parameters {"country" {"description" "ISO-3166-1 code to override the IP-based location.", "type" "string", "location" "query"}, "startIndex" {"location" "query", "format" "uint32", "type" "integer", "description" "Index of the first result to return (starts at 0)"}, "locale" {"location" "query", "type" "string", "description" "ISO-639-1 language and ISO-3166-1 country code. Ex:'en_US'. Used for\ngenerating recommendations."}, "source" {"location" "query", "type" "string", "description" "String to identify the originator of this request."}, "acquireMethod" {"enum" ["ACQUIRE_METHOD_UNDEFINED" "FAMILY_SHARED" "PREORDERED" "PREVIOUSLY_RENTED" "PUBLIC_DOMAIN" "PURCHASED" "RENTED" "SAMPLE" "UPLOADED"], "description" "How the book was acquired", "location" "query", "repeated" true, "type" "string"}, "processingState" {"enum" ["PROCESSING_STATE_UNDEFINED" "COMPLETED_FAILED" "COMPLETED_SUCCESS" "RUNNING"], "repeated" true, "type" "string", "location" "query", "description" "The processing state of the user uploaded volumes to be returned.\nApplicable only if the UPLOADED is specified in the acquireMethod."}, "maxResults" {"format" "uint32", "description" "Maximum number of results to return.", "location" "query", "type" "integer"}}, :description "Return a list of books in My Library."}, "books.series.get" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/series/get", :response {"$ref" "Series"}, :parameters {"series_id" {"description" "String that identifies the series", "location" "query", "type" "string", "repeated" true}}, :description "Returns Series metadata for the given series ids."}, "books.myconfig.releaseDownloadAccess" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/myconfig/releaseDownloadAccess", :response {"$ref" "DownloadAccesses"}, :parameters {"volumeIds" {"type" "string", "repeated" true, "description" "The volume(s) to release restrictions for.", "location" "query"}, "cpksver" {"type" "string", "description" "The device/version ID from which to release the restriction.", "location" "query"}, "source" {"description" "String to identify the originator of this request.", "type" "string", "location" "query"}, "locale" {"description" "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.", "location" "query", "type" "string"}}, :description "Release downloaded content access restriction."}, "books.volumes.associated.list" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/volumes/{volumeId}/associated", :response {"$ref" "Volumes"}, :parameters {"volumeId" {"description" "ID of the source volume.", "required" true, "type" "string", "location" "path"}, "maxAllowedMaturityRating" {"description" "The maximum allowed maturity rating of returned recommendations. Books with\na higher maturity rating are filtered out.", "enum" ["MAX_ALLOWED_MATURITY_RATING_UNDEFINED" "MATURE" "not-mature"], "type" "string", "location" "query"}, "locale" {"location" "query", "type" "string", "description" "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for\ngenerating recommendations."}, "association" {"location" "query", "description" "Association type.", "type" "string", "enum" ["ASSOCIATION_UNDEFINED" "end-of-sample" "end-of-volume" "related-for-play"]}, "source" {"description" "String to identify the originator of this request.", "location" "query", "type" "string"}}, :description "Return a list of associated books."}, "books.bookshelves.volumes.list" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/users/{userId}/bookshelves/{shelf}/volumes", :response {"$ref" "Volumes"}, :parameters {"maxResults" {"format" "uint32", "location" "query", "description" "Maximum number of results to return", "type" "integer"}, "startIndex" {"type" "integer", "description" "Index of the first element to return (starts at 0)", "format" "uint32", "location" "query"}, "showPreorders" {"location" "query", "type" "boolean", "description" "Set to true to show pre-ordered books. Defaults to false."}, "shelf" {"type" "string", "location" "path", "description" "ID of bookshelf to retrieve volumes.", "required" true}, "userId" {"location" "path", "required" true, "type" "string", "description" "ID of user for whom to retrieve bookshelf volumes."}, "source" {"location" "query", "description" "String to identify the originator of this request.", "type" "string"}}, :description "Retrieves volumes in a specific bookshelf for the specified user."}, "books.promooffer.get" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/promooffer/get", :response {"$ref" "Offers"}, :parameters {"serial" {"description" "device serial", "location" "query", "type" "string"}, "product" {"location" "query", "description" "device product", "type" "string"}, "device" {"type" "string", "description" "device device", "location" "query"}, "model" {"description" "device model", "type" "string", "location" "query"}, "manufacturer" {"type" "string", "location" "query", "description" "device manufacturer"}, "androidId" {"location" "query", "description" "device android_id", "type" "string"}}, :description "Returns a list of promo offers available to the user"}, "books.layers.get" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/volumes/{volumeId}/layersummary/{summaryId}", :response {"$ref" "Layersummary"}, :parameters {"volumeId" {"required" true, "type" "string", "location" "path", "description" "The volume to retrieve layers for."}, "summaryId" {"type" "string", "description" "The ID for the layer to get the summary for.", "location" "path", "required" true}, "contentVersion" {"type" "string", "location" "query", "description" "The content version for the requested volume."}, "source" {"location" "query", "type" "string", "description" "String to identify the originator of this request."}}, :description "Gets the layer summary for a volume."}, "books.mylibrary.bookshelves.get" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/mylibrary/bookshelves/{shelf}", :response {"$ref" "Bookshelf"}, :parameters {"source" {"type" "string", "location" "query", "description" "String to identify the originator of this request."}, "shelf" {"location" "path", "description" "ID of bookshelf to retrieve.", "type" "string", "required" true}}, :description "Retrieves metadata for a specific bookshelf belonging to the authenticated\nuser."}, "books.mylibrary.annotations.list" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/mylibrary/annotations", :response {"$ref" "Annotations"}, :parameters {"pageToken" {"location" "query", "type" "string", "description" "The value of the nextToken from the previous page."}, "contentVersion" {"description" "The content version for the requested volume.", "location" "query", "type" "string"}, "updatedMax" {"type" "string", "description" "RFC 3339 timestamp to restrict to items updated prior to this timestamp\n(exclusive).", "location" "query"}, "updatedMin" {"location" "query", "type" "string", "description" "RFC 3339 timestamp to restrict to items updated since this timestamp\n(inclusive)."}, "maxResults" {"type" "integer", "description" "Maximum number of results to return", "format" "uint32", "location" "query"}, "layerId" {"type" "string", "description" "The layer ID to limit annotation by.", "location" "query"}, "showDeleted" {"description" "Set to true to return deleted annotations. updatedMin must be in the\nrequest to use this. Defaults to false.", "type" "boolean", "location" "query"}, "volumeId" {"description" "The volume to restrict annotations to.", "type" "string", "location" "query"}, "source" {"type" "string", "location" "query", "description" "String to identify the originator of this request."}, "layerIds" {"repeated" true, "location" "query", "description" "The layer ID(s) to limit annotation by.", "type" "string"}}, :description "Retrieves a list of annotations, possibly filtered."}, "books.onboarding.listCategories" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/onboarding/listCategories", :response {"$ref" "Category"}, :parameters {"locale" {"location" "query", "description" "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset.", "type" "string"}}, :description "List categories for onboarding experience."}, "books.cloudloading.addBook" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/cloudloading/addBook", :response {"$ref" "BooksCloudloadingResource"}, :parameters {"mime_type" {"type" "string", "location" "query", "description" "The document MIME type. It can be set only if the drive_document_id is set."}, "drive_document_id" {"description" "A drive document id. The upload_client_token must not be set.", "type" "string", "location" "query"}, "name" {"location" "query", "type" "string", "description" "The document name. It can be set only if the drive_document_id is set."}, "upload_client_token" {"description" "Scotty upload token.", "location" "query", "type" "string"}}, :description "Add a user-upload volume and triggers processing."}, "books.familysharing.share" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/familysharing/share", :response {"$ref" "Empty"}, :parameters {"volumeId" {"location" "query", "description" "The volume to share.", "type" "string"}, "docId" {"location" "query", "type" "string", "description" "The docid to share."}, "source" {"location" "query", "description" "String to identify the originator of this request.", "type" "string"}}, :description "Initiates sharing of the content with the user's family. Empty response\nindicates success."}, "books.cloudloading.deleteBook" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/cloudloading/deleteBook", :response {"$ref" "Empty"}, :parameters {"volumeId" {"description" "The id of the book to be removed.", "type" "string", "location" "query"}}, :description "Remove the book and its contents"}, "books.mylibrary.readingpositions.get" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/mylibrary/readingpositions/{volumeId}", :response {"$ref" "ReadingPosition"}, :parameters {"source" {"location" "query", "type" "string", "description" "String to identify the originator of this request."}, "volumeId" {"required" true, "type" "string", "location" "path", "description" "ID of volume for which to retrieve a reading position."}, "contentVersion" {"description" "Volume content version for which this reading position is requested.", "type" "string", "location" "query"}}, :description "Retrieves my reading position information for a volume."}, "books.cloudloading.updateBook" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/cloudloading/updateBook", :request {"$ref" "BooksCloudloadingResource"}, :response {"$ref" "BooksCloudloadingResource"}, :parameters {}, :description "Updates a user-upload volume."}, "books.mylibrary.bookshelves.clearVolumes" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes", :response {"$ref" "Empty"}, :parameters {"shelf" {"required" true, "location" "path", "type" "string", "description" "ID of bookshelf from which to remove a volume."}, "source" {"location" "query", "description" "String to identify the originator of this request.", "type" "string"}}, :description "Clears all volumes from a bookshelf."}, "books.mylibrary.bookshelves.moveVolume" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/mylibrary/bookshelves/{shelf}/moveVolume", :response {"$ref" "Empty"}, :parameters {"shelf" {"location" "path", "required" true, "description" "ID of bookshelf with the volume.", "type" "string"}, "volumeId" {"type" "string", "description" "ID of volume to move.", "location" "query"}, "source" {"location" "query", "type" "string", "description" "String to identify the originator of this request."}, "volumePosition" {"location" "query", "type" "integer", "format" "int32", "description" "Position on shelf to move the item (0 puts the item before the current\nfirst item, 1 puts it between the first and the second and so on.)"}}, :description "Moves a volume within a bookshelf."}, "books.layers.volumeAnnotations.list" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/volumes/{volumeId}/layers/{layerId}", :response {"$ref" "Volumeannotations"}, :parameters {"pageToken" {"type" "string", "description" "The value of the nextToken from the previous page.", "location" "query"}, "volumeAnnotationsVersion" {"type" "string", "location" "query", "description" "The version of the volume annotations that you are requesting."}, "contentVersion" {"location" "query", "description" "The content version for the requested volume.", "type" "string"}, "endPosition" {"location" "query", "type" "string", "description" "The end position to end retrieving data from."}, "startPosition" {"description" "The start position to start retrieving data from.", "location" "query", "type" "string"}, "updatedMax" {"location" "query", "type" "string", "description" "RFC 3339 timestamp to restrict to items updated prior to this timestamp\n(exclusive)."}, "updatedMin" {"type" "string", "location" "query", "description" "RFC 3339 timestamp to restrict to items updated since this timestamp\n(inclusive)."}, "endOffset" {"description" "The end offset to end retrieving data from.", "type" "string", "location" "query"}, "maxResults" {"format" "uint32", "location" "query", "type" "integer", "description" "Maximum number of results to return"}, "locale" {"type" "string", "location" "query", "description" "The locale information for the data. ISO-639-1 language and ISO-3166-1\ncountry code. Ex: 'en_US'."}, "layerId" {"description" "The ID for the layer to get the annotations.", "location" "path", "type" "string", "required" true}, "startOffset" {"description" "The start offset to start retrieving data from.", "type" "string", "location" "query"}, "showDeleted" {"description" "Set to true to return deleted annotations. updatedMin must be in the\nrequest to use this. Defaults to false.", "type" "boolean", "location" "query"}, "volumeId" {"location" "path", "type" "string", "required" true, "description" "The volume to retrieve annotations for."}, "source" {"location" "query", "description" "String to identify the originator of this request.", "type" "string"}}, :description "Gets the volume annotations for a volume and layer."}, "books.volumes.recommended.rate" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/volumes/recommended/rate", :response {"$ref" "BooksVolumesRecommendedRateResponse"}, :parameters {"locale" {"type" "string", "description" "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for\ngenerating recommendations.", "location" "query"}, "volumeId" {"type" "string", "description" "ID of the source volume.", "location" "query"}, "rating" {"description" "Rating to be given to the volume.", "location" "query", "enum" ["RATING_UNDEFINED" "HAVE_IT" "NOT_INTERESTED"], "type" "string"}, "source" {"location" "query", "type" "string", "description" "String to identify the originator of this request."}}, :description "Rate a recommended book for the current user."}, "books.series.membership.get" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/series/membership/get", :response {"$ref" "Seriesmembership"}, :parameters {"page_size" {"format" "uint32", "location" "query", "type" "integer", "description" "Number of maximum results per page to be included in the response."}, "page_token" {"description" "The value of the nextToken from the previous page.", "location" "query", "type" "string"}, "series_id" {"description" "String that identifies the series", "location" "query", "type" "string"}}, :description "Returns Series membership data given the series id."}, "books.layers.annotationData.get" #:compute.gcp.descriptor{:http-method :get, :path "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}", :response {"$ref" "DictionaryAnnotationdata"}, :parameters {"w" {"description" "The requested pixel width for any images. If width is provided height must\nalso be provided.", "location" "query", "format" "int32", "type" "integer"}, "contentVersion" {"description" "The content version for the volume you are trying to retrieve.", "type" "string", "location" "query"}, "scale" {"type" "integer", "format" "int32", "location" "query", "description" "The requested scale for the image."}, "locale" {"location" "query", "type" "string", "description" "The locale information for the data. ISO-639-1 language and ISO-3166-1\ncountry code. Ex: 'en_US'."}, "layerId" {"location" "path", "required" true, "description" "The ID for the layer to get the annotations.", "type" "string"}, "allowWebDefinitions" {"description" "For the dictionary layer. Whether or not to allow web definitions.", "type" "boolean", "location" "query"}, "volumeId" {"description" "The volume to retrieve annotations for.", "type" "string", "required" true, "location" "path"}, "source" {"description" "String to identify the originator of this request.", "location" "query", "type" "string"}, "h" {"description" "The requested pixel height for any images. If height is provided width must\nalso be provided.", "location" "query", "format" "int32", "type" "integer"}, "annotationDataId" {"required" true, "location" "path", "description" "The ID of the annotation data to retrieve.", "type" "string"}}, :description "Gets the annotation data."}, "books.mylibrary.annotations.summary" #:compute.gcp.descriptor{:http-method :post, :path "books/v1/mylibrary/annotations/summary", :response {"$ref" "AnnotationsSummary"}, :parameters {"volumeId" {"type" "string", "location" "query", "description" "Volume id to get the summary for."}, "layerIds" {"location" "query", "repeated" true, "description" "Array of layer IDs to get the summary for.", "type" "string"}}, :description "Gets the summary of specified layers."}}, :schemas {"Annotation" {"properties" {"created" {"type" "string", "description" "Timestamp for the created time of this annotation."}, "currentVersionRanges" {"type" "object", "properties" {"gbImageRange" {"$ref" "BooksAnnotationsRange", "description" "Range in GB image format for this annotation for version above."}, "cfiRange" {"$ref" "BooksAnnotationsRange", "description" "Range in CFI format for this annotation for version above."}, "imageCfiRange" {"description" "Range in image CFI format for this annotation for version above.", "$ref" "BooksAnnotationsRange"}, "gbTextRange" {"description" "Range in GB text format for this annotation for version above.", "$ref" "BooksAnnotationsRange"}, "contentVersion" {"type" "string", "description" "Content version applicable to ranges below."}}, "description" "Selection ranges for the most recent content version."}, "id" {"description" "Id of this annotation, in the form of a GUID.", "type" "string"}, "layerId" {"description" "The layer this annotation is for.", "type" "string"}, "selfLink" {"type" "string", "description" "URL to this resource."}, "highlightStyle" {"description" "The highlight style for this annotation.", "type" "string"}, "kind" {"description" "Resource type.", "type" "string"}, "layerSummary" {"properties" {"limitType" {"type" "string", "description" "Type of limitation on this layer. \"limited\" or \"unlimited\" for the \"copy\"\nlayer."}, "allowedCharacterCount" {"type" "integer", "format" "int32", "description" "Maximum allowed characters on this layer, especially for the \"copy\"\nlayer."}, "remainingCharacterCount" {"description" "Remaining allowed characters on this layer, especially for the \"copy\"\nlayer.", "format" "int32", "type" "integer"}}, "type" "object"}, "volumeId" {"description" "The volume that this annotation belongs to.", "type" "string"}, "deleted" {"description" "Indicates that this annotation is deleted.", "type" "boolean"}, "clientVersionRanges" {"properties" {"cfiRange" {"description" "Range in CFI format for this annotation sent by client.", "$ref" "BooksAnnotationsRange"}, "imageCfiRange" {"description" "Range in image CFI format for this annotation sent by client.", "$ref" "BooksAnnotationsRange"}, "gbImageRange" {"$ref" "BooksAnnotationsRange", "description" "Range in GB image format for this annotation sent by client."}, "contentVersion" {"description" "Content version the client sent in.", "type" "string"}, "gbTextRange" {"description" "Range in GB text format for this annotation sent by client.", "$ref" "BooksAnnotationsRange"}}, "type" "object", "description" "Selection ranges sent from the client."}, "updated" {"description" "Timestamp for the last time this annotation was modified.", "type" "string"}, "afterSelectedText" {"type" "string", "description" "Anchor text after excerpt. For requests, if the user bookmarked a screen\nthat has no flowing text on it, then this field should be empty."}, "selectedText" {"description" "Excerpt from the volume.", "type" "string"}, "data" {"type" "string", "description" "User-created data for this annotation."}, "pageIds" {"items" {"type" "string"}, "type" "array", "description" "Pages that this annotation spans."}, "beforeSelectedText" {"description" "Anchor text before excerpt. For requests, if the user bookmarked a screen\nthat has no flowing text on it, then this field should be empty.", "type" "string"}}, "id" "Annotation", "type" "object"}, "Empty" {"description" "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.", "properties" {}, "id" "Empty", "type" "object"}, "Layersummaries" {"type" "object", "id" "Layersummaries", "properties" {"totalItems" {"description" "The total number of layer summaries found.", "type" "integer", "format" "int32"}, "items" {"items" {"$ref" "Layersummary"}, "description" "A list of layer summary items.", "type" "array"}, "kind" {"type" "string", "description" "Resource type."}}}, "Review" {"id" "Review", "properties" {"author" {"properties" {"displayName" {"description" "Name of this person.", "type" "string"}}, "type" "object", "description" "Author of this review."}, "fullTextUrl" {"type" "string", "description" "URL for the full review text, for reviews gathered from the web."}, "content" {"description" "Review text.", "type" "string"}, "kind" {"description" "Resource type for a review.", "type" "string"}, "title" {"description" "Title for this review.", "type" "string"}, "volumeId" {"type" "string", "description" "Volume that this review is for."}, "source" {"type" "object", "properties" {"extraDescription" {"description" "Extra text about the source of the review.", "type" "string"}, "url" {"type" "string", "description" "URL of the source of the review."}, "description" {"type" "string", "description" "Name of the source."}}, "description" "Information regarding the source of this review, when the review is not\nfrom a Google Books user."}, "type" {"type" "string", "description" "Source type for this review. Possible values are EDITORIAL, WEB_USER or\nGOOGLE_USER."}, "date" {"description" "Date of this review.", "type" "string"}, "rating" {"type" "string", "description" "Star rating for this review. Possible values are ONE, TWO, THREE, FOUR,\nFIVE or NOT_RATED."}}, "type" "object"}, "Geolayerdata" {"properties" {"kind" {"type" "string"}, "geo" {"properties" {"boundary" {"items" {"type" "string"}, "type" "array", "description" "The boundary of the location as a set of loops containing pairs of\nlatitude, longitude coordinates."}, "mapType" {"type" "string", "description" "The type of map that should be used for this location. EX: HYBRID,\nROADMAP, SATELLITE, TERRAIN"}, "viewport" {"description" "The viewport for showing this location. This is a latitude, longitude\nrectangle.", "properties" {"hi" {"type" "object", "properties" {"latitude" {"type" "number", "format" "double"}, "longitude" {"type" "number", "format" "double"}}}, "lo" {"properties" {"latitude" {"format" "double", "type" "number"}, "longitude" {"type" "number", "format" "double"}}, "type" "object"}}, "type" "object"}, "countryCode" {"type" "string", "description" "The country code of the location."}, "cachePolicy" {"type" "string", "description" "The cache policy active for this data. EX: UNRESTRICTED, RESTRICTED,\nNEVER"}, "longitude" {"format" "double", "description" "The longitude of the location.", "type" "number"}, "zoom" {"description" "The Zoom level to use for the map. Zoom levels between 0 (the lowest zoom\nlevel, in which the entire world can be seen on one map) to 21+ (down to\nindividual buildings). See: https:\n//developers.google.com/maps/documentation/staticmaps/#Zoomlevels", "type" "integer", "format" "int32"}, "latitude" {"type" "number", "description" "The latitude of the location.", "format" "double"}}, "type" "object"}, "common" {"type" "object", "properties" {"lang" {"type" "string", "description" "The language of the information url and description."}, "snippetUrl" {"type" "string", "description" "The URL for information for this location. Ex: wikipedia link."}, "snippet" {"description" "The description for this location.", "type" "string"}, "title" {"type" "string", "description" "The display title and localized canonical name to use when searching for\nthis entity on Google search."}, "previewImageUrl" {"description" "The URL for the preview image information.", "type" "string"}}}}, "id" "Geolayerdata", "type" "object"}, "Category" {"id" "Category", "properties" {"kind" {"description" "Resource type.", "type" "string"}, "items" {"type" "array", "items" {"type" "object", "properties" {"categoryId" {"type" "string"}, "badgeUrl" {"type" "string"}, "name" {"type" "string"}}}, "description" "A list of onboarding categories."}}, "type" "object"}, "Volume" {"id" "Volume", "type" "object", "properties" {"layerInfo" {"properties" {"layers" {"items" {"properties" {"layerId" {"type" "string", "description" "The layer id of this layer (e.g. \"geo\")."}, "volumeAnnotationsVersion" {"description" "The current version of this layer's volume annotations. Note that this\nversion applies only to the data in the\nbooks.layers.volumeAnnotations.* responses. The actual annotation data\nis versioned separately.", "type" "string"}}, "type" "object"}, "description" "A layer should appear here if and only if the layer exists for this book.", "type" "array"}}, "type" "object", "description" "What layers exist in this volume and high level information about them."}, "volumeInfo" {"type" "object", "description" "General volume information.", "properties" {"pageCount" {"format" "int32", "type" "integer", "description" "Total number of pages as per publisher metadata."}, "canonicalVolumeLink" {"description" "Canonical URL for a volume. (In LITE projection.)", "type" "string"}, "publishedDate" {"description" "Date of publication. (In LITE projection.)", "type" "string"}, "mainCategory" {"description" "The main category to which this volume belongs. It will be the category\nfrom the categories list returned below that has the highest weight.", "type" "string"}, "infoLink" {"description" "URL to view information about this volume on the Google Books site. (In\nLITE projection)", "type" "string"}, "contentVersion" {"type" "string", "description" "An identifier for the version of the volume content (text & images). (In\nLITE projection)"}, "ratingsCount" {"format" "int32", "type" "integer", "description" "The number of review ratings for this volume."}, "previewLink" {"description" "URL to preview this volume on the Google Books site.", "type" "string"}, "samplePageCount" {"description" "Total number of sample pages as per publisher metadata.", "type" "integer", "format" "int32"}, "seriesInfo" {"$ref" "Volumeseriesinfo"}, "authors" {"items" {"type" "string"}, "type" "array", "description" "The names of the authors and/or editors for this volume. (In LITE\nprojection)"}, "maturityRating" {"type" "string"}, "categories" {"type" "array", "items" {"type" "string"}, "description" "A list of subject categories, such as \"Fiction\", \"Suspense\", etc."}, "averageRating" {"format" "double", "type" "number", "description" "The mean review rating for this volume. (min = 1.0, max = 5.0)"}, "imageLinks" {"type" "object", "properties" {"large" {"type" "string", "description" "Image link for large size (width of ~800 pixels). (In LITE projection)"}, "small" {"type" "string", "description" "Image link for small size (width of ~300 pixels). (In LITE projection)"}, "thumbnail" {"type" "string", "description" "Image link for thumbnail size (width of ~128 pixels). (In LITE\nprojection)"}, "smallThumbnail" {"type" "string", "description" "Image link for small thumbnail size (width of ~80 pixels). (In LITE\nprojection)"}, "extraLarge" {"type" "string", "description" "Image link for extra large size (width of ~1280 pixels). (In LITE\nprojection)"}, "medium" {"description" "Image link for medium size (width of ~575 pixels). (In LITE projection)", "type" "string"}}, "description" "A list of image links for all the sizes that are available. (In LITE\nprojection.)"}, "dimensions" {"properties" {"height" {"description" "Height or length of this volume (in cm).", "type" "string"}, "thickness" {"description" "Thickness of this volume (in cm).", "type" "string"}, "width" {"type" "string", "description" "Width of this volume (in cm)."}}, "description" "Physical dimensions of this volume.", "type" "object"}, "comicsContent" {"description" "Whether the volume has comics content.", "type" "boolean"}, "printedPageCount" {"type" "integer", "format" "int32", "description" "Total number of printed pages in generated pdf representation."}, "printType" {"type" "string", "description" "Type of publication of this volume. Possible values are BOOK or MAGAZINE."}, "industryIdentifiers" {"items" {"type" "object", "properties" {"identifier" {"description" "Industry specific volume identifier.", "type" "string"}, "type" {"description" "Identifier type. Possible values are ISBN_10, ISBN_13, ISSN and OTHER.", "type" "string"}}}, "description" "Industry standard identifiers for this volume.", "type" "array"}, "subtitle" {"type" "string", "description" "Volume subtitle. (In LITE projection.)"}, "allowAnonLogging" {"type" "boolean", "description" "Whether anonymous logging should be allowed."}, "title" {"description" "Volume title. (In LITE projection.)", "type" "string"}, "publisher" {"type" "string", "description" "Publisher of this volume. (In LITE projection.)"}, "panelizationSummary" {"properties" {"epubBubbleVersion" {"type" "string"}, "containsImageBubbles" {"type" "boolean"}, "containsEpubBubbles" {"type" "boolean"}, "imageBubbleVersion" {"type" "string"}}, "description" "A top-level summary of the panelization info in this volume.", "type" "object"}, "readingModes" {"type" "object", "properties" {"text" {"type" "boolean"}, "image" {"type" "boolean"}}, "description" "The reading modes available for this volume."}, "language" {"description" "Best language for this volume (based on content). It is the two-letter\nISO 639-1 code such as 'fr', 'en', etc.", "type" "string"}, "description" {"description" "A synopsis of the volume. The text of the description is formatted in\nHTML and includes simple formatting elements, such as b, i, and br tags.\n(In LITE projection.)", "type" "string"}}}, "id" {"type" "string", "description" "Unique identifier for a volume. (In LITE projection.)"}, "accessInfo" {"type" "object", "properties" {"country" {"type" "string", "description" "The two-letter ISO_3166-1 country code for which this access information\nis valid. (In LITE projection.)"}, "driveImportedContentLink" {"description" "URL to the Google Drive viewer if this volume is uploaded by the user by\nselecting the file from Google Drive.", "type" "string"}, "pdf" {"description" "Information about pdf content. (In LITE projection.)", "type" "object", "properties" {"downloadLink" {"description" "URL to download pdf. (In LITE projection.)", "type" "string"}, "acsTokenLink" {"type" "string", "description" "URL to retrieve ACS token for pdf download. (In LITE projection.)"}, "isAvailable" {"type" "boolean", "description" "Is a scanned image pdf available either as public domain or for\npurchase. (In LITE projection.)"}}}, "epub" {"description" "Information about epub content. (In LITE projection.)", "type" "object", "properties" {"acsTokenLink" {"description" "URL to retrieve ACS token for epub download. (In LITE projection.)", "type" "string"}, "downloadLink" {"type" "string", "description" "URL to download epub. (In LITE projection.)"}, "isAvailable" {"description" "Is a flowing text epub available either as public domain or for\npurchase. (In LITE projection.)", "type" "boolean"}}}, "embeddable" {"description" "Whether this volume can be embedded in a viewport using the Embedded\nViewer API.", "type" "boolean"}, "webReaderLink" {"description" "URL to read this volume on the Google Books site. Link will not allow\nusers to read non-viewable volumes.", "type" "string"}, "publicDomain" {"type" "boolean", "description" "Whether or not this book is public domain in the country listed above."}, "downloadAccess" {"description" "Information about a volume's download license access restrictions.", "$ref" "DownloadAccessRestriction"}, "viewOrderUrl" {"type" "string", "description" "For ordered but not yet processed orders, we give a URL that can be used\nto go to the appropriate Google Wallet page."}, "explicitOfflineLicenseManagement" {"description" "Whether this volume requires that the client explicitly request offline\ndownload license rather than have it done automatically when loading the\ncontent, if the client supports it.", "type" "boolean"}, "quoteSharingAllowed" {"type" "boolean", "description" "Whether quote sharing is allowed for this volume."}, "textToSpeechPermission" {"type" "string", "description" "Whether text-to-speech is permitted for this volume. Values can be\nALLOWED, ALLOWED_FOR_ACCESSIBILITY, or NOT_ALLOWED."}, "viewability" {"description" "The read access of a volume. Possible values are PARTIAL, ALL_PAGES,\nNO_PAGES or UNKNOWN. This value depends on the country listed above. A\nvalue of PARTIAL means that the publisher has allowed some portion of the\nvolume to be viewed publicly, without purchase. This can apply to eBooks\nas well as non-eBooks. Public domain books will always have a value of\nALL_PAGES.", "type" "string"}, "accessViewStatus" {"description" "Combines the access and viewability of this volume into a single status\nfield for this user. Values can be FULL_PURCHASED, FULL_PUBLIC_DOMAIN,\nSAMPLE or NONE. (In LITE projection.)", "type" "string"}}, "description" "Any information about a volume related to reading or obtaining that volume\ntext. This information can depend on country (books may be public domain in\none country but not in another, e.g.)."}, "saleInfo" {"type" "object", "description" "Any information about a volume related to the eBookstore and/or\npurchaseability. This information can depend on the country where the\nrequest originates from (i.e. books may not be for sale in certain\ncountries).", "properties" {"listPrice" {"description" "Suggested retail price. (In LITE projection.)", "type" "object", "properties" {"amount" {"format" "double", "type" "number", "description" "Amount in the currency listed below. (In LITE projection.)"}, "currencyCode" {"description" "An ISO 4217, three-letter currency code. (In LITE projection.)", "type" "string"}}}, "saleability" {"description" "Whether or not this book is available for sale or offered for free in the\nGoogle eBookstore for the country listed above. Possible values are\nFOR_SALE, FOR_RENTAL_ONLY, FOR_SALE_AND_RENTAL, FREE, NOT_FOR_SALE, or\nFOR_PREORDER.", "type" "string"}, "retailPrice" {"type" "object", "properties" {"amount" {"description" "Amount in the currency listed below. (In LITE projection.)", "format" "double", "type" "number"}, "currencyCode" {"description" "An ISO 4217, three-letter currency code. (In LITE projection.)", "type" "string"}}, "description" "The actual selling price of the book. This is the same as the suggested\nretail or list price unless there are offers or discounts on this volume.\n(In LITE projection.)"}, "country" {"type" "string", "description" "The two-letter ISO_3166-1 country code for which this sale information is\nvalid. (In LITE projection.)"}, "isEbook" {"description" "Whether or not this volume is an eBook (can be added to the My eBooks\nshelf).", "type" "boolean"}, "onSaleDate" {"type" "string", "description" "The date on which this book is available for sale."}, "offers" {"description" "Offers available for this volume (sales and rentals).", "items" {"type" "object", "properties" {"rentalDuration" {"type" "object", "description" "The rental duration (for rental offers only).", "properties" {"unit" {"type" "string"}, "count" {"format" "double", "type" "number"}}}, "giftable" {"description" "Indicates whether the offer is giftable.", "type" "boolean"}, "listPrice" {"type" "object", "properties" {"amountInMicros" {"type" "number", "format" "double"}, "currencyCode" {"type" "string"}}, "description" "Offer list (=undiscounted) price in Micros."}, "finskyOfferType" {"type" "integer", "description" "The finsky offer type (e.g., PURCHASE=0 RENTAL=3)", "format" "int32"}, "retailPrice" {"description" "Offer retail (=discounted) price in Micros", "properties" {"amountInMicros" {"type" "number", "format" "double"}, "currencyCode" {"type" "string"}}, "type" "object"}}}, "type" "array"}, "buyLink" {"description" "URL to purchase this volume on the Google Books site. (In LITE\nprojection)", "type" "string"}}}, "userInfo" {"properties" {"isPreordered" {"type" "boolean", "description" "Whether or not this volume was pre-ordered by the authenticated user\nmaking the request. (In LITE projection.)"}, "userUploadedVolumeInfo" {"type" "object", "properties" {"processingState" {"type" "string"}}}, "isInMyBooks" {"description" "Whether or not this volume is currently in \"my books.\"", "type" "boolean"}, "copy" {"description" "Copy/Paste accounting information.", "properties" {"allowedCharacterCount" {"type" "integer", "format" "int32"}, "updated" {"type" "string"}, "limitType" {"type" "string"}, "remainingCharacterCount" {"type" "integer", "format" "int32"}}, "type" "object"}, "review" {"description" "This user's review of this volume, if one exists.", "$ref" "Review"}, "acquisitionType" {"format" "int32", "description" "How this volume was acquired.", "type" "integer"}, "familySharing" {"type" "object", "description" "Information on the ability to share with the family.", "properties" {"isSharingDisabledByFop" {"type" "boolean", "description" "Whether or not sharing this volume is temporarily disabled due to\nissues with the Family Wallet."}, "isSharingAllowed" {"description" "Whether or not this volume can be shared with the family by the user.\nThis includes sharing eligibility of both the volume and the user. If\nthe value is true, the user can initiate a family sharing action.", "type" "boolean"}, "familyRole" {"description" "The role of the user in the family.", "type" "string"}}}, "isFamilySharedFromUser" {"type" "boolean", "description" "Whether or not the user shared this volume with the family."}, "acquiredTime" {"type" "string", "description" "Timestamp when this volume was acquired by the user. (RFC 3339 UTC\ndate-time format) Acquiring includes purchase, user upload, receiving\nfamily sharing, etc."}, "isUploaded" {"type" "boolean", "description" "Whether or not this volume was user uploaded."}, "isFamilySharingAllowed" {"type" "boolean", "description" "Deprecated: Replaced by familySharing."}, "entitlementType" {"type" "integer", "description" "Whether this volume is purchased, sample, pd download etc.", "format" "int32"}, "isFamilySharingDisabledByFop" {"type" "boolean", "description" "Deprecated: Replaced by familySharing."}, "rentalPeriod" {"type" "object", "properties" {"startUtcSec" {"format" "int64", "type" "string"}, "endUtcSec" {"format" "int64", "type" "string"}}, "description" "Period during this book is/was a valid rental."}, "readingPosition" {"$ref" "ReadingPosition", "description" "The user's current reading position in the volume, if one is available.\n(In LITE projection.)"}, "updated" {"description" "Timestamp when this volume was last modified by a user action, such as a\nreading position update, volume purchase or writing a review. (RFC 3339\nUTC date-time format).", "type" "string"}, "rentalState" {"type" "string", "description" "Whether this book is an active or an expired rental."}, "isPurchased" {"type" "boolean", "description" "Whether or not this volume was purchased by the authenticated user making\nthe request. (In LITE projection.)"}, "isFamilySharedToUser" {"type" "boolean", "description" "Whether or not the user received this volume through family sharing."}}, "description" "User specific information related to this volume. (e.g. page this user last\nread or whether they purchased this book)", "type" "object"}, "selfLink" {"type" "string", "description" "URL to this resource. (In LITE projection.)"}, "searchInfo" {"properties" {"textSnippet" {"type" "string", "description" "A text snippet containing the search query."}}, "type" "object", "description" "Search result information related to this volume."}, "etag" {"description" "Opaque identifier for a specific version of a volume resource. (In LITE\nprojection)", "type" "string"}, "kind" {"description" "Resource type for a volume. (In LITE projection.)", "type" "string"}, "recommendedInfo" {"type" "object", "properties" {"explanation" {"type" "string", "description" "A text explaining why this volume is recommended."}}, "description" "Recommendation related information for this volume."}}}, "Bookshelves" {"id" "Bookshelves", "properties" {"kind" {"type" "string", "description" "Resource type."}, "items" {"description" "A list of bookshelves.", "items" {"$ref" "Bookshelf"}, "type" "array"}}, "type" "object"}, "BooksCloudloadingResource" {"id" "BooksCloudloadingResource", "properties" {"title" {"type" "string"}, "processingState" {"type" "string"}, "volumeId" {"type" "string"}, "author" {"type" "string"}}, "type" "object"}, "BooksVolumesRecommendedRateResponse" {"properties" {"consistency_token" {"type" "string"}}, "id" "BooksVolumesRecommendedRateResponse", "type" "object"}, "DownloadAccessRestriction" {"properties" {"message" {"description" "Error/warning message.", "type" "string"}, "downloadsAcquired" {"description" "If restricted, the number of content download licenses already acquired\n(including the requesting client, if licensed).", "type" "integer", "format" "int32"}, "deviceAllowed" {"description" "If restricted, whether access is granted for this (user, device, volume).", "type" "boolean"}, "justAcquired" {"description" "If deviceAllowed, whether access was just acquired with this request.", "type" "boolean"}, "signature" {"type" "string", "description" "Response signature."}, "maxDownloadDevices" {"format" "int32", "description" "If restricted, the maximum number of content download licenses for this\nvolume.", "type" "integer"}, "kind" {"type" "string", "description" "Resource type."}, "volumeId" {"type" "string", "description" "Identifies the volume for which this entry applies."}, "source" {"type" "string", "description" "Client app identifier for verification. Download access and\nclient-validation only."}, "restricted" {"description" "Whether this volume has any download access restrictions.", "type" "boolean"}, "reasonCode" {"type" "string", "description" "Error/warning reason code.  Additional codes may be added in the future. 0\nOK 100   ACCESS_DENIED_PUBLISHER_LIMIT 101   ACCESS_DENIED_LIMIT 200\nWARNING_USED_LAST_ACCESS"}, "nonce" {"description" "Client nonce for verification. Download access and client-validation only.", "type" "string"}}, "id" "DownloadAccessRestriction", "type" "object"}, "Volumeannotation" {"properties" {"annotationDataLink" {"description" "Link to get data for this annotation.", "type" "string"}, "annotationType" {"type" "string", "description" "The type of annotation this is."}, "id" {"type" "string", "description" "Unique id of this volume annotation."}, "layerId" {"type" "string", "description" "The Layer this annotation is for."}, "selfLink" {"type" "string", "description" "URL to this resource."}, "kind" {"description" "Resource Type", "type" "string"}, "volumeId" {"type" "string", "description" "The Volume this annotation is for."}, "deleted" {"type" "boolean", "description" "Indicates that this annotation is deleted."}, "updated" {"type" "string", "description" "Timestamp for the last time this anntoation was updated. (RFC 3339 UTC\ndate-time format)."}, "annotationDataId" {"description" "The annotation data id for this volume annotation.", "type" "string"}, "contentRanges" {"description" "The content ranges to identify the selected text.", "properties" {"gbImageRange" {"description" "Range in GB image format for this annotation for version above.", "$ref" "BooksAnnotationsRange"}, "contentVersion" {"type" "string", "description" "Content version applicable to ranges below."}, "gbTextRange" {"description" "Range in GB text format for this annotation for version above.", "$ref" "BooksAnnotationsRange"}, "cfiRange" {"$ref" "BooksAnnotationsRange", "description" "Range in CFI format for this annotation for version above."}}, "type" "object"}, "selectedText" {"type" "string", "description" "Excerpt from the volume."}, "data" {"description" "Data for this annotation.", "type" "string"}, "pageIds" {"description" "Pages the annotation spans.", "type" "array", "items" {"type" "string"}}}, "type" "object", "id" "Volumeannotation"}, "Annotations" {"properties" {"kind" {"description" "Resource type.", "type" "string"}, "items" {"items" {"$ref" "Annotation"}, "description" "A list of annotations.", "type" "array"}, "nextPageToken" {"description" "Token to pass in for pagination for the next page. This will not be present\nif this request does not have more results.", "type" "string"}, "totalItems" {"description" "Total number of annotations found. This may be greater than the number of\nnotes returned in this response if results have been paginated.", "type" "integer", "format" "int32"}}, "type" "object", "id" "Annotations"}, "Layersummary" {"properties" {"volumeAnnotationsVersion" {"description" "The current version of this layer's volume annotations. Note that this\nversion applies only to the data in the books.layers.volumeAnnotations.*\nresponses. The actual annotation data is versioned separately.", "type" "string"}, "contentVersion" {"description" "The content version this resource is for.", "type" "string"}, "dataCount" {"description" "The number of data items for this layer.", "format" "int32", "type" "integer"}, "annotationsDataLink" {"description" "Link to get data for this annotation.", "type" "string"}, "id" {"description" "Unique id of this layer summary.", "type" "string"}, "annotationsLink" {"description" "The link to get the annotations for this layer.", "type" "string"}, "annotationCount" {"type" "integer", "description" "The number of annotations for this layer.", "format" "int32"}, "layerId" {"description" "The layer id for this summary.", "type" "string"}, "annotationTypes" {"items" {"type" "string"}, "type" "array", "description" "The list of annotation types contained for this layer."}, "selfLink" {"description" "URL to this resource.", "type" "string"}, "kind" {"description" "Resource Type", "type" "string"}, "volumeId" {"description" "The volume id this resource is for.", "type" "string"}, "updated" {"type" "string", "description" "Timestamp for the last time an item in this layer was updated. (RFC 3339\nUTC date-time format)."}}, "type" "object", "id" "Layersummary"}, "Discoveryclusters" {"properties" {"totalClusters" {"format" "int32", "type" "integer"}, "kind" {"description" "Resorce type.", "type" "string"}, "clusters" {"type" "array", "items" {"properties" {"volumes" {"items" {"$ref" "Volume"}, "type" "array"}, "uid" {"type" "string"}, "totalVolumes" {"type" "integer", "format" "int32"}, "banner_with_content_container" {"properties" {"moreButtonUrl" {"type" "string"}, "fillColorArgb" {"type" "string"}, "maskColorArgb" {"type" "string"}, "moreButtonText" {"type" "string"}, "imageUrl" {"type" "string"}, "textColorArgb" {"type" "string"}}, "type" "object"}, "title" {"type" "string"}, "subTitle" {"type" "string"}}, "type" "object"}}}, "type" "object", "id" "Discoveryclusters"}, "Annotationsdata" {"id" "Annotationsdata", "type" "object", "properties" {"kind" {"description" "Resource type", "type" "string"}, "items" {"type" "array", "items" {"$ref" "GeoAnnotationdata"}, "description" "A list of Annotation Data."}, "totalItems" {"type" "integer", "format" "int32", "description" "The total number of volume annotations found."}, "nextPageToken" {"description" "Token to pass in for pagination for the next page. This will not be present\nif this request does not have more results.", "type" "string"}}}, "ReadingPosition" {"type" "object", "id" "ReadingPosition", "properties" {"gbImagePosition" {"type" "string", "description" "Position in a volume for image-based content."}, "epubCfiPosition" {"description" "Position in an EPUB as a CFI.", "type" "string"}, "pdfPosition" {"type" "string", "description" "Position in a PDF file."}, "gbTextPosition" {"description" "Position in a volume for text-based content.", "type" "string"}, "updated" {"description" "Timestamp when this reading position was last updated (formatted UTC\ntimestamp with millisecond resolution).", "type" "string"}, "kind" {"type" "string", "description" "Resource type for a reading position."}, "volumeId" {"type" "string", "description" "Volume id associated with this reading position."}}}, "Volumeseriesinfo" {"id" "Volumeseriesinfo", "type" "object", "properties" {"kind" {"type" "string", "description" "Resource type."}, "bookDisplayNumber" {"description" "The display number string. This should be used only for display purposes\nand the actual sequence should be inferred from the below orderNumber.", "type" "string"}, "shortSeriesBookTitle" {"description" "Short book title in the context of the series.", "type" "string"}, "volumeSeries" {"items" {"properties" {"issue" {"items" {"type" "object", "properties" {"issueDisplayNumber" {"type" "string"}, "issueOrderNumber" {"type" "integer", "format" "int32"}}}, "description" "List of issues. Applicable only for Collection Edition and Omnibus.", "type" "array"}, "seriesId" {"type" "string", "description" "The series id."}, "seriesBookType" {"type" "string", "description" "The book type in the context of series. Examples - Single Issue,\nCollection Edition, etc."}, "orderNumber" {"format" "int32", "type" "integer", "description" "The book order number in the series."}}, "type" "object"}, "type" "array"}}}, "Volume2" {"type" "object", "properties" {"kind" {"type" "string", "description" "Resource type."}, "nextPageToken" {"type" "string"}, "items" {"items" {"$ref" "Volume"}, "description" "A list of volumes.", "type" "array"}}, "id" "Volume2"}, "Bookshelf" {"id" "Bookshelf", "type" "object", "properties" {"volumeCount" {"type" "integer", "format" "int32", "description" "Number of volumes in this bookshelf."}, "created" {"description" "Created time for this bookshelf (formatted UTC timestamp with millisecond\nresolution).", "type" "string"}, "access" {"type" "string", "description" "Whether this bookshelf is PUBLIC or PRIVATE."}, "id" {"format" "int32", "description" "Id of this bookshelf, only unique by user.", "type" "integer"}, "volumesLastUpdated" {"type" "string", "description" "Last time a volume was added or removed from this bookshelf (formatted UTC\ntimestamp with millisecond resolution)."}, "selfLink" {"type" "string", "description" "URL to this resource."}, "kind" {"description" "Resource type for bookshelf metadata.", "type" "string"}, "title" {"description" "Title of this bookshelf.", "type" "string"}, "updated" {"description" "Last modified time of this bookshelf (formatted UTC timestamp with\nmillisecond resolution).", "type" "string"}, "description" {"type" "string", "description" "Description of this bookshelf."}}}, "ConcurrentAccessRestriction" {"id" "ConcurrentAccessRestriction", "properties" {"message" {"description" "Error/warning message.", "type" "string"}, "timeWindowSeconds" {"description" "Time in seconds for license auto-expiration.", "format" "int32", "type" "integer"}, "deviceAllowed" {"type" "boolean", "description" "Whether access is granted for this (user, device, volume)."}, "signature" {"description" "Response signature.", "type" "string"}, "kind" {"type" "string", "description" "Resource type."}, "volumeId" {"description" "Identifies the volume for which this entry applies.", "type" "string"}, "source" {"description" "Client app identifier for verification. Download access and\nclient-validation only.", "type" "string"}, "restricted" {"description" "Whether this volume has any concurrent access restrictions.", "type" "boolean"}, "reasonCode" {"description" "Error/warning reason code.", "type" "string"}, "nonce" {"description" "Client nonce for verification. Download access and client-validation only.", "type" "string"}, "maxConcurrentDevices" {"description" "The maximum number of concurrent access licenses for this volume.", "format" "int32", "type" "integer"}}, "type" "object"}, "FamilyInfo" {"properties" {"membership" {"description" "Family membership info of the user that made the request.", "properties" {"allowedMaturityRating" {"description" "The maximum allowed maturity rating for the user.", "type" "string"}, "acquirePermission" {"type" "string", "description" "Restrictions on user buying and acquiring content."}, "role" {"description" "The role of the user in the family.", "type" "string"}, "isInFamily" {"type" "boolean"}, "ageGroup" {"description" "The age group of the user.", "type" "string"}}, "type" "object"}, "kind" {"description" "Resource type.", "type" "string"}}, "type" "object", "id" "FamilyInfo"}, "DownloadAccesses" {"properties" {"kind" {"type" "string", "description" "Resource type."}, "downloadAccessList" {"items" {"$ref" "DownloadAccessRestriction"}, "type" "array", "description" "A list of download access responses."}}, "id" "DownloadAccesses", "type" "object"}, "Dictlayerdata" {"type" "object", "id" "Dictlayerdata", "properties" {"kind" {"type" "string"}, "common" {"type" "object", "properties" {"title" {"type" "string", "description" "The display title and localized canonical name to use when searching for\nthis entity on Google search."}}}, "dict" {"properties" {"words" {"type" "array", "items" {"properties" {"source" {"properties" {"attribution" {"type" "string"}, "url" {"type" "string"}}, "type" "object", "description" "The words with different meanings but not related words, e.g. \"go\"\n(game) and \"go\" (verb)."}, "derivatives" {"items" {"type" "object", "properties" {"source" {"properties" {"url" {"type" "string"}, "attribution" {"type" "string"}}, "type" "object"}, "text" {"type" "string"}}}, "type" "array"}, "senses" {"type" "array", "items" {"type" "object", "properties" {"pronunciationUrl" {"type" "string"}, "partOfSpeech" {"type" "string"}, "source" {"properties" {"attribution" {"type" "string"}, "url" {"type" "string"}}, "type" "object"}, "definitions" {"type" "array", "items" {"properties" {"examples" {"items" {"properties" {"text" {"type" "string"}, "source" {"properties" {"attribution" {"type" "string"}, "url" {"type" "string"}}, "type" "object"}}, "type" "object"}, "type" "array"}, "definition" {"type" "string"}}, "type" "object"}}, "conjugations" {"items" {"type" "object", "properties" {"value" {"type" "string"}, "type" {"type" "string"}}}, "type" "array"}, "syllabification" {"type" "string"}, "pronunciation" {"type" "string"}, "synonyms" {"items" {"properties" {"text" {"type" "string"}, "source" {"properties" {"url" {"type" "string"}, "attribution" {"type" "string"}}, "type" "object"}}, "type" "object"}, "type" "array"}}}}, "examples" {"items" {"type" "object", "properties" {"text" {"type" "string"}, "source" {"type" "object", "properties" {"url" {"type" "string"}, "attribution" {"type" "string"}}}}}, "type" "array"}}, "type" "object"}}, "source" {"type" "object", "description" "The source, url and attribution for this dictionary data.", "properties" {"attribution" {"type" "string"}, "url" {"type" "string"}}}}, "type" "object"}}}, "RequestAccessData" {"properties" {"concurrentAccess" {"$ref" "ConcurrentAccessRestriction", "description" "A concurrent access response."}, "kind" {"type" "string", "description" "Resource type."}, "downloadAccess" {"description" "A download access response.", "$ref" "DownloadAccessRestriction"}}, "type" "object", "id" "RequestAccessData"}, "Metadata" {"type" "object", "id" "Metadata", "properties" {"items" {"items" {"type" "object", "properties" {"encrypted_key" {"type" "string"}, "download_url" {"type" "string"}, "version" {"type" "string", "format" "int64"}, "language" {"type" "string"}, "size" {"type" "string", "format" "int64"}}}, "description" "A list of offline dictionary metadata.", "type" "array"}, "kind" {"type" "string", "description" "Resource type."}}}, "Series" {"type" "object", "properties" {"kind" {"type" "string", "description" "Resource type."}, "series" {"items" {"properties" {"bannerImageUrl" {"type" "string"}, "isComplete" {"type" "boolean"}, "imageUrl" {"type" "string"}, "seriesId" {"type" "string"}, "eligibleForSubscription" {"type" "boolean"}, "seriesFormatType" {"type" "string"}, "subscriptionId" {"type" "string"}, "seriesSubscriptionReleaseInfo" {"type" "object", "properties" {"currentReleaseInfo" {"type" "object", "properties" {"releaseTime" {"type" "string"}, "releaseNumber" {"type" "string"}, "amountInMicros" {"type" "number", "format" "double"}, "currencyCode" {"type" "string"}}}, "seriesSubscriptionType" {"type" "string"}, "cancelTime" {"type" "string"}, "nextReleaseInfo" {"properties" {"releaseTime" {"type" "string"}, "currencyCode" {"type" "string"}, "amountInMicros" {"format" "double", "type" "number"}, "releaseNumber" {"type" "string"}}, "type" "object"}}}, "title" {"type" "string"}, "seriesType" {"type" "string"}}, "type" "object"}, "type" "array"}}, "id" "Series"}, "Volumeannotations" {"type" "object", "properties" {"kind" {"type" "string", "description" "Resource type"}, "totalItems" {"description" "The total number of volume annotations found.", "format" "int32", "type" "integer"}, "version" {"type" "string", "description" "The version string for all of the volume annotations in this layer (not\njust the ones in this response). Note: the version string\ndoesn't apply to the annotation data, just the information in this response\n(e.g. the location of annotations in the book)."}, "items" {"description" "A list of volume annotations.", "items" {"$ref" "Volumeannotation"}, "type" "array"}, "nextPageToken" {"type" "string", "description" "Token to pass in for pagination for the next page. This will not be present\nif this request does not have more results."}}, "id" "Volumeannotations"}, "GeoAnnotationdata" {"properties" {"annotationType" {"type" "string", "description" "The type of annotation this data is for."}, "id" {"description" "Unique id for this annotation data.", "type" "string"}, "layerId" {"description" "The Layer id for this data. *", "type" "string"}, "selfLink" {"type" "string", "description" "URL for this resource. *"}, "kind" {"description" "Resource Type", "type" "string"}, "volumeId" {"type" "string", "description" "The volume id for this data. *"}, "updated" {"type" "string", "description" "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time\nformat)."}, "encodedData" {"format" "byte", "description" "Base64 encoded data for this annotation data.", "type" "string"}, "data" {"description" "JSON encoded data for this geo annotation data.\nEmitted with name 'data' in JSON output. Either this or dict_data will\nbe populated.", "$ref" "Geolayerdata"}}, "id" "GeoAnnotationdata", "type" "object"}, "Seriesmembership" {"id" "Seriesmembership", "properties" {"nextPageToken" {"type" "string"}, "member" {"items" {"$ref" "Volume"}, "type" "array"}, "kind" {"type" "string", "description" "Resorce type."}}, "type" "object"}, "Usersettings" {"type" "object", "properties" {"notification" {"properties" {"moreFromSeries" {"properties" {"opted_state" {"type" "string"}}, "type" "object"}, "moreFromAuthors" {"type" "object", "properties" {"opted_state" {"type" "string"}}}, "rewardExpirations" {"properties" {"opted_state" {"type" "string"}}, "type" "object"}, "matchMyInterests" {"type" "object", "properties" {"opted_state" {"type" "string"}}}, "priceDrop" {"properties" {"opted_state" {"type" "string"}}, "type" "object"}}, "type" "object"}, "notesExport" {"properties" {"isEnabled" {"type" "boolean"}, "folderName" {"type" "string"}}, "type" "object", "description" "User settings in sub-objects, each for different purposes."}, "kind" {"type" "string", "description" "Resource type."}}, "id" "Usersettings"}, "Offers" {"id" "Offers", "properties" {"items" {"description" "A list of offers.", "type" "array", "items" {"type" "object", "properties" {"id" {"type" "string"}, "artUrl" {"type" "string"}, "items" {"type" "array", "items" {"type" "object", "properties" {"coverUrl" {"type" "string"}, "author" {"type" "string"}, "description" {"type" "string"}, "canonicalVolumeLink" {"type" "string"}, "volumeId" {"type" "string"}, "title" {"type" "string"}}}}, "gservicesKey" {"type" "string"}}}}, "kind" {"type" "string", "description" "Resource type."}}, "type" "object"}, "BooksAnnotationsRange" {"properties" {"startOffset" {"type" "string", "description" "The offset from the starting position."}, "endPosition" {"description" "The ending position for the range.", "type" "string"}, "endOffset" {"type" "string", "description" "The offset from the ending position."}, "startPosition" {"description" "The starting position for the range.", "type" "string"}}, "type" "object", "id" "BooksAnnotationsRange"}, "Notification" {"properties" {"notification_type" {"type" "string"}, "show_notification_settings_action" {"type" "boolean"}, "is_document_mature" {"type" "boolean"}, "pcampaign_id" {"type" "string"}, "notificationGroup" {"type" "string"}, "body" {"type" "string"}, "doc_id" {"type" "string"}, "dont_show_notification" {"type" "boolean"}, "doc_type" {"type" "string"}, "targetUrl" {"type" "string"}, "kind" {"type" "string", "description" "Resource type."}, "title" {"type" "string"}, "timeToExpireMs" {"type" "string", "format" "int64"}, "reason" {"type" "string"}, "iconUrl" {"type" "string"}, "crmExperimentIds" {"type" "array", "items" {"type" "string", "format" "int64"}, "description" "The list of crm experiment ids."}}, "type" "object", "id" "Notification"}, "Volumes" {"id" "Volumes", "properties" {"items" {"description" "A list of volumes.", "type" "array", "items" {"$ref" "Volume"}}, "totalItems" {"description" "Total number of volumes found. This might be greater than the number of\nvolumes returned in this response if results have been paginated.", "format" "int32", "type" "integer"}, "kind" {"type" "string", "description" "Resource type."}}, "type" "object"}, "AnnotationsSummary" {"properties" {"layers" {"type" "array", "items" {"properties" {"limitType" {"type" "string"}, "layerId" {"type" "string"}, "updated" {"type" "string"}, "remainingCharacterCount" {"type" "integer", "format" "int32"}, "allowedCharacterCount" {"format" "int32", "type" "integer"}}, "type" "object"}}, "kind" {"type" "string"}}, "type" "object", "id" "AnnotationsSummary"}, "DictionaryAnnotationdata" {"properties" {"annotationType" {"description" "The type of annotation this data is for.", "type" "string"}, "id" {"description" "Unique id for this annotation data.", "type" "string"}, "layerId" {"type" "string", "description" "The Layer id for this data. *"}, "selfLink" {"type" "string", "description" "URL for this resource. *"}, "kind" {"type" "string", "description" "Resource Type"}, "volumeId" {"type" "string", "description" "The volume id for this data. *"}, "updated" {"type" "string", "description" "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time\nformat)."}, "encodedData" {"format" "byte", "description" "Base64 encoded data for this annotation data.", "type" "string"}, "data" {"$ref" "Dictlayerdata", "description" "JSON encoded data for this dictionary annotation data.\nEmitted with name 'data' in JSON output. Either this or geo_data will\nbe populated."}}, "id" "DictionaryAnnotationdata", "type" "object"}}}