#:compute.gcp.descriptor{:name "factchecktools", :title "Fact Check Tools API", :api-version "v1alpha1", :revision "20200715", :endpoint #:compute.gcp.descriptor{:url "https://factchecktools.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"type" "string", "location" "query", "description" "JSONP"}, "uploadType" {"description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "type" "string", "location" "query"}, "key" {"location" "query", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "type" "string"}, "access_token" {"location" "query", "description" "OAuth access token.", "type" "string"}, "oauth_token" {"description" "OAuth 2.0 token for the current user.", "location" "query", "type" "string"}, "prettyPrint" {"default" "true", "location" "query", "type" "boolean", "description" "Returns response with indentations and line breaks."}, "alt" {"default" "json", "enum" ["json" "media" "proto"], "location" "query", "description" "Data format for response.", "type" "string", "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"]}, "$.xgafv" {"type" "string", "location" "query", "enum" ["1" "2"], "description" "V1 error format.", "enumDescriptions" ["v1 error format" "v2 error format"]}, "fields" {"type" "string", "location" "query", "description" "Selector specifying which fields to include in a partial response."}, "upload_protocol" {"type" "string", "location" "query", "description" "Upload protocol for media (e.g. \"raw\", \"multipart\")."}, "quotaUser" {"description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "type" "string", "location" "query"}}, :op->info {"factchecktools.pages.list" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/pages", :response {"$ref" "GoogleFactcheckingFactchecktoolsV1alpha1ListClaimReviewMarkupPagesResponse"}, :parameters {"pageSize" {"type" "integer", "location" "query", "description" "The pagination size. We will return up to that many results. Defaults to\n10 if not set. Has no effect if a URL is requested.", "format" "int32"}, "organization" {"description" "The organization for which we want to fetch markups for. For instance,\n\"site.com\". Cannot be specified along with an URL.", "location" "query", "type" "string"}, "url" {"description" "The URL from which to get `ClaimReview` markup. There will be at most one\nresult. If markup is associated with a more canonical version of the URL\nprovided, we will return that URL instead. Cannot be specified along with\nan organization.", "type" "string", "location" "query"}, "pageToken" {"type" "string", "location" "query", "description" "The pagination token. You may provide the `next_page_token` returned from a\nprevious List request, if any, in order to get the next page. All other\nfields must have the same values as in the previous request."}, "offset" {"format" "int32", "location" "query", "type" "integer", "description" "An integer that specifies the current offset (that is, starting result\nlocation) in search results. This field is only considered if `page_token`\nis unset, and if the request is not for a specific URL. For example, 0\nmeans to return results starting from the first matching result, and 10\nmeans to return from the 11th result."}}, :description "List the `ClaimReview` markup pages for a specific URL or for an\norganization."}, "factchecktools.pages.create" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/pages", :request {"$ref" "GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage"}, :response {"$ref" "GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage"}, :parameters {}, :description "Create `ClaimReview` markup on a page."}, "factchecktools.pages.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1alpha1/{+name}", :response {"$ref" "GoogleProtobufEmpty"}, :parameters {"name" {"type" "string", "location" "path", "description" "The name of the resource to delete, in the form of `pages/{page_id}`.", "pattern" "^pages/[^/]+$", "required" true}}, :description "Delete all `ClaimReview` markup on a page."}, "factchecktools.pages.update" #:compute.gcp.descriptor{:http-method :put, :path "v1alpha1/{+name}", :request {"$ref" "GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage"}, :response {"$ref" "GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage"}, :parameters {"name" {"required" true, "location" "path", "type" "string", "pattern" "^pages/[^/]+$", "description" "The name of this `ClaimReview` markup page resource, in the form of\n`pages/{page_id}`. Except for update requests, this field is output-only\nand should not be set by the user."}}, :description "Update for all `ClaimReview` markup on a page\n\nNote that this is a full update. To retain the existing `ClaimReview`\nmarkup on a page, first perform a Get operation, then modify the returned\nmarkup, and finally call Update with the entire `ClaimReview` markup as the\nbody."}, "factchecktools.pages.get" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/{+name}", :response {"$ref" "GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage"}, :parameters {"name" {"description" "The name of the resource to get, in the form of `pages/{page_id}`.", "type" "string", "location" "path", "required" true, "pattern" "^pages/[^/]+$"}}, :description "Get all `ClaimReview` markup on a page."}, "factchecktools.claims.search" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/claims:search", :response {"$ref" "GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse"}, :parameters {"pageSize" {"description" "The pagination size. We will return up to that many results. Defaults to\n10 if not set.", "format" "int32", "location" "query", "type" "integer"}, "offset" {"format" "int32", "location" "query", "description" "An integer that specifies the current offset (that is, starting result\nlocation) in search results. This field is only considered if `page_token`\nis unset. For example, 0 means to return results starting from the first\nmatching result, and 10 means to return from the 11th result.", "type" "integer"}, "maxAgeDays" {"format" "int32", "type" "integer", "description" "The maximum age of the returned search results, in days.\nAge is determined by either claim date or review date, whichever is newer.", "location" "query"}, "query" {"description" "Textual query string. Required unless `review_publisher_site_filter` is\nspecified.", "location" "query", "type" "string"}, "languageCode" {"location" "query", "type" "string", "description" "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". Can be used to\nrestrict results by language, though we do not currently consider the\nregion."}, "reviewPublisherSiteFilter" {"description" "The review publisher site to filter results by, e.g. nytimes.com.", "location" "query", "type" "string"}, "pageToken" {"location" "query", "type" "string", "description" "The pagination token. You may provide the `next_page_token` returned from a\nprevious List request, if any, in order to get the next page. All other\nfields must have the same values as in the previous request."}}, :description "Search through fact-checked claims."}}, :schemas {"GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewAuthor" {"id" "GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewAuthor", "description" "Information about the claim review author.", "properties" {"name" {"description" "Name of the organization that is publishing the fact check.<br>\nCorresponds to `ClaimReview.author.name`.", "type" "string"}, "imageUrl" {"type" "string", "description" "Corresponds to `ClaimReview.author.image`."}}, "type" "object"}, "GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage" {"type" "object", "description" "Holds one or more instances of `ClaimReview` markup for a webpage.", "id" "GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage", "properties" {"claimReviewMarkups" {"description" "A list of individual claim reviews for this page.\nEach item in the list corresponds to one `ClaimReview` element.", "type" "array", "items" {"$ref" "GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup"}}, "pageUrl" {"description" "The URL of the page associated with this `ClaimReview` markup.\nWhile every individual `ClaimReview` has its own URL field, semantically\nthis is a page-level field, and each `ClaimReview` on this page will use\nthis value unless individually overridden.<br>\nCorresponds to `ClaimReview.url`", "type" "string"}, "claimReviewAuthor" {"description" "Info about the author of this claim review.\nSimilar to the above, semantically these are page-level fields, and each\n`ClaimReview` on this page will contain the same values.", "$ref" "GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewAuthor"}, "publishDate" {"description" "The date when the fact check was published.\nSimilar to the URL, semantically this is a page-level field, and each\n`ClaimReview` on this page will contain the same value.<br>\nCorresponds to `ClaimReview.datePublished`", "type" "string"}, "name" {"description" "The name of this `ClaimReview` markup page resource, in the form of\n`pages/{page_id}`. Except for update requests, this field is output-only\nand should not be set by the user.", "type" "string"}, "versionId" {"description" "The version ID for this markup. Except for update requests, this field is\noutput-only and should not be set by the user.", "type" "string"}}}, "GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup" {"properties" {"claimAppearances" {"type" "array", "items" {"type" "string"}, "description" "A list of links to works in which this claim appears, aside from the one\nspecified in `claim_first_appearance`.<br>\nCorresponds to `ClaimReview.itemReviewed[@type=Claim].appearance.url`."}, "claimFirstAppearance" {"description" "A link to a work in which this claim first appears.<br>\nCorresponds to `ClaimReview.itemReviewed[@type=Claim].firstAppearance.url`.", "type" "string"}, "claimLocation" {"type" "string", "description" "The location where this claim was made.<br>\nCorresponds to `ClaimReview.itemReviewed.name`."}, "claimReviewed" {"type" "string", "description" "A short summary of the claim being evaluated.<br>\nCorresponds to `ClaimReview.claimReviewed`."}, "rating" {"description" "Info about the rating of this claim review.", "$ref" "GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating"}, "claimDate" {"type" "string", "description" "The date when the claim was made or entered public discourse.<br>\nCorresponds to `ClaimReview.itemReviewed.datePublished`."}, "claimAuthor" {"description" "Info about the author of this claim.", "$ref" "GoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor"}, "url" {"type" "string", "description" "This field is optional, and will default to the page URL. We provide this\nfield to allow you the override the default value, but the only permitted\noverride is the page URL plus an optional anchor link (\"page jump\").<br>\nCorresponds to `ClaimReview.url`"}}, "id" "GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkup", "description" "Fields for an individual `ClaimReview` element.\nExcept for sub-messages that group fields together, each of these fields\ncorrespond those in https://schema.org/ClaimReview. We list the precise\nmapping for each field.", "type" "object"}, "GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating" {"description" "Information about the claim rating.", "properties" {"bestRating" {"description" "For numeric ratings, the best value possible in the scale from worst to\nbest.<br>\nCorresponds to `ClaimReview.reviewRating.bestRating`.", "type" "integer", "format" "int32"}, "ratingValue" {"type" "integer", "description" "A numeric rating of this claim, in the range worstRating — bestRating\ninclusive.<br>\nCorresponds to `ClaimReview.reviewRating.ratingValue`.", "format" "int32"}, "textualRating" {"description" "The truthfulness rating as a human-readible short word or phrase.<br>\nCorresponds to `ClaimReview.reviewRating.alternateName`.", "type" "string"}, "worstRating" {"description" "For numeric ratings, the worst value possible in the scale from worst to\nbest.<br>\nCorresponds to `ClaimReview.reviewRating.worstRating`.", "type" "integer", "format" "int32"}, "ratingExplanation" {"type" "string", "description" "Corresponds to `ClaimReview.reviewRating.ratingExplanation`."}, "imageUrl" {"type" "string", "description" "Corresponds to `ClaimReview.reviewRating.image`."}}, "type" "object", "id" "GoogleFactcheckingFactchecktoolsV1alpha1ClaimRating"}, "GoogleProtobufEmpty" {"id" "GoogleProtobufEmpty", "description" "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.", "type" "object", "properties" {}}, "GoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor" {"id" "GoogleFactcheckingFactchecktoolsV1alpha1ClaimAuthor", "description" "Information about the claim author.", "properties" {"name" {"type" "string", "description" "A person or organization stating the claim. For instance, \"John Doe\".<br>\nCorresponds to `ClaimReview.itemReviewed.author.name`."}, "jobTitle" {"type" "string", "description" "Corresponds to `ClaimReview.itemReviewed.author.jobTitle`."}, "sameAs" {"description" "Corresponds to `ClaimReview.itemReviewed.author.sameAs`.", "type" "string"}, "imageUrl" {"type" "string", "description" "Corresponds to `ClaimReview.itemReviewed.author.image`."}}, "type" "object"}, "GoogleFactcheckingFactchecktoolsV1alpha1ClaimReview" {"id" "GoogleFactcheckingFactchecktoolsV1alpha1ClaimReview", "properties" {"publisher" {"$ref" "GoogleFactcheckingFactchecktoolsV1alpha1Publisher", "description" "The publisher of this claim review."}, "languageCode" {"description" "The language this review was written in. For instance, \"en\" or \"de\".", "type" "string"}, "reviewDate" {"type" "string", "description" "The date the claim was reviewed.", "format" "google-datetime"}, "textualRating" {"description" "Textual rating. For instance, \"Mostly false\".", "type" "string"}, "title" {"description" "The title of this claim review, if it can be determined.", "type" "string"}, "url" {"description" "The URL of this claim review.", "type" "string"}}, "type" "object", "description" "Information about a claim review."}, "GoogleFactcheckingFactchecktoolsV1alpha1ListClaimReviewMarkupPagesResponse" {"type" "object", "id" "GoogleFactcheckingFactchecktoolsV1alpha1ListClaimReviewMarkupPagesResponse", "description" "Response from listing `ClaimReview` markup.", "properties" {"nextPageToken" {"description" "The next pagination token in the Search response. It should be used as the\n`page_token` for the following request. An empty value means no more\nresults.", "type" "string"}, "claimReviewMarkupPages" {"items" {"$ref" "GoogleFactcheckingFactchecktoolsV1alpha1ClaimReviewMarkupPage"}, "type" "array", "description" "The result list of pages of `ClaimReview` markup."}}}, "GoogleFactcheckingFactchecktoolsV1alpha1Publisher" {"properties" {"name" {"description" "The name of this publisher. For instance, \"Awesome Fact Checks\".", "type" "string"}, "site" {"description" "Host-level site name, without the protocol or \"www\" prefix. For instance,\n\"awesomefactchecks.com\". This value of this field is based purely on the\nclaim review URL.", "type" "string"}}, "description" "Information about the publisher.", "type" "object", "id" "GoogleFactcheckingFactchecktoolsV1alpha1Publisher"}, "GoogleFactcheckingFactchecktoolsV1alpha1Claim" {"description" "Information about the claim.", "properties" {"claimReview" {"type" "array", "description" "One or more reviews of this claim (namely, a fact-checking article).", "items" {"$ref" "GoogleFactcheckingFactchecktoolsV1alpha1ClaimReview"}}, "claimDate" {"type" "string", "description" "The date that the claim was made.", "format" "google-datetime"}, "text" {"description" "The claim text. For instance, \"Crime has doubled in the last 2 years.\"", "type" "string"}, "claimant" {"type" "string", "description" "A person or organization stating the claim. For instance, \"John Doe\"."}}, "id" "GoogleFactcheckingFactchecktoolsV1alpha1Claim", "type" "object"}, "GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse" {"description" "Response from searching fact-checked claims.", "id" "GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse", "type" "object", "properties" {"claims" {"items" {"$ref" "GoogleFactcheckingFactchecktoolsV1alpha1Claim"}, "description" "The list of claims and all of their associated information.", "type" "array"}, "nextPageToken" {"type" "string", "description" "The next pagination token in the Search response. It should be used as the\n`page_token` for the following request. An empty value means no more\nresults."}}}}}