#:compute.api-descriptor{:endpoint {:schemes ["https"], :host "adexchangebuyer.googleapis.com", :base-path "/"}, :op->spec {"adexchangebuyer2.accounts.creatives.list" {:description "Lists creatives.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ListCreativesResponse"}}}, :parameters [{:in "path", :name "accountId", :required true, :type "string"}], :operationId "adexchangebuyer2.accounts.creatives.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v2beta1/accounts/{accountId}/creatives", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/upload_protocol"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/key"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/bearer_token"}]}, "adexchangebuyer2.bidders.accounts.filterSets.nonBillableWinningBids.list" {:description "List all reasons for which winning bids were not billable, with the number\nof bids not billed for each reason.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ListNonBillableWinningBidsResponse"}}}, :parameters [{:in "path", :name "filterSetName", :required true, :type "string"}], :operationId "adexchangebuyer2.bidders.accounts.filterSets.nonBillableWinningBids.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v2beta1/{filterSetName}/nonBillableWinningBids", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/bearer_token"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "adexchangebuyer2.accounts.clients.users.get" {:description "Retrieves an existing client user.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ClientUser"}}}, :parameters [{:in "path", :name "accountId", :required true, :type "string"} {:in "path", :name "clientAccountId", :required true, :type "string"} {:in "path", :name "userId", :required true, :type "string"}], :operationId "adexchangebuyer2.accounts.clients.users.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v2beta1/accounts/{accountId}/clients/{clientAccountId}/users/{userId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/upload_protocol"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/key"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/bearer_token"}]}, "adexchangebuyer2.bidders.accounts.filterSets.delete" {:description "Deletes the requested filter set from the account with the given account\nID.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Empty"}}}, :parameters [{:in "path", :name "name", :required true, :type "string"}], :operationId "adexchangebuyer2.bidders.accounts.filterSets.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/v2beta1/{name}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/bearer_token"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "adexchangebuyer2.bidders.accounts.filterSets.bidMetrics.list" {:description "Lists all metrics that are measured in terms of number of bids.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ListBidMetricsResponse"}}}, :parameters [{:in "path", :name "filterSetName", :required true, :type "string"}], :operationId "adexchangebuyer2.bidders.accounts.filterSets.bidMetrics.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v2beta1/{filterSetName}/bidMetrics", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/bearer_token"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "adexchangebuyer2.accounts.creatives.stopWatching" {:description "Stops watching a creative. Will stop push notifications being sent to the\ntopics when the creative changes status.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Empty"}}}, :parameters [{:in "path", :name "accountId", :required true, :type "string"} {:in "path", :name "creativeId", :required true, :type "string"}], :operationId "adexchangebuyer2.accounts.creatives.stopWatching", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v2beta1/accounts/{accountId}/creatives/{creativeId}:stopWatching", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/upload_protocol"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/key"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/bearer_token"}]}, "adexchangebuyer2.accounts.clients.list" {:description "Lists all the clients for the current sponsor buyer.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ListClientsResponse"}}}, :parameters [{:in "path", :name "accountId", :required true, :type "string"}], :operationId "adexchangebuyer2.accounts.clients.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v2beta1/accounts/{accountId}/clients", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/upload_protocol"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/key"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/bearer_token"}]}, "adexchangebuyer2.accounts.clients.get" {:description "Gets a client buyer with a given client account ID.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Client"}}}, :parameters [{:in "path", :name "accountId", :required true, :type "string"} {:in "path", :name "clientAccountId", :required true, :type "string"}], :operationId "adexchangebuyer2.accounts.clients.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v2beta1/accounts/{accountId}/clients/{clientAccountId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/upload_protocol"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/key"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/bearer_token"}]}, "adexchangebuyer2.accounts.clients.create" {:description "Creates a new client buyer.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Client"}}}, :parameters [{:in "path", :name "accountId", :required true, :type "string"}], :operationId "adexchangebuyer2.accounts.clients.create", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v2beta1/accounts/{accountId}/clients", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/upload_protocol"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/key"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/bearer_token"}]}, "adexchangebuyer2.bidders.accounts.filterSets.losingBids.list" {:description "List all reasons for which bids lost in the auction, with the number of\nbids that lost for each reason.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ListLosingBidsResponse"}}}, :parameters [{:in "path", :name "filterSetName", :required true, :type "string"}], :operationId "adexchangebuyer2.bidders.accounts.filterSets.losingBids.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v2beta1/{filterSetName}/losingBids", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/bearer_token"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "adexchangebuyer2.bidders.accounts.filterSets.filteredBids.details.list" {:description "List all details associated with a specific reason for which bids were\nfiltered, with the number of bids filtered for each detail.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ListCreativeStatusBreakdownByDetailResponse"}}}, :parameters [{:in "path", :name "creativeStatusId", :required true, :type "string"} {:in "path", :name "filterSetName", :required true, :type "string"}], :operationId "adexchangebuyer2.bidders.accounts.filterSets.filteredBids.details.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v2beta1/{filterSetName}/filteredBids/{creativeStatusId}/details", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/bearer_token"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "adexchangebuyer2.accounts.clients.update" {:description "Updates an existing client buyer.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Client"}}}, :parameters [{:in "path", :name "accountId", :required true, :type "string"} {:in "path", :name "clientAccountId", :required true, :type "string"}], :operationId "adexchangebuyer2.accounts.clients.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/v2beta1/accounts/{accountId}/clients/{clientAccountId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/upload_protocol"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/key"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/bearer_token"}]}, "adexchangebuyer2.bidders.accounts.filterSets.filteredBids.list" {:description "List all reasons for which bids were filtered, with the number of bids\nfiltered for each reason.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ListFilteredBidsResponse"}}}, :parameters [{:in "path", :name "filterSetName", :required true, :type "string"}], :operationId "adexchangebuyer2.bidders.accounts.filterSets.filteredBids.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v2beta1/{filterSetName}/filteredBids", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/bearer_token"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "adexchangebuyer2.accounts.clients.invitations.get" {:description "Retrieves an existing client user invitation.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ClientUserInvitation"}}}, :parameters [{:in "path", :name "accountId", :required true, :type "string"} {:in "path", :name "clientAccountId", :required true, :type "string"} {:in "path", :name "invitationId", :required true, :type "string"}], :operationId "adexchangebuyer2.accounts.clients.invitations.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations/{invitationId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/upload_protocol"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/key"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/bearer_token"}]}, "adexchangebuyer2.accounts.clients.invitations.list" {:description "Lists all the client users invitations for a client\nwith a given account ID.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ListClientUserInvitationsResponse"}}}, :parameters [{:in "path", :name "accountId", :required true, :type "string"} {:in "path", :name "clientAccountId", :required true, :type "string"}], :operationId "adexchangebuyer2.accounts.clients.invitations.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/upload_protocol"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/key"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/bearer_token"}]}, "adexchangebuyer2.bidders.accounts.filterSets.filteredBidRequests.list" {:description "List all reasons that caused a bid request not to be sent for an\nimpression, with the number of bid requests not sent for each reason.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ListFilteredBidRequestsResponse"}}}, :parameters [{:in "path", :name "filterSetName", :required true, :type "string"}], :operationId "adexchangebuyer2.bidders.accounts.filterSets.filteredBidRequests.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v2beta1/{filterSetName}/filteredBidRequests", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/bearer_token"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "adexchangebuyer2.accounts.creatives.create" {:description "Creates a creative.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Creative"}}}, :parameters [{:in "path", :name "accountId", :required true, :type "string"}], :operationId "adexchangebuyer2.accounts.creatives.create", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v2beta1/accounts/{accountId}/creatives", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/upload_protocol"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/key"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/bearer_token"}]}, "adexchangebuyer2.bidders.accounts.filterSets.create" {:description "Creates the specified filter set for the account with the given account ID.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/FilterSet"}}}, :parameters [{:in "path", :name "ownerName", :required true, :type "string"}], :operationId "adexchangebuyer2.bidders.accounts.filterSets.create", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v2beta1/{ownerName}/filterSets", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/bearer_token"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "adexchangebuyer2.bidders.accounts.filterSets.bidResponsesWithoutBids.list" {:description "List all reasons for which bid responses were considered to have no\napplicable bids, with the number of bid responses affected for each reason.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ListBidResponsesWithoutBidsResponse"}}}, :parameters [{:in "path", :name "filterSetName", :required true, :type "string"}], :operationId "adexchangebuyer2.bidders.accounts.filterSets.bidResponsesWithoutBids.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v2beta1/{filterSetName}/bidResponsesWithoutBids", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/bearer_token"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "adexchangebuyer2.accounts.creatives.dealAssociations.add" {:description "Associate an existing deal with a creative.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Empty"}}}, :parameters [{:in "path", :name "accountId", :required true, :type "string"} {:in "path", :name "creativeId", :required true, :type "string"}], :operationId "adexchangebuyer2.accounts.creatives.dealAssociations.add", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations:add", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/upload_protocol"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/key"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/bearer_token"}]}, "adexchangebuyer2.bidders.accounts.filterSets.filteredBids.creatives.list" {:description "List all creatives associated with a specific reason for which bids were\nfiltered, with the number of bids filtered for each creative.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ListCreativeStatusBreakdownByCreativeResponse"}}}, :parameters [{:in "path", :name "creativeStatusId", :required true, :type "string"} {:in "path", :name "filterSetName", :required true, :type "string"}], :operationId "adexchangebuyer2.bidders.accounts.filterSets.filteredBids.creatives.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v2beta1/{filterSetName}/filteredBids/{creativeStatusId}/creatives", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/bearer_token"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "adexchangebuyer2.bidders.accounts.filterSets.impressionMetrics.list" {:description "Lists all metrics that are measured in terms of number of impressions.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ListImpressionMetricsResponse"}}}, :parameters [{:in "path", :name "filterSetName", :required true, :type "string"}], :operationId "adexchangebuyer2.bidders.accounts.filterSets.impressionMetrics.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v2beta1/{filterSetName}/impressionMetrics", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/bearer_token"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "adexchangebuyer2.accounts.clients.invitations.create" {:description "Creates and sends out an email invitation to access\nan Ad Exchange client buyer account.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ClientUserInvitation"}}}, :parameters [{:in "path", :name "accountId", :required true, :type "string"} {:in "path", :name "clientAccountId", :required true, :type "string"}], :operationId "adexchangebuyer2.accounts.clients.invitations.create", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v2beta1/accounts/{accountId}/clients/{clientAccountId}/invitations", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/upload_protocol"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/key"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/bearer_token"}]}, "adexchangebuyer2.accounts.clients.users.list" {:description "Lists all the known client users for a specified\nsponsor buyer account ID.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ListClientUsersResponse"}}}, :parameters [{:in "path", :name "accountId", :required true, :type "string"} {:in "path", :name "clientAccountId", :required true, :type "string"}], :operationId "adexchangebuyer2.accounts.clients.users.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v2beta1/accounts/{accountId}/clients/{clientAccountId}/users", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/upload_protocol"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/key"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/bearer_token"}]}, "adexchangebuyer2.accounts.creatives.dealAssociations.remove" {:description "Remove the association between a deal and a creative.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Empty"}}}, :parameters [{:in "path", :name "accountId", :required true, :type "string"} {:in "path", :name "creativeId", :required true, :type "string"}], :operationId "adexchangebuyer2.accounts.creatives.dealAssociations.remove", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations:remove", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/upload_protocol"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/key"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/bearer_token"}]}, "adexchangebuyer2.accounts.creatives.get" {:description "Gets a creative.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Creative"}}}, :parameters [{:in "path", :name "accountId", :required true, :type "string"} {:in "path", :name "creativeId", :required true, :type "string"}], :operationId "adexchangebuyer2.accounts.creatives.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v2beta1/accounts/{accountId}/creatives/{creativeId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/upload_protocol"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/key"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/bearer_token"}]}, "adexchangebuyer2.accounts.creatives.dealAssociations.list" {:description "List all creative-deal associations.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ListDealAssociationsResponse"}}}, :parameters [{:in "path", :name "accountId", :required true, :type "string"} {:in "path", :name "creativeId", :required true, :type "string"}], :operationId "adexchangebuyer2.accounts.creatives.dealAssociations.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v2beta1/accounts/{accountId}/creatives/{creativeId}/dealAssociations", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/upload_protocol"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/key"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/bearer_token"}]}, "adexchangebuyer2.bidders.accounts.filterSets.list" {:description "Lists all filter sets for the account with the given account ID.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ListFilterSetsResponse"}}}, :parameters [{:in "path", :name "ownerName", :required true, :type "string"}], :operationId "adexchangebuyer2.bidders.accounts.filterSets.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v2beta1/{ownerName}/filterSets", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/bearer_token"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "adexchangebuyer2.accounts.clients.users.update" {:description "Updates an existing client user.\nOnly the user status can be changed on update.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ClientUser"}}}, :parameters [{:in "path", :name "accountId", :required true, :type "string"} {:in "path", :name "clientAccountId", :required true, :type "string"} {:in "path", :name "userId", :required true, :type "string"}], :operationId "adexchangebuyer2.accounts.clients.users.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/v2beta1/accounts/{accountId}/clients/{clientAccountId}/users/{userId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/upload_protocol"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/key"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/bearer_token"}]}, "adexchangebuyer2.bidders.accounts.filterSets.get" {:description "Retrieves the requested filter set for the account with the given account\nID.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/FilterSet"}}}, :parameters [{:in "path", :name "name", :required true, :type "string"}], :operationId "adexchangebuyer2.bidders.accounts.filterSets.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v2beta1/{name}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/bearer_token"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "adexchangebuyer2.bidders.accounts.filterSets.bidResponseErrors.list" {:description "List all errors that occurred in bid responses, with the number of bid\nresponses affected for each reason.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/ListBidResponseErrorsResponse"}}}, :parameters [{:in "path", :name "filterSetName", :required true, :type "string"}], :operationId "adexchangebuyer2.bidders.accounts.filterSets.bidResponseErrors.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/v2beta1/{filterSetName}/bidResponseErrors", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/bearer_token"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/key"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/upload_protocol"}]}, "adexchangebuyer2.accounts.creatives.watch" {:description "Watches a creative. Will result in push notifications being sent to the\ntopic when the creative changes status.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Empty"}}}, :parameters [{:in "path", :name "accountId", :required true, :type "string"} {:in "path", :name "creativeId", :required true, :type "string"}], :operationId "adexchangebuyer2.accounts.creatives.watch", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v2beta1/accounts/{accountId}/creatives/{creativeId}:watch", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/upload_protocol"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/key"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/bearer_token"}]}, "adexchangebuyer2.accounts.creatives.update" {:description "Updates a creative.", :responses {"200" {:description "Successful response", :schema {:$ref "#/definitions/Creative"}}}, :parameters [{:in "path", :name "accountId", :required true, :type "string"} {:in "path", :name "creativeId", :required true, :type "string"}], :operationId "adexchangebuyer2.accounts.creatives.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/v2beta1/accounts/{accountId}/creatives/{creativeId}", :compute.gcp.impl.descriptor/path-parameters [{:$ref "#/parameters/upload_protocol"} {:$ref "#/parameters/prettyPrint"} {:$ref "#/parameters/fields"} {:$ref "#/parameters/uploadType"} {:$ref "#/parameters/$.xgafv"} {:$ref "#/parameters/callback"} {:$ref "#/parameters/alt"} {:$ref "#/parameters/key"} {:$ref "#/parameters/access_token"} {:$ref "#/parameters/quotaUser"} {:$ref "#/parameters/pp"} {:$ref "#/parameters/oauth_token"} {:$ref "#/parameters/bearer_token"}]}}, :parameters {:quotaUser {:description "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", :in "query", :name "quotaUser", :type "string"}, :key {:description "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", :in "query", :name "key", :type "string"}, :alt {:default "json", :description "Data format for response.", :enum ["json" "media" "proto"], :in "query", :name "alt", :type "string"}, :bearer_token {:description "OAuth bearer token.", :in "query", :name "bearer_token", :type "string"}, :pp {:default true, :description "Pretty-print response.", :in "query", :name "pp", :type "boolean"}, :access_token {:description "OAuth access token.", :in "query", :name "access_token", :type "string"}, :fields {:description "Selector specifying which fields to include in a partial response.", :in "query", :name "fields", :type "string"}, :upload_protocol {:description "Upload protocol for media (e.g. \"raw\", \"multipart\").", :in "query", :name "upload_protocol", :type "string"}, :uploadType {:description "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", :in "query", :name "uploadType", :type "string"}, :oauth_token {:description "OAuth 2.0 token for the current user.", :in "query", :name "oauth_token", :type "string"}, :prettyPrint {:default true, :description "Returns response with indentations and line breaks.", :in "query", :name "prettyPrint", :type "boolean"}, "$.xgafv" {:description "V1 error format.", :enum ["1" "2"], :in "query", :name "$.xgafv", :type "string"}, :callback {:description "JSONP", :in "query", :name "callback", :type "string"}}, :definitions {:ImpressionMetricsRow {:description "The set of metrics that are measured in numbers of impressions, representing\nhow many impressions with the specified dimension values were considered\neligible at each stage of the bidding funnel.", :properties {:availableImpressions {:$ref "#/definitions/MetricValue", :description "The number of impressions available to the buyer on Ad Exchange.\nIn some cases this value may be unavailable."}, :bidRequests {:$ref "#/definitions/MetricValue", :description "The number of impressions for which Ad Exchange sent the buyer a bid\nrequest."}, :inventoryMatches {:$ref "#/definitions/MetricValue", :description "The number of impressions that match the buyer's inventory pretargeting."}, :responsesWithBids {:$ref "#/definitions/MetricValue", :description "The number of impressions for which Ad Exchange received a response from\nthe buyer that contained at least one applicable bid."}, :rowDimensions {:$ref "#/definitions/RowDimensions", :description "The values of all dimensions associated with metric values in this row."}, :successfulResponses {:$ref "#/definitions/MetricValue", :description "The number of impressions for which the buyer successfully sent a response\nto Ad Exchange."}}, :type "object"}, :ServingRestriction {:description "@OutputOnly A representation of the status of an ad in a\nspecific context. A context here relates to where something ultimately serves\n(for example, a user or publisher geo, a platform, an HTTPS vs HTTP request,\nor the type of auction).", :properties {:contexts {:description "The contexts for the restriction.", :items {:$ref "#/definitions/ServingContext"}, :type "array"}, :disapprovalReasons {:description "Any disapprovals bound to this restriction.\nOnly present if status=DISAPPROVED.\nCan be used to filter the response of the\ncreatives.list\nmethod.", :items {:$ref "#/definitions/Disapproval"}, :type "array"}, :status {:description "The status of the creative in this context (for example, it has been\nexplicitly disapproved or is pending review).", :enum ["STATUS_UNSPECIFIED" "DISAPPROVAL" "PENDING_REVIEW"], :type "string"}}, :type "object"}, :ListClientUserInvitationsResponse {:properties {:invitations {:description "The returned list of client users.", :items {:$ref "#/definitions/ClientUserInvitation"}, :type "array"}, :nextPageToken {:description "A token to retrieve the next page of results.\nPass this value in the\nListClientUserInvitationsRequest.pageToken\nfield in the subsequent call to the\nclients.invitations.list\nmethod to retrieve the next\npage of results.", :type "string"}}, :type "object"}, :SecurityContext {:description "@OutputOnly A security context.", :properties {:securities {:description "The security types in this context.", :items {:enum ["INSECURE" "SSL"], :type "string"}, :type "array"}}, :type "object"}, :LocationContext {:description "@OutputOnly The Geo criteria the restriction applies to.", :properties {:geoCriteriaIds {:description "IDs representing the geo location for this context.\nPlease refer to the\n[geo-table.csv](https://storage.googleapis.com/adx-rtb-dictionaries/geo-table.csv)\nfile for different geo criteria IDs.", :items {:format "int32", :type "integer"}, :type "array"}}, :type "object"}, :BidMetricsRow {:description "The set of metrics that are measured in numbers of bids, representing how\nmany bids with the specified dimension values were considered eligible at\neach stage of the bidding funnel;", :properties {:bids {:$ref "#/definitions/MetricValue", :description "The number of bids that Ad Exchange received from the buyer."}, :bidsInAuction {:$ref "#/definitions/MetricValue", :description "The number of bids that were permitted to compete in the auction."}, :billedImpressions {:$ref "#/definitions/MetricValue", :description "The number of bids for which the buyer was billed."}, :impressionsWon {:$ref "#/definitions/MetricValue", :description "The number of bids that won an impression."}, :measurableImpressions {:$ref "#/definitions/MetricValue", :description "The number of bids for which the corresponding impression was measurable\nfor viewability (as defined by Active View)."}, :rowDimensions {:$ref "#/definitions/RowDimensions", :description "The values of all dimensions associated with metric values in this row."}, :viewableImpressions {:$ref "#/definitions/MetricValue", :description "The number of bids for which the corresponding impression was viewable (as\ndefined by Active View)."}}, :type "object"}, :ListImpressionMetricsResponse {:description "Response message for listing the metrics that are measured in number of\nimpressions.", :properties {:impressionMetricsRows {:description "List of rows, each containing a set of impression metrics.", :items {:$ref "#/definitions/ImpressionMetricsRow"}, :type "array"}, :nextPageToken {:description "A token to retrieve the next page of results.\nPass this value in the\nListImpressionMetricsRequest.pageToken\nfield in the subsequent call to the impressionMetrics.list\nmethod to retrieve the next page of results.", :type "string"}}, :type "object"}, :NonBillableWinningBidStatusRow {:description "The number of winning bids with the specified dimension values for which the\nbuyer was not billed, as described by the specified status.", :properties {:bidCount {:$ref "#/definitions/MetricValue", :description "The number of bids with the specified status."}, :rowDimensions {:$ref "#/definitions/RowDimensions", :description "The values of all dimensions associated with metric values in this row."}, :status {:description "The status specifying why the winning bids were not billed.", :enum ["STATUS_UNSPECIFIED" "AD_NOT_RENDERED" "INVALID_IMPRESSION"], :type "string"}}, :type "object"}, :TimeInterval {:description "An interval of time, with an absolute start and end.", :properties {:endTime {:description "The timestamp marking the end of the range (exclusive) for which data is\nincluded.", :format "google-datetime", :type "string"}, :startTime {:description "The timestamp marking the start of the range (inclusive) for which data is\nincluded.", :format "google-datetime", :type "string"}}, :type "object"}, :ListFilteredBidRequestsResponse {:description "Response message for listing all reasons that bid requests were filtered and\nnot sent to the buyer.", :properties {:calloutStatusRows {:description "List of rows, with counts of filtered bid requests aggregated by callout\nstatus.", :items {:$ref "#/definitions/CalloutStatusRow"}, :type "array"}, :nextPageToken {:description "A token to retrieve the next page of results.\nPass this value in the\nListFilteredBidRequestsRequest.pageToken\nfield in the subsequent call to the filteredBidRequests.list\nmethod to retrieve the next page of results.", :type "string"}}, :type "object"}, :AppContext {:description "@OutputOnly The app type the restriction applies to for mobile device.", :properties {:appTypes {:description "The app types this restriction applies to.", :items {:enum ["NATIVE" "WEB"], :type "string"}, :type "array"}}, :type "object"}, :ListCreativesResponse {:description "A response for listing creatives.", :properties {:creatives {:description "The list of creatives.", :items {:$ref "#/definitions/Creative"}, :type "array"}, :nextPageToken {:description "A token to retrieve the next page of results.\nPass this value in the\nListCreativesRequest.page_token\nfield in the subsequent call to `ListCreatives` method to retrieve the next\npage of results.", :type "string"}}, :type "object"}, :WatchCreativeRequest {:description "A request for watching changes to creative Status.", :properties {:topic {:description "The Pub/Sub topic to publish notifications to.\nThis topic must already exist and must give permission to\nad-exchange-buyside-reports@google.com to write to the topic.\nThis should be the full resource name in\n\"projects/{project_id}/topics/{topic_id}\" format.", :type "string"}}, :type "object"}, :ListBidMetricsResponse {:description "Response message for listing the metrics that are measured in number of bids.", :properties {:bidMetricsRows {:description "List of rows, each containing a set of bid metrics.", :items {:$ref "#/definitions/BidMetricsRow"}, :type "array"}, :nextPageToken {:description "A token to retrieve the next page of results.\nPass this value in the\nListBidMetricsRequest.pageToken\nfield in the subsequent call to the bidMetrics.list\nmethod to retrieve the next page of results.", :type "string"}}, :type "object"}, :FilterSet {:description "A set of filters that is applied to a request for data.\nWithin a filter set, an AND operation is performed across the filters\nrepresented by each field. An OR operation is performed across the filters\nrepresented by the multiple values of a repeated field. E.g.\n\"format=VIDEO AND deal_id=12 AND (seller_network_id=34 OR\nseller_network_id=56)\"", :properties {:format {:description "The format on which to filter; optional.", :enum ["FORMAT_UNSPECIFIED" "DISPLAY" "VIDEO"], :type "string"}, :filterSetId {:description "The ID of the filter set; unique within the account of the filter set\nowner.\nThe value of this field is ignored in create operations.", :format "int64", :type "string"}, :name {:description "A user-defined name of the filter set. Filter set names must be unique\nglobally and match one of the patterns:\n\n- `bidders/*/filterSets/*` (for accessing bidder-level troubleshooting\ndata)\n- `bidders/*/accounts/*/filterSets/*` (for accessing buyer-level\ntroubleshooting data)", :type "string"}, :realtimeTimeRange {:$ref "#/definitions/RealtimeTimeRange", :description "An open-ended realtime time range, defined by the aggregation start\ntimestamp."}, :buyerAccountId {:description "The ID of the buyer account on which to filter; optional.", :format "int64", :type "string"}, :timeSeriesGranularity {:description "The granularity of time intervals if a time series breakdown is desired;\noptional.", :enum ["TIME_SERIES_GRANULARITY_UNSPECIFIED" "HOURLY" "DAILY"], :type "string"}, :creativeId {:description "The ID of the creative on which to filter; optional.", :type "string"}, :environment {:description "The environment on which to filter; optional.", :enum ["ENVIRONMENT_UNSPECIFIED" "WEB" "APP"], :type "string"}, :ownerAccountId {:description "The account ID of the buyer who owns this filter set.\nThe value of this field is ignored in create operations.", :format "int64", :type "string"}, :absoluteDateRange {:$ref "#/definitions/AbsoluteDateRange", :description "An absolute date range, defined by a start date and an end date.\nInterpreted relative to Pacific time zone."}, :dealId {:description "The ID of the deal on which to filter; optional.", :format "int64", :type "string"}, :relativeDateRange {:$ref "#/definitions/RelativeDateRange", :description "A relative date range, defined by an offset from today and a duration.\nInterpreted relative to Pacific time zone."}, :platforms {:description "The list of platforms on which to filter; may be empty. The filters\nrepresented by multiple platforms are ORed together (i.e. if non-empty,\nresults must match any one of the platforms).", :items {:enum ["PLATFORM_UNSPECIFIED" "DESKTOP" "TABLET" "MOBILE"], :type "string"}, :type "array"}, :sellerNetworkIds {:description "The list of IDs of the seller (publisher) networks on which to filter;\nmay be empty. The filters represented by multiple seller network IDs are\nORed together (i.e. if non-empty, results must match any one of the\npublisher networks).\nSee [seller-network-ids](https://developers.google.com/ad-exchange/rtb/downloads/seller-network-ids)\nfile for the set of existing seller network IDs.", :items {:format "int32", :type "integer"}, :type "array"}}, :type "object"}, :StopWatchingCreativeRequest {:description "A request for stopping notifications for changes to creative Status.", :properties {}, :type "object"}, :Image {:description "An image resource. You may provide a larger image than was requested,\nso long as the aspect ratio is preserved.", :properties {:height {:description "Image height in pixels.", :format "int32", :type "integer"}, :url {:description "The URL of the image.", :type "string"}, :width {:description "Image width in pixels.", :format "int32", :type "integer"}}, :type "object"}, :ListClientUsersResponse {:properties {:nextPageToken {:description "A token to retrieve the next page of results.\nPass this value in the\nListClientUsersRequest.pageToken\nfield in the subsequent call to the\nclients.invitations.list\nmethod to retrieve the next\npage of results.", :type "string"}, :users {:description "The returned list of client users.", :items {:$ref "#/definitions/ClientUser"}, :type "array"}}, :type "object"}, :ListFilteredBidsResponse {:description "Response message for listing all reasons that bids were filtered from the\nauction.", :properties {:creativeStatusRows {:description "List of rows, with counts of filtered bids aggregated by filtering reason\n(i.e. creative status).", :items {:$ref "#/definitions/CreativeStatusRow"}, :type "array"}, :nextPageToken {:description "A token to retrieve the next page of results.\nPass this value in the\nListFilteredBidsRequest.pageToken\nfield in the subsequent call to the filteredBids.list\nmethod to retrieve the next page of results.", :type "string"}}, :type "object"}, :RowDimensions {:description "A response may include multiple rows, breaking down along various dimensions.\nEncapsulates the values of all dimensions for a given row.", :properties {:timeInterval {:$ref "#/definitions/TimeInterval", :description "The time interval that this row represents."}}, :type "object"}, :ListBidResponseErrorsResponse {:description "Response message for listing all reasons that bid responses resulted in an\nerror.", :properties {:calloutStatusRows {:description "List of rows, with counts of bid responses aggregated by callout status.", :items {:$ref "#/definitions/CalloutStatusRow"}, :type "array"}, :nextPageToken {:description "A token to retrieve the next page of results.\nPass this value in the\nListBidResponseErrorsRequest.pageToken\nfield in the subsequent call to the bidResponseErrors.list\nmethod to retrieve the next page of results.", :type "string"}}, :type "object"}, :Creative {:description "A creative and its classification data.", :properties {:video {:$ref "#/definitions/VideoContent", :description "A video creative."}, :detectedProductCategories {:description "@OutputOnly Detected product categories, if any.\nSee the ad-product-categories.txt file in the technical documentation\nfor a list of IDs.", :items {:format "int32", :type "integer"}, :type "array"}, :servingRestrictions {:description "@OutputOnly The granular status of this ad in specific contexts.\nA context here relates to where something ultimately serves (for example,\na physical location, a platform, an HTTPS vs HTTP request, or the type\nof auction).", :items {:$ref "#/definitions/ServingRestriction"}, :type "array"}, :advertiserName {:description "The name of the company being advertised in the creative.", :type "string"}, :adChoicesDestinationUrl {:description "The link to AdChoices destination page.", :type "string"}, :impressionTrackingUrls {:description "The set of URLs to be called to record an impression.", :items {:type "string"}, :type "array"}, :dealsStatus {:description "@OutputOnly The top-level deals status of this creative.\nIf disapproved, an entry for 'auctionType=DIRECT_DEALS' (or 'ALL') in\nserving_restrictions will also exist. Note\nthat this may be nuanced with other contextual restrictions, in which case,\nit may be preferable to read from serving_restrictions directly.\nCan be used to filter the response of the\ncreatives.list\nmethod.", :enum ["STATUS_UNSPECIFIED" "NOT_CHECKED" "CONDITIONALLY_APPROVED" "APPROVED" "DISAPPROVED"], :type "string"}, :apiUpdateTime {:description "@OutputOnly The last update timestamp of the creative via API.", :format "google-datetime", :type "string"}, :detectedSensitiveCategories {:description "@OutputOnly Detected sensitive categories, if any.\nSee the ad-sensitive-categories.txt file in the technical documentation for\na list of IDs. You should use these IDs along with the\nexcluded-sensitive-category field in the bid request to filter your bids.", :items {:format "int32", :type "integer"}, :type "array"}, :filteringStats {:$ref "#/definitions/FilteringStats", :description "@OutputOnly The filtering stats for this creative."}, :openAuctionStatus {:description "@OutputOnly The top-level open auction status of this creative.\nIf disapproved, an entry for 'auctionType = OPEN_AUCTION' (or 'ALL') in\nserving_restrictions will also exist. Note\nthat this may be nuanced with other contextual restrictions, in which case,\nit may be preferable to read from serving_restrictions directly.\nCan be used to filter the response of the\ncreatives.list\nmethod.", :enum ["STATUS_UNSPECIFIED" "NOT_CHECKED" "CONDITIONALLY_APPROVED" "APPROVED" "DISAPPROVED"], :type "string"}, :restrictedCategories {:description "All restricted categories for the ads that may be shown from this creative.", :items {:enum ["NO_RESTRICTED_CATEGORIES" "ALCOHOL"], :type "string"}, :type "array"}, :corrections {:description "@OutputOnly Shows any corrections that were applied to this creative.", :items {:$ref "#/definitions/Correction"}, :type "array"}, :detectedDomains {:description "@OutputOnly\nThe detected domains for this creative.", :items {:type "string"}, :type "array"}, :detectedLanguages {:description "@OutputOnly\nThe detected languages for this creative. The order is arbitrary. The codes\nare 2 or 5 characters and are documented at\nhttps://developers.google.com/adwords/api/docs/appendix/languagecodes.", :items {:type "string"}, :type "array"}, :creativeId {:description "The buyer-defined creative ID of this creative.\nCan be used to filter the response of the\ncreatives.list\nmethod.", :type "string"}, :native {:$ref "#/definitions/NativeContent", :description "A native creative."}, :detectedAdvertiserIds {:description "@OutputOnly Detected advertiser IDs, if any.", :items {:format "int64", :type "string"}, :type "array"}, :vendorIds {:description "All vendor IDs for the ads that may be shown from this creative.\nSee https://storage.googleapis.com/adx-rtb-dictionaries/vendors.txt\nfor possible values.", :items {:format "int32", :type "integer"}, :type "array"}, :agencyId {:description "The agency ID for this creative.", :format "int64", :type "string"}, :version {:description "@OutputOnly The version of this creative.", :format "int32", :type "integer"}, :attributes {:description "All attributes for the ads that may be shown from this creative.\nCan be used to filter the response of the\ncreatives.list\nmethod.", :items {:enum ["ATTRIBUTE_UNSPECIFIED" "IS_TAGGED" "IS_COOKIE_TARGETED" "IS_USER_INTEREST_TARGETED" "EXPANDING_DIRECTION_NONE" "EXPANDING_DIRECTION_UP" "EXPANDING_DIRECTION_DOWN" "EXPANDING_DIRECTION_LEFT" "EXPANDING_DIRECTION_RIGHT" "EXPANDING_DIRECTION_UP_LEFT" "EXPANDING_DIRECTION_UP_RIGHT" "EXPANDING_DIRECTION_DOWN_LEFT" "EXPANDING_DIRECTION_DOWN_RIGHT" "EXPANDING_DIRECTION_UP_OR_DOWN" "EXPANDING_DIRECTION_LEFT_OR_RIGHT" "EXPANDING_DIRECTION_ANY_DIAGONAL" "EXPANDING_ACTION_ROLLOVER_TO_EXPAND" "INSTREAM_VAST_VIDEO_TYPE_VPAID_FLASH" "RICH_MEDIA_CAPABILITY_TYPE_MRAID" "RICH_MEDIA_CAPABILITY_TYPE_SSL" "RICH_MEDIA_CAPABILITY_TYPE_INTERSTITIAL" "NATIVE_ELIGIBILITY_ELIGIBLE" "NATIVE_ELIGIBILITY_NOT_ELIGIBLE" "RENDERING_SIZELESS_ADX"], :type "string"}, :type "array"}, :accountId {:description "The account that this creative belongs to.\nCan be used to filter the response of the\ncreatives.list\nmethod.", :type "string"}, :clickThroughUrls {:description "The set of destination URLs for the creative.", :items {:type "string"}, :type "array"}, :html {:$ref "#/definitions/HtmlContent", :description "An HTML creative."}}, :type "object"}, :ListClientsResponse {:properties {:clients {:description "The returned list of clients.", :items {:$ref "#/definitions/Client"}, :type "array"}, :nextPageToken {:description "A token to retrieve the next page of results.\nPass this value in the\nListClientsRequest.pageToken\nfield in the subsequent call to the\naccounts.clients.list method\nto retrieve the next page of results.", :type "string"}}, :type "object"}, :FilteringStats {:description "@OutputOnly Filtering reasons for this creative during a period of a single\nday (from midnight to midnight Pacific).", :properties {:date {:$ref "#/definitions/Date", :description "The day during which the data was collected.\nThe data is collected from 00:00:00 to 23:59:59 PT.\nDuring switches from PST to PDT and back, the day may\ncontain 23 or 25 hours of data instead of the usual 24."}, :reasons {:description "The set of filtering reasons for this date.", :items {:$ref "#/definitions/Reason"}, :type "array"}}, :type "object"}, :FilteredBidDetailRow {:description "The number of filtered bids with the specified dimension values, among those\nfiltered due to the requested filtering reason (i.e. creative status), that\nhave the specified detail.", :properties {:bidCount {:$ref "#/definitions/MetricValue", :description "The number of bids with the specified detail."}, :detailId {:description "The ID of the detail. The associated value can be looked up in the\ndictionary file corresponding to the DetailType in the response message.", :format "int32", :type "integer"}, :rowDimensions {:$ref "#/definitions/RowDimensions", :description "The values of all dimensions associated with metric values in this row."}}, :type "object"}, :Reason {:description "A specific filtering status and how many times it occurred.", :properties {:count {:description "The number of times the creative was filtered for the status. The\ncount is aggregated across all publishers on the exchange.", :format "int64", :type "string"}, :status {:description "The filtering status code. Please refer to the\n[creative-status-codes.txt](https://storage.googleapis.com/adx-rtb-dictionaries/creative-status-codes.txt)\nfile for different statuses.", :format "int32", :type "integer"}}, :type "object"}, :MetricValue {:description "A metric value, with an expected value and a variance; represents a count\nthat may be either exact or estimated (i.e. when sampled).", :properties {:value {:description "The expected value of the metric.", :format "int64", :type "string"}, :variance {:description "The variance (i.e. square of the standard deviation) of the metric value.\nIf value is exact, variance is 0.\nCan be used to calculate margin of error as a percentage of value, using\nthe following formula, where Z is the standard constant that depends on the\ndesired size of the confidence interval (e.g. for 90% confidence interval,\nuse Z = 1.645):\n\n  marginOfError = 100 * Z * sqrt(variance) / value", :format "int64", :type "string"}}, :type "object"}, :PlatformContext {:description "@OutputOnly The type of platform the restriction applies to.", :properties {:platforms {:description "The platforms this restriction applies to.", :items {:enum ["DESKTOP" "ANDROID" "IOS"], :type "string"}, :type "array"}}, :type "object"}, :ServingContext {:description "The serving context for this restriction.", :properties {:all {:description "Matches all contexts.", :enum ["SIMPLE_CONTEXT"], :type "string"}, :appType {:$ref "#/definitions/AppContext", :description "Matches impressions for a particular app type."}, :auctionType {:$ref "#/definitions/AuctionContext", :description "Matches impressions for a particular auction type."}, :location {:$ref "#/definitions/LocationContext", :description "Matches impressions coming from users *or* publishers in a specific\nlocation."}, :platform {:$ref "#/definitions/PlatformContext", :description "Matches impressions coming from a particular platform."}, :securityType {:$ref "#/definitions/SecurityContext", :description "Matches impressions for a particular security type."}}, :type "object"}, :RealtimeTimeRange {:description "An open-ended realtime time range specified by the start timestamp.\nFor filter sets that specify a realtime time range RTB metrics continue to\nbe aggregated throughout the lifetime of the filter set.", :properties {:startTimestamp {:description "The start timestamp of the real-time RTB metrics aggregation.", :format "google-datetime", :type "string"}}, :type "object"}, :AuctionContext {:description "@OutputOnly The auction type the restriction applies to.", :properties {:auctionTypes {:description "The auction types this restriction applies to.", :items {:enum ["OPEN_AUCTION" "DIRECT_DEALS"], :type "string"}, :type "array"}}, :type "object"}, :Empty {:description "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.", :properties {}, :type "object"}, :ListBidResponsesWithoutBidsResponse {:description "Response message for listing all reasons that bid responses were considered\nto have no applicable bids.", :properties {:bidResponseWithoutBidsStatusRows {:description "List of rows, with counts of bid responses without bids aggregated by\nstatus.", :items {:$ref "#/definitions/BidResponseWithoutBidsStatusRow"}, :type "array"}, :nextPageToken {:description "A token to retrieve the next page of results.\nPass this value in the\nListBidResponsesWithoutBidsRequest.pageToken\nfield in the subsequent call to the bidResponsesWithoutBids.list\nmethod to retrieve the next page of results.", :type "string"}}, :type "object"}, :ListCreativeStatusBreakdownByCreativeResponse {:description "Response message for listing all creatives associated with a given filtered\nbid reason.", :properties {:filteredBidCreativeRows {:description "List of rows, with counts of bids with a given creative status aggregated\nby creative.", :items {:$ref "#/definitions/FilteredBidCreativeRow"}, :type "array"}, :nextPageToken {:description "A token to retrieve the next page of results.\nPass this value in the\nListCreativeStatusBreakdownByCreativeRequest.pageToken\nfield in the subsequent call to the filteredBids.creatives.list\nmethod to retrieve the next page of results.", :type "string"}}, :type "object"}, :AddDealAssociationRequest {:description "A request for associating a deal and a creative.", :properties {:association {:$ref "#/definitions/CreativeDealAssociation", :description "The association between a creative and a deal that should be added."}}, :type "object"}, :Disapproval {:description "@OutputOnly The reason and details for a disapproval.", :properties {:details {:description "Additional details about the reason for disapproval.", :items {:type "string"}, :type "array"}, :reason {:description "The categorized reason for disapproval.", :enum ["LENGTH_OF_IMAGE_ANIMATION" "BROKEN_URL" "MEDIA_NOT_FUNCTIONAL" "INVALID_FOURTH_PARTY_CALL" "INCORRECT_REMARKETING_DECLARATION" "LANDING_PAGE_ERROR" "AD_SIZE_DOES_NOT_MATCH_AD_SLOT" "NO_BORDER" "FOURTH_PARTY_BROWSER_COOKIES" "LSO_OBJECTS" "BLANK_CREATIVE" "DESTINATION_URLS_UNDECLARED" "PROBLEM_WITH_CLICK_MACRO" "INCORRECT_AD_TECHNOLOGY_DECLARATION" "INCORRECT_DESTINATION_URL_DECLARATION" "EXPANDABLE_INCORRECT_DIRECTION" "EXPANDABLE_DIRECTION_NOT_SUPPORTED" "EXPANDABLE_INVALID_VENDOR" "EXPANDABLE_FUNCTIONALITY" "VIDEO_INVALID_VENDOR" "VIDEO_UNSUPPORTED_LENGTH" "VIDEO_UNSUPPORTED_FORMAT" "VIDEO_FUNCTIONALITY" "LANDING_PAGE_DISABLED" "MALWARE_SUSPECTED" "ADULT_IMAGE_OR_VIDEO" "INACCURATE_AD_TEXT" "COUNTERFEIT_DESIGNER_GOODS" "POP_UP" "INVALID_RTB_PROTOCOL_USAGE" "RAW_IP_ADDRESS_IN_SNIPPET" "UNACCEPTABLE_CONTENT_SOFTWARE" "UNAUTHORIZED_COOKIE_ON_GOOGLE_DOMAIN" "UNDECLARED_FLASH_OBJECTS" "INVALID_SSL_DECLARATION" "DIRECT_DOWNLOAD_IN_AD" "MAXIMUM_DOWNLOAD_SIZE_EXCEEDED" "DESTINATION_URL_SITE_NOT_CRAWLABLE" "BAD_URL_LEGAL_DISAPPROVAL" "PHARMA_GAMBLING_ALCOHOL_NOT_ALLOWED" "DYNAMIC_DNS_AT_DESTINATION_URL" "POOR_IMAGE_OR_VIDEO_QUALITY" "UNACCEPTABLE_IMAGE_CONTENT" "INCORRECT_IMAGE_LAYOUT" "IRRELEVANT_IMAGE_OR_VIDEO" "DESTINATION_SITE_DOES_NOT_ALLOW_GOING_BACK" "MISLEADING_CLAIMS_IN_AD" "RESTRICTED_PRODUCTS" "UNACCEPTABLE_CONTENT" "AUTOMATED_AD_CLICKING" "INVALID_URL_PROTOCOL" "UNDECLARED_RESTRICTED_CONTENT" "INVALID_REMARKETING_LIST_USAGE" "DESTINATION_SITE_NOT_CRAWLABLE_ROBOTS_TXT" "CLICK_TO_DOWNLOAD_NOT_AN_APP" "INACCURATE_REVIEW_EXTENSION" "SEXUALLY_EXPLICIT_CONTENT" "GAINING_AN_UNFAIR_ADVANTAGE" "GAMING_THE_GOOGLE_NETWORK" "DANGEROUS_PRODUCTS_KNIVES" "DANGEROUS_PRODUCTS_EXPLOSIVES" "DANGEROUS_PRODUCTS_GUNS" "DANGEROUS_PRODUCTS_DRUGS" "DANGEROUS_PRODUCTS_TOBACCO" "DANGEROUS_PRODUCTS_WEAPONS" "UNCLEAR_OR_IRRELEVANT_AD" "PROFESSIONAL_STANDARDS" "DYSFUNCTIONAL_PROMOTION" "INVALID_INTEREST_BASED_AD" "MISUSE_OF_PERSONAL_INFORMATION" "OMISSION_OF_RELEVANT_INFORMATION" "UNAVAILABLE_PROMOTIONS" "MISLEADING_PROMOTIONS" "INAPPROPRIATE_CONTENT" "SENSITIVE_EVENTS" "SHOCKING_CONTENT" "ENABLING_DISHONEST_BEHAVIOR" "TECHNICAL_REQUIREMENTS" "RESTRICTED_POLITICAL_CONTENT" "UNSUPPORTED_CONTENT" "INVALID_BIDDING_METHOD" "VIDEO_TOO_LONG" "VIOLATES_JAPANESE_PHARMACY_LAW" "UNACCREDITED_PET_PHARMACY" "ABORTION" "CONTRACEPTIVES" "NEED_CERTIFICATES_TO_ADVERTISE_IN_CHINA" "KCDSP_REGISTRATION" "NOT_FAMILY_SAFE" "CLINICAL_TRIAL_RECRUITMENT" "MAXIMUM_NUMBER_OF_HTTP_CALLS_EXCEEDED" "MAXIMUM_NUMBER_OF_COOKIES_EXCEEDED" "PERSONAL_LOANS" "UNSUPPORTED_FLASH_CONTENT"], :type "string"}}, :type "object"}, :Date {:description "Represents a whole calendar date, e.g. date of birth. The time of day and\ntime zone are either specified elsewhere or are not significant. The date\nis relative to the Proleptic Gregorian Calendar. The day may be 0 to\nrepresent a year and month where the day is not significant, e.g. credit card\nexpiration date. The year may be 0 to represent a month and day independent\nof year, e.g. anniversary date. Related types are google.type.TimeOfDay\nand `google.protobuf.Timestamp`.", :properties {:day {:description "Day of month. Must be from 1 to 31 and valid for the year and month, or 0\nif specifying a year/month where the day is not significant.", :format "int32", :type "integer"}, :month {:description "Month of year. Must be from 1 to 12.", :format "int32", :type "integer"}, :year {:description "Year of date. Must be from 1 to 9999, or 0 if specifying a date without\na year.", :format "int32", :type "integer"}}, :type "object"}, :ListNonBillableWinningBidsResponse {:description "Response message for listing all reasons for which a buyer was not billed for\na winning bid.", :properties {:nextPageToken {:description "A token to retrieve the next page of results.\nPass this value in the\nListNonBillableWinningBidsRequest.pageToken\nfield in the subsequent call to the nonBillableWinningBids.list\nmethod to retrieve the next page of results.", :type "string"}, :nonBillableWinningBidStatusRows {:description "List of rows, with counts of bids not billed aggregated by reason.", :items {:$ref "#/definitions/NonBillableWinningBidStatusRow"}, :type "array"}}, :type "object"}, :ListDealAssociationsResponse {:description "A response for listing creative and deal associations", :properties {:associations {:description "The list of associations.", :items {:$ref "#/definitions/CreativeDealAssociation"}, :type "array"}, :nextPageToken {:description "A token to retrieve the next page of results.\nPass this value in the\nListDealAssociationsRequest.page_token\nfield in the subsequent call to 'ListDealAssociation' method to retrieve\nthe next page of results.", :type "string"}}, :type "object"}, :ListCreativeStatusBreakdownByDetailResponse {:description "Response message for listing all details associated with a given filtered bid\nreason.", :properties {:detailType {:description "The type of detail that the detail IDs represent.", :enum ["DETAIL_TYPE_UNSPECIFIED" "CREATIVE_ATTRIBUTE" "VENDOR" "SENSITIVE_CATEGORY" "PRODUCT_CATEGORY" "DISAPPROVAL_REASON"], :type "string"}, :filteredBidDetailRows {:description "List of rows, with counts of bids with a given creative status aggregated\nby detail.", :items {:$ref "#/definitions/FilteredBidDetailRow"}, :type "array"}, :nextPageToken {:description "A token to retrieve the next page of results.\nPass this value in the\nListCreativeStatusBreakdownByDetailRequest.pageToken\nfield in the subsequent call to the filteredBids.details.list\nmethod to retrieve the next page of results.", :type "string"}}, :type "object"}, :RelativeDateRange {:description "A relative date range, specified by an offset and a duration.\nThe supported range of dates begins 30 days before today and ends today.\nI.e. the limits for these values are:\noffset_days >= 0\nduration_days >= 1\noffset_days + duration_days <= 30", :properties {:durationDays {:description "The number of days in the requested date range. E.g. for a range spanning\ntoday, 1. For a range spanning the last 7 days, 7.", :format "int32", :type "integer"}, :offsetDays {:description "The end date of the filter set, specified as the number of days before\ntoday. E.g. for a range where the last date is today, 0.", :format "int32", :type "integer"}}, :type "object"}, :Correction {:description "@OutputOnly Shows any corrections that were applied to this creative.", :properties {:contexts {:description "The contexts for the correction.", :items {:$ref "#/definitions/ServingContext"}, :type "array"}, :details {:description "Additional details about what was corrected.", :items {:type "string"}, :type "array"}, :type {:description "The type of correction that was applied to the creative.", :enum ["CORRECTION_TYPE_UNSPECIFIED" "VENDOR_IDS_ADDED" "SSL_ATTRIBUTE_REMOVED" "FLASH_FREE_ATTRIBUTE_REMOVED" "FLASH_FREE_ATTRIBUTE_ADDED" "REQUIRED_ATTRIBUTE_ADDED" "REQUIRED_VENDOR_ADDED" "SSL_ATTRIBUTE_ADDED" "IN_BANNER_VIDEO_ATTRIBUTE_ADDED" "MRAID_ATTRIBUTE_ADDED" "FLASH_ATTRIBUTE_REMOVED" "VIDEO_IN_SNIPPET_ATTRIBUTE_ADDED"], :type "string"}}, :type "object"}, :Client {:description "A client resource represents a client buyer&mdash;an agency,\na brand, or an advertiser customer of the sponsor buyer.\nUsers associated with the client buyer have restricted access to\nthe Ad Exchange Marketplace and certain other sections\nof the Ad Exchange Buyer UI based on the role\ngranted to the client buyer.\nAll fields are required unless otherwise specified.", :properties {:clientAccountId {:description "The globally-unique numerical ID of the client.\nThe value of this field is ignored in create and update operations.", :format "int64", :type "string"}, :clientName {:description "Name used to represent this client to publishers.\nYou may have multiple clients that map to the same entity,\nbut for each client the combination of `clientName` and entity\nmust be unique.\nYou can specify this field as empty.", :type "string"}, :entityId {:description "Numerical identifier of the client entity.\nThe entity can be an advertiser, a brand, or an agency.\nThis identifier is unique among all the entities with the same type.\n\nA list of all known advertisers with their identifiers is available in the\n[advertisers.txt](https://storage.googleapis.com/adx-rtb-dictionaries/advertisers.txt)\nfile.\n\nA list of all known brands with their identifiers is available in the\n[brands.txt](https://storage.googleapis.com/adx-rtb-dictionaries/brands.txt)\nfile.\n\nA list of all known agencies with their identifiers is available in the\n[agencies.txt](https://storage.googleapis.com/adx-rtb-dictionaries/agencies.txt)\nfile.", :format "int64", :type "string"}, :entityName {:description "The name of the entity. This field is automatically fetched based on\nthe type and ID.\nThe value of this field is ignored in create and update operations.", :type "string"}, :entityType {:description "The type of the client entity: `ADVERTISER`, `BRAND`, or `AGENCY`.", :enum ["ENTITY_TYPE_UNSPECIFIED" "ADVERTISER" "BRAND" "AGENCY"], :type "string"}, :role {:description "The role which is assigned to the client buyer. Each role implies a set of\npermissions granted to the client. Must be one of `CLIENT_DEAL_VIEWER`,\n`CLIENT_DEAL_NEGOTIATOR` or `CLIENT_DEAL_APPROVER`.", :enum ["CLIENT_ROLE_UNSPECIFIED" "CLIENT_DEAL_VIEWER" "CLIENT_DEAL_NEGOTIATOR" "CLIENT_DEAL_APPROVER"], :type "string"}, :status {:description "The status of the client buyer.", :enum ["CLIENT_STATUS_UNSPECIFIED" "DISABLED" "ACTIVE"], :type "string"}, :visibleToSeller {:description "Whether the client buyer will be visible to sellers.", :type "boolean"}}, :type "object"}, :CalloutStatusRow {:description "The number of impressions with the specified dimension values where the\ncorresponding bid request or bid response was not successful, as described by\nthe specified callout status.", :properties {:calloutStatusId {:description "The ID of the callout status.\nSee [callout-status-codes](https://developers.google.com/ad-exchange/rtb/downloads/callout-status-codes).", :format "int32", :type "integer"}, :impressionCount {:$ref "#/definitions/MetricValue", :description "The number of impressions for which there was a bid request or bid response\nwith the specified callout status."}, :rowDimensions {:$ref "#/definitions/RowDimensions", :description "The values of all dimensions associated with metric values in this row."}}, :type "object"}, :BidResponseWithoutBidsStatusRow {:description "The number of impressions with the specified dimension values that were\nconsidered to have no applicable bids, as described by the specified status.", :properties {:impressionCount {:$ref "#/definitions/MetricValue", :description "The number of impressions for which there was a bid response with the\nspecified status."}, :rowDimensions {:$ref "#/definitions/RowDimensions", :description "The values of all dimensions associated with metric values in this row."}, :status {:description "The status specifying why the bid responses were considered to have no\napplicable bids.", :enum ["STATUS_UNSPECIFIED" "RESPONSES_WITHOUT_BIDS" "RESPONSES_WITHOUT_BIDS_FOR_ACCOUNT" "RESPONSES_WITHOUT_BIDS_FOR_DEAL"], :type "string"}}, :type "object"}, :AbsoluteDateRange {:description "An absolute date range, specified by its start date and end date.\nThe supported range of dates begins 30 days before today and ends today.\nValidity checked upon filter set creation. If a filter set with an absolute\ndate range is run at a later date more than 30 days after start_date, it will\nfail.", :properties {:endDate {:$ref "#/definitions/Date", :description "The end date of the range (inclusive).\nMust be within the 30 days leading up to current date, and must be equal to\nor after start_date."}, :startDate {:$ref "#/definitions/Date", :description "The start date of the range (inclusive).\nMust be within the 30 days leading up to current date, and must be equal to\nor before end_date."}}, :type "object"}, :CreativeStatusRow {:description "The number of bids with the specified dimension values that did not win the\nauction (either were filtered pre-auction or lost the auction), as described\nby the specified creative status.", :properties {:bidCount {:$ref "#/definitions/MetricValue", :description "The number of bids with the specified status."}, :creativeStatusId {:description "The ID of the creative status.\nSee [creative-status-codes](https://developers.google.com/ad-exchange/rtb/downloads/creative-status-codes).", :format "int32", :type "integer"}, :rowDimensions {:$ref "#/definitions/RowDimensions", :description "The values of all dimensions associated with metric values in this row."}}, :type "object"}, :RemoveDealAssociationRequest {:description "A request for removing the association between a deal and a creative.", :properties {:association {:$ref "#/definitions/CreativeDealAssociation", :description "The association between a creative and a deal that should be removed."}}, :type "object"}, :ClientUser {:description "A client user is created under a client buyer and has restricted access to\nthe Ad Exchange Marketplace and certain other sections\nof the Ad Exchange Buyer UI based on the role\ngranted to the associated client buyer.\n\nThe only way a new client user can be created is via accepting an\nemail invitation\n(see the\naccounts.clients.invitations.create\nmethod).\n\nAll fields are required unless otherwise specified.", :properties {:clientAccountId {:description "Numerical account ID of the client buyer\nwith which the user is associated; the\nbuyer must be a client of the current sponsor buyer.\nThe value of this field is ignored in an update operation.", :format "int64", :type "string"}, :email {:description "User's email address. The value of this field\nis ignored in an update operation.", :type "string"}, :status {:description "The status of the client user.", :enum ["USER_STATUS_UNSPECIFIED" "PENDING" "ACTIVE" "DISABLED"], :type "string"}, :userId {:description "The unique numerical ID of the client user\nthat has accepted an invitation.\nThe value of this field is ignored in an update operation.", :format "int64", :type "string"}}, :type "object"}, :ListLosingBidsResponse {:description "Response message for listing all reasons that bids lost in the auction.", :properties {:creativeStatusRows {:description "List of rows, with counts of losing bids aggregated by loss reason (i.e.\ncreative status).", :items {:$ref "#/definitions/CreativeStatusRow"}, :type "array"}, :nextPageToken {:description "A token to retrieve the next page of results.\nPass this value in the\nListLosingBidsRequest.pageToken\nfield in the subsequent call to the losingBids.list\nmethod to retrieve the next page of results.", :type "string"}}, :type "object"}, :ListFilterSetsResponse {:description "Response message for listing filter sets.", :properties {:filterSets {:description "The filter sets belonging to the buyer.", :items {:$ref "#/definitions/FilterSet"}, :type "array"}, :nextPageToken {:description "A token to retrieve the next page of results.\nPass this value in the\nListFilterSetsRequest.pageToken\nfield in the subsequent call to the\naccounts.filterSets.list\nmethod to retrieve the next page of results.", :type "string"}}, :type "object"}, :NativeContent {:description "Native content for a creative.", :properties {:clickLinkUrl {:description "The URL that the browser/SDK will load when the user clicks the ad.", :type "string"}, :headline {:description "A short title for the ad.", :type "string"}, :starRating {:description "The app rating in the app store. Must be in the range [0-5].", :format "double", :type "number"}, :storeUrl {:description "The URL to the app store to purchase/download the promoted app.", :type "string"}, :logo {:$ref "#/definitions/Image", :description "A smaller image, for the advertiser's logo."}, :advertiserName {:description "The name of the advertiser or sponsor, to be displayed in the ad creative.", :type "string"}, :appIcon {:$ref "#/definitions/Image", :description "The app icon, for app download ads."}, :priceDisplayText {:description "The price of the promoted app including currency info.", :type "string"}, :callToAction {:description "A label for the button that the user is supposed to click.", :type "string"}, :clickTrackingUrl {:description "The URL to use for click tracking.", :type "string"}, :videoUrl {:description "The URL to fetch a native video ad.", :type "string"}, :image {:$ref "#/definitions/Image", :description "A large image."}, :body {:description "A long description of the ad.", :type "string"}}, :type "object"}, :CreativeDealAssociation {:description "The association between a creative and a deal.", :properties {:accountId {:description "The account the creative belongs to.", :type "string"}, :creativeId {:description "The ID of the creative associated with the deal.", :type "string"}, :dealsId {:description "The externalDealId for the deal associated with the creative.", :type "string"}}, :type "object"}, :VideoContent {:description "Video content for a creative.", :properties {:videoUrl {:description "The URL to fetch a video ad.", :type "string"}}, :type "object"}, :FilteredBidCreativeRow {:description "The number of filtered bids with the specified dimension values that have the\nspecified creative.", :properties {:bidCount {:$ref "#/definitions/MetricValue", :description "The number of bids with the specified creative."}, :creativeId {:description "The ID of the creative.", :type "string"}, :rowDimensions {:$ref "#/definitions/RowDimensions", :description "The values of all dimensions associated with metric values in this row."}}, :type "object"}, :ClientUserInvitation {:description "An invitation for a new client user to get access to the Ad Exchange\nBuyer UI.\nAll fields are required unless otherwise specified.", :properties {:clientAccountId {:description "Numerical account ID of the client buyer\nthat the invited user is associated with.\nThe value of this field is ignored in create operations.", :format "int64", :type "string"}, :email {:description "The email address to which the invitation is sent. Email\naddresses should be unique among all client users under each sponsor\nbuyer.", :type "string"}, :invitationId {:description "The unique numerical ID of the invitation that is sent to the user.\nThe value of this field is ignored in create operations.", :format "int64", :type "string"}}, :type "object"}, :HtmlContent {:description "HTML content for a creative.", :properties {:height {:description "The height of the HTML snippet in pixels.", :format "int32", :type "integer"}, :snippet {:description "The HTML snippet that displays the ad when inserted in the web page.", :type "string"}, :width {:description "The width of the HTML snippet in pixels.", :format "int32", :type "integer"}}, :type "object"}}}