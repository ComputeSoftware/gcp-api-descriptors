#:compute.api-descriptor{:endpoint {:schemes ["https"], :host "monitoring.googleapis.com", :base-path "/"}, :op->spec {}, :parameters {:quotaUser {:description "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", :in "query", :name "quotaUser", :type "string"}, :key {:description "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", :in "query", :name "key", :type "string"}, :alt {:default "json", :description "Data format for response.", :enum ["json" "media" "proto"], :in "query", :name "alt", :type "string"}, :access_token {:description "OAuth access token.", :in "query", :name "access_token", :type "string"}, :fields {:description "Selector specifying which fields to include in a partial response.", :in "query", :name "fields", :type "string"}, :upload_protocol {:description "Upload protocol for media (e.g. \"raw\", \"multipart\").", :in "query", :name "upload_protocol", :type "string"}, :uploadType {:description "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", :in "query", :name "uploadType", :type "string"}, :oauth_token {:description "OAuth 2.0 token for the current user.", :in "query", :name "oauth_token", :type "string"}, :prettyPrint {:default true, :description "Returns response with indentations and line breaks.", :in "query", :name "prettyPrint", :type "boolean"}, "$.xgafv" {:description "V1 error format.", :enum ["1" "2"], :in "query", :name "$.xgafv", :type "string"}, :callback {:description "JSONP", :in "query", :name "callback", :type "string"}}, :definitions {:DroppedLabels {:description "A set of (label, value) pairs which were dropped during aggregation, attached to google.api.Distribution.Exemplars in google.api.Distribution values during aggregation.These values are used in combination with the label values that remain on the aggregated Distribution timeseries to construct the full label set for the exemplar values. The resulting full label set may be used to identify the specific task/job/instance (for example) which may be contributing to a long-tail, while allowing the storage savings of only storing aggregated distribution values for a large group.Note that there are no guarantees on ordering of the labels from exemplar-to-exemplar and from distribution-to-distribution in the same stream, and there may be duplicates. It is up to clients to resolve any ambiguities.", :properties {:label {:additionalProperties {:type "string"}, :description "Map from label to its value, for all labels dropped in any aggregation.", :type "object"}}, :type "object"}, :Field {:description "A single field of a message type.", :properties {:typeUrl {:description "The field type URL, without the scheme, for message or enumeration types. Example: \"type.googleapis.com/google.protobuf.Timestamp\".", :type "string"}, :number {:description "The field number.", :format "int32", :type "integer"}, :oneofIndex {:description "The index of the field type in Type.oneofs, for message or enumeration types. The first type has index 1; zero means the type is not in the list.", :format "int32", :type "integer"}, :name {:description "The field name.", :type "string"}, :kind {:description "The field type.", :enum ["TYPE_UNKNOWN" "TYPE_DOUBLE" "TYPE_FLOAT" "TYPE_INT64" "TYPE_UINT64" "TYPE_INT32" "TYPE_FIXED64" "TYPE_FIXED32" "TYPE_BOOL" "TYPE_STRING" "TYPE_GROUP" "TYPE_MESSAGE" "TYPE_BYTES" "TYPE_UINT32" "TYPE_ENUM" "TYPE_SFIXED32" "TYPE_SFIXED64" "TYPE_SINT32" "TYPE_SINT64"], :type "string"}, :jsonName {:description "The field JSON name.", :type "string"}, :options {:description "The protocol buffer options.", :items {:$ref "#/definitions/Option"}, :type "array"}, :packed {:description "Whether to use alternative packed wire representation.", :type "boolean"}, :defaultValue {:description "The string value of the default value of this field. Proto2 syntax only.", :type "string"}, :cardinality {:description "The field cardinality.", :enum ["CARDINALITY_UNKNOWN" "CARDINALITY_OPTIONAL" "CARDINALITY_REQUIRED" "CARDINALITY_REPEATED"], :type "string"}}, :type "object"}, :Option {:description "A protocol buffer option, which can be attached to a message, field, enumeration, etc.", :properties {:name {:description "The option's name. For protobuf built-in options (options defined in descriptor.proto), this is the short name. For example, \"map_entry\". For custom options, it should be the fully-qualified name. For example, \"google.api.http\".", :type "string"}, :value {:additionalProperties {:description "Properties of the object. Contains field @type with type URL."}, :description "The option's value packed in an Any message. If the value is a primitive, the corresponding wrapper type defined in google/protobuf/wrappers.proto should be used. If the value is an enum, it should be stored as an int32 value using the google.protobuf.Int32Value type.", :type "object"}}, :type "object"}, :SourceContext {:description "SourceContext represents information about the source of a protobuf element, like the file in which it is defined.", :properties {:fileName {:description "The path-qualified name of the .proto file that contained the associated protobuf element. For example: \"google/protobuf/source_context.proto\".", :type "string"}}, :type "object"}, :SpanContext {:description "The context of a span, attached to google.api.Distribution.Exemplars in google.api.Distribution values during aggregation.It contains the name of a span with format:  projects/PROJECT_ID/traces/TRACE_ID/spans/SPAN_ID", :properties {:spanName {:description "The resource name of the span in the following format:\nprojects/[PROJECT_ID]/traces/[TRACE_ID]/spans/[SPAN_ID]\nTRACE_ID is a unique identifier for a trace within a project; it is a 32-character hexadecimal encoding of a 16-byte array.SPAN_ID is a unique identifier for a span within a trace; it is a 16-character hexadecimal encoding of an 8-byte array.", :type "string"}}, :type "object"}, :Type {:description "A protocol buffer message type.", :properties {:fields {:description "The list of fields.", :items {:$ref "#/definitions/Field"}, :type "array"}, :name {:description "The fully qualified message name.", :type "string"}, :oneofs {:description "The list of types appearing in oneof definitions in this type.", :items {:type "string"}, :type "array"}, :options {:description "The protocol buffer options.", :items {:$ref "#/definitions/Option"}, :type "array"}, :sourceContext {:$ref "#/definitions/SourceContext", :description "The source context."}, :syntax {:description "The source syntax.", :enum ["SYNTAX_PROTO2" "SYNTAX_PROTO3"], :type "string"}}, :type "object"}}}