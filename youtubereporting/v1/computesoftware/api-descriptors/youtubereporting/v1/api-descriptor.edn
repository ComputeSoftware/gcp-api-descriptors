#:compute.gcp.descriptor{:name "youtubereporting", :title "YouTube Reporting API", :api-version "v1", :revision "20210222", :endpoint #:compute.gcp.descriptor{:url "https://youtubereporting.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"type" "string", "description" "JSONP", "location" "query"}, "uploadType" {"location" "query", "description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "type" "string"}, "key" {"description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "type" "string", "location" "query"}, "access_token" {"description" "OAuth access token.", "type" "string", "location" "query"}, "oauth_token" {"description" "OAuth 2.0 token for the current user.", "location" "query", "type" "string"}, "prettyPrint" {"type" "boolean", "description" "Returns response with indentations and line breaks.", "location" "query", "default" "true"}, "alt" {"location" "query", "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "enum" ["json" "media" "proto"], "description" "Data format for response.", "type" "string", "default" "json"}, "$.xgafv" {"enumDescriptions" ["v1 error format" "v2 error format"], "description" "V1 error format.", "enum" ["1" "2"], "type" "string", "location" "query"}, "fields" {"type" "string", "location" "query", "description" "Selector specifying which fields to include in a partial response."}, "upload_protocol" {"location" "query", "description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "type" "string"}, "quotaUser" {"location" "query", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "type" "string"}}, :op->info {"youtubereporting.media.download" #:compute.gcp.descriptor{:http-method :get, :path "v1/media/{+resourceName}", :response {"$ref" "GdataMedia"}, :parameters {"resourceName" {"required" true, "type" "string", "description" "Name of the media that is being downloaded.", "location" "path", "pattern" "^.*$"}}, :description "Method for media download. Download is supported on the URI `/v1/media/{+name}?alt=media`."}, "youtubereporting.reportTypes.list" #:compute.gcp.descriptor{:http-method :get, :path "v1/reportTypes", :response {"$ref" "ListReportTypesResponse"}, :parameters {"pageSize" {"format" "int32", "location" "query", "type" "integer", "description" "Requested page size. Server may return fewer report types than requested. If unspecified, server will pick an appropriate default."}, "includeSystemManaged" {"location" "query", "type" "boolean", "description" "If set to true, also system-managed report types will be returned; otherwise only the report types that can be used to create new reporting jobs will be returned."}, "pageToken" {"type" "string", "description" "A token identifying a page of results the server should return. Typically, this is the value of ListReportTypesResponse.next_page_token returned in response to the previous call to the `ListReportTypes` method.", "location" "query"}, "onBehalfOfContentOwner" {"location" "query", "type" "string", "description" "The content owner's external ID on which behalf the user is acting on. If not set, the user is acting for himself (his own channel)."}}, :description "Lists report types."}, "youtubereporting.jobs.create" #:compute.gcp.descriptor{:http-method :post, :path "v1/jobs", :request {"$ref" "Job"}, :response {"$ref" "Job"}, :parameters {"onBehalfOfContentOwner" {"location" "query", "description" "The content owner's external ID on which behalf the user is acting on. If not set, the user is acting for himself (his own channel).", "type" "string"}}, :description "Creates a job and returns it."}, "youtubereporting.jobs.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1/jobs/{jobId}", :response {"$ref" "Empty"}, :parameters {"jobId" {"location" "path", "type" "string", "description" "The ID of the job to delete.", "required" true}, "onBehalfOfContentOwner" {"description" "The content owner's external ID on which behalf the user is acting on. If not set, the user is acting for himself (his own channel).", "location" "query", "type" "string"}}, :description "Deletes a job."}, "youtubereporting.jobs.get" #:compute.gcp.descriptor{:http-method :get, :path "v1/jobs/{jobId}", :response {"$ref" "Job"}, :parameters {"jobId" {"required" true, "location" "path", "description" "The ID of the job to retrieve.", "type" "string"}, "onBehalfOfContentOwner" {"type" "string", "description" "The content owner's external ID on which behalf the user is acting on. If not set, the user is acting for himself (his own channel).", "location" "query"}}, :description "Gets a job."}, "youtubereporting.jobs.list" #:compute.gcp.descriptor{:http-method :get, :path "v1/jobs", :response {"$ref" "ListJobsResponse"}, :parameters {"pageToken" {"type" "string", "location" "query", "description" "A token identifying a page of results the server should return. Typically, this is the value of ListReportTypesResponse.next_page_token returned in response to the previous call to the `ListJobs` method."}, "includeSystemManaged" {"type" "boolean", "description" "If set to true, also system-managed jobs will be returned; otherwise only user-created jobs will be returned. System-managed jobs can neither be modified nor deleted.", "location" "query"}, "onBehalfOfContentOwner" {"location" "query", "description" "The content owner's external ID on which behalf the user is acting on. If not set, the user is acting for himself (his own channel).", "type" "string"}, "pageSize" {"type" "integer", "format" "int32", "description" "Requested page size. Server may return fewer jobs than requested. If unspecified, server will pick an appropriate default.", "location" "query"}}, :description "Lists jobs."}, "youtubereporting.jobs.reports.list" #:compute.gcp.descriptor{:http-method :get, :path "v1/jobs/{jobId}/reports", :response {"$ref" "ListReportsResponse"}, :parameters {"onBehalfOfContentOwner" {"type" "string", "description" "The content owner's external ID on which behalf the user is acting on. If not set, the user is acting for himself (his own channel).", "location" "query"}, "jobId" {"location" "path", "description" "The ID of the job.", "type" "string", "required" true}, "startTimeBefore" {"type" "string", "format" "google-datetime", "description" "If set, only reports whose start time is smaller than the specified date/time are returned.", "location" "query"}, "pageToken" {"location" "query", "type" "string", "description" "A token identifying a page of results the server should return. Typically, this is the value of ListReportsResponse.next_page_token returned in response to the previous call to the `ListReports` method."}, "createdAfter" {"type" "string", "description" "If set, only reports created after the specified date/time are returned.", "format" "google-datetime", "location" "query"}, "startTimeAtOrAfter" {"type" "string", "location" "query", "format" "google-datetime", "description" "If set, only reports whose start time is greater than or equal the specified date/time are returned."}, "pageSize" {"description" "Requested page size. Server may return fewer report types than requested. If unspecified, server will pick an appropriate default.", "type" "integer", "location" "query", "format" "int32"}}, :description "Lists reports created by a specific job. Returns NOT_FOUND if the job does not exist."}, "youtubereporting.jobs.reports.get" #:compute.gcp.descriptor{:http-method :get, :path "v1/jobs/{jobId}/reports/{reportId}", :response {"$ref" "Report"}, :parameters {"jobId" {"description" "The ID of the job.", "location" "path", "type" "string", "required" true}, "onBehalfOfContentOwner" {"type" "string", "description" "The content owner's external ID on which behalf the user is acting on. If not set, the user is acting for himself (his own channel).", "location" "query"}, "reportId" {"required" true, "description" "The ID of the report to retrieve.", "type" "string", "location" "path"}}, :description "Gets the metadata of a specific report."}}, :schemas {"GdataDiffUploadResponse" {"id" "GdataDiffUploadResponse", "description" "gdata", "type" "object", "properties" {"originalObject" {"description" "gdata", "$ref" "GdataCompositeMedia"}, "objectVersion" {"type" "string", "description" "gdata"}}}, "Empty" {"type" "object", "description" "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.", "id" "Empty", "properties" {}}, "GdataMedia" {"id" "GdataMedia", "description" "gdata", "type" "object", "properties" {"blobRef" {"description" "gdata", "format" "byte", "type" "string"}, "md5Hash" {"description" "gdata", "type" "string", "format" "byte"}, "cosmoBinaryReference" {"format" "byte", "description" "gdata", "type" "string"}, "objectId" {"$ref" "GdataObjectId", "description" "gdata"}, "compositeMedia" {"items" {"$ref" "GdataCompositeMedia"}, "type" "array", "description" "gdata"}, "token" {"type" "string", "description" "gdata"}, "diffDownloadResponse" {"$ref" "GdataDiffDownloadResponse", "description" "gdata"}, "hash" {"description" "gdata", "type" "string"}, "diffVersionResponse" {"$ref" "GdataDiffVersionResponse", "description" "gdata"}, "downloadParameters" {"$ref" "GdataDownloadParameters", "description" "gdata"}, "inline" {"format" "byte", "description" "gdata", "type" "string"}, "diffUploadRequest" {"description" "gdata", "$ref" "GdataDiffUploadRequest"}, "path" {"type" "string", "description" "gdata"}, "timestamp" {"format" "uint64", "type" "string", "description" "gdata"}, "sha256Hash" {"type" "string", "format" "byte", "description" "gdata"}, "algorithm" {"description" "gdata", "type" "string"}, "referenceType" {"description" "gdata", "type" "string", "enum" ["PATH" "BLOB_REF" "INLINE" "GET_MEDIA" "COMPOSITE_MEDIA" "BIGSTORE_REF" "DIFF_VERSION_RESPONSE" "DIFF_CHECKSUMS_RESPONSE" "DIFF_DOWNLOAD_RESPONSE" "DIFF_UPLOAD_REQUEST" "DIFF_UPLOAD_RESPONSE" "COSMO_BINARY_REFERENCE" "ARBITRARY_BYTES"], "enumDescriptions" ["gdata" "gdata" "gdata" "gdata" "gdata" "gdata" "gdata" "gdata" "gdata" "gdata" "gdata" "gdata" "gdata"]}, "sha1Hash" {"description" "gdata", "format" "byte", "type" "string"}, "diffChecksumsResponse" {"$ref" "GdataDiffChecksumsResponse", "description" "gdata"}, "hashVerified" {"type" "boolean", "description" "gdata"}, "length" {"type" "string", "format" "int64", "description" "gdata"}, "diffUploadResponse" {"description" "gdata", "$ref" "GdataDiffUploadResponse"}, "bigstoreObjectRef" {"type" "string", "description" "gdata", "format" "byte"}, "mediaId" {"format" "byte", "type" "string", "description" "gdata"}, "blobstore2Info" {"$ref" "GdataBlobstore2Info", "description" "gdata"}, "isPotentialRetry" {"description" "gdata", "type" "boolean"}, "contentType" {"type" "string", "description" "gdata"}, "contentTypeInfo" {"$ref" "GdataContentTypeInfo", "description" "gdata"}, "crc32cHash" {"description" "gdata", "format" "uint32", "type" "integer"}, "filename" {"description" "gdata", "type" "string"}}}, "ListReportTypesResponse" {"id" "ListReportTypesResponse", "properties" {"reportTypes" {"items" {"$ref" "ReportType"}, "type" "array", "description" "The list of report types."}, "nextPageToken" {"type" "string", "description" "A token to retrieve next page of results. Pass this value in the ListReportTypesRequest.page_token field in the subsequent call to `ListReportTypes` method to retrieve the next page of results."}}, "description" "Response message for ReportingService.ListReportTypes.", "type" "object"}, "GdataBlobstore2Info" {"properties" {"readToken" {"type" "string", "description" "gdata"}, "downloadReadHandle" {"description" "gdata", "format" "byte", "type" "string"}, "blobGeneration" {"type" "string", "format" "int64", "description" "gdata"}, "uploadMetadataContainer" {"format" "byte", "description" "gdata", "type" "string"}, "blobId" {"type" "string", "description" "gdata"}}, "type" "object", "description" "gdata", "id" "GdataBlobstore2Info"}, "GdataCompositeMedia" {"id" "GdataCompositeMedia", "properties" {"blobRef" {"description" "gdata", "format" "byte", "type" "string"}, "md5Hash" {"type" "string", "format" "byte", "description" "gdata"}, "cosmoBinaryReference" {"type" "string", "description" "gdata", "format" "byte"}, "objectId" {"description" "gdata", "$ref" "GdataObjectId"}, "inline" {"type" "string", "description" "gdata", "format" "byte"}, "path" {"description" "gdata", "type" "string"}, "referenceType" {"description" "gdata", "enumDescriptions" ["gdata" "gdata" "gdata" "gdata" "gdata"], "enum" ["PATH" "BLOB_REF" "INLINE" "BIGSTORE_REF" "COSMO_BINARY_REFERENCE"], "type" "string"}, "sha1Hash" {"format" "byte", "type" "string", "description" "gdata"}, "length" {"format" "int64", "type" "string", "description" "gdata"}, "blobstore2Info" {"$ref" "GdataBlobstore2Info", "description" "gdata"}, "crc32cHash" {"description" "gdata", "format" "uint32", "type" "integer"}}, "type" "object", "description" "gdata"}, "GdataDiffVersionResponse" {"properties" {"objectVersion" {"description" "gdata", "type" "string"}, "objectSizeBytes" {"description" "gdata", "format" "int64", "type" "string"}}, "type" "object", "description" "gdata", "id" "GdataDiffVersionResponse"}, "Report" {"type" "object", "description" "A report's metadata including the URL from which the report itself can be downloaded.", "properties" {"downloadUrl" {"description" "The URL from which the report can be downloaded (max. 1000 characters).", "type" "string"}, "startTime" {"description" "The start of the time period that the report instance covers. The value is inclusive.", "format" "google-datetime", "type" "string"}, "jobId" {"description" "The ID of the job that created this report.", "type" "string"}, "id" {"description" "The server-generated ID of the report.", "type" "string"}, "createTime" {"description" "The date/time when this report was created.", "format" "google-datetime", "type" "string"}, "jobExpireTime" {"format" "google-datetime", "type" "string", "description" "The date/time when the job this report belongs to will expire/expired."}, "endTime" {"type" "string", "format" "google-datetime", "description" "The end of the time period that the report instance covers. The value is exclusive."}}, "id" "Report"}, "GdataContentTypeInfo" {"id" "GdataContentTypeInfo", "description" "gdata", "properties" {"bestGuess" {"type" "string", "description" "gdata"}, "fromBytes" {"description" "gdata", "type" "string"}, "fromUrlPath" {"type" "string", "description" "gdata"}, "fromHeader" {"description" "gdata", "type" "string"}, "fromFileName" {"description" "gdata", "type" "string"}}, "type" "object"}, "ReportType" {"type" "object", "id" "ReportType", "properties" {"id" {"type" "string", "description" "The ID of the report type (max. 100 characters)."}, "systemManaged" {"type" "boolean", "description" "True if this a system-managed report type; otherwise false. Reporting jobs for system-managed report types are created automatically and can thus not be used in the `CreateJob` method."}, "deprecateTime" {"format" "google-datetime", "type" "string", "description" "The date/time when this report type was/will be deprecated."}, "name" {"description" "The name of the report type (max. 100 characters).", "type" "string"}}, "description" "A report type."}, "ListReportsResponse" {"type" "object", "description" "Response message for ReportingService.ListReports.", "properties" {"nextPageToken" {"type" "string", "description" "A token to retrieve next page of results. Pass this value in the ListReportsRequest.page_token field in the subsequent call to `ListReports` method to retrieve the next page of results."}, "reports" {"type" "array", "description" "The list of report types.", "items" {"$ref" "Report"}}}, "id" "ListReportsResponse"}, "GdataDiffUploadRequest" {"type" "object", "description" "gdata", "id" "GdataDiffUploadRequest", "properties" {"objectInfo" {"$ref" "GdataCompositeMedia", "description" "gdata"}, "checksumsInfo" {"$ref" "GdataCompositeMedia", "description" "gdata"}, "objectVersion" {"type" "string", "description" "gdata"}}}, "GdataDiffDownloadResponse" {"type" "object", "id" "GdataDiffDownloadResponse", "properties" {"objectLocation" {"$ref" "GdataCompositeMedia", "description" "gdata"}}, "description" "gdata"}, "GdataObjectId" {"id" "GdataObjectId", "description" "gdata", "type" "object", "properties" {"objectName" {"type" "string", "description" "gdata"}, "bucketName" {"type" "string", "description" "gdata"}, "generation" {"type" "string", "format" "int64", "description" "gdata"}}}, "Job" {"properties" {"systemManaged" {"description" "True if this a system-managed job that cannot be modified by the user; otherwise false.", "type" "boolean"}, "expireTime" {"format" "google-datetime", "description" "The date/time when this job will expire/expired. After a job expired, no new reports are generated.", "type" "string"}, "name" {"description" "The name of the job (max. 100 characters).", "type" "string"}, "reportTypeId" {"type" "string", "description" "The type of reports this job creates. Corresponds to the ID of a ReportType."}, "id" {"type" "string", "description" "The server-generated ID of the job (max. 40 characters)."}, "createTime" {"type" "string", "format" "google-datetime", "description" "The creation date/time of the job."}}, "description" "A job creating reports of a specific type.", "type" "object", "id" "Job"}, "GdataDiffChecksumsResponse" {"description" "gdata", "id" "GdataDiffChecksumsResponse", "properties" {"chunkSizeBytes" {"type" "string", "description" "gdata", "format" "int64"}, "objectLocation" {"description" "gdata", "$ref" "GdataCompositeMedia"}, "objectSizeBytes" {"type" "string", "description" "gdata", "format" "int64"}, "checksumsLocation" {"description" "gdata", "$ref" "GdataCompositeMedia"}, "objectVersion" {"type" "string", "description" "gdata"}}, "type" "object"}, "ListJobsResponse" {"description" "Response message for ReportingService.ListJobs.", "properties" {"nextPageToken" {"type" "string", "description" "A token to retrieve next page of results. Pass this value in the ListJobsRequest.page_token field in the subsequent call to `ListJobs` method to retrieve the next page of results."}, "jobs" {"type" "array", "items" {"$ref" "Job"}, "description" "The list of jobs."}}, "type" "object", "id" "ListJobsResponse"}, "GdataDownloadParameters" {"id" "GdataDownloadParameters", "description" "gdata", "type" "object", "properties" {"allowGzipCompression" {"description" "gdata", "type" "boolean"}, "ignoreRange" {"description" "gdata", "type" "boolean"}}}}}