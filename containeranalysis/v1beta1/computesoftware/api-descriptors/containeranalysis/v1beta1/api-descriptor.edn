#:compute.gcp.descriptor{:name "containeranalysis", :title "Container Analysis API", :api-version "v1beta1", :revision "20200417", :endpoint #:compute.gcp.descriptor{:url "https://containeranalysis.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"description" "JSONP", "type" "string", "location" "query"}, "uploadType" {"description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "type" "string", "location" "query"}, "key" {"location" "query", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "type" "string"}, "access_token" {"type" "string", "location" "query", "description" "OAuth access token."}, "oauth_token" {"description" "OAuth 2.0 token for the current user.", "type" "string", "location" "query"}, "prettyPrint" {"type" "boolean", "default" "true", "location" "query", "description" "Returns response with indentations and line breaks."}, "alt" {"location" "query", "description" "Data format for response.", "default" "json", "enum" ["json" "media" "proto"], "type" "string", "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"]}, "$.xgafv" {"enumDescriptions" ["v1 error format" "v2 error format"], "location" "query", "enum" ["1" "2"], "description" "V1 error format.", "type" "string"}, "fields" {"location" "query", "description" "Selector specifying which fields to include in a partial response.", "type" "string"}, "upload_protocol" {"location" "query", "description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "type" "string"}, "quotaUser" {"type" "string", "location" "query", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."}}, :op->info {"containeranalysis.projects.notes.create" #:compute.gcp.descriptor{:http-method :post, :path "v1beta1/{+parent}/notes", :request {"$ref" "Note"}, :response {"$ref" "Note"}, :parameters {"parent" {"pattern" "^projects/[^/]+$", "location" "path", "description" "Required. The name of the project in the form of `projects/[PROJECT_ID]`, under which\nthe note is to be created.", "required" true, "type" "string"}, "noteId" {"location" "query", "description" "Required. The ID to use for this note.", "type" "string"}}, :description "Creates a new note."}, "containeranalysis.projects.occurrences.getNotes" #:compute.gcp.descriptor{:http-method :get, :path "v1beta1/{+name}/notes", :response {"$ref" "Note"}, :parameters {"name" {"pattern" "^projects/[^/]+/occurrences/[^/]+$", "location" "path", "description" "Required. The name of the occurrence in the form of\n`projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.", "required" true, "type" "string"}}, :description "Gets the note attached to the specified occurrence. Consumer projects can\nuse this method to get a note that belongs to a provider project."}, "containeranalysis.projects.occurrences.getIamPolicy" #:compute.gcp.descriptor{:http-method :post, :path "v1beta1/{+resource}:getIamPolicy", :request {"$ref" "GetIamPolicyRequest"}, :response {"$ref" "Policy"}, :parameters {"resource" {"location" "path", "description" "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.", "required" true, "type" "string", "pattern" "^projects/[^/]+/occurrences/[^/]+$"}}, :description "Gets the access control policy for a note or an occurrence resource.\nRequires `containeranalysis.notes.setIamPolicy` or\n`containeranalysis.occurrences.setIamPolicy` permission if the resource is\na note or occurrence, respectively.\n\nThe resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for\nnotes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for\noccurrences."}, "containeranalysis.projects.occurrences.list" #:compute.gcp.descriptor{:http-method :get, :path "v1beta1/{+parent}/occurrences", :response {"$ref" "ListOccurrencesResponse"}, :parameters {"parent" {"description" "Required. The name of the project to list occurrences for in the form of\n`projects/[PROJECT_ID]`.", "required" true, "type" "string", "pattern" "^projects/[^/]+$", "location" "path"}, "filter" {"location" "query", "description" "The filter expression.", "type" "string"}, "pageToken" {"description" "Token to provide to skip to a particular spot in the list.", "type" "string", "location" "query"}, "pageSize" {"description" "Number of occurrences to return in the list. Must be positive. Max allowed\npage size is 1000. If not specified, page size defaults to 20.", "format" "int32", "type" "integer", "location" "query"}}, :description "Lists occurrences for the specified project."}, "containeranalysis.projects.notes.testIamPermissions" #:compute.gcp.descriptor{:http-method :post, :path "v1beta1/{+resource}:testIamPermissions", :request {"$ref" "TestIamPermissionsRequest"}, :response {"$ref" "TestIamPermissionsResponse"}, :parameters {"resource" {"location" "path", "description" "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.", "required" true, "type" "string", "pattern" "^projects/[^/]+/notes/[^/]+$"}}, :description "Returns the permissions that a caller has on the specified note or\noccurrence. Requires list permission on the project (for example,\n`containeranalysis.notes.list`).\n\nThe resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for\nnotes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for\noccurrences."}, "containeranalysis.projects.occurrences.setIamPolicy" #:compute.gcp.descriptor{:http-method :post, :path "v1beta1/{+resource}:setIamPolicy", :request {"$ref" "SetIamPolicyRequest"}, :response {"$ref" "Policy"}, :parameters {"resource" {"required" true, "type" "string", "pattern" "^projects/[^/]+/occurrences/[^/]+$", "location" "path", "description" "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field."}}, :description "Sets the access control policy on the specified note or occurrence.\nRequires `containeranalysis.notes.setIamPolicy` or\n`containeranalysis.occurrences.setIamPolicy` permission if the resource is\na note or an occurrence, respectively.\n\nThe resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for\nnotes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for\noccurrences."}, "containeranalysis.projects.occurrences.patch" #:compute.gcp.descriptor{:http-method :patch, :path "v1beta1/{+name}", :request {"$ref" "Occurrence"}, :response {"$ref" "Occurrence"}, :parameters {"updateMask" {"description" "The fields to update.", "format" "google-fieldmask", "type" "string", "location" "query"}, "name" {"description" "Required. The name of the occurrence in the form of\n`projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.", "required" true, "type" "string", "pattern" "^projects/[^/]+/occurrences/[^/]+$", "location" "path"}}, :description "Updates the specified occurrence."}, "containeranalysis.projects.notes.patch" #:compute.gcp.descriptor{:http-method :patch, :path "v1beta1/{+name}", :request {"$ref" "Note"}, :response {"$ref" "Note"}, :parameters {"name" {"required" true, "type" "string", "pattern" "^projects/[^/]+/notes/[^/]+$", "location" "path", "description" "Required. The name of the note in the form of\n`projects/[PROVIDER_ID]/notes/[NOTE_ID]`."}, "updateMask" {"location" "query", "description" "The fields to update.", "format" "google-fieldmask", "type" "string"}}, :description "Updates the specified note."}, "containeranalysis.projects.occurrences.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1beta1/{+name}", :response {"$ref" "Empty"}, :parameters {"name" {"required" true, "type" "string", "pattern" "^projects/[^/]+/occurrences/[^/]+$", "location" "path", "description" "Required. The name of the occurrence in the form of\n`projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`."}}, :description "Deletes the specified occurrence. For example, use this method to delete an\noccurrence when the occurrence is no longer applicable for the given\nresource."}, "containeranalysis.projects.notes.getIamPolicy" #:compute.gcp.descriptor{:http-method :post, :path "v1beta1/{+resource}:getIamPolicy", :request {"$ref" "GetIamPolicyRequest"}, :response {"$ref" "Policy"}, :parameters {"resource" {"pattern" "^projects/[^/]+/notes/[^/]+$", "location" "path", "description" "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.", "required" true, "type" "string"}}, :description "Gets the access control policy for a note or an occurrence resource.\nRequires `containeranalysis.notes.setIamPolicy` or\n`containeranalysis.occurrences.setIamPolicy` permission if the resource is\na note or occurrence, respectively.\n\nThe resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for\nnotes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for\noccurrences."}, "containeranalysis.projects.scanConfigs.update" #:compute.gcp.descriptor{:http-method :put, :path "v1beta1/{+name}", :request {"$ref" "ScanConfig"}, :response {"$ref" "ScanConfig"}, :parameters {"name" {"location" "path", "description" "Required. The name of the scan configuration in the form of\n`projects/[PROJECT_ID]/scanConfigs/[SCAN_CONFIG_ID]`.", "required" true, "type" "string", "pattern" "^projects/[^/]+/scanConfigs/[^/]+$"}}, :description "Updates the specified scan configuration."}, "containeranalysis.projects.notes.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1beta1/{+name}", :response {"$ref" "Empty"}, :parameters {"name" {"pattern" "^projects/[^/]+/notes/[^/]+$", "location" "path", "description" "Required. The name of the note in the form of\n`projects/[PROVIDER_ID]/notes/[NOTE_ID]`.", "required" true, "type" "string"}}, :description "Deletes the specified note."}, "containeranalysis.projects.notes.occurrences.list" #:compute.gcp.descriptor{:http-method :get, :path "v1beta1/{+name}/occurrences", :response {"$ref" "ListNoteOccurrencesResponse"}, :parameters {"name" {"description" "Required. The name of the note to list occurrences for in the form of\n`projects/[PROVIDER_ID]/notes/[NOTE_ID]`.", "required" true, "type" "string", "pattern" "^projects/[^/]+/notes/[^/]+$", "location" "path"}, "pageToken" {"type" "string", "location" "query", "description" "Token to provide to skip to a particular spot in the list."}, "pageSize" {"type" "integer", "location" "query", "description" "Number of occurrences to return in the list.", "format" "int32"}, "filter" {"type" "string", "location" "query", "description" "The filter expression."}}, :description "Lists occurrences referencing the specified note. Provider projects can use\nthis method to get all occurrences across consumer projects referencing the\nspecified note."}, "containeranalysis.projects.scanConfigs.list" #:compute.gcp.descriptor{:http-method :get, :path "v1beta1/{+parent}/scanConfigs", :response {"$ref" "ListScanConfigsResponse"}, :parameters {"pageToken" {"description" "Token to provide to skip to a particular spot in the list.", "type" "string", "location" "query"}, "pageSize" {"description" "The number of scan configs to return in the list.", "format" "int32", "type" "integer", "location" "query"}, "parent" {"required" true, "type" "string", "pattern" "^projects/[^/]+$", "location" "path", "description" "Required. The name of the project to list scan configurations for in the form of\n`projects/[PROJECT_ID]`."}, "filter" {"description" "Required. The filter expression.", "type" "string", "location" "query"}}, :description "Lists scan configurations for the specified project."}, "containeranalysis.projects.notes.get" #:compute.gcp.descriptor{:http-method :get, :path "v1beta1/{+name}", :response {"$ref" "Note"}, :parameters {"name" {"pattern" "^projects/[^/]+/notes/[^/]+$", "location" "path", "description" "Required. The name of the note in the form of\n`projects/[PROVIDER_ID]/notes/[NOTE_ID]`.", "required" true, "type" "string"}}, :description "Gets the specified note."}, "containeranalysis.projects.occurrences.getVulnerabilitySummary" #:compute.gcp.descriptor{:http-method :get, :path "v1beta1/{+parent}/occurrences:vulnerabilitySummary", :response {"$ref" "VulnerabilityOccurrencesSummary"}, :parameters {"parent" {"location" "path", "description" "Required. The name of the project to get a vulnerability summary for in the form of\n`projects/[PROJECT_ID]`.", "required" true, "type" "string", "pattern" "^projects/[^/]+$"}, "filter" {"type" "string", "location" "query", "description" "The filter expression."}}, :description "Gets a summary of the number and severity of occurrences."}, "containeranalysis.projects.occurrences.testIamPermissions" #:compute.gcp.descriptor{:http-method :post, :path "v1beta1/{+resource}:testIamPermissions", :request {"$ref" "TestIamPermissionsRequest"}, :response {"$ref" "TestIamPermissionsResponse"}, :parameters {"resource" {"required" true, "type" "string", "pattern" "^projects/[^/]+/occurrences/[^/]+$", "location" "path", "description" "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field."}}, :description "Returns the permissions that a caller has on the specified note or\noccurrence. Requires list permission on the project (for example,\n`containeranalysis.notes.list`).\n\nThe resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for\nnotes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for\noccurrences."}, "containeranalysis.projects.notes.setIamPolicy" #:compute.gcp.descriptor{:http-method :post, :path "v1beta1/{+resource}:setIamPolicy", :request {"$ref" "SetIamPolicyRequest"}, :response {"$ref" "Policy"}, :parameters {"resource" {"pattern" "^projects/[^/]+/notes/[^/]+$", "location" "path", "description" "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.", "required" true, "type" "string"}}, :description "Sets the access control policy on the specified note or occurrence.\nRequires `containeranalysis.notes.setIamPolicy` or\n`containeranalysis.occurrences.setIamPolicy` permission if the resource is\na note or an occurrence, respectively.\n\nThe resource takes the format `projects/[PROJECT_ID]/notes/[NOTE_ID]` for\nnotes and `projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]` for\noccurrences."}, "containeranalysis.projects.occurrences.batchCreate" #:compute.gcp.descriptor{:http-method :post, :path "v1beta1/{+parent}/occurrences:batchCreate", :request {"$ref" "BatchCreateOccurrencesRequest"}, :response {"$ref" "BatchCreateOccurrencesResponse"}, :parameters {"parent" {"required" true, "type" "string", "pattern" "^projects/[^/]+$", "location" "path", "description" "Required. The name of the project in the form of `projects/[PROJECT_ID]`, under which\nthe occurrences are to be created."}}, :description "Creates new occurrences in batch."}, "containeranalysis.projects.occurrences.get" #:compute.gcp.descriptor{:http-method :get, :path "v1beta1/{+name}", :response {"$ref" "Occurrence"}, :parameters {"name" {"description" "Required. The name of the occurrence in the form of\n`projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.", "required" true, "type" "string", "pattern" "^projects/[^/]+/occurrences/[^/]+$", "location" "path"}}, :description "Gets the specified occurrence."}, "containeranalysis.projects.notes.batchCreate" #:compute.gcp.descriptor{:http-method :post, :path "v1beta1/{+parent}/notes:batchCreate", :request {"$ref" "BatchCreateNotesRequest"}, :response {"$ref" "BatchCreateNotesResponse"}, :parameters {"parent" {"pattern" "^projects/[^/]+$", "location" "path", "description" "Required. The name of the project in the form of `projects/[PROJECT_ID]`, under which\nthe notes are to be created.", "required" true, "type" "string"}}, :description "Creates new notes in batch."}, "containeranalysis.projects.scanConfigs.get" #:compute.gcp.descriptor{:http-method :get, :path "v1beta1/{+name}", :response {"$ref" "ScanConfig"}, :parameters {"name" {"description" "Required. The name of the scan configuration in the form of\n`projects/[PROJECT_ID]/scanConfigs/[SCAN_CONFIG_ID]`.", "required" true, "type" "string", "pattern" "^projects/[^/]+/scanConfigs/[^/]+$", "location" "path"}}, :description "Gets the specified scan configuration."}, "containeranalysis.projects.occurrences.create" #:compute.gcp.descriptor{:http-method :post, :path "v1beta1/{+parent}/occurrences", :request {"$ref" "Occurrence"}, :response {"$ref" "Occurrence"}, :parameters {"parent" {"location" "path", "description" "Required. The name of the project in the form of `projects/[PROJECT_ID]`, under which\nthe occurrence is to be created.", "required" true, "type" "string", "pattern" "^projects/[^/]+$"}}, :description "Creates a new occurrence."}, "containeranalysis.projects.notes.list" #:compute.gcp.descriptor{:http-method :get, :path "v1beta1/{+parent}/notes", :response {"$ref" "ListNotesResponse"}, :parameters {"parent" {"required" true, "type" "string", "pattern" "^projects/[^/]+$", "location" "path", "description" "Required. The name of the project to list notes for in the form of\n`projects/[PROJECT_ID]`."}, "filter" {"location" "query", "description" "The filter expression.", "type" "string"}, "pageToken" {"location" "query", "description" "Token to provide to skip to a particular spot in the list.", "type" "string"}, "pageSize" {"description" "Number of notes to return in the list. Must be positive. Max allowed page\nsize is 1000. If not specified, page size defaults to 20.", "format" "int32", "type" "integer", "location" "query"}}, :description "Lists notes for the specified project."}}, :schemas {"TestIamPermissionsRequest" {"type" "object", "properties" {"permissions" {"description" "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).", "type" "array", "items" {"type" "string"}}}, "id" "TestIamPermissionsRequest", "description" "Request message for `TestIamPermissions` method."}, "ListNotesResponse" {"type" "object", "properties" {"nextPageToken" {"description" "The next pagination token in the list response. It should be used as\n`page_token` for the following request. An empty value means no more\nresults.", "type" "string"}, "notes" {"description" "The notes requested.", "type" "array", "items" {"$ref" "Note"}}}, "id" "ListNotesResponse", "description" "Response for listing notes."}, "GrafeasV1beta1BuildDetails" {"description" "Details of a build occurrence.", "type" "object", "properties" {"provenance" {"$ref" "BuildProvenance", "description" "Required. The actual provenance for the build."}, "provenanceBytes" {"description" "Serialized JSON representation of the provenance, used in generating the\nbuild signature in the corresponding build note. After verifying the\nsignature, `provenance_bytes` can be unmarshalled and compared to the\nprovenance to confirm that it is unchanged. A base64-encoded string\nrepresentation of the provenance bytes is used for the signature in order\nto interoperate with openssl which expects this format for signature\nverification.\n\nThe serialized form is captured both to avoid ambiguity in how the\nprovenance is marshalled to json as well to prevent incompatibilities with\nfuture changes.", "type" "string"}}, "id" "GrafeasV1beta1BuildDetails"}, "Empty" {"description" "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.", "type" "object", "properties" {}, "id" "Empty"}, "Expr" {"id" "Expr", "description" "Represents a textual expression in the Common Expression Language (CEL)\nsyntax. CEL is a C-like expression language. The syntax and semantics of CEL\nare documented at https://github.com/google/cel-spec.\n\nExample (Comparison):\n\n    title: \"Summary size limit\"\n    description: \"Determines if a summary is less than 100 chars\"\n    expression: \"document.summary.size() < 100\"\n\nExample (Equality):\n\n    title: \"Requestor is owner\"\n    description: \"Determines if requestor is the document owner\"\n    expression: \"document.owner == request.auth.claims.email\"\n\nExample (Logic):\n\n    title: \"Public documents\"\n    description: \"Determine whether the document should be publicly visible\"\n    expression: \"document.type != 'private' && document.type != 'internal'\"\n\nExample (Data Manipulation):\n\n    title: \"Notification string\"\n    description: \"Create a notification string with a timestamp.\"\n    expression: \"'New message received at ' + string(document.create_time)\"\n\nThe exact variables and functions that may be referenced within an expression\nare determined by the service that evaluates it. See the service\ndocumentation for additional information.", "type" "object", "properties" {"description" {"type" "string", "description" "Optional. Description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI."}, "expression" {"type" "string", "description" "Textual representation of an expression in Common Expression Language\nsyntax."}, "title" {"description" "Optional. Title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.", "type" "string"}, "location" {"description" "Optional. String indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.", "type" "string"}}}, "VulnerabilityLocation" {"type" "object", "properties" {"cpeUri" {"description" "Required. The CPE URI in [cpe format](https://cpe.mitre.org/specification/)\nformat. Examples include distro or storage location for vulnerable jar.", "type" "string"}, "package" {"description" "Required. The package being described.", "type" "string"}, "version" {"description" "Required. The version of the package being described.", "$ref" "Version"}}, "id" "VulnerabilityLocation", "description" "The location of the vulnerability."}, "GoogleDevtoolsContaineranalysisV1alpha1OperationMetadata" {"description" "Metadata for all operations used and required for all operations\nthat created by Container Analysis Providers", "type" "object", "properties" {"createTime" {"description" "Output only. The time this operation was created.", "format" "google-datetime", "type" "string"}, "endTime" {"description" "Output only. The time that this operation was marked completed or failed.", "format" "google-datetime", "type" "string"}}, "id" "GoogleDevtoolsContaineranalysisV1alpha1OperationMetadata"}, "KnowledgeBase" {"type" "object", "properties" {"name" {"description" "The KB name (generally of the form KB[0-9]+ i.e. KB123456).", "type" "string"}, "url" {"description" "A link to the KB in the Windows update catalog -\nhttps://www.catalog.update.microsoft.com/", "type" "string"}}, "id" "KnowledgeBase"}, "ListNoteOccurrencesResponse" {"id" "ListNoteOccurrencesResponse", "description" "Response for listing occurrences for a note.", "type" "object", "properties" {"occurrences" {"type" "array", "items" {"$ref" "Occurrence"}, "description" "The occurrences attached to the specified note."}, "nextPageToken" {"description" "Token to provide to skip to a particular spot in the list.", "type" "string"}}}, "Link" {"description" "This corresponds to an in-toto link.", "type" "object", "properties" {"materials" {"type" "array", "items" {"$ref" "GrafeasV1beta1IntotoArtifact"}, "description" "Materials are the supply chain artifacts that go into the step and are used\nfor the operation performed. The key of the map is the path of the artifact\nand the structure contains the recorded hash information. An example is:\n\"materials\": [\n  {\n    \"resource_uri\": \"foo/bar\",\n    \"hashes\": {\n      \"sha256\": \"ebebf...\",\n      <OTHER HASH ALGORITHMS>: <HASH VALUE>\n    }\n  }\n]"}, "products" {"description" "Products are the supply chain artifacts generated as a result of the step.\nThe structure is identical to that of materials.", "type" "array", "items" {"$ref" "GrafeasV1beta1IntotoArtifact"}}, "command" {"description" "This field contains the full command executed for the step. This can also\nbe empty if links are generated for operations that aren't directly mapped\nto a specific command. Each term in the command is an independent string\nin the list. An example of a command in the in-toto metadata field is:\n\"command\": [\"git\", \"clone\", \"https://github.com/in-toto/demo-project.git\"]", "type" "array", "items" {"type" "string"}}, "byproducts" {"$ref" "ByProducts", "description" "ByProducts are data generated as part of a software supply chain step, but\nare not the actual result of the step."}, "environment" {"$ref" "Environment", "description" "This is a field that can be used to capture information about the\nenvironment. It is suggested for this field to contain information that\ndetails environment variables, filesystem information, and the present\nworking directory. The recommended structure of this field is:\n\"environment\": {\n  \"custom_values\": {\n    \"variables\": \"<ENV>\",\n    \"filesystem\": \"<FS>\",\n    \"workdir\": \"<CWD>\",\n    \"<ANY OTHER RELEVANT FIELDS>\": \"...\"\n  }\n}"}}, "id" "Link"}, "Basis" {"description" "Basis describes the base image portion (Note) of the DockerImage\nrelationship. Linked occurrences are derived from this or an\nequivalent image via:\n  FROM <Basis.resource_url>\nOr an equivalent reference, e.g. a tag of the resource_url.", "type" "object", "properties" {"fingerprint" {"description" "Required. Immutable. The fingerprint of the base image.", "$ref" "Fingerprint"}, "resourceUrl" {"description" "Required. Immutable. The resource_url for the resource representing the\nbasis of associated occurrence images.", "type" "string"}}, "id" "Basis"}, "Deployment" {"description" "The period during which some deployable was active in a runtime.", "type" "object", "properties" {"undeployTime" {"type" "string", "description" "End of the lifetime of this deployment.", "format" "google-datetime"}, "platform" {"type" "string", "enumDescriptions" ["Unknown." "Google Container Engine." "Google App Engine: Flexible Environment." "Custom user-defined platform."], "enum" ["PLATFORM_UNSPECIFIED" "GKE" "FLEX" "CUSTOM"], "description" "Platform hosting this deployment."}, "deployTime" {"description" "Required. Beginning of the lifetime of this deployment.", "format" "google-datetime", "type" "string"}, "address" {"type" "string", "description" "Address of the runtime element hosting this deployment."}, "resourceUri" {"description" "Output only. Resource URI for the artifact being deployed taken from\nthe deployable field with the same name.", "type" "array", "items" {"type" "string"}}, "userEmail" {"description" "Identity of the user that triggered this deployment.", "type" "string"}, "config" {"description" "Configuration used to create this deployment.", "type" "string"}}, "id" "Deployment"}, "Detail" {"type" "object", "properties" {"packageType" {"type" "string", "description" "The type of package; whether native or non native(ruby gems, node.js\npackages etc)."}, "package" {"type" "string", "description" "Required. The name of the package where the vulnerability was found."}, "maxAffectedVersion" {"$ref" "Version", "description" "The max version of the package in which the vulnerability exists."}, "minAffectedVersion" {"$ref" "Version", "description" "The min version of the package in which the vulnerability exists."}, "severityName" {"type" "string", "description" "The severity (eg: distro assigned severity) for this vulnerability."}, "isObsolete" {"type" "boolean", "description" "Whether this detail is obsolete. Occurrences are expected not to point to\nobsolete details."}, "fixedLocation" {"description" "The fix for this specific package version.", "$ref" "VulnerabilityLocation"}, "cpeUri" {"description" "Required. The CPE URI in\n[cpe format](https://cpe.mitre.org/specification/) in which the\nvulnerability manifests. Examples include distro or storage location for\nvulnerable jar.", "type" "string"}, "sourceUpdateTime" {"description" "The time this information was last changed at the source. This is an\nupstream timestamp from the underlying information source - e.g. Ubuntu\nsecurity tracker.", "format" "google-datetime", "type" "string"}, "description" {"description" "A vendor-specific description of this note.", "type" "string"}}, "id" "Detail", "description" "Identifies all appearances of this vulnerability in the package for a\nspecific distro/location. For example: glibc in\ncpe:/o:debian:debian_linux:8 for versions 2.1 - 2.2"}, "RelatedUrl" {"type" "object", "properties" {"url" {"description" "Specific URL associated with the resource.", "type" "string"}, "label" {"type" "string", "description" "Label to describe usage of the URL."}}, "id" "RelatedUrl", "description" "Metadata for any related URL information."}, "Hint" {"description" "This submessage provides human-readable hints about the purpose of the\nauthority. Because the name of a note acts as its resource reference, it is\nimportant to disambiguate the canonical name of the Note (which might be a\nUUID for security purposes) from \"readable\" names more suitable for debug\noutput. Note that these hints should not be used to look up authorities in\nsecurity sensitive contexts, such as when looking up attestations to\nverify.", "type" "object", "properties" {"humanReadableName" {"description" "Required. The human readable name of this attestation authority, for\nexample \"qa\".", "type" "string"}}, "id" "Hint"}, "Vulnerability" {"description" "Vulnerability provides metadata about a security vulnerability in a Note.", "type" "object", "properties" {"severity" {"type" "string", "enumDescriptions" ["Unknown." "Minimal severity." "Low severity." "Medium severity." "High severity." "Critical severity."], "enum" ["SEVERITY_UNSPECIFIED" "MINIMAL" "LOW" "MEDIUM" "HIGH" "CRITICAL"], "description" "Note provider assigned impact of the vulnerability."}, "details" {"description" "All information about the package to specifically identify this\nvulnerability. One entry per (version range and cpe_uri) the package\nvulnerability has manifested in.", "type" "array", "items" {"$ref" "Detail"}}, "cvssScore" {"description" "The CVSS score for this vulnerability.", "format" "float", "type" "number"}, "cvssV3" {"$ref" "CVSSv3", "description" "The full description of the CVSSv3."}, "sourceUpdateTime" {"description" "The time this information was last changed at the source. This is an\nupstream timestamp from the underlying information source - e.g. Ubuntu\nsecurity tracker.", "format" "google-datetime", "type" "string"}, "windowsDetails" {"description" "Windows details get their own format because the information format and\nmodel don't match a normal detail. Specifically Windows updates are done as\npatches, thus Windows vulnerabilities really are a missing package, rather\nthan a package being at an incorrect version.", "type" "array", "items" {"$ref" "WindowsDetail"}}}, "id" "Vulnerability"}, "Distribution" {"description" "This represents a particular channel of distribution for a given package.\nE.g., Debian's jessie-backports dpkg mirror.", "type" "object", "properties" {"maintainer" {"description" "A freeform string denoting the maintainer of this package.", "type" "string"}, "latestVersion" {"$ref" "Version", "description" "The latest available version of this package in this distribution channel."}, "description" {"description" "The distribution channel-specific description of this package.", "type" "string"}, "cpeUri" {"type" "string", "description" "Required. The cpe_uri in [CPE format](https://cpe.mitre.org/specification/)\ndenoting the package manager version distributing a package."}, "url" {"type" "string", "description" "The distribution channel-specific homepage for this package."}, "architecture" {"enumDescriptions" ["Unknown architecture." "X86 architecture." "X64 architecture."], "enum" ["ARCHITECTURE_UNSPECIFIED" "X86" "X64"], "description" "The CPU architecture for which packages in this distribution channel were\nbuilt.", "type" "string"}}, "id" "Distribution"}, "Package" {"description" "This represents a particular package that is distributed over various\nchannels. E.g., glibc (aka libc6) is distributed by many, at various\nversions.", "type" "object", "properties" {"name" {"description" "Required. Immutable. The name of the package.", "type" "string"}, "distribution" {"description" "The various channels by which a package is distributed.", "type" "array", "items" {"$ref" "Distribution"}}}, "id" "Package"}, "Source" {"id" "Source", "description" "Source describes the location of the source used for the build.", "type" "object", "properties" {"artifactStorageSourceUri" {"description" "If provided, the input binary artifacts for the build came from this\nlocation.", "type" "string"}, "additionalContexts" {"description" "If provided, some of the source code used for the build may be found in\nthese locations, in the case where the source repository had multiple\nremotes or submodules. This list will not include the context specified in\nthe context field.", "type" "array", "items" {"$ref" "SourceContext"}}, "fileHashes" {"description" "Hash(es) of the build source, which can be used to verify that the original\nsource integrity was maintained in the build.\n\nThe keys to this map are file paths used as build source and the values\ncontain the hash values for those files.\n\nIf the build source came in a single package such as a gzipped tarfile\n(.tar.gz), the FileHash will be for the single path to that file.", "type" "object", "additionalProperties" {"$ref" "FileHashes"}}, "context" {"$ref" "SourceContext", "description" "If provided, the source code used for the build came from this location."}}}, "Details" {"type" "object", "properties" {"attestation" {"$ref" "Attestation", "description" "Required. Attestation for the resource."}}, "id" "Details", "description" "Details of an attestation occurrence."}, "BatchCreateNotesRequest" {"type" "object", "properties" {"notes" {"type" "object", "additionalProperties" {"$ref" "Note"}, "description" "Required. The notes to create. Max allowed length is 1000."}}, "id" "BatchCreateNotesRequest", "description" "Request to create notes in batch."}, "ArtifactHashes" {"description" "Defines a hash object for use in Materials and Products.", "type" "object", "properties" {"sha256" {"type" "string"}}, "id" "ArtifactHashes"}, "Note" {"description" "A type of analysis that can be done for a resource.", "type" "object", "properties" {"package" {"$ref" "Package", "description" "A note describing a package hosted by various package managers."}, "longDescription" {"description" "A detailed description of this note.", "type" "string"}, "name" {"type" "string", "description" "Output only. The name of the note in the form of\n`projects/[PROVIDER_ID]/notes/[NOTE_ID]`."}, "expirationTime" {"description" "Time of expiration for this note. Empty if note does not expire.", "format" "google-datetime", "type" "string"}, "createTime" {"type" "string", "description" "Output only. The time this note was created. This field can be used as a\nfilter in list requests.", "format" "google-datetime"}, "shortDescription" {"description" "A one sentence description of this note.", "type" "string"}, "build" {"description" "A note describing build provenance for a verifiable build.", "$ref" "Build"}, "attestationAuthority" {"description" "A note describing an attestation role.", "$ref" "Authority"}, "deployable" {"description" "A note describing something that can be deployed.", "$ref" "Deployable"}, "updateTime" {"description" "Output only. The time this note was last updated. This field can be used as\na filter in list requests.", "format" "google-datetime", "type" "string"}, "kind" {"type" "string", "enumDescriptions" ["Unknown." "The note and occurrence represent a package vulnerability." "The note and occurrence assert build provenance." "This represents an image basis relationship." "This represents a package installed via a package manager." "The note and occurrence track deployment events." "The note and occurrence track the initial discovery status of a resource." "This represents a logical \"role\" that can attest to artifacts." "This represents an in-toto link."], "enum" ["NOTE_KIND_UNSPECIFIED" "VULNERABILITY" "BUILD" "IMAGE" "PACKAGE" "DEPLOYMENT" "DISCOVERY" "ATTESTATION" "INTOTO"], "description" "Output only. The type of analysis. This field can be used as a filter in\nlist requests."}, "vulnerability" {"$ref" "Vulnerability", "description" "A note describing a package vulnerability."}, "relatedUrl" {"description" "URLs associated with this note.", "type" "array", "items" {"$ref" "RelatedUrl"}}, "discovery" {"$ref" "Discovery", "description" "A note describing the initial analysis of a resource."}, "intoto" {"description" "A note describing an in-toto link.", "$ref" "InToto"}, "relatedNoteNames" {"description" "Other notes related to this note.", "type" "array", "items" {"type" "string"}}, "baseImage" {"description" "A note describing a base image.", "$ref" "Basis"}}, "id" "Note"}, "Installation" {"description" "This represents how a particular software package may be installed on a\nsystem.", "type" "object", "properties" {"location" {"description" "Required. All of the places within the filesystem versions of this package\nhave been found.", "type" "array", "items" {"$ref" "Location"}}, "name" {"description" "Output only. The name of the installed package.", "type" "string"}}, "id" "Installation"}, "VulnerabilityOccurrencesSummary" {"id" "VulnerabilityOccurrencesSummary", "description" "A summary of how many vulnerability occurrences there are per resource and\nseverity type.", "type" "object", "properties" {"counts" {"description" "A listing by resource of the number of fixable and total vulnerabilities.", "type" "array", "items" {"$ref" "FixableTotalByDigest"}}}}, "GrafeasV1beta1IntotoArtifact" {"type" "object", "properties" {"resourceUri" {"type" "string"}, "hashes" {"$ref" "ArtifactHashes"}}, "id" "GrafeasV1beta1IntotoArtifact"}, "Authority" {"description" "Note kind that represents a logical attestation \"role\" or \"authority\". For\nexample, an organization might have one `Authority` for \"QA\" and one for\n\"build\". This note is intended to act strictly as a grouping mechanism for\nthe attached occurrences (Attestations). This grouping mechanism also\nprovides a security boundary, since IAM ACLs gate the ability for a principle\nto attach an occurrence to a given note. It also provides a single point of\nlookup to find all attached attestation occurrences, even if they don't all\nlive in the same project.", "type" "object", "properties" {"hint" {"$ref" "Hint", "description" "Hint hints at the purpose of the attestation authority."}}, "id" "Authority"}, "Binding" {"description" "Associates `members` with a `role`.", "type" "object", "properties" {"condition" {"$ref" "Expr", "description" "The condition that is associated with this binding.\nNOTE: An unsatisfied condition will not allow user access via current\nbinding. Different bindings, including their conditions, are examined\nindependently."}, "members" {"description" "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@example.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n* `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a user that has been recently deleted. For\n   example, `alice@example.com?uid=123456789012345678901`. If the user is\n   recovered, this value reverts to `user:{emailid}` and the recovered user\n   retains the role in the binding.\n\n* `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus\n   unique identifier) representing a service account that has been recently\n   deleted. For example,\n   `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.\n   If the service account is undeleted, this value reverts to\n   `serviceAccount:{emailid}` and the undeleted service account retains the\n   role in the binding.\n\n* `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a Google group that has been recently\n   deleted. For example, `admins@example.com?uid=123456789012345678901`. If\n   the group is recovered, this value reverts to `group:{emailid}` and the\n   recovered group retains the role in the binding.\n\n\n* `domain:{domain}`: The G Suite domain (primary) that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n", "type" "array", "items" {"type" "string"}}, "role" {"description" "Role that is assigned to `members`.\nFor example, `roles/viewer`, `roles/editor`, or `roles/owner`.", "type" "string"}}, "id" "Binding"}, "CloudRepoSourceContext" {"id" "CloudRepoSourceContext", "description" "A CloudRepoSourceContext denotes a particular revision in a Google Cloud\nSource Repo.", "type" "object", "properties" {"repoId" {"$ref" "RepoId", "description" "The ID of the repo."}, "aliasContext" {"description" "An alias, which may be a branch or tag.", "$ref" "AliasContext"}, "revisionId" {"description" "A revision ID.", "type" "string"}}}, "FileHashes" {"description" "Container message for hashes of byte content of files, used in source\nmessages to verify integrity of source input to the build.", "type" "object", "properties" {"fileHash" {"description" "Required. Collection of file hashes.", "type" "array", "items" {"$ref" "Hash"}}}, "id" "FileHashes"}, "BatchCreateOccurrencesRequest" {"description" "Request to create occurrences in batch.", "type" "object", "properties" {"occurrences" {"description" "Required. The occurrences to create. Max allowed length is 1000.", "type" "array", "items" {"$ref" "Occurrence"}}}, "id" "BatchCreateOccurrencesRequest"}, "GrafeasV1beta1DiscoveryDetails" {"type" "object", "properties" {"discovered" {"description" "Required. Analysis status for the discovered resource.", "$ref" "Discovered"}}, "id" "GrafeasV1beta1DiscoveryDetails", "description" "Details of a discovery occurrence."}, "Location" {"description" "An occurrence of a particular package installation found within a system's\nfilesystem. E.g., glibc was found in `/var/lib/dpkg/status`.", "type" "object", "properties" {"cpeUri" {"description" "Required. The CPE URI in [CPE format](https://cpe.mitre.org/specification/)\ndenoting the package manager version distributing a package.", "type" "string"}, "version" {"description" "The version installed at this location.", "$ref" "Version"}, "path" {"type" "string", "description" "The path from which we gathered that this package/version is installed."}}, "id" "Location"}, "Hash" {"type" "object", "properties" {"type" {"enumDescriptions" ["Unknown." "A SHA-256 hash."], "enum" ["HASH_TYPE_UNSPECIFIED" "SHA256"], "description" "Required. The type of hash that was performed.", "type" "string"}, "value" {"description" "Required. The hash value.", "format" "byte", "type" "string"}}, "id" "Hash", "description" "Container message for hash values."}, "ArtifactRule" {"type" "object", "properties" {"artifactRule" {"type" "array", "items" {"type" "string"}}}, "id" "ArtifactRule", "description" "Defines an object to declare an in-toto artifact rule"}, "InToto" {"type" "object", "properties" {"expectedProducts" {"type" "array", "items" {"$ref" "ArtifactRule"}}, "stepName" {"type" "string", "description" "This field identifies the name of the step in the supply chain."}, "signingKeys" {"type" "array", "items" {"$ref" "SigningKey"}, "description" "This field contains the public keys that can be used to verify the\nsignatures on the step metadata."}, "threshold" {"description" "This field contains a value that indicates the minimum number of keys that\nneed to be used to sign the step's in-toto link.", "format" "int64", "type" "string"}, "expectedMaterials" {"type" "array", "items" {"$ref" "ArtifactRule"}, "description" "The following fields contain in-toto artifact rules identifying the\nartifacts that enter this supply chain step, and exit the supply chain\nstep, i.e. materials and products of the step."}, "expectedCommand" {"description" "This field contains the expected command used to perform the step.", "type" "array", "items" {"type" "string"}}}, "id" "InToto", "description" "This contains the fields corresponding to the definition of a software supply\nchain step in an in-toto layout. This information goes into a Grafeas note."}, "Attestation" {"id" "Attestation", "description" "Occurrence that represents a single \"attestation\". The authenticity of an\nattestation can be verified using the attached signature. If the verifier\ntrusts the public key of the signer, then verifying the signature is\nsufficient to establish trust. In this circumstance, the authority to which\nthis attestation is attached is primarily useful for look-up (how to find\nthis attestation if you already know the authority and artifact to be\nverified) and intent (which authority was this attestation intended to sign\nfor).", "type" "object", "properties" {"pgpSignedAttestation" {"$ref" "PgpSignedAttestation", "description" "A PGP signed attestation."}, "genericSignedAttestation" {"$ref" "GenericSignedAttestation"}}}, "Status" {"description" "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).", "type" "object", "properties" {"details" {"type" "array", "items" {"type" "object", "additionalProperties" {"description" "Properties of the object. Contains field @type with type URL.", "type" "any"}}, "description" "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use."}, "code" {"description" "The status code, which should be an enum value of google.rpc.Code.", "format" "int32", "type" "integer"}, "message" {"type" "string", "description" "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client."}}, "id" "Status"}, "GrafeasV1beta1VulnerabilityDetails" {"type" "object", "properties" {"longDescription" {"description" "Output only. A detailed description of this vulnerability.", "type" "string"}, "shortDescription" {"type" "string", "description" "Output only. A one sentence description of this vulnerability."}, "effectiveSeverity" {"type" "string", "enumDescriptions" ["Unknown." "Minimal severity." "Low severity." "Medium severity." "High severity." "Critical severity."], "enum" ["SEVERITY_UNSPECIFIED" "MINIMAL" "LOW" "MEDIUM" "HIGH" "CRITICAL"], "description" "The distro assigned severity for this vulnerability when it is\navailable, and note provider assigned severity when distro has not yet\nassigned a severity for this vulnerability."}, "severity" {"type" "string", "enumDescriptions" ["Unknown." "Minimal severity." "Low severity." "Medium severity." "High severity." "Critical severity."], "enum" ["SEVERITY_UNSPECIFIED" "MINIMAL" "LOW" "MEDIUM" "HIGH" "CRITICAL"], "description" "Output only. The note provider assigned Severity of the vulnerability."}, "cvssScore" {"description" "Output only. The CVSS score of this vulnerability. CVSS score is on a\nscale of 0-10 where 0 indicates low severity and 10 indicates high\nseverity.", "format" "float", "type" "number"}, "relatedUrls" {"description" "Output only. URLs related to this vulnerability.", "type" "array", "items" {"$ref" "RelatedUrl"}}, "type" {"description" "The type of package; whether native or non native(ruby gems, node.js\npackages etc)", "type" "string"}, "packageIssue" {"description" "Required. The set of affected locations and their fixes (if available)\nwithin the associated resource.", "type" "array", "items" {"$ref" "PackageIssue"}}}, "id" "GrafeasV1beta1VulnerabilityDetails", "description" "Details of a vulnerability Occurrence."}, "GrafeasV1beta1DeploymentDetails" {"description" "Details of a deployment occurrence.", "type" "object", "properties" {"deployment" {"$ref" "Deployment", "description" "Required. Deployment history for the resource."}}, "id" "GrafeasV1beta1DeploymentDetails"}, "Artifact" {"description" "Artifact describes a build product.", "type" "object", "properties" {"checksum" {"description" "Hash or checksum value of a binary, or Docker Registry 2.0 digest of a\ncontainer.", "type" "string"}, "id" {"type" "string", "description" "Artifact ID, if any; for container images, this will be a URL by digest\nlike `gcr.io/projectID/imagename@sha256:123456`."}, "names" {"description" "Related artifact names. This may be the path to a binary or jar file, or in\nthe case of a container build, the name used to push the container image to\nGoogle Container Registry, as presented to `docker push`. Note that a\nsingle Artifact ID can have multiple names, for example if two tags are\napplied to one image.", "type" "array", "items" {"type" "string"}}}, "id" "Artifact"}, "PackageIssue" {"id" "PackageIssue", "description" "This message wraps a location affected by a vulnerability and its\nassociated fix (if one is available).", "type" "object", "properties" {"affectedLocation" {"$ref" "VulnerabilityLocation", "description" "Required. The location of the vulnerability."}, "fixedLocation" {"description" "The location of the available fix for vulnerability.", "$ref" "VulnerabilityLocation"}, "severityName" {"description" "Deprecated, use Details.effective_severity instead\nThe severity (e.g., distro assigned severity) for this vulnerability.", "type" "string"}}}, "BuildSignature" {"id" "BuildSignature", "description" "Message encapsulating the signature of the verified build.", "type" "object", "properties" {"keyType" {"enumDescriptions" ["`KeyType` is not set." "`PGP ASCII Armored` public key." "`PKIX PEM` public key."], "enum" ["KEY_TYPE_UNSPECIFIED" "PGP_ASCII_ARMORED" "PKIX_PEM"], "description" "The type of the key, either stored in `public_key` or referenced in\n`key_id`.", "type" "string"}, "signature" {"description" "Required. Signature of the related `BuildProvenance`. In JSON, this is\nbase-64 encoded.", "format" "byte", "type" "string"}, "publicKey" {"type" "string", "description" "Public key of the builder which can be used to verify that the related\nfindings are valid and unchanged. If `key_type` is empty, this defaults\nto PEM encoded public keys.\n\nThis field may be empty if `key_id` references an external key.\n\nFor Cloud Build based signatures, this is a PEM encoded public\nkey. To verify the Cloud Build signature, place the contents of\nthis field into a file (public.pem). The signature field is base64-decoded\ninto its binary representation in signature.bin, and the provenance bytes\nfrom `BuildDetails` are base64-decoded into a binary representation in\nsigned.bin. OpenSSL can then verify the signature:\n`openssl sha256 -verify public.pem -signature signature.bin signed.bin`"}, "keyId" {"description" "An ID for the key used to sign. This could be either an ID for the key\nstored in `public_key` (such as the ID or fingerprint for a PGP key, or the\nCN for a cert), or a reference to an external key (such as a reference to a\nkey in Cloud Key Management Service).", "type" "string"}}}, "GetPolicyOptions" {"description" "Encapsulates settings provided to GetIamPolicy.", "type" "object", "properties" {"requestedPolicyVersion" {"type" "integer", "description" "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.", "format" "int32"}}, "id" "GetPolicyOptions"}, "GrafeasV1beta1PackageDetails" {"description" "Details of a package occurrence.", "type" "object", "properties" {"installation" {"$ref" "Installation", "description" "Required. Where the package was installed."}}, "id" "GrafeasV1beta1PackageDetails"}, "Signature" {"id" "Signature", "description" "Verifiers (e.g. Kritis implementations) MUST verify signatures\nwith respect to the trust anchors defined in policy (e.g. a Kritis policy).\nTypically this means that the verifier has been configured with a map from\n`public_key_id` to public key material (and any required parameters, e.g.\nsigning algorithm).\n\nIn particular, verification implementations MUST NOT treat the signature\n`public_key_id` as anything more than a key lookup hint. The `public_key_id`\nDOES NOT validate or authenticate a public key; it only provides a mechanism\nfor quickly selecting a public key ALREADY CONFIGURED on the verifier through\na trusted channel. Verification implementations MUST reject signatures in any\nof the following circumstances:\n  * The `public_key_id` is not recognized by the verifier.\n  * The public key that `public_key_id` refers to does not verify the\n    signature with respect to the payload.\n\nThe `signature` contents SHOULD NOT be \"attached\" (where the payload is\nincluded with the serialized `signature` bytes). Verifiers MUST ignore any\n\"attached\" payload and only verify signatures with respect to explicitly\nprovided payload (e.g. a `payload` field on the proto message that holds\nthis Signature, or the canonical serialization of the proto message that\nholds this signature).", "type" "object", "properties" {"publicKeyId" {"description" "The identifier for the public key that verifies this signature.\n  * The `public_key_id` is required.\n  * The `public_key_id` MUST be an RFC3986 conformant URI.\n  * When possible, the `public_key_id` SHOULD be an immutable reference,\n    such as a cryptographic digest.\n\nExamples of valid `public_key_id`s:\n\nOpenPGP V4 public key fingerprint:\n  * \"openpgp4fpr:74FAF3B861BDA0870C7B6DEF607E48D2A663AEEA\"\nSee https://www.iana.org/assignments/uri-schemes/prov/openpgp4fpr for more\ndetails on this scheme.\n\nRFC6920 digest-named SubjectPublicKeyInfo (digest of the DER\nserialization):\n  * \"ni:///sha-256;cD9o9Cq6LG3jD0iKXqEi_vdjJGecm_iXkbqVoScViaU\"\n  * \"nih:///sha-256;703f68f42aba2c6de30f488a5ea122fef76324679c9bf89791ba95a1271589a5\"", "type" "string"}, "signature" {"description" "The content of the signature, an opaque bytestring.\nThe payload that this signature verifies MUST be unambiguously provided\nwith the Signature during verification. A wrapper message might provide\nthe payload explicitly. Alternatively, a message might have a canonical\nserialization that can always be unambiguously computed to derive the\npayload.", "format" "byte", "type" "string"}}}, "Layer" {"description" "Layer holds metadata specific to a layer of a Docker image.", "type" "object", "properties" {"directive" {"type" "string", "enumDescriptions" ["Default value for unsupported/missing directive." "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/"], "enum" ["DIRECTIVE_UNSPECIFIED" "MAINTAINER" "RUN" "CMD" "LABEL" "EXPOSE" "ENV" "ADD" "COPY" "ENTRYPOINT" "VOLUME" "USER" "WORKDIR" "ARG" "ONBUILD" "STOPSIGNAL" "HEALTHCHECK" "SHELL"], "description" "Required. The recovered Dockerfile directive used to construct this layer."}, "arguments" {"description" "The recovered arguments to the Dockerfile directive.", "type" "string"}}, "id" "Layer"}, "Fingerprint" {"type" "object", "properties" {"v1Name" {"description" "Required. The layer ID of the final layer in the Docker image's v1\nrepresentation.", "type" "string"}, "v2Name" {"description" "Output only. The name of the image's v2 blobs computed via:\n  [bottom] := v2_blobbottom := sha256(v2_blob[N] + \" \" + v2_name[N+1])\nOnly the name of the final blob is kept.", "type" "string"}, "v2Blob" {"type" "array", "items" {"type" "string"}, "description" "Required. The ordered list of v2 blobs that represent a given image."}}, "id" "Fingerprint", "description" "A set of properties that uniquely identify a given Docker image."}, "FixableTotalByDigest" {"description" "Per resource and severity counts of fixable and total vulnerabilities.", "type" "object", "properties" {"totalCount" {"type" "string", "description" "The total number of vulnerabilities associated with this resource.", "format" "int64"}, "fixableCount" {"description" "The number of fixable vulnerabilities associated with this resource.", "format" "int64", "type" "string"}, "resource" {"$ref" "Resource", "description" "The affected resource."}, "severity" {"description" "The severity for this count. SEVERITY_UNSPECIFIED indicates total across\nall severities.", "type" "string", "enumDescriptions" ["Unknown." "Minimal severity." "Low severity." "Medium severity." "High severity." "Critical severity."], "enum" ["SEVERITY_UNSPECIFIED" "MINIMAL" "LOW" "MEDIUM" "HIGH" "CRITICAL"]}}, "id" "FixableTotalByDigest"}, "CVSSv3" {"type" "object", "properties" {"userInteraction" {"enum" ["USER_INTERACTION_UNSPECIFIED" "USER_INTERACTION_NONE" "USER_INTERACTION_REQUIRED"], "type" "string", "enumDescriptions" ["" "" ""]}, "baseScore" {"description" "The base score is a function of the base metric scores.", "format" "float", "type" "number"}, "privilegesRequired" {"enum" ["PRIVILEGES_REQUIRED_UNSPECIFIED" "PRIVILEGES_REQUIRED_NONE" "PRIVILEGES_REQUIRED_LOW" "PRIVILEGES_REQUIRED_HIGH"], "type" "string", "enumDescriptions" ["" "" "" ""]}, "confidentialityImpact" {"type" "string", "enumDescriptions" ["" "" "" ""], "enum" ["IMPACT_UNSPECIFIED" "IMPACT_HIGH" "IMPACT_LOW" "IMPACT_NONE"]}, "impactScore" {"type" "number", "format" "float"}, "attackComplexity" {"enum" ["ATTACK_COMPLEXITY_UNSPECIFIED" "ATTACK_COMPLEXITY_LOW" "ATTACK_COMPLEXITY_HIGH"], "type" "string", "enumDescriptions" ["" "" ""]}, "integrityImpact" {"enum" ["IMPACT_UNSPECIFIED" "IMPACT_HIGH" "IMPACT_LOW" "IMPACT_NONE"], "type" "string", "enumDescriptions" ["" "" "" ""]}, "availabilityImpact" {"enum" ["IMPACT_UNSPECIFIED" "IMPACT_HIGH" "IMPACT_LOW" "IMPACT_NONE"], "type" "string", "enumDescriptions" ["" "" "" ""]}, "scope" {"enumDescriptions" ["" "" ""], "enum" ["SCOPE_UNSPECIFIED" "SCOPE_UNCHANGED" "SCOPE_CHANGED"], "type" "string"}, "attackVector" {"enum" ["ATTACK_VECTOR_UNSPECIFIED" "ATTACK_VECTOR_NETWORK" "ATTACK_VECTOR_ADJACENT" "ATTACK_VECTOR_LOCAL" "ATTACK_VECTOR_PHYSICAL"], "description" "Base Metrics\nRepresents the intrinsic characteristics of a vulnerability that are\nconstant over time and across user environments.", "type" "string", "enumDescriptions" ["" "" "" "" ""]}, "exploitabilityScore" {"format" "float", "type" "number"}}, "id" "CVSSv3", "description" "Common Vulnerability Scoring System version 3.\nFor details, see https://www.first.org/cvss/specification-document"}, "Deployable" {"description" "An artifact that can be deployed in some runtime.", "type" "object", "properties" {"resourceUri" {"description" "Required. Resource URI for the artifact being deployed.", "type" "array", "items" {"type" "string"}}}, "id" "Deployable"}, "Discovery" {"id" "Discovery", "description" "A note that indicates a type of analysis a provider would perform. This note\nexists in a provider's project. A `Discovery` occurrence is created in a\nconsumer's project at the start of analysis.", "type" "object", "properties" {"analysisKind" {"enumDescriptions" ["Unknown." "The note and occurrence represent a package vulnerability." "The note and occurrence assert build provenance." "This represents an image basis relationship." "This represents a package installed via a package manager." "The note and occurrence track deployment events." "The note and occurrence track the initial discovery status of a resource." "This represents a logical \"role\" that can attest to artifacts." "This represents an in-toto link."], "enum" ["NOTE_KIND_UNSPECIFIED" "VULNERABILITY" "BUILD" "IMAGE" "PACKAGE" "DEPLOYMENT" "DISCOVERY" "ATTESTATION" "INTOTO"], "description" "Required. Immutable. The kind of analysis that is handled by this\ndiscovery.", "type" "string"}}}, "TestIamPermissionsResponse" {"description" "Response message for `TestIamPermissions` method.", "type" "object", "properties" {"permissions" {"description" "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.", "type" "array", "items" {"type" "string"}}}, "id" "TestIamPermissionsResponse"}, "GitSourceContext" {"description" "A GitSourceContext denotes a particular revision in a third party Git\nrepository (e.g., GitHub).", "type" "object", "properties" {"revisionId" {"description" "Git commit hash.", "type" "string"}, "url" {"description" "Git repository URL.", "type" "string"}}, "id" "GitSourceContext"}, "SourceContext" {"id" "SourceContext", "description" "A SourceContext is a reference to a tree of files. A SourceContext together\nwith a path point to a unique revision of a single file or directory.", "type" "object", "properties" {"git" {"$ref" "GitSourceContext", "description" "A SourceContext referring to any third party Git repo (e.g., GitHub)."}, "gerrit" {"$ref" "GerritSourceContext", "description" "A SourceContext referring to a Gerrit project."}, "cloudRepo" {"description" "A SourceContext referring to a revision in a Google Cloud Source Repo.", "$ref" "CloudRepoSourceContext"}, "labels" {"type" "object", "additionalProperties" {"type" "string"}, "description" "Labels with user defined metadata."}}}, "PgpSignedAttestation" {"description" "An attestation wrapper with a PGP-compatible signature. This message only\nsupports `ATTACHED` signatures, where the payload that is signed is included\nalongside the signature itself in the same file.", "type" "object", "properties" {"signature" {"description" "Required. The raw content of the signature, as output by GNU Privacy Guard\n(GPG) or equivalent. Since this message only supports attached signatures,\nthe payload that was signed must be attached. While the signature format\nsupported is dependent on the verification implementation, currently only\nASCII-armored (`--armor` to gpg), non-clearsigned (`--sign` rather than\n`--clearsign` to gpg) are supported. Concretely, `gpg --sign --armor\n--output=signature.gpg payload.json` will create the signature content\nexpected in this field in `signature.gpg` for the `payload.json`\nattestation payload.", "type" "string"}, "pgpKeyId" {"description" "The cryptographic fingerprint of the key used to generate the signature,\nas output by, e.g. `gpg --list-keys`. This should be the version 4, full\n160-bit fingerprint, expressed as a 40 character hexidecimal string. See\nhttps://tools.ietf.org/html/rfc4880#section-12.2 for details.\nImplementations may choose to acknowledge \"LONG\", \"SHORT\", or other\nabbreviated key IDs, but only the full fingerprint is guaranteed to work.\nIn gpg, the full fingerprint can be retrieved from the `fpr` field\nreturned when calling --list-keys with --with-colons.  For example:\n```\ngpg --with-colons --with-fingerprint --force-v4-certs \\\n    --list-keys attester@example.com\ntru::1:1513631572:0:3:1:5\npub:...<SNIP>...\nfpr:::::::::24FF6481B76AC91E66A00AC657A93A81EF3AE6FB:\n```\nAbove, the fingerprint is `24FF6481B76AC91E66A00AC657A93A81EF3AE6FB`.", "type" "string"}, "contentType" {"enum" ["CONTENT_TYPE_UNSPECIFIED" "SIMPLE_SIGNING_JSON"], "description" "Type (for example schema) of the attestation payload that was signed.\nThe verifier must ensure that the provided type is one that the verifier\nsupports, and that the attestation payload is a valid instantiation of that\ntype (for example by validating a JSON schema).", "type" "string", "enumDescriptions" ["`ContentType` is not set." "Atomic format attestation signature. See\nhttps://github.com/containers/image/blob/8a5d2f82a6e3263290c8e0276c3e0f64e77723e7/docs/atomic-signature.md\nThe payload extracted from `signature` is a JSON blob conforming to the\nlinked schema."]}}, "id" "PgpSignedAttestation"}, "GenericSignedAttestation" {"description" "An attestation wrapper that uses the Grafeas `Signature` message.\nThis attestation must define the `serialized_payload` that the `signatures`\nverify and any metadata necessary to interpret that plaintext.  The\nsignatures should always be over the `serialized_payload` bytestring.", "type" "object", "properties" {"signatures" {"description" "One or more signatures over `serialized_payload`.  Verifier implementations\nshould consider this attestation message verified if at least one\n`signature` verifies `serialized_payload`.  See `Signature` in common.proto\nfor more details on signature structure and verification.", "type" "array", "items" {"$ref" "Signature"}}, "serializedPayload" {"description" "The serialized payload that is verified by one or more `signatures`.\nThe encoding and semantic meaning of this payload must match what is set in\n`content_type`.", "format" "byte", "type" "string"}, "contentType" {"type" "string", "enumDescriptions" ["`ContentType` is not set." "Atomic format attestation signature. See\nhttps://github.com/containers/image/blob/8a5d2f82a6e3263290c8e0276c3e0f64e77723e7/docs/atomic-signature.md\nThe payload extracted in `plaintext` is a JSON blob conforming to the\nlinked schema."], "enum" ["CONTENT_TYPE_UNSPECIFIED" "SIMPLE_SIGNING_JSON"], "description" "Type (for example schema) of the attestation payload that was signed.\nThe verifier must ensure that the provided type is one that the verifier\nsupports, and that the attestation payload is a valid instantiation of that\ntype (for example by validating a JSON schema)."}}, "id" "GenericSignedAttestation"}, "SetIamPolicyRequest" {"description" "Request message for `SetIamPolicy` method.", "type" "object", "properties" {"policy" {"description" "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them.", "$ref" "Policy"}}, "id" "SetIamPolicyRequest"}, "Build" {"description" "Note holding the version of the provider's builder and the signature of the\nprovenance message in the build details occurrence.", "type" "object", "properties" {"signature" {"description" "Signature of the build in occurrences pointing to this build note\ncontaining build details.", "$ref" "BuildSignature"}, "builderVersion" {"type" "string", "description" "Required. Immutable. Version of the builder which produced this build."}}, "id" "Build"}, "BatchCreateOccurrencesResponse" {"description" "Response for creating occurrences in batch.", "type" "object", "properties" {"occurrences" {"description" "The occurrences that were created.", "type" "array", "items" {"$ref" "Occurrence"}}}, "id" "BatchCreateOccurrencesResponse"}, "Environment" {"description" "Defines an object for the environment field in in-toto links. The suggested\nfields are \"variables\", \"filesystem\", and \"workdir\".", "type" "object", "properties" {"customValues" {"additionalProperties" {"type" "string"}, "type" "object"}}, "id" "Environment"}, "Command" {"description" "Command describes a step performed as part of the build pipeline.", "type" "object", "properties" {"id" {"description" "Optional unique identifier for this command, used in wait_for to reference\nthis command as a dependency.", "type" "string"}, "dir" {"description" "Working directory (relative to project source root) used when running this\ncommand.", "type" "string"}, "waitFor" {"description" "The ID(s) of the command(s) that this command depends on.", "type" "array", "items" {"type" "string"}}, "env" {"type" "array", "items" {"type" "string"}, "description" "Environment variables set before running this command."}, "args" {"description" "Command-line arguments used when executing this command.", "type" "array", "items" {"type" "string"}}, "name" {"description" "Required. Name of the command, as presented on the command line, or if the\ncommand is packaged as a Docker container, as presented to `docker pull`.", "type" "string"}}, "id" "Command"}, "Occurrence" {"description" "An instance of an analysis type that has been found on a resource.", "type" "object", "properties" {"resource" {"$ref" "Resource", "description" "Required. Immutable. The resource for which the occurrence applies."}, "noteName" {"description" "Required. Immutable. The analysis note associated with this occurrence, in\nthe form of `projects/[PROVIDER_ID]/notes/[NOTE_ID]`. This field can be\nused as a filter in list requests.", "type" "string"}, "installation" {"$ref" "GrafeasV1beta1PackageDetails", "description" "Describes the installation of a package on the linked resource."}, "attestation" {"$ref" "Details", "description" "Describes an attestation of an artifact."}, "derivedImage" {"$ref" "GrafeasV1beta1ImageDetails", "description" "Describes how this resource derives from the basis in the associated\nnote."}, "name" {"description" "Output only. The name of the occurrence in the form of\n`projects/[PROJECT_ID]/occurrences/[OCCURRENCE_ID]`.", "type" "string"}, "createTime" {"type" "string", "description" "Output only. The time this occurrence was created.", "format" "google-datetime"}, "build" {"$ref" "GrafeasV1beta1BuildDetails", "description" "Describes a verifiable build."}, "deployment" {"$ref" "GrafeasV1beta1DeploymentDetails", "description" "Describes the deployment of an artifact on a runtime."}, "discovered" {"$ref" "GrafeasV1beta1DiscoveryDetails", "description" "Describes when a resource was discovered."}, "updateTime" {"description" "Output only. The time this occurrence was last updated.", "format" "google-datetime", "type" "string"}, "kind" {"enumDescriptions" ["Unknown." "The note and occurrence represent a package vulnerability." "The note and occurrence assert build provenance." "This represents an image basis relationship." "This represents a package installed via a package manager." "The note and occurrence track deployment events." "The note and occurrence track the initial discovery status of a resource." "This represents a logical \"role\" that can attest to artifacts." "This represents an in-toto link."], "enum" ["NOTE_KIND_UNSPECIFIED" "VULNERABILITY" "BUILD" "IMAGE" "PACKAGE" "DEPLOYMENT" "DISCOVERY" "ATTESTATION" "INTOTO"], "description" "Output only. This explicitly denotes which of the occurrence details are\nspecified. This field can be used as a filter in list requests.", "type" "string"}, "vulnerability" {"description" "Describes a security vulnerability.", "$ref" "GrafeasV1beta1VulnerabilityDetails"}, "remediation" {"description" "A description of actions that can be taken to remedy the note.", "type" "string"}, "intoto" {"$ref" "GrafeasV1beta1IntotoDetails", "description" "Describes a specific in-toto link."}}, "id" "Occurrence"}, "Discovered" {"description" "Provides information about the analysis status of a discovered resource.", "type" "object", "properties" {"analysisStatus" {"type" "string", "enumDescriptions" ["Unknown." "Resource is known but no action has been taken yet." "Resource is being analyzed." "Analysis has finished successfully." "Analysis has finished unsuccessfully, the analysis itself is in a bad\nstate." "The resource is known not to be supported"], "enum" ["ANALYSIS_STATUS_UNSPECIFIED" "PENDING" "SCANNING" "FINISHED_SUCCESS" "FINISHED_FAILED" "FINISHED_UNSUPPORTED"], "description" "The status of discovery for the resource."}, "continuousAnalysis" {"enum" ["CONTINUOUS_ANALYSIS_UNSPECIFIED" "ACTIVE" "INACTIVE"], "description" "Whether the resource is continuously analyzed.", "type" "string", "enumDescriptions" ["Unknown." "The resource is continuously analyzed." "The resource is ignored for continuous analysis."]}, "lastAnalysisTime" {"description" "The last time continuous analysis was done for this resource.\nDeprecated, do not use.", "format" "google-datetime", "type" "string"}, "analysisStatusError" {"description" "When an error is encountered this will contain a LocalizedMessage under\ndetails to show to the user. The LocalizedMessage is output only and\npopulated by the API.", "$ref" "Status"}}, "id" "Discovered"}, "GrafeasV1beta1ImageDetails" {"description" "Details of an image occurrence.", "type" "object", "properties" {"derivedImage" {"description" "Required. Immutable. The child image derived from the base image.", "$ref" "Derived"}}, "id" "GrafeasV1beta1ImageDetails"}, "AliasContext" {"description" "An alias to a repo revision.", "type" "object", "properties" {"name" {"description" "The alias name.", "type" "string"}, "kind" {"description" "The alias kind.", "type" "string", "enumDescriptions" ["Unknown." "Git tag." "Git branch." "Used to specify non-standard aliases. For example, if a Git repo has a\nref named \"refs/foo/bar\"."], "enum" ["KIND_UNSPECIFIED" "FIXED" "MOVABLE" "OTHER"]}}, "id" "AliasContext"}, "GetIamPolicyRequest" {"type" "object", "properties" {"options" {"description" "OPTIONAL: A `GetPolicyOptions` object for specifying options to\n`GetIamPolicy`.", "$ref" "GetPolicyOptions"}}, "id" "GetIamPolicyRequest", "description" "Request message for `GetIamPolicy` method."}, "Derived" {"type" "object", "properties" {"baseResourceUrl" {"description" "Output only. This contains the base image URL for the derived image\noccurrence.", "type" "string"}, "fingerprint" {"$ref" "Fingerprint", "description" "Required. The fingerprint of the derived image."}, "layerInfo" {"description" "This contains layer-specific metadata, if populated it has length\n\"distance\" and is ordered with [distance] being the layer immediately\nfollowing the base image and [1] being the final layer.", "type" "array", "items" {"$ref" "Layer"}}, "distance" {"description" "Output only. The number of layers by which this image differs from the\nassociated image basis.", "format" "int32", "type" "integer"}}, "id" "Derived", "description" "Derived describes the derived image portion (Occurrence) of the DockerImage\nrelationship. This image would be produced from a Dockerfile with FROM\n<DockerImage.Basis in attached Note>."}, "GrafeasV1beta1IntotoDetails" {"description" "This corresponds to a signed in-toto link - it is made up of one or more\nsignatures and the in-toto link itself. This is used for occurrences of a\nGrafeas in-toto note.", "type" "object", "properties" {"signed" {"$ref" "Link"}, "signatures" {"type" "array", "items" {"$ref" "GrafeasV1beta1IntotoSignature"}}}, "id" "GrafeasV1beta1IntotoDetails"}, "RepoId" {"description" "A unique identifier for a Cloud Repo.", "type" "object", "properties" {"uid" {"description" "A server-assigned, globally unique identifier.", "type" "string"}, "projectRepoId" {"$ref" "ProjectRepoId", "description" "A combination of a project ID and a repo name."}}, "id" "RepoId"}, "ListOccurrencesResponse" {"id" "ListOccurrencesResponse", "description" "Response for listing occurrences.", "type" "object", "properties" {"occurrences" {"description" "The occurrences requested.", "type" "array", "items" {"$ref" "Occurrence"}}, "nextPageToken" {"description" "The next pagination token in the list response. It should be used as\n`page_token` for the following request. An empty value means no more\nresults.", "type" "string"}}}, "BatchCreateNotesResponse" {"type" "object", "properties" {"notes" {"description" "The notes that were created.", "type" "array", "items" {"$ref" "Note"}}}, "id" "BatchCreateNotesResponse", "description" "Response for creating notes in batch."}, "Policy" {"description" "An Identity and Access Management (IAM) policy, which specifies access\ncontrols for Google Cloud resources.\n\n\nA `Policy` is a collection of `bindings`. A `binding` binds one or more\n`members` to a single `role`. Members can be user accounts, service accounts,\nGoogle groups, and domains (such as G Suite). A `role` is a named list of\npermissions; each `role` can be an IAM predefined role or a user-created\ncustom role.\n\nOptionally, a `binding` can specify a `condition`, which is a logical\nexpression that allows access to a resource only if the expression evaluates\nto `true`. A condition can add constraints based on attributes of the\nrequest, the resource, or both.\n\n**JSON example:**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles/resourcemanager.organizationAdmin\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles/resourcemanager.organizationViewer\",\n          \"members\": [\"user:eve@example.com\"],\n          \"condition\": {\n            \"title\": \"expirable access\",\n            \"description\": \"Does not grant access after Sep 2020\",\n            \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\",\n          }\n        }\n      ],\n      \"etag\": \"BwWWja0YfJA=\",\n      \"version\": 3\n    }\n\n**YAML example:**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-project-id@appspot.gserviceaccount.com\n      role: roles/resourcemanager.organizationAdmin\n    - members:\n      - user:eve@example.com\n      role: roles/resourcemanager.organizationViewer\n      condition:\n        title: expirable access\n        description: Does not grant access after Sep 2020\n        expression: request.time < timestamp('2020-10-01T00:00:00.000Z')\n    - etag: BwWWja0YfJA=\n    - version: 3\n\nFor a description of IAM and its features, see the\n[IAM documentation](https://cloud.google.com/iam/docs/).", "type" "object", "properties" {"etag" {"description" "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.", "format" "byte", "type" "string"}, "version" {"description" "Specifies the format of the policy.\n\nValid values are `0`, `1`, and `3`. Requests that specify an invalid value\nare rejected.\n\nAny operation that affects conditional role bindings must specify version\n`3`. This requirement applies to the following operations:\n\n* Getting a policy that includes a conditional role binding\n* Adding a conditional role binding to a policy\n* Changing a conditional role binding in a policy\n* Removing any role binding, with or without a condition, from a policy\n  that includes conditions\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.\n\nIf a policy does not include any conditions, operations on that policy may\nspecify any valid version or leave the field unset.", "format" "int32", "type" "integer"}, "bindings" {"description" "Associates a list of `members` to a `role`. Optionally, may specify a\n`condition` that determines how and when the `bindings` are applied. Each\nof the `bindings` must contain at least one member.", "type" "array", "items" {"$ref" "Binding"}}}, "id" "Policy"}, "ListScanConfigsResponse" {"description" "Response for listing scan configurations.", "type" "object", "properties" {"nextPageToken" {"description" "The next pagination token in the list response. It should be used as\n`page_token` for the following request. An empty value means no more\nresults.", "type" "string"}, "scanConfigs" {"description" "The scan configurations requested.", "type" "array", "items" {"$ref" "ScanConfig"}}}, "id" "ListScanConfigsResponse"}, "GerritSourceContext" {"id" "GerritSourceContext", "description" "A SourceContext referring to a Gerrit project.", "type" "object", "properties" {"gerritProject" {"description" "The full project name within the host. Projects may be nested, so\n\"project/subproject\" is a valid project name. The \"repo name\" is the\nhostURI/project.", "type" "string"}, "aliasContext" {"description" "An alias, which may be a branch or tag.", "$ref" "AliasContext"}, "hostUri" {"description" "The URI of a running Gerrit instance.", "type" "string"}, "revisionId" {"description" "A revision (commit) ID.", "type" "string"}}}, "Resource" {"id" "Resource", "description" "An entity that can have metadata. For example, a Docker image.", "type" "object", "properties" {"name" {"description" "Deprecated, do not use. Use uri instead.\n\nThe name of the resource. For example, the name of a Docker image -\n\"Debian\".", "type" "string"}, "contentHash" {"$ref" "Hash", "description" "Deprecated, do not use. Use uri instead.\n\nThe hash of the resource content. For example, the Docker digest."}, "uri" {"description" "Required. The unique URI of the resource. For example,\n`https://gcr.io/project/image@sha256:foo` for a Docker image.", "type" "string"}}}, "Version" {"description" "Version contains structured information about the version of a package.", "type" "object", "properties" {"name" {"description" "Required only when version kind is NORMAL. The main part of the version\nname.", "type" "string"}, "kind" {"type" "string", "enumDescriptions" ["Unknown." "A standard package version." "A special version representing negative infinity." "A special version representing positive infinity."], "enum" ["VERSION_KIND_UNSPECIFIED" "NORMAL" "MINIMUM" "MAXIMUM"], "description" "Required. Distinguishes between sentinel MIN/MAX versions and normal\nversions."}, "epoch" {"description" "Used to correct mistakes in the version numbering scheme.", "format" "int32", "type" "integer"}, "revision" {"description" "The iteration of the package build from the above version.", "type" "string"}}, "id" "Version"}, "BuildProvenance" {"description" "Provenance of a build. Contains all information needed to verify the full\ndetails about the build from source to completion.", "type" "object", "properties" {"sourceProvenance" {"$ref" "Source", "description" "Details of the Source input to the build."}, "builtArtifacts" {"description" "Output of the build.", "type" "array", "items" {"$ref" "Artifact"}}, "id" {"type" "string", "description" "Required. Unique identifier of the build."}, "builderVersion" {"type" "string", "description" "Version string of the builder at the time this build was executed."}, "creator" {"type" "string", "description" "E-mail address of the user who initiated this build. Note that this was the\nuser's e-mail address at the time the build was initiated; this address may\nnot represent the same end-user for all time."}, "createTime" {"description" "Time at which the build was created.", "format" "google-datetime", "type" "string"}, "startTime" {"description" "Time at which execution of the build was started.", "format" "google-datetime", "type" "string"}, "commands" {"description" "Commands requested by the build.", "type" "array", "items" {"$ref" "Command"}}, "logsUri" {"description" "URI where any logs for this provenance were written.", "type" "string"}, "buildOptions" {"type" "object", "additionalProperties" {"type" "string"}, "description" "Special options applied to this build. This is a catch-all field where\nbuild providers can enter any desired additional details."}, "endTime" {"description" "Time at which execution of the build was finished.", "format" "google-datetime", "type" "string"}, "projectId" {"description" "ID of the project.", "type" "string"}, "triggerId" {"description" "Trigger identifier if the build was triggered automatically; empty if not.", "type" "string"}}, "id" "BuildProvenance"}, "ScanConfig" {"description" "A scan configuration specifies whether Cloud components in a project have a\nparticular type of analysis being run. For example, it can configure whether\nvulnerability scanning is being done on Docker images or not.", "type" "object", "properties" {"createTime" {"description" "Output only. The time this scan config was created.", "format" "google-datetime", "type" "string"}, "updateTime" {"type" "string", "description" "Output only. The time this scan config was last updated.", "format" "google-datetime"}, "name" {"description" "Output only. The name of the scan configuration in the form of\n`projects/[PROJECT_ID]/scanConfigs/[SCAN_CONFIG_ID]`.", "type" "string"}, "description" {"description" "Output only. A human-readable description of what the scan configuration\ndoes.", "type" "string"}, "enabled" {"description" "Whether the scan is enabled.", "type" "boolean"}}, "id" "ScanConfig"}, "WindowsDetail" {"type" "object", "properties" {"fixingKbs" {"type" "array", "items" {"$ref" "KnowledgeBase"}, "description" "Required. The names of the KBs which have hotfixes to mitigate this\nvulnerability. Note that there may be multiple hotfixes (and thus\nmultiple KBs) that mitigate a given vulnerability. Currently any listed\nkb's presence is considered a fix."}, "name" {"description" "Required. The name of the vulnerability.", "type" "string"}, "cpeUri" {"type" "string", "description" "Required. The CPE URI in\n[cpe format](https://cpe.mitre.org/specification/) in which the\nvulnerability manifests. Examples include distro or storage location for\nvulnerable jar."}, "description" {"description" "The description of the vulnerability.", "type" "string"}}, "id" "WindowsDetail"}, "ProjectRepoId" {"type" "object", "properties" {"projectId" {"description" "The ID of the project.", "type" "string"}, "repoName" {"description" "The name of the repo. Leave empty for the default repo.", "type" "string"}}, "id" "ProjectRepoId", "description" "Selects a repo using a Google Cloud Platform project ID (e.g.,\nwinged-cargo-31) and a repo name within that project."}, "ByProducts" {"id" "ByProducts", "description" "Defines an object for the byproducts field in in-toto links. The suggested\nfields are \"stderr\", \"stdout\", and \"return-value\".", "type" "object", "properties" {"customValues" {"additionalProperties" {"type" "string"}, "type" "object"}}}, "GrafeasV1beta1IntotoSignature" {"description" "A signature object consists of the KeyID used and the signature itself.", "type" "object", "properties" {"keyid" {"type" "string"}, "sig" {"type" "string"}}, "id" "GrafeasV1beta1IntotoSignature"}, "SigningKey" {"description" "This defines the format used to record keys used in the software supply\nchain. An in-toto link is attested using one or more keys defined in the\nin-toto layout. An example of this is:\n{\n  \"key_id\": \"776a00e29f3559e0141b3b096f696abc6cfb0c657ab40f441132b345b0...\",\n  \"key_type\": \"rsa\",\n  \"public_key_value\": \"-----BEGIN PUBLIC KEY-----\\nMIIBojANBgkqhkiG9w0B...\",\n  \"key_scheme\": \"rsassa-pss-sha256\"\n}\nThe format for in-toto's key definition can be found in section 4.2 of the\nin-toto specification.", "type" "object", "properties" {"keyId" {"description" "key_id is an identifier for the signing key.", "type" "string"}, "publicKeyValue" {"type" "string", "description" "This field contains the actual public key."}, "keyType" {"description" "This field identifies the specific signing method. Eg: \"rsa\", \"ed25519\",\nand \"ecdsa\".", "type" "string"}, "keyScheme" {"description" "This field contains the corresponding signature scheme.\nEg: \"rsassa-pss-sha256\".", "type" "string"}}, "id" "SigningKey"}}}