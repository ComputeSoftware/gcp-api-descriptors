#:compute.gcp.descriptor{:name "containeranalysis", :title "Container Analysis API", :api-version "v1alpha1", :revision "20200710", :endpoint #:compute.gcp.descriptor{:url "https://containeranalysis.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"location" "query", "type" "string", "description" "JSONP"}, "uploadType" {"type" "string", "description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "location" "query"}, "key" {"type" "string", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "location" "query"}, "access_token" {"type" "string", "description" "OAuth access token.", "location" "query"}, "oauth_token" {"description" "OAuth 2.0 token for the current user.", "location" "query", "type" "string"}, "prettyPrint" {"description" "Returns response with indentations and line breaks.", "default" "true", "location" "query", "type" "boolean"}, "alt" {"default" "json", "description" "Data format for response.", "location" "query", "enum" ["json" "media" "proto"], "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "type" "string"}, "$.xgafv" {"location" "query", "enumDescriptions" ["v1 error format" "v2 error format"], "enum" ["1" "2"], "description" "V1 error format.", "type" "string"}, "fields" {"type" "string", "description" "Selector specifying which fields to include in a partial response.", "location" "query"}, "upload_protocol" {"type" "string", "description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "location" "query"}, "quotaUser" {"location" "query", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "type" "string"}}, :op->info {"containeranalysis.projects.notes.create" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/{+parent}/notes", :request {"$ref" "Note"}, :response {"$ref" "Note"}, :parameters {"noteId" {"location" "query", "type" "string", "description" "The ID to use for this note."}, "parent" {"required" true, "location" "path", "description" "This field contains the project Id for example:\n\"projects/{project_id}", "type" "string", "pattern" "^projects/[^/]+$"}, "name" {"description" "The name of the project.\nShould be of the form \"providers/{provider_id}\".\n@Deprecated", "type" "string", "location" "query"}}, :description "Creates a new `Note`."}, "containeranalysis.projects.operations.patch" #:compute.gcp.descriptor{:http-method :patch, :path "v1alpha1/{+name}", :request {"$ref" "UpdateOperationRequest"}, :response {"$ref" "Operation"}, :parameters {"name" {"required" true, "description" "The name of the Operation.\nShould be of the form \"projects/{provider_id}/operations/{operation_id}\".", "location" "path", "type" "string", "pattern" "^projects/[^/]+/operations/[^/]+$"}}, :description "Updates an existing operation returns an error if operation\n does not exist. The only valid operations are to update mark the done bit\nchange the result."}, "containeranalysis.projects.occurrences.getNotes" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/{+name}/notes", :response {"$ref" "Note"}, :parameters {"name" {"required" true, "location" "path", "type" "string", "description" "The name of the occurrence in the form\n\"projects/{project_id}/occurrences/{OCCURRENCE_ID}\"", "pattern" "^projects/[^/]+/occurrences/[^/]+$"}}, :description "Gets the `Note` attached to the given `Occurrence`."}, "containeranalysis.projects.occurrences.getIamPolicy" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/{+resource}:getIamPolicy", :request {"$ref" "GetIamPolicyRequest"}, :response {"$ref" "Policy"}, :parameters {"resource" {"pattern" "^projects/[^/]+/occurrences/[^/]+$", "location" "path", "required" true, "type" "string", "description" "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field."}}, :description "Gets the access control policy for a note or an `Occurrence` resource.\nRequires `containeranalysis.notes.setIamPolicy` or\n`containeranalysis.occurrences.setIamPolicy` permission if the resource is\na note or occurrence, respectively.\nAttempting to call this method on a resource without the required\npermission will result in a `PERMISSION_DENIED` error. Attempting to call\nthis method on a non-existent resource will result in a `NOT_FOUND` error\nif the user has list permission on the project, or a `PERMISSION_DENIED`\nerror otherwise. The resource takes the following formats:\n`projects/{PROJECT_ID}/occurrences/{OCCURRENCE_ID}` for occurrences and\nprojects/{PROJECT_ID}/notes/{NOTE_ID} for notes"}, "containeranalysis.projects.occurrences.list" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/{+parent}/occurrences", :response {"$ref" "ListOccurrencesResponse"}, :parameters {"filter" {"description" "The filter expression.", "location" "query", "type" "string"}, "name" {"description" "The name field contains the project Id. For example:\n\"projects/{project_id}\n@Deprecated", "location" "query", "type" "string"}, "pageToken" {"description" "Token to provide to skip to a particular spot in the list.", "location" "query", "type" "string"}, "pageSize" {"description" "Number of occurrences to return in the list.", "location" "query", "format" "int32", "type" "integer"}, "parent" {"location" "path", "required" true, "description" "This contains the project Id for example: projects/{project_id}.", "type" "string", "pattern" "^projects/[^/]+$"}, "kind" {"type" "string", "location" "query", "enum" ["KIND_UNSPECIFIED" "PACKAGE_VULNERABILITY" "BUILD_DETAILS" "IMAGE_BASIS" "PACKAGE_MANAGER" "DEPLOYABLE" "DISCOVERY" "ATTESTATION_AUTHORITY" "UPGRADE"], "description" "The kind of occurrences to filter on."}}, :description "Lists active `Occurrences` for a given project matching the filters."}, "containeranalysis.projects.notes.testIamPermissions" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/{+resource}:testIamPermissions", :request {"$ref" "TestIamPermissionsRequest"}, :response {"$ref" "TestIamPermissionsResponse"}, :parameters {"resource" {"location" "path", "pattern" "^projects/[^/]+/notes/[^/]+$", "type" "string", "required" true, "description" "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field."}}, :description "Returns the permissions that a caller has on the specified note or\noccurrence resource. Requires list permission on the project (for example,\n\"storage.objects.list\" on the containing bucket for testing permission of\nan object). Attempting to call this method on a non-existent resource will\nresult in a `NOT_FOUND` error if the user has list permission on the\nproject, or a `PERMISSION_DENIED` error otherwise. The resource takes the\nfollowing formats: `projects/{PROJECT_ID}/occurrences/{OCCURRENCE_ID}` for\n`Occurrences` and `projects/{PROJECT_ID}/notes/{NOTE_ID}` for `Notes`"}, "containeranalysis.providers.notes.testIamPermissions" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/{+resource}:testIamPermissions", :request {"$ref" "TestIamPermissionsRequest"}, :response {"$ref" "TestIamPermissionsResponse"}, :parameters {"resource" {"location" "path", "type" "string", "required" true, "description" "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.", "pattern" "^providers/[^/]+/notes/[^/]+$"}}, :description "Returns the permissions that a caller has on the specified note or\noccurrence resource. Requires list permission on the project (for example,\n\"storage.objects.list\" on the containing bucket for testing permission of\nan object). Attempting to call this method on a non-existent resource will\nresult in a `NOT_FOUND` error if the user has list permission on the\nproject, or a `PERMISSION_DENIED` error otherwise. The resource takes the\nfollowing formats: `projects/{PROJECT_ID}/occurrences/{OCCURRENCE_ID}` for\n`Occurrences` and `projects/{PROJECT_ID}/notes/{NOTE_ID}` for `Notes`"}, "containeranalysis.projects.occurrences.setIamPolicy" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/{+resource}:setIamPolicy", :request {"$ref" "SetIamPolicyRequest"}, :response {"$ref" "Policy"}, :parameters {"resource" {"type" "string", "location" "path", "pattern" "^projects/[^/]+/occurrences/[^/]+$", "required" true, "description" "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field."}}, :description "Sets the access control policy on the specified `Note` or `Occurrence`.\nRequires `containeranalysis.notes.setIamPolicy` or\n`containeranalysis.occurrences.setIamPolicy` permission if the resource is\na `Note` or an `Occurrence`, respectively.\nAttempting to call this method without these permissions will result in a `\n`PERMISSION_DENIED` error.\nAttempting to call this method on a non-existent resource will result in a\n`NOT_FOUND` error if the user has `containeranalysis.notes.list` permission\non a `Note` or `containeranalysis.occurrences.list` on an `Occurrence`, or\na `PERMISSION_DENIED` error otherwise. The resource takes the following\nformats: `projects/{projectid}/occurrences/{occurrenceid}` for occurrences\nand projects/{projectid}/notes/{noteid} for notes"}, "containeranalysis.projects.occurrences.patch" #:compute.gcp.descriptor{:http-method :patch, :path "v1alpha1/{+name}", :request {"$ref" "Occurrence"}, :response {"$ref" "Occurrence"}, :parameters {"updateMask" {"description" "The fields to update.", "type" "string", "location" "query", "format" "google-fieldmask"}, "name" {"pattern" "^projects/[^/]+/occurrences/[^/]+$", "required" true, "location" "path", "type" "string", "description" "The name of the occurrence.\nShould be of the form \"projects/{project_id}/occurrences/{OCCURRENCE_ID}\"."}}, :description "Updates an existing occurrence."}, "containeranalysis.providers.notes.occurrences.list" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/{+name}/occurrences", :response {"$ref" "ListNoteOccurrencesResponse"}, :parameters {"pageToken" {"description" "Token to provide to skip to a particular spot in the list.", "type" "string", "location" "query"}, "pageSize" {"location" "query", "description" "Number of notes to return in the list.", "type" "integer", "format" "int32"}, "name" {"location" "path", "pattern" "^providers/[^/]+/notes/[^/]+$", "type" "string", "description" "The name field will contain the note name for example:\n  \"provider/{provider_id}/notes/{note_id}\"", "required" true}, "filter" {"location" "query", "type" "string", "description" "The filter expression."}}, :description "Lists `Occurrences` referencing the specified `Note`. Use this method to\nget all occurrences referencing your `Note` across all your customer\nprojects."}, "containeranalysis.projects.notes.patch" #:compute.gcp.descriptor{:http-method :patch, :path "v1alpha1/{+name}", :request {"$ref" "Note"}, :response {"$ref" "Note"}, :parameters {"updateMask" {"format" "google-fieldmask", "type" "string", "location" "query", "description" "The fields to update."}, "name" {"pattern" "^projects/[^/]+/notes/[^/]+$", "location" "path", "type" "string", "description" "The name of the note.\nShould be of the form \"projects/{provider_id}/notes/{note_id}\".", "required" true}}, :description "Updates an existing `Note`."}, "containeranalysis.projects.occurrences.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1alpha1/{+name}", :response {"$ref" "Empty"}, :parameters {"name" {"pattern" "^projects/[^/]+/occurrences/[^/]+$", "required" true, "description" "The name of the occurrence in the form of\n\"projects/{project_id}/occurrences/{OCCURRENCE_ID}\"", "type" "string", "location" "path"}}, :description "Deletes the given `Occurrence` from the system. Use this when\nan `Occurrence` is no longer applicable for the given resource."}, "containeranalysis.projects.notes.getIamPolicy" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/{+resource}:getIamPolicy", :request {"$ref" "GetIamPolicyRequest"}, :response {"$ref" "Policy"}, :parameters {"resource" {"type" "string", "description" "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.", "pattern" "^projects/[^/]+/notes/[^/]+$", "required" true, "location" "path"}}, :description "Gets the access control policy for a note or an `Occurrence` resource.\nRequires `containeranalysis.notes.setIamPolicy` or\n`containeranalysis.occurrences.setIamPolicy` permission if the resource is\na note or occurrence, respectively.\nAttempting to call this method on a resource without the required\npermission will result in a `PERMISSION_DENIED` error. Attempting to call\nthis method on a non-existent resource will result in a `NOT_FOUND` error\nif the user has list permission on the project, or a `PERMISSION_DENIED`\nerror otherwise. The resource takes the following formats:\n`projects/{PROJECT_ID}/occurrences/{OCCURRENCE_ID}` for occurrences and\nprojects/{PROJECT_ID}/notes/{NOTE_ID} for notes"}, "containeranalysis.providers.notes.create" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/{+name}/notes", :request {"$ref" "Note"}, :response {"$ref" "Note"}, :parameters {"parent" {"description" "This field contains the project Id for example:\n\"projects/{project_id}", "location" "query", "type" "string"}, "noteId" {"type" "string", "description" "The ID to use for this note.", "location" "query"}, "name" {"description" "The name of the project.\nShould be of the form \"providers/{provider_id}\".\n@Deprecated", "required" true, "pattern" "^providers/[^/]+$", "location" "path", "type" "string"}}, :description "Creates a new `Note`."}, "containeranalysis.projects.notes.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1alpha1/{+name}", :response {"$ref" "Empty"}, :parameters {"name" {"location" "path", "pattern" "^projects/[^/]+/notes/[^/]+$", "type" "string", "description" "The name of the note in the form of\n\"providers/{provider_id}/notes/{NOTE_ID}\"", "required" true}}, :description "Deletes the given `Note` from the system."}, "containeranalysis.projects.notes.occurrences.list" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/{+name}/occurrences", :response {"$ref" "ListNoteOccurrencesResponse"}, :parameters {"pageSize" {"description" "Number of notes to return in the list.", "type" "integer", "location" "query", "format" "int32"}, "filter" {"type" "string", "location" "query", "description" "The filter expression."}, "pageToken" {"type" "string", "location" "query", "description" "Token to provide to skip to a particular spot in the list."}, "name" {"description" "The name field will contain the note name for example:\n  \"provider/{provider_id}/notes/{note_id}\"", "type" "string", "pattern" "^projects/[^/]+/notes/[^/]+$", "required" true, "location" "path"}}, :description "Lists `Occurrences` referencing the specified `Note`. Use this method to\nget all occurrences referencing your `Note` across all your customer\nprojects."}, "containeranalysis.projects.scanConfigs.patch" #:compute.gcp.descriptor{:http-method :patch, :path "v1alpha1/{+name}", :request {"$ref" "ScanConfig"}, :response {"$ref" "ScanConfig"}, :parameters {"name" {"pattern" "^projects/[^/]+/scanConfigs/[^/]+$", "type" "string", "description" "The scan config to update of the form\nprojects/{project_id}/scanConfigs/{scan_config_id}.", "location" "path", "required" true}, "updateMask" {"location" "query", "description" "The fields to update.", "format" "google-fieldmask", "type" "string"}}, :description "Updates the scan configuration to a new value."}, "containeranalysis.projects.scanConfigs.list" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/{+parent}/scanConfigs", :response {"$ref" "ListScanConfigsResponse"}, :parameters {"pageToken" {"type" "string", "description" "The page token to use for the next request.", "location" "query"}, "filter" {"description" "The filter expression.", "location" "query", "type" "string"}, "parent" {"description" "This containers the project Id i.e.: projects/{project_id}", "type" "string", "required" true, "location" "path", "pattern" "^projects/[^/]+$"}, "pageSize" {"description" "The number of items to return.", "format" "int32", "location" "query", "type" "integer"}}, :description "Lists scan configurations for a project."}, "containeranalysis.providers.notes.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1alpha1/{+name}", :response {"$ref" "Empty"}, :parameters {"name" {"required" true, "location" "path", "type" "string", "description" "The name of the note in the form of\n\"providers/{provider_id}/notes/{NOTE_ID}\"", "pattern" "^providers/[^/]+/notes/[^/]+$"}}, :description "Deletes the given `Note` from the system."}, "containeranalysis.projects.notes.get" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/{+name}", :response {"$ref" "Note"}, :parameters {"name" {"location" "path", "pattern" "^projects/[^/]+/notes/[^/]+$", "required" true, "description" "The name of the note in the form of\n\"providers/{provider_id}/notes/{NOTE_ID}\"", "type" "string"}}, :description "Returns the requested `Note`."}, "containeranalysis.projects.occurrences.getVulnerabilitySummary" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/{+parent}/occurrences:vulnerabilitySummary", :response {"$ref" "GetVulnzOccurrencesSummaryResponse"}, :parameters {"parent" {"type" "string", "location" "path", "description" "This contains the project Id for example: projects/{project_id}", "pattern" "^projects/[^/]+$", "required" true}, "filter" {"description" "The filter expression.", "location" "query", "type" "string"}}, :description "Gets a summary of the number and severity of occurrences."}, "containeranalysis.providers.notes.setIamPolicy" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/{+resource}:setIamPolicy", :request {"$ref" "SetIamPolicyRequest"}, :response {"$ref" "Policy"}, :parameters {"resource" {"required" true, "location" "path", "description" "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.", "pattern" "^providers/[^/]+/notes/[^/]+$", "type" "string"}}, :description "Sets the access control policy on the specified `Note` or `Occurrence`.\nRequires `containeranalysis.notes.setIamPolicy` or\n`containeranalysis.occurrences.setIamPolicy` permission if the resource is\na `Note` or an `Occurrence`, respectively.\nAttempting to call this method without these permissions will result in a `\n`PERMISSION_DENIED` error.\nAttempting to call this method on a non-existent resource will result in a\n`NOT_FOUND` error if the user has `containeranalysis.notes.list` permission\non a `Note` or `containeranalysis.occurrences.list` on an `Occurrence`, or\na `PERMISSION_DENIED` error otherwise. The resource takes the following\nformats: `projects/{projectid}/occurrences/{occurrenceid}` for occurrences\nand projects/{projectid}/notes/{noteid} for notes"}, "containeranalysis.providers.notes.patch" #:compute.gcp.descriptor{:http-method :patch, :path "v1alpha1/{+name}", :request {"$ref" "Note"}, :response {"$ref" "Note"}, :parameters {"name" {"location" "path", "description" "The name of the note.\nShould be of the form \"projects/{provider_id}/notes/{note_id}\".", "type" "string", "required" true, "pattern" "^providers/[^/]+/notes/[^/]+$"}, "updateMask" {"format" "google-fieldmask", "location" "query", "type" "string", "description" "The fields to update."}}, :description "Updates an existing `Note`."}, "containeranalysis.projects.occurrences.testIamPermissions" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/{+resource}:testIamPermissions", :request {"$ref" "TestIamPermissionsRequest"}, :response {"$ref" "TestIamPermissionsResponse"}, :parameters {"resource" {"location" "path", "pattern" "^projects/[^/]+/occurrences/[^/]+$", "description" "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.", "required" true, "type" "string"}}, :description "Returns the permissions that a caller has on the specified note or\noccurrence resource. Requires list permission on the project (for example,\n\"storage.objects.list\" on the containing bucket for testing permission of\nan object). Attempting to call this method on a non-existent resource will\nresult in a `NOT_FOUND` error if the user has list permission on the\nproject, or a `PERMISSION_DENIED` error otherwise. The resource takes the\nfollowing formats: `projects/{PROJECT_ID}/occurrences/{OCCURRENCE_ID}` for\n`Occurrences` and `projects/{PROJECT_ID}/notes/{NOTE_ID}` for `Notes`"}, "containeranalysis.projects.notes.setIamPolicy" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/{+resource}:setIamPolicy", :request {"$ref" "SetIamPolicyRequest"}, :response {"$ref" "Policy"}, :parameters {"resource" {"location" "path", "pattern" "^projects/[^/]+/notes/[^/]+$", "description" "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.", "type" "string", "required" true}}, :description "Sets the access control policy on the specified `Note` or `Occurrence`.\nRequires `containeranalysis.notes.setIamPolicy` or\n`containeranalysis.occurrences.setIamPolicy` permission if the resource is\na `Note` or an `Occurrence`, respectively.\nAttempting to call this method without these permissions will result in a `\n`PERMISSION_DENIED` error.\nAttempting to call this method on a non-existent resource will result in a\n`NOT_FOUND` error if the user has `containeranalysis.notes.list` permission\non a `Note` or `containeranalysis.occurrences.list` on an `Occurrence`, or\na `PERMISSION_DENIED` error otherwise. The resource takes the following\nformats: `projects/{projectid}/occurrences/{occurrenceid}` for occurrences\nand projects/{projectid}/notes/{noteid} for notes"}, "containeranalysis.providers.notes.list" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/{+name}/notes", :response {"$ref" "ListNotesResponse"}, :parameters {"name" {"pattern" "^providers/[^/]+$", "required" true, "type" "string", "description" "The name field will contain the project Id for example:\n\"providers/{provider_id}\n@Deprecated", "location" "path"}, "parent" {"location" "query", "type" "string", "description" "This field contains the project Id for example: \"projects/{PROJECT_ID}\"."}, "pageSize" {"location" "query", "type" "integer", "format" "int32", "description" "Number of notes to return in the list."}, "filter" {"location" "query", "type" "string", "description" "The filter expression."}, "pageToken" {"location" "query", "description" "Token to provide to skip to a particular spot in the list.", "type" "string"}}, :description "Lists all `Notes` for a given project."}, "containeranalysis.providers.notes.get" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/{+name}", :response {"$ref" "Note"}, :parameters {"name" {"required" true, "pattern" "^providers/[^/]+/notes/[^/]+$", "description" "The name of the note in the form of\n\"providers/{provider_id}/notes/{NOTE_ID}\"", "location" "path", "type" "string"}}, :description "Returns the requested `Note`."}, "containeranalysis.projects.occurrences.get" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/{+name}", :response {"$ref" "Occurrence"}, :parameters {"name" {"pattern" "^projects/[^/]+/occurrences/[^/]+$", "type" "string", "required" true, "description" "The name of the occurrence of the form\n\"projects/{project_id}/occurrences/{OCCURRENCE_ID}\"", "location" "path"}}, :description "Returns the requested `Occurrence`."}, "containeranalysis.providers.notes.getIamPolicy" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/{+resource}:getIamPolicy", :request {"$ref" "GetIamPolicyRequest"}, :response {"$ref" "Policy"}, :parameters {"resource" {"required" true, "description" "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.", "location" "path", "type" "string", "pattern" "^providers/[^/]+/notes/[^/]+$"}}, :description "Gets the access control policy for a note or an `Occurrence` resource.\nRequires `containeranalysis.notes.setIamPolicy` or\n`containeranalysis.occurrences.setIamPolicy` permission if the resource is\na note or occurrence, respectively.\nAttempting to call this method on a resource without the required\npermission will result in a `PERMISSION_DENIED` error. Attempting to call\nthis method on a non-existent resource will result in a `NOT_FOUND` error\nif the user has list permission on the project, or a `PERMISSION_DENIED`\nerror otherwise. The resource takes the following formats:\n`projects/{PROJECT_ID}/occurrences/{OCCURRENCE_ID}` for occurrences and\nprojects/{PROJECT_ID}/notes/{NOTE_ID} for notes"}, "containeranalysis.projects.scanConfigs.get" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/{+name}", :response {"$ref" "ScanConfig"}, :parameters {"name" {"location" "path", "required" true, "pattern" "^projects/[^/]+/scanConfigs/[^/]+$", "type" "string", "description" "The name of the ScanConfig in the form\nprojects/{project_id}/scanConfigs/{scan_config_id}"}}, :description "Gets a specific scan configuration for a project."}, "containeranalysis.projects.occurrences.create" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/{+parent}/occurrences", :request {"$ref" "Occurrence"}, :response {"$ref" "Occurrence"}, :parameters {"parent" {"required" true, "type" "string", "location" "path", "description" "This field contains the project Id for example: \"projects/{project_id}\"", "pattern" "^projects/[^/]+$"}, "name" {"type" "string", "location" "query", "description" "The name of the project.  Should be of the form \"projects/{project_id}\".\n@Deprecated"}}, :description "Creates a new `Occurrence`. Use this method to create `Occurrences`\nfor a resource."}, "containeranalysis.projects.notes.list" #:compute.gcp.descriptor{:http-method :get, :path "v1alpha1/{+parent}/notes", :response {"$ref" "ListNotesResponse"}, :parameters {"name" {"location" "query", "type" "string", "description" "The name field will contain the project Id for example:\n\"providers/{provider_id}\n@Deprecated"}, "filter" {"type" "string", "location" "query", "description" "The filter expression."}, "pageToken" {"description" "Token to provide to skip to a particular spot in the list.", "location" "query", "type" "string"}, "parent" {"pattern" "^projects/[^/]+$", "required" true, "type" "string", "description" "This field contains the project Id for example: \"projects/{PROJECT_ID}\".", "location" "path"}, "pageSize" {"location" "query", "description" "Number of notes to return in the list.", "format" "int32", "type" "integer"}}, :description "Lists all `Notes` for a given project."}, "containeranalysis.projects.operations.create" #:compute.gcp.descriptor{:http-method :post, :path "v1alpha1/{+parent}/operations", :request {"$ref" "CreateOperationRequest"}, :response {"$ref" "Operation"}, :parameters {"parent" {"description" "The project Id that this operation should be created under.", "type" "string", "location" "path", "pattern" "^projects/[^/]+$", "required" true}}, :description "Creates a new `Operation`."}}, :schemas {"TestIamPermissionsRequest" {"properties" {"permissions" {"type" "array", "description" "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).", "items" {"type" "string"}}}, "type" "object", "description" "Request message for `TestIamPermissions` method.", "id" "TestIamPermissionsRequest"}, "ListNotesResponse" {"properties" {"nextPageToken" {"description" "The next pagination token in the list response. It should be used as\npage_token for the following request. An empty value means no more result.", "type" "string"}, "notes" {"description" "The occurrences requested", "type" "array", "items" {"$ref" "Note"}}}, "id" "ListNotesResponse", "type" "object", "description" "Response including listed notes."}, "GoogleDevtoolsContaineranalysisV1alpha1GitSourceContext" {"id" "GoogleDevtoolsContaineranalysisV1alpha1GitSourceContext", "type" "object", "properties" {"url" {"description" "Git repository URL.", "type" "string"}, "revisionId" {"type" "string", "description" "Required. Git commit hash."}}, "description" "A GitSourceContext denotes a particular revision in a third party Git\nrepository (e.g., GitHub)."}, "Empty" {"type" "object", "id" "Empty", "properties" {}, "description" "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`."}, "RepoSource" {"description" "RepoSource describes the location of the source in a Google Cloud Source\nRepository.", "id" "RepoSource", "properties" {"tagName" {"type" "string", "description" "Name of the tag to build."}, "repoName" {"type" "string", "description" "Name of the repo."}, "projectId" {"type" "string", "description" "ID of the project that owns the repo."}, "commitSha" {"description" "Explicit commit SHA to build.", "type" "string"}, "branchName" {"description" "Name of the branch to build.", "type" "string"}}, "type" "object"}, "Expr" {"description" "Represents a textual expression in the Common Expression Language (CEL)\nsyntax. CEL is a C-like expression language. The syntax and semantics of CEL\nare documented at https://github.com/google/cel-spec.\n\nExample (Comparison):\n\n    title: \"Summary size limit\"\n    description: \"Determines if a summary is less than 100 chars\"\n    expression: \"document.summary.size() < 100\"\n\nExample (Equality):\n\n    title: \"Requestor is owner\"\n    description: \"Determines if requestor is the document owner\"\n    expression: \"document.owner == request.auth.claims.email\"\n\nExample (Logic):\n\n    title: \"Public documents\"\n    description: \"Determine whether the document should be publicly visible\"\n    expression: \"document.type != 'private' && document.type != 'internal'\"\n\nExample (Data Manipulation):\n\n    title: \"Notification string\"\n    description: \"Create a notification string with a timestamp.\"\n    expression: \"'New message received at ' + string(document.create_time)\"\n\nThe exact variables and functions that may be referenced within an expression\nare determined by the service that evaluates it. See the service\ndocumentation for additional information.", "type" "object", "properties" {"expression" {"type" "string", "description" "Textual representation of an expression in Common Expression Language\nsyntax."}, "location" {"type" "string", "description" "Optional. String indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file."}, "title" {"description" "Optional. Title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.", "type" "string"}, "description" {"description" "Optional. Description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.", "type" "string"}}, "id" "Expr"}, "VulnerabilityLocation" {"properties" {"cpeUri" {"type" "string", "description" "The cpe_uri in [cpe format] (https://cpe.mitre.org/specification/)\nformat. Examples include distro or storage location for vulnerable jar.\nThis field can be used as a filter in list requests."}, "package" {"description" "The package being described.", "type" "string"}, "version" {"$ref" "Version", "description" "The version of the package being described. This field can be used as a\nfilter in list requests."}}, "description" "The location of the vulnerability", "type" "object", "id" "VulnerabilityLocation"}, "GoogleDevtoolsContaineranalysisV1alpha1OperationMetadata" {"id" "GoogleDevtoolsContaineranalysisV1alpha1OperationMetadata", "type" "object", "description" "Metadata for all operations used and required for all operations\nthat created by Container Analysis Providers", "properties" {"endTime" {"type" "string", "format" "google-datetime", "description" "Output only. The time that this operation was marked completed or failed."}, "createTime" {"type" "string", "format" "google-datetime", "description" "Output only. The time this operation was created."}}}, "GoogleDevtoolsContaineranalysisV1alpha1ProjectRepoId" {"type" "object", "properties" {"projectId" {"description" "The ID of the project.", "type" "string"}, "repoName" {"description" "The name of the repo. Leave empty for the default repo.", "type" "string"}}, "description" "Selects a repo using a Google Cloud Platform project ID (e.g.,\nwinged-cargo-31) and a repo name within that project.", "id" "GoogleDevtoolsContaineranalysisV1alpha1ProjectRepoId"}, "VulnerabilityDetails" {"type" "object", "id" "VulnerabilityDetails", "description" "Used by Occurrence to point to where the vulnerability exists and how\nto fix it.", "properties" {"packageIssue" {"type" "array", "items" {"$ref" "PackageIssue"}, "description" "The set of affected locations and their fixes (if available) within\nthe associated resource."}, "cvssScore" {"format" "float", "description" "Output only. The CVSS score of this vulnerability. CVSS score is on a\nscale of 0-10 where 0 indicates low severity and 10 indicates high\nseverity.", "type" "number"}, "severity" {"enum" ["SEVERITY_UNSPECIFIED" "MINIMAL" "LOW" "MEDIUM" "HIGH" "CRITICAL"], "description" "Output only. The note provider assigned Severity of the vulnerability.", "enumDescriptions" ["Unknown Impact" "Minimal Impact" "Low Impact" "Medium Impact" "High Impact" "Critical Impact"], "type" "string"}, "effectiveSeverity" {"description" "The distro assigned severity for this vulnerability when that is\navailable and note provider assigned severity when distro has not yet\nassigned a severity for this vulnerability.", "type" "string", "enumDescriptions" ["Unknown Impact" "Minimal Impact" "Low Impact" "Medium Impact" "High Impact" "Critical Impact"], "enum" ["SEVERITY_UNSPECIFIED" "MINIMAL" "LOW" "MEDIUM" "HIGH" "CRITICAL"]}, "type" {"type" "string", "description" "The type of package; whether native or non native(ruby gems,\nnode.js packages etc)"}}}, "ListNoteOccurrencesResponse" {"properties" {"occurrences" {"type" "array", "items" {"$ref" "Occurrence"}, "description" "The occurrences attached to the specified note."}, "nextPageToken" {"type" "string", "description" "Token to receive the next page of notes."}}, "description" "Response including listed occurrences for a note.", "type" "object", "id" "ListNoteOccurrencesResponse"}, "Basis" {"id" "Basis", "properties" {"resourceUrl" {"type" "string", "description" "The resource_url for the resource representing the basis of\nassociated occurrence images."}, "fingerprint" {"description" "The fingerprint of the base image.", "$ref" "Fingerprint"}}, "description" "Basis describes the base image portion (Note) of the DockerImage\nrelationship.  Linked occurrences are derived from this or an\nequivalent image via:\n  FROM <Basis.resource_url>\nOr an equivalent reference, e.g. a tag of the resource_url.", "type" "object"}, "Deployment" {"id" "Deployment", "description" "The period during which some deployable was active in a runtime.", "type" "object", "properties" {"platform" {"type" "string", "description" "Platform hosting this deployment.", "enumDescriptions" ["Unknown" "Google Container Engine" "Google App Engine: Flexible Environment" "Custom user-defined platform"], "enum" ["PLATFORM_UNSPECIFIED" "GKE" "FLEX" "CUSTOM"]}, "undeployTime" {"description" "End of the lifetime of this deployment.", "format" "google-datetime", "type" "string"}, "config" {"description" "Configuration used to create this deployment.", "type" "string"}, "deployTime" {"format" "google-datetime", "type" "string", "description" "Beginning of the lifetime of this deployment."}, "resourceUri" {"items" {"type" "string"}, "description" "Output only. Resource URI for the artifact being deployed taken from the\ndeployable field with the same name.", "type" "array"}, "address" {"type" "string", "description" "Address of the runtime element hosting this deployment."}, "userEmail" {"type" "string", "description" "Identity of the user that triggered this deployment."}}}, "Detail" {"type" "object", "description" "Identifies all occurrences of this vulnerability in the package for a\nspecific distro/location\nFor example: glibc in cpe:/o:debian:debian_linux:8 for versions 2.1 - 2.2", "id" "Detail", "properties" {"packageType" {"description" "The type of package; whether native or non native(ruby gems,\nnode.js packages etc)", "type" "string"}, "package" {"type" "string", "description" "The name of the package where the vulnerability was found.\nThis field can be used as a filter in list requests."}, "maxAffectedVersion" {"description" "The max version of the package in which the vulnerability exists.", "$ref" "Version"}, "minAffectedVersion" {"description" "The min version of the package in which the vulnerability exists.", "$ref" "Version"}, "severityName" {"type" "string", "description" "The severity (eg: distro assigned severity) for this vulnerability."}, "isObsolete" {"type" "boolean", "description" "Whether this Detail is obsolete. Occurrences are expected not to point to\nobsolete details."}, "fixedLocation" {"description" "The fix for this specific package version.", "$ref" "VulnerabilityLocation"}, "cpeUri" {"description" "The cpe_uri in [cpe format] (https://cpe.mitre.org/specification/) in\nwhich the vulnerability manifests.  Examples include distro or storage\nlocation for vulnerable jar.\nThis field can be used as a filter in list requests.", "type" "string"}, "description" {"type" "string", "description" "A vendor-specific description of this note."}}}, "UpdateOperationRequest" {"description" "Request for updating an existing operation", "properties" {"updateMask" {"type" "string", "description" "The fields to update.", "format" "google-fieldmask"}, "operation" {"description" "The operation to create.", "$ref" "Operation"}}, "type" "object", "id" "UpdateOperationRequest"}, "RelatedUrl" {"id" "RelatedUrl", "type" "object", "properties" {"label" {"description" "Label to describe usage of the URL", "type" "string"}, "url" {"type" "string", "description" "Specific URL to associate with the note"}}, "description" "Metadata for any related URL information"}, "GoogleDevtoolsContaineranalysisV1alpha1RepoId" {"description" "A unique identifier for a Cloud Repo.", "type" "object", "properties" {"uid" {"type" "string", "description" "A server-assigned, globally unique identifier."}, "projectRepoId" {"description" "A combination of a project ID and a repo name.", "$ref" "GoogleDevtoolsContaineranalysisV1alpha1ProjectRepoId"}}, "id" "GoogleDevtoolsContaineranalysisV1alpha1RepoId"}, "Distribution" {"id" "Distribution", "description" "This represents a particular channel of distribution for a given package.\ne.g. Debian's jessie-backports dpkg mirror", "type" "object", "properties" {"description" {"description" "The distribution channel-specific description of this package.", "type" "string"}, "url" {"description" "The distribution channel-specific homepage for this package.", "type" "string"}, "latestVersion" {"$ref" "Version", "description" "The latest available version of this package in\nthis distribution channel."}, "maintainer" {"description" "A freeform string denoting the maintainer of this package.", "type" "string"}, "architecture" {"description" "The CPU architecture for which packages in this distribution\nchannel were built", "enumDescriptions" ["Unknown architecture" "X86 architecture" "X64 architecture"], "enum" ["ARCHITECTURE_UNSPECIFIED" "X86" "X64"], "type" "string"}, "cpeUri" {"description" "The cpe_uri in [cpe format](https://cpe.mitre.org/specification/)\ndenoting the package manager version distributing a package.", "type" "string"}}}, "Package" {"description" "This represents a particular package that is distributed over\nvarious channels.\ne.g. glibc (aka libc6) is distributed by many, at various versions.", "type" "object", "properties" {"distribution" {"items" {"$ref" "Distribution"}, "type" "array", "description" "The various channels by which a package is distributed."}, "name" {"description" "The name of the package.", "type" "string"}}, "id" "Package"}, "Source" {"type" "object", "description" "Source describes the location of the source used for the build.", "id" "Source", "properties" {"additionalContexts" {"description" "If provided, some of the source code used for the build may be found in\nthese locations, in the case where the source repository had multiple\nremotes or submodules. This list will not include the context specified in\nthe context field.", "type" "array", "items" {"$ref" "GoogleDevtoolsContaineranalysisV1alpha1SourceContext"}}, "fileHashes" {"type" "object", "additionalProperties" {"$ref" "FileHashes"}, "description" "Hash(es) of the build source, which can be used to verify that the original\nsource integrity was maintained in the build.\n\nThe keys to this map are file paths used as build source and the values\ncontain the hash values for those files.\n\nIf the build source came in a single package such as a gzipped tarfile\n(.tar.gz), the FileHash will be for the single path to that file."}, "storageSource" {"description" "If provided, get the source from this location in in Google Cloud\nStorage.", "$ref" "StorageSource"}, "context" {"$ref" "GoogleDevtoolsContaineranalysisV1alpha1SourceContext", "description" "If provided, the source code used for the build came from this location."}, "repoSource" {"$ref" "RepoSource", "description" "If provided, get source from this location in a Cloud Repo."}, "artifactStorageSource" {"$ref" "StorageSource", "description" "If provided, the input binary artifacts for the build came from this\nlocation."}}}, "Note" {"properties" {"package" {"description" "A note describing a package hosted by various package managers.", "$ref" "Package"}, "longDescription" {"description" "A detailed description of this `Note`.", "type" "string"}, "upgrade" {"$ref" "UpgradeNote", "description" "A note describing an upgrade."}, "buildType" {"description" "Build provenance type for a verifiable build.", "$ref" "BuildType"}, "name" {"description" "The name of the note in the form\n\"projects/{provider_project_id}/notes/{NOTE_ID}\"", "type" "string"}, "expirationTime" {"format" "google-datetime", "description" "Time of expiration for this note, null if note does not expire.", "type" "string"}, "createTime" {"format" "google-datetime", "description" "Output only. The time this note was created. This field can be used as a\nfilter in list requests.", "type" "string"}, "shortDescription" {"description" "A one sentence description of this `Note`.", "type" "string"}, "attestationAuthority" {"$ref" "AttestationAuthority", "description" "A note describing an attestation role."}, "vulnerabilityType" {"$ref" "VulnerabilityType", "description" "A package vulnerability type of note."}, "deployable" {"description" "A note describing something that can be deployed.", "$ref" "Deployable"}, "updateTime" {"description" "Output only. The time this note was last updated. This field can be used as\na filter in list requests.", "format" "google-datetime", "type" "string"}, "kind" {"enum" ["KIND_UNSPECIFIED" "PACKAGE_VULNERABILITY" "BUILD_DETAILS" "IMAGE_BASIS" "PACKAGE_MANAGER" "DEPLOYABLE" "DISCOVERY" "ATTESTATION_AUTHORITY" "UPGRADE"], "enumDescriptions" ["Unknown" "The note and occurrence represent a package vulnerability." "The note and occurrence assert build provenance." "This represents an image basis relationship." "This represents a package installed via a package manager." "The note and occurrence track deployment events." "The note and occurrence track the initial discovery status of a resource." "This represents a logical \"role\" that can attest to artifacts." "This represents an available software upgrade."], "description" "Output only. This explicitly denotes which kind of note is specified. This\nfield can be used as a filter in list requests.", "type" "string"}, "relatedUrl" {"type" "array", "items" {"$ref" "RelatedUrl"}, "description" "URLs associated with this note"}, "discovery" {"$ref" "Discovery", "description" "A note describing a provider/analysis type."}, "baseImage" {"$ref" "Basis", "description" "A note describing a base image."}}, "type" "object", "description" "Provides a detailed description of a `Note`.", "id" "Note"}, "Installation" {"type" "object", "properties" {"location" {"type" "array", "description" "All of the places within the filesystem versions of this package\nhave been found.", "items" {"$ref" "Location"}}, "name" {"description" "Output only. The name of the installed package.", "type" "string"}}, "description" "This represents how a particular software package may be installed on\na system.", "id" "Installation"}, "Binding" {"id" "Binding", "type" "object", "description" "Associates `members` with a `role`.", "properties" {"role" {"description" "Role that is assigned to `members`.\nFor example, `roles/viewer`, `roles/editor`, or `roles/owner`.", "type" "string"}, "condition" {"$ref" "Expr", "description" "The condition that is associated with this binding.\n\nIf the condition evaluates to `true`, then this binding applies to the\ncurrent request.\n\nIf the condition evaluates to `false`, then this binding does not apply to\nthe current request. However, a different role binding might grant the same\nrole to one or more of the members in this binding.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https://cloud.google.com/iam/help/conditions/resource-policies)."}, "members" {"items" {"type" "string"}, "type" "array", "description" "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@example.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n* `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a user that has been recently deleted. For\n   example, `alice@example.com?uid=123456789012345678901`. If the user is\n   recovered, this value reverts to `user:{emailid}` and the recovered user\n   retains the role in the binding.\n\n* `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus\n   unique identifier) representing a service account that has been recently\n   deleted. For example,\n   `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.\n   If the service account is undeleted, this value reverts to\n   `serviceAccount:{emailid}` and the undeleted service account retains the\n   role in the binding.\n\n* `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a Google group that has been recently\n   deleted. For example, `admins@example.com?uid=123456789012345678901`. If\n   the group is recovered, this value reverts to `group:{emailid}` and the\n   recovered group retains the role in the binding.\n\n\n* `domain:{domain}`: The G Suite domain (primary) that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n"}}}, "FileHashes" {"description" "Container message for hashes of byte content of files, used in Source\nmessages to verify integrity of source input to the build.", "type" "object", "properties" {"fileHash" {"type" "array", "description" "Collection of file hashes.", "items" {"$ref" "Hash"}}}, "id" "FileHashes"}, "BuildDetails" {"id" "BuildDetails", "description" "Message encapsulating build provenance details.", "type" "object", "properties" {"provenanceBytes" {"type" "string", "description" "Serialized JSON representation of the provenance, used in generating the\n`BuildSignature` in the corresponding Result. After verifying the\nsignature, `provenance_bytes` can be unmarshalled and compared to the\nprovenance to confirm that it is unchanged. A base64-encoded string\nrepresentation of the provenance bytes is used for the signature in order\nto interoperate with openssl which expects this format for signature\nverification.\n\nThe serialized form is captured both to avoid ambiguity in how the\nprovenance is marshalled to json as well to prevent incompatibilities with\nfuture changes."}, "provenance" {"description" "The actual provenance", "$ref" "BuildProvenance"}}}, "Location" {"id" "Location", "properties" {"version" {"description" "The version installed at this location.", "$ref" "Version"}, "path" {"description" "The path from which we gathered that this package/version is installed.", "type" "string"}, "cpeUri" {"type" "string", "description" "The cpe_uri in [cpe format](https://cpe.mitre.org/specification/)\ndenoting the package manager version distributing a package."}}, "description" "An occurrence of a particular package installation found within a\nsystem's filesystem.\ne.g. glibc was found in /var/lib/dpkg/status", "type" "object"}, "Hash" {"type" "object", "id" "Hash", "description" "Container message for hash values.", "properties" {"type" {"enumDescriptions" ["No hash requested." "A sha256 hash."], "description" "The type of hash that was performed.", "enum" ["NONE" "SHA256"], "type" "string"}, "value" {"format" "byte", "description" "The hash value.", "type" "string"}}}, "Operation" {"id" "Operation", "type" "object", "description" "This resource represents a long-running operation that is the result of a\nnetwork API call.", "properties" {"name" {"description" "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`.", "type" "string"}, "metadata" {"description" "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.", "additionalProperties" {"type" "any", "description" "Properties of the object. Contains field @type with type URL."}, "type" "object"}, "error" {"description" "The error result of the operation in case of failure or cancellation.", "$ref" "Status"}, "done" {"type" "boolean", "description" "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable."}, "response" {"type" "object", "description" "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`.", "additionalProperties" {"description" "Properties of the object. Contains field @type with type URL.", "type" "any"}}}}, "Attestation" {"type" "object", "id" "Attestation", "description" "Occurrence that represents a single \"attestation\".  The authenticity of an\nAttestation can be verified using the attached signature. If the verifier\ntrusts the public key of the signer, then verifying the signature is\nsufficient to establish trust.  In this circumstance, the\nAttestationAuthority to which this Attestation is attached is primarily\nuseful for look-up (how to find this Attestation if you already know the\nAuthority and artifact to be verified) and intent (which authority was this\nattestation intended to sign for).", "properties" {"pgpSignedAttestation" {"$ref" "PgpSignedAttestation"}}}, "Status" {"properties" {"message" {"type" "string", "description" "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client."}, "details" {"description" "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.", "items" {"additionalProperties" {"description" "Properties of the object. Contains field @type with type URL.", "type" "any"}, "type" "object"}, "type" "array"}, "code" {"description" "The status code, which should be an enum value of google.rpc.Code.", "type" "integer", "format" "int32"}}, "type" "object", "id" "Status", "description" "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}, "Artifact" {"type" "object", "id" "Artifact", "description" "Artifact describes a build product.", "properties" {"name" {"description" "Name of the artifact. This may be the path to a binary or jar file, or in\nthe case of a container build, the name used to push the container image to\nGoogle Container Registry, as presented to `docker push`.\n\nThis field is deprecated in favor of the plural `names` field; it continues\nto exist here to allow existing BuildProvenance serialized to json in\ngoogle.devtools.containeranalysis.v1alpha1.BuildDetails.provenance_bytes to\ndeserialize back into proto.", "type" "string"}, "names" {"description" "Related artifact names. This may be the path to a binary or jar file, or in\nthe case of a container build, the name used to push the container image to\nGoogle Container Registry, as presented to `docker push`. Note that a\nsingle Artifact ID can have multiple names, for example if two tags are\napplied to one image.", "items" {"type" "string"}, "type" "array"}, "id" {"description" "Artifact ID, if any; for container images, this will be a URL by digest\nlike gcr.io/projectID/imagename@sha256:123456", "type" "string"}, "checksum" {"description" "Hash or checksum value of a binary, or Docker Registry 2.0 digest of a\ncontainer.", "type" "string"}}}, "PackageIssue" {"properties" {"fixedLocation" {"$ref" "VulnerabilityLocation", "description" "The location of the available fix for vulnerability."}, "severityName" {"type" "string"}, "affectedLocation" {"description" "The location of the vulnerability.", "$ref" "VulnerabilityLocation"}}, "type" "object", "description" "This message wraps a location affected by a vulnerability and its\nassociated fix (if one is available).", "id" "PackageIssue"}, "BuildSignature" {"description" "Message encapsulating the signature of the verified build.", "properties" {"signature" {"type" "string", "description" "Signature of the related `BuildProvenance`, encoded in a base64 string."}, "publicKey" {"description" "Public key of the builder which can be used to verify that the related\nfindings are valid and unchanged. If `key_type` is empty, this defaults\nto PEM encoded public keys.\n\nThis field may be empty if `key_id` references an external key.\n\nFor Cloud Build based signatures, this is a PEM encoded public\nkey. To verify the Cloud Build signature, place the contents of\nthis field into a file (public.pem). The signature field is base64-decoded\ninto its binary representation in signature.bin, and the provenance bytes\nfrom `BuildDetails` are base64-decoded into a binary representation in\nsigned.bin. OpenSSL can then verify the signature:\n`openssl sha256 -verify public.pem -signature signature.bin signed.bin`", "type" "string"}, "keyType" {"description" "The type of the key, either stored in `public_key` or referenced in\n`key_id`", "enumDescriptions" ["`KeyType` is not set." "`PGP ASCII Armored` public key." "`PKIX PEM` public key."], "enum" ["KEY_TYPE_UNSPECIFIED" "PGP_ASCII_ARMORED" "PKIX_PEM"], "type" "string"}, "keyId" {"description" "An Id for the key used to sign. This could be either an Id for the key\nstored in `public_key` (such as the Id or fingerprint for a PGP key, or the\nCN for a cert), or a reference to an external key (such as a reference to a\nkey in Cloud Key Management Service).", "type" "string"}}, "type" "object", "id" "BuildSignature"}, "GetPolicyOptions" {"id" "GetPolicyOptions", "properties" {"requestedPolicyVersion" {"description" "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https://cloud.google.com/iam/help/conditions/resource-policies).", "type" "integer", "format" "int32"}}, "type" "object", "description" "Encapsulates settings provided to GetIamPolicy."}, "Layer" {"properties" {"arguments" {"description" "The recovered arguments to the Dockerfile directive.", "type" "string"}, "directive" {"enum" ["DIRECTIVE_UNSPECIFIED" "MAINTAINER" "RUN" "CMD" "LABEL" "EXPOSE" "ENV" "ADD" "COPY" "ENTRYPOINT" "VOLUME" "USER" "WORKDIR" "ARG" "ONBUILD" "STOPSIGNAL" "HEALTHCHECK" "SHELL"], "type" "string", "enumDescriptions" ["Default value for unsupported/missing directive" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/reference/builder/#copy" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/"], "description" "The recovered Dockerfile directive used to construct this layer."}}, "id" "Layer", "type" "object", "description" "Layer holds metadata specific to a layer of a Docker image."}, "SeverityCount" {"type" "object", "description" "The number of occurrences created for a specific severity.", "properties" {"count" {"format" "int64", "type" "string", "description" "The number of occurrences with the severity."}, "severity" {"type" "string", "enum" ["SEVERITY_UNSPECIFIED" "MINIMAL" "LOW" "MEDIUM" "HIGH" "CRITICAL"], "enumDescriptions" ["Unknown Impact" "Minimal Impact" "Low Impact" "Medium Impact" "High Impact" "Critical Impact"], "description" "The severity of the occurrences."}}, "id" "SeverityCount"}, "Fingerprint" {"properties" {"v1Name" {"type" "string", "description" "The layer-id of the final layer in the Docker image's v1\nrepresentation.\nThis field can be used as a filter in list requests."}, "v2Name" {"description" "Output only. The name of the image's v2 blobs computed via:\n  [bottom] := v2_blobbottom := sha256(v2_blob[N] + \" \" + v2_name[N+1])\nOnly the name of the final blob is kept.\nThis field can be used as a filter in list requests.", "type" "string"}, "v2Blob" {"description" "The ordered list of v2 blobs that represent a given image.", "items" {"type" "string"}, "type" "array"}}, "description" "A set of properties that uniquely identify a given Docker image.", "type" "object", "id" "Fingerprint"}, "GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContext" {"id" "GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContext", "description" "A CloudRepoSourceContext denotes a particular revision in a Google Cloud\nSource Repo.", "type" "object", "properties" {"aliasContext" {"$ref" "GoogleDevtoolsContaineranalysisV1alpha1AliasContext", "description" "An alias, which may be a branch or tag."}, "repoId" {"description" "The ID of the repo.", "$ref" "GoogleDevtoolsContaineranalysisV1alpha1RepoId"}, "revisionId" {"description" "A revision ID.", "type" "string"}}}, "Deployable" {"type" "object", "properties" {"resourceUri" {"items" {"type" "string"}, "type" "array", "description" "Resource URI for the artifact being deployed."}}, "id" "Deployable", "description" "An artifact that can be deployed in some runtime."}, "GoogleDevtoolsContaineranalysisV1alpha1GerritSourceContext" {"id" "GoogleDevtoolsContaineranalysisV1alpha1GerritSourceContext", "properties" {"gerritProject" {"type" "string", "description" "The full project name within the host. Projects may be nested, so\n\"project/subproject\" is a valid project name. The \"repo name\" is\nthe hostURI/project."}, "hostUri" {"description" "The URI of a running Gerrit instance.", "type" "string"}, "aliasContext" {"description" "An alias, which may be a branch or tag.", "$ref" "GoogleDevtoolsContaineranalysisV1alpha1AliasContext"}, "revisionId" {"type" "string", "description" "A revision (commit) ID."}}, "description" "A SourceContext referring to a Gerrit project.", "type" "object"}, "Discovery" {"type" "object", "description" "A note that indicates a type of analysis a provider would perform. This note\nexists in a provider's project. A `Discovery` occurrence is created in a\nconsumer's project at the start of analysis. The occurrence's operation will\nindicate the status of the analysis. Absence of an occurrence linked to this\nnote for a resource indicates that analysis hasn't started.", "properties" {"analysisKind" {"type" "string", "enum" ["KIND_UNSPECIFIED" "PACKAGE_VULNERABILITY" "BUILD_DETAILS" "IMAGE_BASIS" "PACKAGE_MANAGER" "DEPLOYABLE" "DISCOVERY" "ATTESTATION_AUTHORITY" "UPGRADE"], "enumDescriptions" ["Unknown" "The note and occurrence represent a package vulnerability." "The note and occurrence assert build provenance." "This represents an image basis relationship." "This represents a package installed via a package manager." "The note and occurrence track deployment events." "The note and occurrence track the initial discovery status of a resource." "This represents a logical \"role\" that can attest to artifacts." "This represents an available software upgrade."], "description" "The kind of analysis that is handled by this discovery."}}, "id" "Discovery"}, "TestIamPermissionsResponse" {"id" "TestIamPermissionsResponse", "type" "object", "properties" {"permissions" {"items" {"type" "string"}, "description" "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.", "type" "array"}}, "description" "Response message for `TestIamPermissions` method."}, "PgpSignedAttestation" {"properties" {"signature" {"type" "string", "description" "The raw content of the signature, as output by GNU Privacy Guard (GPG) or\nequivalent.  Since this message only supports attached signatures, the\npayload that was signed must be attached. While the signature format\nsupported is dependent on the verification implementation, currently only\nASCII-armored (`--armor` to gpg), non-clearsigned (`--sign` rather than\n`--clearsign` to gpg) are supported. Concretely, `gpg --sign --armor\n--output=signature.gpg payload.json` will create the signature content\nexpected in this field in `signature.gpg` for the `payload.json`\nattestation payload."}, "pgpKeyId" {"description" "The cryptographic fingerprint of the key used to generate the signature,\nas output by, e.g. `gpg --list-keys`. This should be the version 4, full\n160-bit fingerprint, expressed as a 40 character hexadecimal string. See\nhttps://tools.ietf.org/html/rfc4880#section-12.2 for details.\nImplementations may choose to acknowledge \"LONG\", \"SHORT\", or other\nabbreviated key IDs, but only the full fingerprint is guaranteed to work.\nIn gpg, the full fingerprint can be retrieved from the `fpr` field\nreturned when calling --list-keys with --with-colons.  For example:\n```\ngpg --with-colons --with-fingerprint --force-v4-certs \\\n    --list-keys attester@example.com\ntru::1:1513631572:0:3:1:5\npub:...<SNIP>...\nfpr:::::::::24FF6481B76AC91E66A00AC657A93A81EF3AE6FB:\n```\nAbove, the fingerprint is `24FF6481B76AC91E66A00AC657A93A81EF3AE6FB`.", "type" "string"}, "contentType" {"enumDescriptions" ["`ContentType` is not set." "Atomic format attestation signature. See\nhttps://github.com/containers/image/blob/8a5d2f82a6e3263290c8e0276c3e0f64e77723e7/docs/atomic-signature.md\nThe payload extracted from `signature` is a JSON blob conforming to the\nlinked schema."], "enum" ["CONTENT_TYPE_UNSPECIFIED" "SIMPLE_SIGNING_JSON"], "description" "Type (for example schema) of the attestation payload that was signed.\nThe verifier must ensure that the provided type is one that the verifier\nsupports, and that the attestation payload is a valid instantiation of that\ntype (for example by validating a JSON schema).", "type" "string"}}, "description" "An attestation wrapper with a PGP-compatible signature.\nThis message only supports `ATTACHED` signatures, where the payload that is\nsigned is included alongside the signature itself in the same file.", "id" "PgpSignedAttestation", "type" "object"}, "SetIamPolicyRequest" {"properties" {"policy" {"$ref" "Policy", "description" "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them."}}, "type" "object", "description" "Request message for `SetIamPolicy` method.", "id" "SetIamPolicyRequest"}, "GoogleDevtoolsContaineranalysisV1alpha1SourceContext" {"type" "object", "id" "GoogleDevtoolsContaineranalysisV1alpha1SourceContext", "properties" {"labels" {"additionalProperties" {"type" "string"}, "description" "Labels with user defined metadata.", "type" "object"}, "cloudRepo" {"description" "A SourceContext referring to a revision in a Google Cloud Source Repo.", "$ref" "GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContext"}, "gerrit" {"description" "A SourceContext referring to a Gerrit project.", "$ref" "GoogleDevtoolsContaineranalysisV1alpha1GerritSourceContext"}, "git" {"description" "A SourceContext referring to any third party Git repo (e.g., GitHub).", "$ref" "GoogleDevtoolsContaineranalysisV1alpha1GitSourceContext"}}, "description" "A SourceContext is a reference to a tree of files. A SourceContext together\nwith a path point to a unique revision of a single file or directory."}, "Command" {"description" "Command describes a step performed as part of the build pipeline.", "type" "object", "id" "Command", "properties" {"id" {"description" "Optional unique identifier for this Command, used in wait_for to reference\nthis Command as a dependency.", "type" "string"}, "waitFor" {"description" "The ID(s) of the Command(s) that this Command depends on.", "type" "array", "items" {"type" "string"}}, "env" {"type" "array", "items" {"type" "string"}, "description" "Environment variables set before running this Command."}, "dir" {"description" "Working directory (relative to project source root) used when running\nthis Command.", "type" "string"}, "args" {"items" {"type" "string"}, "type" "array", "description" "Command-line arguments used when executing this Command."}, "name" {"description" "Name of the command, as presented on the command line, or if the command is\npackaged as a Docker container, as presented to `docker pull`.", "type" "string"}}}, "Occurrence" {"description" "`Occurrence` includes information about analysis occurrences for an image.", "id" "Occurrence", "properties" {"buildDetails" {"$ref" "BuildDetails", "description" "Build details for a verifiable build."}, "vulnerabilityDetails" {"description" "Details of a security vulnerability note.", "$ref" "VulnerabilityDetails"}, "resource" {"description" "\nThe resource for which the `Occurrence` applies.", "$ref" "Resource"}, "resourceUrl" {"description" "The unique URL of the image or the container for which the `Occurrence`\napplies. For example, https://gcr.io/project/image@sha256:foo This field\ncan be used as a filter in list requests.", "type" "string"}, "noteName" {"type" "string", "description" "An analysis note associated with this image, in the form\n\"providers/{provider_id}/notes/{NOTE_ID}\"\nThis field can be used as a filter in list requests."}, "installation" {"$ref" "Installation", "description" "Describes the installation of a package on the linked resource."}, "attestation" {"$ref" "Attestation", "description" "Describes an attestation of an artifact."}, "derivedImage" {"description" "Describes how this resource derives from the basis\nin the associated note.", "$ref" "Derived"}, "upgrade" {"$ref" "UpgradeOccurrence", "description" "Describes an upgrade."}, "name" {"description" "Output only. The name of the `Occurrence` in the form\n\"projects/{project_id}/occurrences/{OCCURRENCE_ID}\"", "type" "string"}, "createTime" {"description" "Output only. The time this `Occurrence` was created.", "type" "string", "format" "google-datetime"}, "deployment" {"$ref" "Deployment", "description" "Describes the deployment of an artifact on a runtime."}, "discovered" {"description" "Describes the initial scan status for this resource.", "$ref" "Discovered"}, "updateTime" {"description" "Output only. The time this `Occurrence` was last updated.", "format" "google-datetime", "type" "string"}, "kind" {"enumDescriptions" ["Unknown" "The note and occurrence represent a package vulnerability." "The note and occurrence assert build provenance." "This represents an image basis relationship." "This represents a package installed via a package manager." "The note and occurrence track deployment events." "The note and occurrence track the initial discovery status of a resource." "This represents a logical \"role\" that can attest to artifacts." "This represents an available software upgrade."], "type" "string", "description" "Output only. This explicitly denotes which of the `Occurrence` details are\nspecified. This field can be used as a filter in list requests.", "enum" ["KIND_UNSPECIFIED" "PACKAGE_VULNERABILITY" "BUILD_DETAILS" "IMAGE_BASIS" "PACKAGE_MANAGER" "DEPLOYABLE" "DISCOVERY" "ATTESTATION_AUTHORITY" "UPGRADE"]}, "remediation" {"description" "A description of actions that can be taken to remedy the `Note`", "type" "string"}}, "type" "object"}, "Discovered" {"properties" {"operation" {"description" "Output only. An operation that indicates the status of the current scan.\nThis field is deprecated, do not use.", "$ref" "Operation"}, "continuousAnalysis" {"enum" ["CONTINUOUS_ANALYSIS_UNSPECIFIED" "ACTIVE" "INACTIVE"], "type" "string", "enumDescriptions" ["Unknown" "The resource is continuously analyzed." "The resource is ignored for continuous analysis."], "description" "Whether the resource is continuously analyzed."}, "cpe" {"description" "The CPE of the resource being scanned.", "type" "string"}, "analysisStatusError" {"description" "When an error is encountered this will contain a LocalizedMessage under\ndetails to show to the user. The LocalizedMessage output only and\npopulated by the API.", "$ref" "Status"}, "analysisStatus" {"description" "The status of discovery for the resource.", "enumDescriptions" ["Unknown" "Resource is known but no action has been taken yet." "Resource is being analyzed." "Analysis has finished successfully." "Analysis has finished unsuccessfully, the analysis itself is in a bad\nstate." "The resource is known not to be supported."], "type" "string", "enum" ["ANALYSIS_STATUS_UNSPECIFIED" "PENDING" "SCANNING" "FINISHED_SUCCESS" "FINISHED_FAILED" "FINISHED_UNSUPPORTED"]}}, "id" "Discovered", "description" "Provides information about the scan status of a discovered resource.", "type" "object"}, "AttestationAuthority" {"type" "object", "properties" {"hint" {"$ref" "AttestationAuthorityHint"}}, "description" "Note kind that represents a logical attestation \"role\" or \"authority\".  For\nexample, an organization might have one `AttestationAuthority` for \"QA\" and\none for \"build\".  This Note is intended to act strictly as a grouping\nmechanism for the attached Occurrences (Attestations).  This grouping\nmechanism also provides a security boundary, since IAM ACLs gate the ability\nfor a principle to attach an Occurrence to a given Note.  It also provides a\nsingle point of lookup to find all attached Attestation Occurrences, even if\nthey don't all live in the same project.", "id" "AttestationAuthority"}, "GetVulnzOccurrencesSummaryResponse" {"description" "A summary of how many vulnz occurrences there are per severity type.\ncounts by groups, or if we should have different summary messages\nlike this.", "properties" {"counts" {"type" "array", "items" {"$ref" "SeverityCount"}, "description" "A map of how many occurrences were found for each severity."}}, "type" "object", "id" "GetVulnzOccurrencesSummaryResponse"}, "BuildType" {"description" "Note holding the version of the provider's builder and the signature of\nthe provenance message in linked BuildDetails.", "id" "BuildType", "properties" {"signature" {"$ref" "BuildSignature", "description" "Signature of the build in Occurrences pointing to the Note containing this\n`BuilderDetails`."}, "builderVersion" {"type" "string", "description" "Version of the builder which produced this Note."}}, "type" "object"}, "StorageSource" {"description" "StorageSource describes the location of the source in an archive file in\nGoogle Cloud Storage.", "properties" {"bucket" {"type" "string", "description" "Google Cloud Storage bucket containing source (see [Bucket Name\nRequirements]\n(https://cloud.google.com/storage/docs/bucket-naming#requirements))."}, "object" {"description" "Google Cloud Storage object containing source.", "type" "string"}, "generation" {"type" "string", "description" "Google Cloud Storage generation for the object.", "format" "int64"}}, "type" "object", "id" "StorageSource"}, "GetIamPolicyRequest" {"type" "object", "id" "GetIamPolicyRequest", "description" "Request message for `GetIamPolicy` method.", "properties" {"options" {"description" "OPTIONAL: A `GetPolicyOptions` object for specifying options to\n`GetIamPolicy`.", "$ref" "GetPolicyOptions"}}}, "Derived" {"id" "Derived", "properties" {"distance" {"type" "integer", "format" "uint32", "description" "Output only. The number of layers by which this image differs from the\nassociated image basis."}, "layerInfo" {"type" "array", "description" "This contains layer-specific metadata, if populated it has length\n\"distance\" and is ordered with [distance] being the layer immediately\nfollowing the base image and [1] being the final layer.", "items" {"$ref" "Layer"}}, "baseResourceUrl" {"type" "string", "description" "Output only. This contains the base image URL for the derived image\noccurrence."}, "fingerprint" {"$ref" "Fingerprint", "description" "The fingerprint of the derived image."}}, "description" "Derived describes the derived image portion (Occurrence) of the\nDockerImage relationship.  This image would be produced from a Dockerfile\nwith FROM <DockerImage.Basis in attached Note>.", "type" "object"}, "UpgradeNote" {"id" "UpgradeNote", "type" "object", "description" "An Upgrade Note represents a potential upgrade of a package to a given\nversion. For each package version combination (i.e. bash 4.0, bash 4.1,\nbash 4.1.2), there will be a Upgrade Note.", "properties" {"version" {"$ref" "Version", "description" "Required - The version of the package in machine + human readable form."}, "distributions" {"items" {"$ref" "UpgradeDistribution"}, "description" "Metadata about the upgrade for each specific operating system.", "type" "array"}, "package" {"type" "string", "description" "Required - The package this Upgrade is for."}}}, "ListOccurrencesResponse" {"description" "Response including listed active occurrences.", "id" "ListOccurrencesResponse", "properties" {"nextPageToken" {"description" "The next pagination token in the list response. It should be used as\n`page_token` for the following request. An empty value means no more\nresults.", "type" "string"}, "occurrences" {"items" {"$ref" "Occurrence"}, "type" "array", "description" "The occurrences requested."}}, "type" "object"}, "GoogleDevtoolsContaineranalysisV1alpha1AliasContext" {"type" "object", "description" "An alias to a repo revision.", "properties" {"kind" {"enumDescriptions" ["Unknown." "Git tag." "Git branch." "Used to specify non-standard aliases. For example, if a Git repo has a\nref named \"refs/foo/bar\"."], "type" "string", "description" "The alias kind.", "enum" ["KIND_UNSPECIFIED" "FIXED" "MOVABLE" "OTHER"]}, "name" {"description" "The alias name.", "type" "string"}}, "id" "GoogleDevtoolsContaineranalysisV1alpha1AliasContext"}, "Policy" {"type" "object", "properties" {"bindings" {"type" "array", "items" {"$ref" "Binding"}, "description" "Associates a list of `members` to a `role`. Optionally, may specify a\n`condition` that determines how and when the `bindings` are applied. Each\nof the `bindings` must contain at least one member."}, "version" {"type" "integer", "description" "Specifies the format of the policy.\n\nValid values are `0`, `1`, and `3`. Requests that specify an invalid value\nare rejected.\n\nAny operation that affects conditional role bindings must specify version\n`3`. This requirement applies to the following operations:\n\n* Getting a policy that includes a conditional role binding\n* Adding a conditional role binding to a policy\n* Changing a conditional role binding in a policy\n* Removing any role binding, with or without a condition, from a policy\n  that includes conditions\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.\n\nIf a policy does not include any conditions, operations on that policy may\nspecify any valid version or leave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).", "format" "int32"}, "etag" {"type" "string", "format" "byte", "description" "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost."}}, "description" "An Identity and Access Management (IAM) policy, which specifies access\ncontrols for Google Cloud resources.\n\n\nA `Policy` is a collection of `bindings`. A `binding` binds one or more\n`members` to a single `role`. Members can be user accounts, service accounts,\nGoogle groups, and domains (such as G Suite). A `role` is a named list of\npermissions; each `role` can be an IAM predefined role or a user-created\ncustom role.\n\nFor some types of Google Cloud resources, a `binding` can also specify a\n`condition`, which is a logical expression that allows access to a resource\nonly if the expression evaluates to `true`. A condition can add constraints\nbased on attributes of the request, the resource, or both. To learn which\nresources support conditions in their IAM policies, see the\n[IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).\n\n**JSON example:**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles/resourcemanager.organizationAdmin\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles/resourcemanager.organizationViewer\",\n          \"members\": [\n            \"user:eve@example.com\"\n          ],\n          \"condition\": {\n            \"title\": \"expirable access\",\n            \"description\": \"Does not grant access after Sep 2020\",\n            \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\",\n          }\n        }\n      ],\n      \"etag\": \"BwWWja0YfJA=\",\n      \"version\": 3\n    }\n\n**YAML example:**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-project-id@appspot.gserviceaccount.com\n      role: roles/resourcemanager.organizationAdmin\n    - members:\n      - user:eve@example.com\n      role: roles/resourcemanager.organizationViewer\n      condition:\n        title: expirable access\n        description: Does not grant access after Sep 2020\n        expression: request.time < timestamp('2020-10-01T00:00:00.000Z')\n    - etag: BwWWja0YfJA=\n    - version: 3\n\nFor a description of IAM and its features, see the\n[IAM documentation](https://cloud.google.com/iam/docs/).", "id" "Policy"}, "ListScanConfigsResponse" {"id" "ListScanConfigsResponse", "description" "A list of scan configs for the project.", "properties" {"nextPageToken" {"description" "A page token to pass in order to get more scan configs.", "type" "string"}, "scanConfigs" {"description" "The set of scan configs.", "type" "array", "items" {"$ref" "ScanConfig"}}}, "type" "object"}, "Resource" {"id" "Resource", "description" "\nResource is an entity that can have metadata. E.g., a Docker image.", "properties" {"contentHash" {"$ref" "Hash", "description" "The hash of the resource content. E.g., the Docker digest."}, "uri" {"type" "string", "description" "The unique URI of the resource. E.g.,\n\"https://gcr.io/project/image@sha256:foo\" for a Docker image."}, "name" {"type" "string", "description" "The name of the resource. E.g., the name of a Docker image - \"Debian\"."}}, "type" "object"}, "Version" {"properties" {"name" {"description" "The main part of the version name.", "type" "string"}, "kind" {"enumDescriptions" ["A standard package version, defined by the other fields." "A special version representing negative infinity,\nother fields are ignored." "A special version representing positive infinity,\nother fields are ignored."], "description" "Distinguish between sentinel MIN/MAX versions and normal versions.\nIf kind is not NORMAL, then the other fields are ignored.", "enum" ["NORMAL" "MINIMUM" "MAXIMUM"], "type" "string"}, "revision" {"type" "string", "description" "The iteration of the package build from the above version."}, "epoch" {"type" "integer", "description" "Used to correct mistakes in the version numbering scheme.", "format" "int32"}}, "description" "Version contains structured information about the version of the package.\nFor a discussion of this in Debian/Ubuntu:\nhttp://serverfault.com/questions/604541/debian-packages-version-convention\nFor a discussion of this in Redhat/Fedora/Centos:\nhttp://blog.jasonantman.com/2014/07/how-yum-and-rpm-compare-versions/", "id" "Version", "type" "object"}, "BuildProvenance" {"type" "object", "description" "Provenance of a build. Contains all information needed to verify the full\ndetails about the build from source to completion.", "id" "BuildProvenance", "properties" {"sourceProvenance" {"description" "Details of the Source input to the build.", "$ref" "Source"}, "finishTime" {"type" "string", "format" "google-datetime", "description" "Time at which execution of the build was finished."}, "builtArtifacts" {"description" "Output of the build.", "type" "array", "items" {"$ref" "Artifact"}}, "id" {"description" "Unique identifier of the build.", "type" "string"}, "builderVersion" {"description" "Version string of the builder at the time this build was executed.", "type" "string"}, "creator" {"type" "string", "description" "E-mail address of the user who initiated this build. Note that this was the\nuser's e-mail address at the time the build was initiated; this address may\nnot represent the same end-user for all time."}, "createTime" {"format" "google-datetime", "description" "Time at which the build was created.", "type" "string"}, "startTime" {"type" "string", "format" "google-datetime", "description" "Time at which execution of the build was started."}, "commands" {"type" "array", "description" "Commands requested by the build.", "items" {"$ref" "Command"}}, "buildOptions" {"description" "Special options applied to this build. This is a catch-all field where\nbuild providers can enter any desired additional details.", "type" "object", "additionalProperties" {"type" "string"}}, "logsBucket" {"type" "string", "description" "Google Cloud Storage bucket where logs were written."}, "projectId" {"type" "string", "description" "ID of the project."}, "triggerId" {"description" "Trigger identifier if the build was triggered automatically; empty if not.", "type" "string"}}}, "UpgradeDistribution" {"description" "The Upgrade Distribution represents metadata about the Upgrade for each\noperating system (CPE). Some distributions have additional metadata around\nupdates, classifying them into various categories and severities.", "type" "object", "id" "UpgradeDistribution", "properties" {"classification" {"type" "string", "description" "The operating system classification of this Upgrade, as specified by the\nupstream operating system upgrade feed."}, "severity" {"description" "The severity as specified by the upstream operating system.", "type" "string"}, "cpeUri" {"description" "Required - The specific operating system this metadata applies to. See\nhttps://cpe.mitre.org/specification/.", "type" "string"}, "cve" {"items" {"type" "string"}, "description" "The cve that would be resolved by this upgrade.", "type" "array"}}}, "ScanConfig" {"type" "object", "id" "ScanConfig", "description" "Indicates various scans and whether they are turned on or off.", "properties" {"createTime" {"description" "Output only. The time this scan config was created.", "type" "string", "format" "google-datetime"}, "name" {"description" "Output only. The name of the ScanConfig in the form\n“projects/{project_id}/scanConfigs/{scan_config_id}\".", "type" "string"}, "enabled" {"type" "boolean", "description" "Indicates whether the Scan is enabled."}, "updateTime" {"type" "string", "format" "google-datetime", "description" "Output only. The time this scan config was last updated."}, "description" {"description" "Output only. A human-readable description of what the `ScanConfig` does.", "type" "string"}}}, "UpgradeOccurrence" {"type" "object", "properties" {"parsedVersion" {"$ref" "Version", "description" "Required - The version of the package in a machine + human readable form."}, "package" {"type" "string", "description" "Required - The package this Upgrade is for."}, "distribution" {"description" "Metadata about the upgrade for available for the specific operating system\nfor the resource_url. This allows efficient filtering, as well as\nmaking it easier to use the occurrence.", "$ref" "UpgradeDistribution"}}, "description" "An Upgrade Occurrence represents that a specific resource_url could install a\nspecific upgrade. This presence is supplied via local sources (i.e. it is\npresent in the mirror and the running system has noticed its availability).", "id" "UpgradeOccurrence"}, "AttestationAuthorityHint" {"description" "This submessage provides human-readable hints about the purpose of the\nAttestationAuthority.  Because the name of a Note acts as its resource\nreference, it is important to disambiguate the canonical name of the Note\n(which might be a UUID for security purposes) from \"readable\" names more\nsuitable for debug output.  Note that these hints should NOT be used to\nlook up AttestationAuthorities in security sensitive contexts, such as when\nlooking up Attestations to verify.", "type" "object", "id" "AttestationAuthorityHint", "properties" {"humanReadableName" {"type" "string", "description" "The human readable name of this Attestation Authority, for example \"qa\"."}}}, "VulnerabilityType" {"type" "object", "properties" {"severity" {"enumDescriptions" ["Unknown Impact" "Minimal Impact" "Low Impact" "Medium Impact" "High Impact" "Critical Impact"], "description" "Note provider assigned impact of the vulnerability", "type" "string", "enum" ["SEVERITY_UNSPECIFIED" "MINIMAL" "LOW" "MEDIUM" "HIGH" "CRITICAL"]}, "cvssScore" {"type" "number", "description" "The CVSS score for this Vulnerability.", "format" "float"}, "details" {"description" "All information about the package to specifically identify this\nvulnerability. One entry per (version range and cpe_uri) the\npackage vulnerability has manifested in.", "items" {"$ref" "Detail"}, "type" "array"}}, "description" "VulnerabilityType provides metadata about a security vulnerability.", "id" "VulnerabilityType"}, "CreateOperationRequest" {"id" "CreateOperationRequest", "properties" {"operation" {"$ref" "Operation", "description" "The operation to create."}, "operationId" {"description" "The ID to use for this operation.", "type" "string"}}, "description" "Request for creating an operation", "type" "object"}}}