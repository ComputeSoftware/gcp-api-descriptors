#:compute.gcp.descriptor{:name "containeranalysis", :title "Container Analysis API", :api-version "v1alpha1", :revision "20200327", :endpoint #:compute.gcp.descriptor{:url "https://containeranalysis.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"location" "query", "description" "JSONP", "type" "string"}, "uploadType" {"type" "string", "location" "query", "description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."}, "key" {"location" "query", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "type" "string"}, "access_token" {"description" "OAuth access token.", "type" "string", "location" "query"}, "oauth_token" {"description" "OAuth 2.0 token for the current user.", "type" "string", "location" "query"}, "prettyPrint" {"type" "boolean", "default" "true", "location" "query", "description" "Returns response with indentations and line breaks."}, "alt" {"enum" ["json" "media" "proto"], "type" "string", "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "location" "query", "description" "Data format for response.", "default" "json"}, "$.xgafv" {"type" "string", "enumDescriptions" ["v1 error format" "v2 error format"], "location" "query", "enum" ["1" "2"], "description" "V1 error format."}, "fields" {"type" "string", "location" "query", "description" "Selector specifying which fields to include in a partial response."}, "upload_protocol" {"description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "type" "string", "location" "query"}, "quotaUser" {"type" "string", "location" "query", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."}}, :op->info {}, :schemas {"TestIamPermissionsRequest" {"id" "TestIamPermissionsRequest", "description" "Request message for `TestIamPermissions` method.", "type" "object", "properties" {"permissions" {"description" "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).", "type" "array", "items" {"type" "string"}}}}, "ListNotesResponse" {"description" "Response including listed notes.", "type" "object", "properties" {"notes" {"description" "The occurrences requested", "type" "array", "items" {"$ref" "Note"}}, "nextPageToken" {"description" "The next pagination token in the list response. It should be used as\npage_token for the following request. An empty value means no more result.", "type" "string"}}, "id" "ListNotesResponse"}, "GoogleDevtoolsContaineranalysisV1alpha1GitSourceContext" {"type" "object", "properties" {"revisionId" {"description" "Required. Git commit hash.", "type" "string"}, "url" {"description" "Git repository URL.", "type" "string"}}, "id" "GoogleDevtoolsContaineranalysisV1alpha1GitSourceContext", "description" "A GitSourceContext denotes a particular revision in a third party Git\nrepository (e.g., GitHub)."}, "Empty" {"id" "Empty", "description" "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.", "type" "object", "properties" {}}, "RepoSource" {"description" "RepoSource describes the location of the source in a Google Cloud Source\nRepository.", "type" "object", "properties" {"tagName" {"type" "string", "description" "Name of the tag to build."}, "commitSha" {"description" "Explicit commit SHA to build.", "type" "string"}, "projectId" {"description" "ID of the project that owns the repo.", "type" "string"}, "repoName" {"type" "string", "description" "Name of the repo."}, "branchName" {"description" "Name of the branch to build.", "type" "string"}}, "id" "RepoSource"}, "Expr" {"type" "object", "properties" {"expression" {"description" "Textual representation of an expression in Common Expression Language\nsyntax.", "type" "string"}, "title" {"description" "Optional. Title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.", "type" "string"}, "location" {"description" "Optional. String indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file.", "type" "string"}, "description" {"description" "Optional. Description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.", "type" "string"}}, "id" "Expr", "description" "Represents a textual expression in the Common Expression Language (CEL)\nsyntax. CEL is a C-like expression language. The syntax and semantics of CEL\nare documented at https://github.com/google/cel-spec.\n\nExample (Comparison):\n\n    title: \"Summary size limit\"\n    description: \"Determines if a summary is less than 100 chars\"\n    expression: \"document.summary.size() < 100\"\n\nExample (Equality):\n\n    title: \"Requestor is owner\"\n    description: \"Determines if requestor is the document owner\"\n    expression: \"document.owner == request.auth.claims.email\"\n\nExample (Logic):\n\n    title: \"Public documents\"\n    description: \"Determine whether the document should be publicly visible\"\n    expression: \"document.type != 'private' && document.type != 'internal'\"\n\nExample (Data Manipulation):\n\n    title: \"Notification string\"\n    description: \"Create a notification string with a timestamp.\"\n    expression: \"'New message received at ' + string(document.create_time)\"\n\nThe exact variables and functions that may be referenced within an expression\nare determined by the service that evaluates it. See the service\ndocumentation for additional information."}, "VulnerabilityLocation" {"description" "The location of the vulnerability", "type" "object", "properties" {"cpeUri" {"type" "string", "description" "The cpe_uri in [cpe format] (https://cpe.mitre.org/specification/)\nformat. Examples include distro or storage location for vulnerable jar.\nThis field can be used as a filter in list requests."}, "package" {"description" "The package being described.", "type" "string"}, "version" {"$ref" "Version", "description" "The version of the package being described. This field can be used as a\nfilter in list requests."}}, "id" "VulnerabilityLocation"}, "GoogleDevtoolsContaineranalysisV1alpha1OperationMetadata" {"description" "Metadata for all operations used and required for all operations\nthat created by Container Analysis Providers", "type" "object", "properties" {"createTime" {"description" "Output only. The time this operation was created.", "format" "google-datetime", "type" "string"}, "endTime" {"type" "string", "description" "Output only. The time that this operation was marked completed or failed.", "format" "google-datetime"}}, "id" "GoogleDevtoolsContaineranalysisV1alpha1OperationMetadata"}, "GoogleDevtoolsContaineranalysisV1alpha1ProjectRepoId" {"type" "object", "properties" {"projectId" {"description" "The ID of the project.", "type" "string"}, "repoName" {"description" "The name of the repo. Leave empty for the default repo.", "type" "string"}}, "id" "GoogleDevtoolsContaineranalysisV1alpha1ProjectRepoId", "description" "Selects a repo using a Google Cloud Platform project ID (e.g.,\nwinged-cargo-31) and a repo name within that project."}, "VulnerabilityDetails" {"type" "object", "properties" {"type" {"description" "The type of package; whether native or non native(ruby gems,\nnode.js packages etc)", "type" "string"}, "effectiveSeverity" {"type" "string", "enumDescriptions" ["Unknown Impact" "Minimal Impact" "Low Impact" "Medium Impact" "High Impact" "Critical Impact"], "enum" ["SEVERITY_UNSPECIFIED" "MINIMAL" "LOW" "MEDIUM" "HIGH" "CRITICAL"], "description" "The distro assigned severity for this vulnerability when that is\navailable and note provider assigned severity when distro has not yet\nassigned a severity for this vulnerability."}, "packageIssue" {"description" "The set of affected locations and their fixes (if available) within\nthe associated resource.", "type" "array", "items" {"$ref" "PackageIssue"}}, "severity" {"type" "string", "enumDescriptions" ["Unknown Impact" "Minimal Impact" "Low Impact" "Medium Impact" "High Impact" "Critical Impact"], "enum" ["SEVERITY_UNSPECIFIED" "MINIMAL" "LOW" "MEDIUM" "HIGH" "CRITICAL"], "description" "Output only. The note provider assigned Severity of the vulnerability."}, "cvssScore" {"description" "Output only. The CVSS score of this vulnerability. CVSS score is on a\nscale of 0-10 where 0 indicates low severity and 10 indicates high\nseverity.", "format" "float", "type" "number"}}, "id" "VulnerabilityDetails", "description" "Used by Occurrence to point to where the vulnerability exists and how\nto fix it."}, "ListNoteOccurrencesResponse" {"description" "Response including listed occurrences for a note.", "type" "object", "properties" {"nextPageToken" {"description" "Token to receive the next page of notes.", "type" "string"}, "occurrences" {"description" "The occurrences attached to the specified note.", "type" "array", "items" {"$ref" "Occurrence"}}}, "id" "ListNoteOccurrencesResponse"}, "Basis" {"type" "object", "properties" {"fingerprint" {"$ref" "Fingerprint", "description" "The fingerprint of the base image."}, "resourceUrl" {"type" "string", "description" "The resource_url for the resource representing the basis of\nassociated occurrence images."}}, "id" "Basis", "description" "Basis describes the base image portion (Note) of the DockerImage\nrelationship.  Linked occurrences are derived from this or an\nequivalent image via:\n  FROM <Basis.resource_url>\nOr an equivalent reference, e.g. a tag of the resource_url."}, "Deployment" {"description" "The period during which some deployable was active in a runtime.", "type" "object", "properties" {"config" {"type" "string", "description" "Configuration used to create this deployment."}, "userEmail" {"description" "Identity of the user that triggered this deployment.", "type" "string"}, "undeployTime" {"type" "string", "description" "End of the lifetime of this deployment.", "format" "google-datetime"}, "platform" {"enumDescriptions" ["Unknown" "Google Container Engine" "Google App Engine: Flexible Environment" "Custom user-defined platform"], "enum" ["PLATFORM_UNSPECIFIED" "GKE" "FLEX" "CUSTOM"], "description" "Platform hosting this deployment.", "type" "string"}, "deployTime" {"description" "Beginning of the lifetime of this deployment.", "format" "google-datetime", "type" "string"}, "address" {"description" "Address of the runtime element hosting this deployment.", "type" "string"}, "resourceUri" {"type" "array", "items" {"type" "string"}, "description" "Output only. Resource URI for the artifact being deployed taken from the\ndeployable field with the same name."}}, "id" "Deployment"}, "Detail" {"id" "Detail", "description" "Identifies all occurrences of this vulnerability in the package for a\nspecific distro/location\nFor example: glibc in cpe:/o:debian:debian_linux:8 for versions 2.1 - 2.2", "type" "object", "properties" {"packageType" {"description" "The type of package; whether native or non native(ruby gems,\nnode.js packages etc)", "type" "string"}, "package" {"description" "The name of the package where the vulnerability was found.\nThis field can be used as a filter in list requests.", "type" "string"}, "maxAffectedVersion" {"description" "The max version of the package in which the vulnerability exists.", "$ref" "Version"}, "minAffectedVersion" {"$ref" "Version", "description" "The min version of the package in which the vulnerability exists."}, "severityName" {"description" "The severity (eg: distro assigned severity) for this vulnerability.", "type" "string"}, "isObsolete" {"type" "boolean", "description" "Whether this Detail is obsolete. Occurrences are expected not to point to\nobsolete details."}, "fixedLocation" {"$ref" "VulnerabilityLocation", "description" "The fix for this specific package version."}, "cpeUri" {"type" "string", "description" "The cpe_uri in [cpe format] (https://cpe.mitre.org/specification/) in\nwhich the vulnerability manifests.  Examples include distro or storage\nlocation for vulnerable jar.\nThis field can be used as a filter in list requests."}, "description" {"description" "A vendor-specific description of this note.", "type" "string"}}}, "UpdateOperationRequest" {"description" "Request for updating an existing operation", "type" "object", "properties" {"operation" {"$ref" "Operation", "description" "The operation to create."}, "updateMask" {"description" "The fields to update.", "format" "google-fieldmask", "type" "string"}}, "id" "UpdateOperationRequest"}, "RelatedUrl" {"id" "RelatedUrl", "description" "Metadata for any related URL information", "type" "object", "properties" {"url" {"description" "Specific URL to associate with the note", "type" "string"}, "label" {"description" "Label to describe usage of the URL", "type" "string"}}}, "GoogleDevtoolsContaineranalysisV1alpha1RepoId" {"description" "A unique identifier for a Cloud Repo.", "type" "object", "properties" {"uid" {"description" "A server-assigned, globally unique identifier.", "type" "string"}, "projectRepoId" {"description" "A combination of a project ID and a repo name.", "$ref" "GoogleDevtoolsContaineranalysisV1alpha1ProjectRepoId"}}, "id" "GoogleDevtoolsContaineranalysisV1alpha1RepoId"}, "Distribution" {"id" "Distribution", "description" "This represents a particular channel of distribution for a given package.\ne.g. Debian's jessie-backports dpkg mirror", "type" "object", "properties" {"maintainer" {"description" "A freeform string denoting the maintainer of this package.", "type" "string"}, "latestVersion" {"$ref" "Version", "description" "The latest available version of this package in\nthis distribution channel."}, "description" {"type" "string", "description" "The distribution channel-specific description of this package."}, "cpeUri" {"description" "The cpe_uri in [cpe format](https://cpe.mitre.org/specification/)\ndenoting the package manager version distributing a package.", "type" "string"}, "url" {"description" "The distribution channel-specific homepage for this package.", "type" "string"}, "architecture" {"enum" ["ARCHITECTURE_UNSPECIFIED" "X86" "X64"], "description" "The CPU architecture for which packages in this distribution\nchannel were built", "type" "string", "enumDescriptions" ["Unknown architecture" "X86 architecture" "X64 architecture"]}}}, "Package" {"description" "This represents a particular package that is distributed over\nvarious channels.\ne.g. glibc (aka libc6) is distributed by many, at various versions.", "type" "object", "properties" {"name" {"type" "string", "description" "The name of the package."}, "distribution" {"type" "array", "items" {"$ref" "Distribution"}, "description" "The various channels by which a package is distributed."}}, "id" "Package"}, "Source" {"description" "Source describes the location of the source used for the build.", "type" "object", "properties" {"artifactStorageSource" {"$ref" "StorageSource", "description" "If provided, the input binary artifacts for the build came from this\nlocation."}, "additionalContexts" {"description" "If provided, some of the source code used for the build may be found in\nthese locations, in the case where the source repository had multiple\nremotes or submodules. This list will not include the context specified in\nthe context field.", "type" "array", "items" {"$ref" "GoogleDevtoolsContaineranalysisV1alpha1SourceContext"}}, "context" {"$ref" "GoogleDevtoolsContaineranalysisV1alpha1SourceContext", "description" "If provided, the source code used for the build came from this location."}, "repoSource" {"$ref" "RepoSource", "description" "If provided, get source from this location in a Cloud Repo."}, "storageSource" {"$ref" "StorageSource", "description" "If provided, get the source from this location in in Google Cloud\nStorage."}, "fileHashes" {"additionalProperties" {"$ref" "FileHashes"}, "description" "Hash(es) of the build source, which can be used to verify that the original\nsource integrity was maintained in the build.\n\nThe keys to this map are file paths used as build source and the values\ncontain the hash values for those files.\n\nIf the build source came in a single package such as a gzipped tarfile\n(.tar.gz), the FileHash will be for the single path to that file.", "type" "object"}}, "id" "Source"}, "Note" {"id" "Note", "description" "Provides a detailed description of a `Note`.", "type" "object", "properties" {"package" {"$ref" "Package", "description" "A note describing a package hosted by various package managers."}, "longDescription" {"description" "A detailed description of this `Note`.", "type" "string"}, "upgrade" {"description" "A note describing an upgrade.", "$ref" "UpgradeNote"}, "buildType" {"$ref" "BuildType", "description" "Build provenance type for a verifiable build."}, "name" {"description" "The name of the note in the form\n\"projects/{provider_project_id}/notes/{NOTE_ID}\"", "type" "string"}, "expirationTime" {"description" "Time of expiration for this note, null if note does not expire.", "format" "google-datetime", "type" "string"}, "createTime" {"description" "Output only. The time this note was created. This field can be used as a\nfilter in list requests.", "format" "google-datetime", "type" "string"}, "shortDescription" {"type" "string", "description" "A one sentence description of this `Note`."}, "attestationAuthority" {"$ref" "AttestationAuthority", "description" "A note describing an attestation role."}, "vulnerabilityType" {"description" "A package vulnerability type of note.", "$ref" "VulnerabilityType"}, "deployable" {"$ref" "Deployable", "description" "A note describing something that can be deployed."}, "updateTime" {"description" "Output only. The time this note was last updated. This field can be used as\na filter in list requests.", "format" "google-datetime", "type" "string"}, "kind" {"description" "Output only. This explicitly denotes which kind of note is specified. This\nfield can be used as a filter in list requests.", "type" "string", "enumDescriptions" ["Unknown" "The note and occurrence represent a package vulnerability." "The note and occurrence assert build provenance." "This represents an image basis relationship." "This represents a package installed via a package manager." "The note and occurrence track deployment events." "The note and occurrence track the initial discovery status of a resource." "This represents a logical \"role\" that can attest to artifacts." "This represents an available software upgrade."], "enum" ["KIND_UNSPECIFIED" "PACKAGE_VULNERABILITY" "BUILD_DETAILS" "IMAGE_BASIS" "PACKAGE_MANAGER" "DEPLOYABLE" "DISCOVERY" "ATTESTATION_AUTHORITY" "UPGRADE"]}, "relatedUrl" {"description" "URLs associated with this note", "type" "array", "items" {"$ref" "RelatedUrl"}}, "discovery" {"$ref" "Discovery", "description" "A note describing a provider/analysis type."}, "baseImage" {"$ref" "Basis", "description" "A note describing a base image."}}}, "Installation" {"description" "This represents how a particular software package may be installed on\na system.", "type" "object", "properties" {"location" {"description" "All of the places within the filesystem versions of this package\nhave been found.", "type" "array", "items" {"$ref" "Location"}}, "name" {"description" "Output only. The name of the installed package.", "type" "string"}}, "id" "Installation"}, "Binding" {"description" "Associates `members` with a `role`.", "type" "object", "properties" {"members" {"description" "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@example.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n* `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a user that has been recently deleted. For\n   example, `alice@example.com?uid=123456789012345678901`. If the user is\n   recovered, this value reverts to `user:{emailid}` and the recovered user\n   retains the role in the binding.\n\n* `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus\n   unique identifier) representing a service account that has been recently\n   deleted. For example,\n   `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.\n   If the service account is undeleted, this value reverts to\n   `serviceAccount:{emailid}` and the undeleted service account retains the\n   role in the binding.\n\n* `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a Google group that has been recently\n   deleted. For example, `admins@example.com?uid=123456789012345678901`. If\n   the group is recovered, this value reverts to `group:{emailid}` and the\n   recovered group retains the role in the binding.\n\n\n* `domain:{domain}`: The G Suite domain (primary) that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n", "type" "array", "items" {"type" "string"}}, "role" {"type" "string", "description" "Role that is assigned to `members`.\nFor example, `roles/viewer`, `roles/editor`, or `roles/owner`."}, "condition" {"$ref" "Expr", "description" "The condition that is associated with this binding.\nNOTE: An unsatisfied condition will not allow user access via current\nbinding. Different bindings, including their conditions, are examined\nindependently."}}, "id" "Binding"}, "FileHashes" {"description" "Container message for hashes of byte content of files, used in Source\nmessages to verify integrity of source input to the build.", "type" "object", "properties" {"fileHash" {"description" "Collection of file hashes.", "type" "array", "items" {"$ref" "Hash"}}}, "id" "FileHashes"}, "BuildDetails" {"description" "Message encapsulating build provenance details.", "type" "object", "properties" {"provenanceBytes" {"description" "Serialized JSON representation of the provenance, used in generating the\n`BuildSignature` in the corresponding Result. After verifying the\nsignature, `provenance_bytes` can be unmarshalled and compared to the\nprovenance to confirm that it is unchanged. A base64-encoded string\nrepresentation of the provenance bytes is used for the signature in order\nto interoperate with openssl which expects this format for signature\nverification.\n\nThe serialized form is captured both to avoid ambiguity in how the\nprovenance is marshalled to json as well to prevent incompatibilities with\nfuture changes.", "type" "string"}, "provenance" {"$ref" "BuildProvenance", "description" "The actual provenance"}}, "id" "BuildDetails"}, "Location" {"id" "Location", "description" "An occurrence of a particular package installation found within a\nsystem's filesystem.\ne.g. glibc was found in /var/lib/dpkg/status", "type" "object", "properties" {"version" {"$ref" "Version", "description" "The version installed at this location."}, "path" {"description" "The path from which we gathered that this package/version is installed.", "type" "string"}, "cpeUri" {"description" "The cpe_uri in [cpe format](https://cpe.mitre.org/specification/)\ndenoting the package manager version distributing a package.", "type" "string"}}}, "Hash" {"type" "object", "properties" {"type" {"enum" ["NONE" "SHA256"], "description" "The type of hash that was performed.", "type" "string", "enumDescriptions" ["No hash requested." "A sha256 hash."]}, "value" {"type" "string", "description" "The hash value.", "format" "byte"}}, "id" "Hash", "description" "Container message for hash values."}, "Operation" {"description" "This resource represents a long-running operation that is the result of a\nnetwork API call.", "type" "object", "properties" {"done" {"type" "boolean", "description" "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable."}, "response" {"type" "object", "additionalProperties" {"description" "Properties of the object. Contains field @type with type URL.", "type" "any"}, "description" "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`."}, "name" {"description" "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`.", "type" "string"}, "error" {"$ref" "Status", "description" "The error result of the operation in case of failure or cancellation."}, "metadata" {"additionalProperties" {"type" "any", "description" "Properties of the object. Contains field @type with type URL."}, "description" "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.", "type" "object"}}, "id" "Operation"}, "Attestation" {"description" "Occurrence that represents a single \"attestation\".  The authenticity of an\nAttestation can be verified using the attached signature. If the verifier\ntrusts the public key of the signer, then verifying the signature is\nsufficient to establish trust.  In this circumstance, the\nAttestationAuthority to which this Attestation is attached is primarily\nuseful for look-up (how to find this Attestation if you already know the\nAuthority and artifact to be verified) and intent (which authority was this\nattestation intended to sign for).", "type" "object", "properties" {"pgpSignedAttestation" {"$ref" "PgpSignedAttestation"}}, "id" "Attestation"}, "Status" {"description" "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors).", "type" "object", "properties" {"message" {"description" "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.", "type" "string"}, "details" {"description" "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.", "type" "array", "items" {"additionalProperties" {"type" "any", "description" "Properties of the object. Contains field @type with type URL."}, "type" "object"}}, "code" {"description" "The status code, which should be an enum value of google.rpc.Code.", "format" "int32", "type" "integer"}}, "id" "Status"}, "Artifact" {"description" "Artifact describes a build product.", "type" "object", "properties" {"id" {"description" "Artifact ID, if any; for container images, this will be a URL by digest\nlike gcr.io/projectID/imagename@sha256:123456", "type" "string"}, "names" {"description" "Related artifact names. This may be the path to a binary or jar file, or in\nthe case of a container build, the name used to push the container image to\nGoogle Container Registry, as presented to `docker push`. Note that a\nsingle Artifact ID can have multiple names, for example if two tags are\napplied to one image.", "type" "array", "items" {"type" "string"}}, "name" {"description" "Name of the artifact. This may be the path to a binary or jar file, or in\nthe case of a container build, the name used to push the container image to\nGoogle Container Registry, as presented to `docker push`.\n\nThis field is deprecated in favor of the plural `names` field; it continues\nto exist here to allow existing BuildProvenance serialized to json in\ngoogle.devtools.containeranalysis.v1alpha1.BuildDetails.provenance_bytes to\ndeserialize back into proto.", "type" "string"}, "checksum" {"description" "Hash or checksum value of a binary, or Docker Registry 2.0 digest of a\ncontainer.", "type" "string"}}, "id" "Artifact"}, "PackageIssue" {"description" "This message wraps a location affected by a vulnerability and its\nassociated fix (if one is available).", "type" "object", "properties" {"affectedLocation" {"$ref" "VulnerabilityLocation", "description" "The location of the vulnerability."}, "fixedLocation" {"description" "The location of the available fix for vulnerability.", "$ref" "VulnerabilityLocation"}, "severityName" {"type" "string"}}, "id" "PackageIssue"}, "BuildSignature" {"type" "object", "properties" {"keyType" {"enum" ["KEY_TYPE_UNSPECIFIED" "PGP_ASCII_ARMORED" "PKIX_PEM"], "description" "The type of the key, either stored in `public_key` or referenced in\n`key_id`", "type" "string", "enumDescriptions" ["`KeyType` is not set." "`PGP ASCII Armored` public key." "`PKIX PEM` public key."]}, "signature" {"type" "string", "description" "Signature of the related `BuildProvenance`, encoded in a base64 string."}, "publicKey" {"type" "string", "description" "Public key of the builder which can be used to verify that the related\nfindings are valid and unchanged. If `key_type` is empty, this defaults\nto PEM encoded public keys.\n\nThis field may be empty if `key_id` references an external key.\n\nFor Cloud Build based signatures, this is a PEM encoded public\nkey. To verify the Cloud Build signature, place the contents of\nthis field into a file (public.pem). The signature field is base64-decoded\ninto its binary representation in signature.bin, and the provenance bytes\nfrom `BuildDetails` are base64-decoded into a binary representation in\nsigned.bin. OpenSSL can then verify the signature:\n`openssl sha256 -verify public.pem -signature signature.bin signed.bin`"}, "keyId" {"description" "An Id for the key used to sign. This could be either an Id for the key\nstored in `public_key` (such as the Id or fingerprint for a PGP key, or the\nCN for a cert), or a reference to an external key (such as a reference to a\nkey in Cloud Key Management Service).", "type" "string"}}, "id" "BuildSignature", "description" "Message encapsulating the signature of the verified build."}, "GetPolicyOptions" {"description" "Encapsulates settings provided to GetIamPolicy.", "type" "object", "properties" {"requestedPolicyVersion" {"description" "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.", "format" "int32", "type" "integer"}}, "id" "GetPolicyOptions"}, "Layer" {"id" "Layer", "description" "Layer holds metadata specific to a layer of a Docker image.", "type" "object", "properties" {"directive" {"enumDescriptions" ["Default value for unsupported/missing directive" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/reference/builder/#copy" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/" "https://docs.docker.com/engine/reference/builder/"], "enum" ["DIRECTIVE_UNSPECIFIED" "MAINTAINER" "RUN" "CMD" "LABEL" "EXPOSE" "ENV" "ADD" "COPY" "ENTRYPOINT" "VOLUME" "USER" "WORKDIR" "ARG" "ONBUILD" "STOPSIGNAL" "HEALTHCHECK" "SHELL"], "description" "The recovered Dockerfile directive used to construct this layer.", "type" "string"}, "arguments" {"description" "The recovered arguments to the Dockerfile directive.", "type" "string"}}}, "SeverityCount" {"id" "SeverityCount", "description" "The number of occurrences created for a specific severity.", "type" "object", "properties" {"severity" {"type" "string", "enumDescriptions" ["Unknown Impact" "Minimal Impact" "Low Impact" "Medium Impact" "High Impact" "Critical Impact"], "enum" ["SEVERITY_UNSPECIFIED" "MINIMAL" "LOW" "MEDIUM" "HIGH" "CRITICAL"], "description" "The severity of the occurrences."}, "count" {"description" "The number of occurrences with the severity.", "format" "int64", "type" "string"}}}, "Fingerprint" {"type" "object", "properties" {"v1Name" {"description" "The layer-id of the final layer in the Docker image's v1\nrepresentation.\nThis field can be used as a filter in list requests.", "type" "string"}, "v2Name" {"description" "Output only. The name of the image's v2 blobs computed via:\n  [bottom] := v2_blobbottom := sha256(v2_blob[N] + \" \" + v2_name[N+1])\nOnly the name of the final blob is kept.\nThis field can be used as a filter in list requests.", "type" "string"}, "v2Blob" {"description" "The ordered list of v2 blobs that represent a given image.", "type" "array", "items" {"type" "string"}}}, "id" "Fingerprint", "description" "A set of properties that uniquely identify a given Docker image."}, "GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContext" {"description" "A CloudRepoSourceContext denotes a particular revision in a Google Cloud\nSource Repo.", "type" "object", "properties" {"revisionId" {"description" "A revision ID.", "type" "string"}, "repoId" {"$ref" "GoogleDevtoolsContaineranalysisV1alpha1RepoId", "description" "The ID of the repo."}, "aliasContext" {"description" "An alias, which may be a branch or tag.", "$ref" "GoogleDevtoolsContaineranalysisV1alpha1AliasContext"}}, "id" "GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContext"}, "Deployable" {"id" "Deployable", "description" "An artifact that can be deployed in some runtime.", "type" "object", "properties" {"resourceUri" {"description" "Resource URI for the artifact being deployed.", "type" "array", "items" {"type" "string"}}}}, "GoogleDevtoolsContaineranalysisV1alpha1GerritSourceContext" {"type" "object", "properties" {"hostUri" {"type" "string", "description" "The URI of a running Gerrit instance."}, "revisionId" {"description" "A revision (commit) ID.", "type" "string"}, "gerritProject" {"type" "string", "description" "The full project name within the host. Projects may be nested, so\n\"project/subproject\" is a valid project name. The \"repo name\" is\nthe hostURI/project."}, "aliasContext" {"$ref" "GoogleDevtoolsContaineranalysisV1alpha1AliasContext", "description" "An alias, which may be a branch or tag."}}, "id" "GoogleDevtoolsContaineranalysisV1alpha1GerritSourceContext", "description" "A SourceContext referring to a Gerrit project."}, "Discovery" {"id" "Discovery", "description" "A note that indicates a type of analysis a provider would perform. This note\nexists in a provider's project. A `Discovery` occurrence is created in a\nconsumer's project at the start of analysis. The occurrence's operation will\nindicate the status of the analysis. Absence of an occurrence linked to this\nnote for a resource indicates that analysis hasn't started.", "type" "object", "properties" {"analysisKind" {"enum" ["KIND_UNSPECIFIED" "PACKAGE_VULNERABILITY" "BUILD_DETAILS" "IMAGE_BASIS" "PACKAGE_MANAGER" "DEPLOYABLE" "DISCOVERY" "ATTESTATION_AUTHORITY" "UPGRADE"], "description" "The kind of analysis that is handled by this discovery.", "type" "string", "enumDescriptions" ["Unknown" "The note and occurrence represent a package vulnerability." "The note and occurrence assert build provenance." "This represents an image basis relationship." "This represents a package installed via a package manager." "The note and occurrence track deployment events." "The note and occurrence track the initial discovery status of a resource." "This represents a logical \"role\" that can attest to artifacts." "This represents an available software upgrade."]}}}, "TestIamPermissionsResponse" {"description" "Response message for `TestIamPermissions` method.", "type" "object", "properties" {"permissions" {"description" "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed.", "type" "array", "items" {"type" "string"}}}, "id" "TestIamPermissionsResponse"}, "PgpSignedAttestation" {"description" "An attestation wrapper with a PGP-compatible signature.\nThis message only supports `ATTACHED` signatures, where the payload that is\nsigned is included alongside the signature itself in the same file.", "type" "object", "properties" {"contentType" {"enum" ["CONTENT_TYPE_UNSPECIFIED" "SIMPLE_SIGNING_JSON"], "description" "Type (for example schema) of the attestation payload that was signed.\nThe verifier must ensure that the provided type is one that the verifier\nsupports, and that the attestation payload is a valid instantiation of that\ntype (for example by validating a JSON schema).", "type" "string", "enumDescriptions" ["`ContentType` is not set." "Atomic format attestation signature. See\nhttps://github.com/containers/image/blob/8a5d2f82a6e3263290c8e0276c3e0f64e77723e7/docs/atomic-signature.md\nThe payload extracted from `signature` is a JSON blob conforming to the\nlinked schema."]}, "signature" {"description" "The raw content of the signature, as output by GNU Privacy Guard (GPG) or\nequivalent.  Since this message only supports attached signatures, the\npayload that was signed must be attached. While the signature format\nsupported is dependent on the verification implementation, currently only\nASCII-armored (`--armor` to gpg), non-clearsigned (`--sign` rather than\n`--clearsign` to gpg) are supported. Concretely, `gpg --sign --armor\n--output=signature.gpg payload.json` will create the signature content\nexpected in this field in `signature.gpg` for the `payload.json`\nattestation payload.", "type" "string"}, "pgpKeyId" {"description" "The cryptographic fingerprint of the key used to generate the signature,\nas output by, e.g. `gpg --list-keys`. This should be the version 4, full\n160-bit fingerprint, expressed as a 40 character hexadecimal string. See\nhttps://tools.ietf.org/html/rfc4880#section-12.2 for details.\nImplementations may choose to acknowledge \"LONG\", \"SHORT\", or other\nabbreviated key IDs, but only the full fingerprint is guaranteed to work.\nIn gpg, the full fingerprint can be retrieved from the `fpr` field\nreturned when calling --list-keys with --with-colons.  For example:\n```\ngpg --with-colons --with-fingerprint --force-v4-certs \\\n    --list-keys attester@example.com\ntru::1:1513631572:0:3:1:5\npub:...<SNIP>...\nfpr:::::::::24FF6481B76AC91E66A00AC657A93A81EF3AE6FB:\n```\nAbove, the fingerprint is `24FF6481B76AC91E66A00AC657A93A81EF3AE6FB`.", "type" "string"}}, "id" "PgpSignedAttestation"}, "SetIamPolicyRequest" {"description" "Request message for `SetIamPolicy` method.", "type" "object", "properties" {"policy" {"$ref" "Policy", "description" "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them."}}, "id" "SetIamPolicyRequest"}, "GoogleDevtoolsContaineranalysisV1alpha1SourceContext" {"id" "GoogleDevtoolsContaineranalysisV1alpha1SourceContext", "description" "A SourceContext is a reference to a tree of files. A SourceContext together\nwith a path point to a unique revision of a single file or directory.", "type" "object", "properties" {"cloudRepo" {"$ref" "GoogleDevtoolsContaineranalysisV1alpha1CloudRepoSourceContext", "description" "A SourceContext referring to a revision in a Google Cloud Source Repo."}, "labels" {"additionalProperties" {"type" "string"}, "description" "Labels with user defined metadata.", "type" "object"}, "git" {"$ref" "GoogleDevtoolsContaineranalysisV1alpha1GitSourceContext", "description" "A SourceContext referring to any third party Git repo (e.g., GitHub)."}, "gerrit" {"description" "A SourceContext referring to a Gerrit project.", "$ref" "GoogleDevtoolsContaineranalysisV1alpha1GerritSourceContext"}}}, "Command" {"type" "object", "properties" {"dir" {"type" "string", "description" "Working directory (relative to project source root) used when running\nthis Command."}, "waitFor" {"description" "The ID(s) of the Command(s) that this Command depends on.", "type" "array", "items" {"type" "string"}}, "env" {"type" "array", "items" {"type" "string"}, "description" "Environment variables set before running this Command."}, "args" {"description" "Command-line arguments used when executing this Command.", "type" "array", "items" {"type" "string"}}, "name" {"description" "Name of the command, as presented on the command line, or if the command is\npackaged as a Docker container, as presented to `docker pull`.", "type" "string"}, "id" {"type" "string", "description" "Optional unique identifier for this Command, used in wait_for to reference\nthis Command as a dependency."}}, "id" "Command", "description" "Command describes a step performed as part of the build pipeline."}, "Occurrence" {"description" "`Occurrence` includes information about analysis occurrences for an image.", "type" "object", "properties" {"buildDetails" {"$ref" "BuildDetails", "description" "Build details for a verifiable build."}, "vulnerabilityDetails" {"$ref" "VulnerabilityDetails", "description" "Details of a security vulnerability note."}, "resource" {"$ref" "Resource", "description" "\nThe resource for which the `Occurrence` applies."}, "resourceUrl" {"type" "string", "description" "The unique URL of the image or the container for which the `Occurrence`\napplies. For example, https://gcr.io/project/image@sha256:foo This field\ncan be used as a filter in list requests."}, "noteName" {"description" "An analysis note associated with this image, in the form\n\"providers/{provider_id}/notes/{NOTE_ID}\"\nThis field can be used as a filter in list requests.", "type" "string"}, "installation" {"description" "Describes the installation of a package on the linked resource.", "$ref" "Installation"}, "attestation" {"$ref" "Attestation", "description" "Describes an attestation of an artifact."}, "derivedImage" {"$ref" "Derived", "description" "Describes how this resource derives from the basis\nin the associated note."}, "upgrade" {"$ref" "UpgradeOccurrence", "description" "Describes an upgrade."}, "name" {"description" "Output only. The name of the `Occurrence` in the form\n\"projects/{project_id}/occurrences/{OCCURRENCE_ID}\"", "type" "string"}, "createTime" {"type" "string", "description" "Output only. The time this `Occurrence` was created.", "format" "google-datetime"}, "deployment" {"$ref" "Deployment", "description" "Describes the deployment of an artifact on a runtime."}, "discovered" {"$ref" "Discovered", "description" "Describes the initial scan status for this resource."}, "updateTime" {"description" "Output only. The time this `Occurrence` was last updated.", "format" "google-datetime", "type" "string"}, "kind" {"type" "string", "enumDescriptions" ["Unknown" "The note and occurrence represent a package vulnerability." "The note and occurrence assert build provenance." "This represents an image basis relationship." "This represents a package installed via a package manager." "The note and occurrence track deployment events." "The note and occurrence track the initial discovery status of a resource." "This represents a logical \"role\" that can attest to artifacts." "This represents an available software upgrade."], "enum" ["KIND_UNSPECIFIED" "PACKAGE_VULNERABILITY" "BUILD_DETAILS" "IMAGE_BASIS" "PACKAGE_MANAGER" "DEPLOYABLE" "DISCOVERY" "ATTESTATION_AUTHORITY" "UPGRADE"], "description" "Output only. This explicitly denotes which of the `Occurrence` details are\nspecified. This field can be used as a filter in list requests."}, "remediation" {"type" "string", "description" "A description of actions that can be taken to remedy the `Note`"}}, "id" "Occurrence"}, "Discovered" {"description" "Provides information about the scan status of a discovered resource.", "type" "object", "properties" {"analysisStatusError" {"$ref" "Status", "description" "When an error is encountered this will contain a LocalizedMessage under\ndetails to show to the user. The LocalizedMessage output only and\npopulated by the API."}, "operation" {"description" "Output only. An operation that indicates the status of the current scan.\nThis field is deprecated, do not use.", "$ref" "Operation"}, "analysisStatus" {"enum" ["ANALYSIS_STATUS_UNSPECIFIED" "PENDING" "SCANNING" "FINISHED_SUCCESS" "FINISHED_FAILED" "FINISHED_UNSUPPORTED"], "description" "The status of discovery for the resource.", "type" "string", "enumDescriptions" ["Unknown" "Resource is known but no action has been taken yet." "Resource is being analyzed." "Analysis has finished successfully." "Analysis has finished unsuccessfully, the analysis itself is in a bad\nstate." "The resource is known not to be supported."]}, "continuousAnalysis" {"description" "Whether the resource is continuously analyzed.", "type" "string", "enumDescriptions" ["Unknown" "The resource is continuously analyzed." "The resource is ignored for continuous analysis."], "enum" ["CONTINUOUS_ANALYSIS_UNSPECIFIED" "ACTIVE" "INACTIVE"]}, "cpe" {"description" "The CPE of the resource being scanned.", "type" "string"}}, "id" "Discovered"}, "AttestationAuthority" {"description" "Note kind that represents a logical attestation \"role\" or \"authority\".  For\nexample, an organization might have one `AttestationAuthority` for \"QA\" and\none for \"build\".  This Note is intended to act strictly as a grouping\nmechanism for the attached Occurrences (Attestations).  This grouping\nmechanism also provides a security boundary, since IAM ACLs gate the ability\nfor a principle to attach an Occurrence to a given Note.  It also provides a\nsingle point of lookup to find all attached Attestation Occurrences, even if\nthey don't all live in the same project.", "type" "object", "properties" {"hint" {"$ref" "AttestationAuthorityHint"}}, "id" "AttestationAuthority"}, "GetVulnzOccurrencesSummaryResponse" {"description" "A summary of how many vulnz occurrences there are per severity type.\ncounts by groups, or if we should have different summary messages\nlike this.", "type" "object", "properties" {"counts" {"type" "array", "items" {"$ref" "SeverityCount"}, "description" "A map of how many occurrences were found for each severity."}}, "id" "GetVulnzOccurrencesSummaryResponse"}, "BuildType" {"description" "Note holding the version of the provider's builder and the signature of\nthe provenance message in linked BuildDetails.", "type" "object", "properties" {"builderVersion" {"description" "Version of the builder which produced this Note.", "type" "string"}, "signature" {"$ref" "BuildSignature", "description" "Signature of the build in Occurrences pointing to the Note containing this\n`BuilderDetails`."}}, "id" "BuildType"}, "StorageSource" {"id" "StorageSource", "description" "StorageSource describes the location of the source in an archive file in\nGoogle Cloud Storage.", "type" "object", "properties" {"bucket" {"description" "Google Cloud Storage bucket containing source (see [Bucket Name\nRequirements]\n(https://cloud.google.com/storage/docs/bucket-naming#requirements)).", "type" "string"}, "object" {"type" "string", "description" "Google Cloud Storage object containing source."}, "generation" {"description" "Google Cloud Storage generation for the object.", "format" "int64", "type" "string"}}}, "GetIamPolicyRequest" {"type" "object", "properties" {"options" {"$ref" "GetPolicyOptions", "description" "OPTIONAL: A `GetPolicyOptions` object for specifying options to\n`GetIamPolicy`. This field is only used by Cloud IAM."}}, "id" "GetIamPolicyRequest", "description" "Request message for `GetIamPolicy` method."}, "Derived" {"type" "object", "properties" {"distance" {"type" "integer", "description" "Output only. The number of layers by which this image differs from the\nassociated image basis.", "format" "uint32"}, "baseResourceUrl" {"description" "Output only. This contains the base image URL for the derived image\noccurrence.", "type" "string"}, "fingerprint" {"$ref" "Fingerprint", "description" "The fingerprint of the derived image."}, "layerInfo" {"description" "This contains layer-specific metadata, if populated it has length\n\"distance\" and is ordered with [distance] being the layer immediately\nfollowing the base image and [1] being the final layer.", "type" "array", "items" {"$ref" "Layer"}}}, "id" "Derived", "description" "Derived describes the derived image portion (Occurrence) of the\nDockerImage relationship.  This image would be produced from a Dockerfile\nwith FROM <DockerImage.Basis in attached Note>."}, "UpgradeNote" {"type" "object", "properties" {"distributions" {"type" "array", "items" {"$ref" "UpgradeDistribution"}, "description" "Metadata about the upgrade for each specific operating system."}, "package" {"description" "Required - The package this Upgrade is for.", "type" "string"}, "version" {"$ref" "Version", "description" "Required - The version of the package in machine + human readable form."}}, "id" "UpgradeNote", "description" "An Upgrade Note represents a potential upgrade of a package to a given\nversion. For each package version combination (i.e. bash 4.0, bash 4.1,\nbash 4.1.2), there will be a Upgrade Note."}, "ListOccurrencesResponse" {"description" "Response including listed active occurrences.", "type" "object", "properties" {"occurrences" {"description" "The occurrences requested.", "type" "array", "items" {"$ref" "Occurrence"}}, "nextPageToken" {"description" "The next pagination token in the list response. It should be used as\n`page_token` for the following request. An empty value means no more\nresults.", "type" "string"}}, "id" "ListOccurrencesResponse"}, "GoogleDevtoolsContaineranalysisV1alpha1AliasContext" {"description" "An alias to a repo revision.", "type" "object", "properties" {"name" {"description" "The alias name.", "type" "string"}, "kind" {"enumDescriptions" ["Unknown." "Git tag." "Git branch." "Used to specify non-standard aliases. For example, if a Git repo has a\nref named \"refs/foo/bar\"."], "enum" ["KIND_UNSPECIFIED" "FIXED" "MOVABLE" "OTHER"], "description" "The alias kind.", "type" "string"}}, "id" "GoogleDevtoolsContaineranalysisV1alpha1AliasContext"}, "Policy" {"description" "An Identity and Access Management (IAM) policy, which specifies access\ncontrols for Google Cloud resources.\n\n\nA `Policy` is a collection of `bindings`. A `binding` binds one or more\n`members` to a single `role`. Members can be user accounts, service accounts,\nGoogle groups, and domains (such as G Suite). A `role` is a named list of\npermissions; each `role` can be an IAM predefined role or a user-created\ncustom role.\n\nOptionally, a `binding` can specify a `condition`, which is a logical\nexpression that allows access to a resource only if the expression evaluates\nto `true`. A condition can add constraints based on attributes of the\nrequest, the resource, or both.\n\n**JSON example:**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles/resourcemanager.organizationAdmin\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles/resourcemanager.organizationViewer\",\n          \"members\": [\"user:eve@example.com\"],\n          \"condition\": {\n            \"title\": \"expirable access\",\n            \"description\": \"Does not grant access after Sep 2020\",\n            \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\",\n          }\n        }\n      ],\n      \"etag\": \"BwWWja0YfJA=\",\n      \"version\": 3\n    }\n\n**YAML example:**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-project-id@appspot.gserviceaccount.com\n      role: roles/resourcemanager.organizationAdmin\n    - members:\n      - user:eve@example.com\n      role: roles/resourcemanager.organizationViewer\n      condition:\n        title: expirable access\n        description: Does not grant access after Sep 2020\n        expression: request.time < timestamp('2020-10-01T00:00:00.000Z')\n    - etag: BwWWja0YfJA=\n    - version: 3\n\nFor a description of IAM and its features, see the\n[IAM documentation](https://cloud.google.com/iam/docs/).", "type" "object", "properties" {"version" {"description" "Specifies the format of the policy.\n\nValid values are `0`, `1`, and `3`. Requests that specify an invalid value\nare rejected.\n\nAny operation that affects conditional role bindings must specify version\n`3`. This requirement applies to the following operations:\n\n* Getting a policy that includes a conditional role binding\n* Adding a conditional role binding to a policy\n* Changing a conditional role binding in a policy\n* Removing any role binding, with or without a condition, from a policy\n  that includes conditions\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.\n\nIf a policy does not include any conditions, operations on that policy may\nspecify any valid version or leave the field unset.", "format" "int32", "type" "integer"}, "bindings" {"description" "Associates a list of `members` to a `role`. Optionally, may specify a\n`condition` that determines how and when the `bindings` are applied. Each\nof the `bindings` must contain at least one member.", "type" "array", "items" {"$ref" "Binding"}}, "etag" {"type" "string", "description" "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.", "format" "byte"}}, "id" "Policy"}, "ListScanConfigsResponse" {"type" "object", "properties" {"nextPageToken" {"description" "A page token to pass in order to get more scan configs.", "type" "string"}, "scanConfigs" {"description" "The set of scan configs.", "type" "array", "items" {"$ref" "ScanConfig"}}}, "id" "ListScanConfigsResponse", "description" "A list of scan configs for the project."}, "Resource" {"description" "\nResource is an entity that can have metadata. E.g., a Docker image.", "type" "object", "properties" {"name" {"description" "The name of the resource. E.g., the name of a Docker image - \"Debian\".", "type" "string"}, "contentHash" {"description" "The hash of the resource content. E.g., the Docker digest.", "$ref" "Hash"}, "uri" {"description" "The unique URI of the resource. E.g.,\n\"https://gcr.io/project/image@sha256:foo\" for a Docker image.", "type" "string"}}, "id" "Resource"}, "Version" {"description" "Version contains structured information about the version of the package.\nFor a discussion of this in Debian/Ubuntu:\nhttp://serverfault.com/questions/604541/debian-packages-version-convention\nFor a discussion of this in Redhat/Fedora/Centos:\nhttp://blog.jasonantman.com/2014/07/how-yum-and-rpm-compare-versions/", "type" "object", "properties" {"epoch" {"description" "Used to correct mistakes in the version numbering scheme.", "format" "int32", "type" "integer"}, "revision" {"type" "string", "description" "The iteration of the package build from the above version."}, "name" {"description" "The main part of the version name.", "type" "string"}, "kind" {"enumDescriptions" ["A standard package version, defined by the other fields." "A special version representing negative infinity,\nother fields are ignored." "A special version representing positive infinity,\nother fields are ignored."], "enum" ["NORMAL" "MINIMUM" "MAXIMUM"], "description" "Distinguish between sentinel MIN/MAX versions and normal versions.\nIf kind is not NORMAL, then the other fields are ignored.", "type" "string"}}, "id" "Version"}, "BuildProvenance" {"id" "BuildProvenance", "description" "Provenance of a build. Contains all information needed to verify the full\ndetails about the build from source to completion.", "type" "object", "properties" {"sourceProvenance" {"$ref" "Source", "description" "Details of the Source input to the build."}, "finishTime" {"description" "Time at which execution of the build was finished.", "format" "google-datetime", "type" "string"}, "builtArtifacts" {"type" "array", "items" {"$ref" "Artifact"}, "description" "Output of the build."}, "id" {"description" "Unique identifier of the build.", "type" "string"}, "builderVersion" {"description" "Version string of the builder at the time this build was executed.", "type" "string"}, "creator" {"description" "E-mail address of the user who initiated this build. Note that this was the\nuser's e-mail address at the time the build was initiated; this address may\nnot represent the same end-user for all time.", "type" "string"}, "createTime" {"description" "Time at which the build was created.", "format" "google-datetime", "type" "string"}, "startTime" {"description" "Time at which execution of the build was started.", "format" "google-datetime", "type" "string"}, "commands" {"type" "array", "items" {"$ref" "Command"}, "description" "Commands requested by the build."}, "buildOptions" {"type" "object", "additionalProperties" {"type" "string"}, "description" "Special options applied to this build. This is a catch-all field where\nbuild providers can enter any desired additional details."}, "logsBucket" {"type" "string", "description" "Google Cloud Storage bucket where logs were written."}, "projectId" {"description" "ID of the project.", "type" "string"}, "triggerId" {"description" "Trigger identifier if the build was triggered automatically; empty if not.", "type" "string"}}}, "UpgradeDistribution" {"id" "UpgradeDistribution", "description" "The Upgrade Distribution represents metadata about the Upgrade for each\noperating system (CPE). Some distributions have additional metadata around\nupdates, classifying them into various categories and severities.", "type" "object", "properties" {"cpeUri" {"description" "Required - The specific operating system this metadata applies to. See\nhttps://cpe.mitre.org/specification/.", "type" "string"}, "cve" {"description" "The cve that would be resolved by this upgrade.", "type" "array", "items" {"type" "string"}}, "classification" {"type" "string", "description" "The operating system classification of this Upgrade, as specified by the\nupstream operating system upgrade feed."}, "severity" {"description" "The severity as specified by the upstream operating system.", "type" "string"}}}, "ScanConfig" {"type" "object", "properties" {"name" {"description" "Output only. The name of the ScanConfig in the form\n“projects/{project_id}/scanConfigs/{scan_config_id}\".", "type" "string"}, "description" {"description" "Output only. A human-readable description of what the `ScanConfig` does.", "type" "string"}, "enabled" {"description" "Indicates whether the Scan is enabled.", "type" "boolean"}, "createTime" {"type" "string", "description" "Output only. The time this scan config was created.", "format" "google-datetime"}, "updateTime" {"type" "string", "description" "Output only. The time this scan config was last updated.", "format" "google-datetime"}}, "id" "ScanConfig", "description" "Indicates various scans and whether they are turned on or off."}, "UpgradeOccurrence" {"description" "An Upgrade Occurrence represents that a specific resource_url could install a\nspecific upgrade. This presence is supplied via local sources (i.e. it is\npresent in the mirror and the running system has noticed its availability).", "type" "object", "properties" {"distribution" {"$ref" "UpgradeDistribution", "description" "Metadata about the upgrade for available for the specific operating system\nfor the resource_url. This allows efficient filtering, as well as\nmaking it easier to use the occurrence."}, "package" {"description" "Required - The package this Upgrade is for.", "type" "string"}, "parsedVersion" {"description" "Required - The version of the package in a machine + human readable form.", "$ref" "Version"}}, "id" "UpgradeOccurrence"}, "AttestationAuthorityHint" {"description" "This submessage provides human-readable hints about the purpose of the\nAttestationAuthority.  Because the name of a Note acts as its resource\nreference, it is important to disambiguate the canonical name of the Note\n(which might be a UUID for security purposes) from \"readable\" names more\nsuitable for debug output.  Note that these hints should NOT be used to\nlook up AttestationAuthorities in security sensitive contexts, such as when\nlooking up Attestations to verify.", "type" "object", "properties" {"humanReadableName" {"description" "The human readable name of this Attestation Authority, for example \"qa\".", "type" "string"}}, "id" "AttestationAuthorityHint"}, "VulnerabilityType" {"description" "VulnerabilityType provides metadata about a security vulnerability.", "type" "object", "properties" {"severity" {"description" "Note provider assigned impact of the vulnerability", "type" "string", "enumDescriptions" ["Unknown Impact" "Minimal Impact" "Low Impact" "Medium Impact" "High Impact" "Critical Impact"], "enum" ["SEVERITY_UNSPECIFIED" "MINIMAL" "LOW" "MEDIUM" "HIGH" "CRITICAL"]}, "details" {"type" "array", "items" {"$ref" "Detail"}, "description" "All information about the package to specifically identify this\nvulnerability. One entry per (version range and cpe_uri) the\npackage vulnerability has manifested in."}, "cvssScore" {"type" "number", "description" "The CVSS score for this Vulnerability.", "format" "float"}}, "id" "VulnerabilityType"}, "CreateOperationRequest" {"description" "Request for creating an operation", "type" "object", "properties" {"operation" {"$ref" "Operation", "description" "The operation to create."}, "operationId" {"description" "The ID to use for this operation.", "type" "string"}}, "id" "CreateOperationRequest"}}}