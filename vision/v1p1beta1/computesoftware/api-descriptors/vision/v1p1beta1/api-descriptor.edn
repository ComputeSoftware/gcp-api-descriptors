#:compute.gcp.descriptor{:name "vision", :title "Cloud Vision API", :api-version "v1p1beta1", :revision "20220319", :endpoint #:compute.gcp.descriptor{:url "https://vision.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"description" "JSONP", "location" "query", "type" "string"}, "uploadType" {"description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "type" "string", "location" "query"}, "key" {"location" "query", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "type" "string"}, "access_token" {"type" "string", "location" "query", "description" "OAuth access token."}, "oauth_token" {"location" "query", "type" "string", "description" "OAuth 2.0 token for the current user."}, "prettyPrint" {"default" "true", "location" "query", "type" "boolean", "description" "Returns response with indentations and line breaks."}, "alt" {"location" "query", "description" "Data format for response.", "enum" ["json" "media" "proto"], "type" "string", "default" "json", "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"]}, "$.xgafv" {"description" "V1 error format.", "enumDescriptions" ["v1 error format" "v2 error format"], "location" "query", "type" "string", "enum" ["1" "2"]}, "fields" {"description" "Selector specifying which fields to include in a partial response.", "type" "string", "location" "query"}, "upload_protocol" {"location" "query", "description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "type" "string"}, "quotaUser" {"type" "string", "location" "query", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."}}, :op->info {"vision.projects.images.annotate" #:compute.gcp.descriptor{:http-method :post, :path "v1p1beta1/{+parent}/images:annotate", :request {"$ref" "GoogleCloudVisionV1p1beta1BatchAnnotateImagesRequest"}, :response {"$ref" "GoogleCloudVisionV1p1beta1BatchAnnotateImagesResponse"}, :parameters {"parent" {"description" "Optional. Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no parent is specified, a region will be chosen automatically. Supported location-ids: `us`: USA country only, `asia`: East asia areas, like Japan, Taiwan, `eu`: The European Union. Example: `projects/project-A/locations/eu`.", "required" true, "type" "string", "location" "path", "pattern" "^projects/[^/]+$"}}, :description "Run image detection and annotation for a batch of images."}, "vision.projects.files.annotate" #:compute.gcp.descriptor{:http-method :post, :path "v1p1beta1/{+parent}/files:annotate", :request {"$ref" "GoogleCloudVisionV1p1beta1BatchAnnotateFilesRequest"}, :response {"$ref" "GoogleCloudVisionV1p1beta1BatchAnnotateFilesResponse"}, :parameters {"parent" {"description" "Optional. Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no parent is specified, a region will be chosen automatically. Supported location-ids: `us`: USA country only, `asia`: East asia areas, like Japan, Taiwan, `eu`: The European Union. Example: `projects/project-A/locations/eu`.", "location" "path", "pattern" "^projects/[^/]+$", "required" true, "type" "string"}}, :description "Service that performs image detection and annotation for a batch of files. Now only \"application/pdf\", \"image/tiff\" and \"image/gif\" are supported. This service will extract at most 5 (customers can specify which 5 in AnnotateFileRequest.pages) frames (gif) or pages (pdf or tiff) from each file provided and perform detection and annotation for each image extracted."}, "vision.projects.locations.files.annotate" #:compute.gcp.descriptor{:http-method :post, :path "v1p1beta1/{+parent}/files:annotate", :request {"$ref" "GoogleCloudVisionV1p1beta1BatchAnnotateFilesRequest"}, :response {"$ref" "GoogleCloudVisionV1p1beta1BatchAnnotateFilesResponse"}, :parameters {"parent" {"description" "Optional. Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no parent is specified, a region will be chosen automatically. Supported location-ids: `us`: USA country only, `asia`: East asia areas, like Japan, Taiwan, `eu`: The European Union. Example: `projects/project-A/locations/eu`.", "location" "path", "pattern" "^projects/[^/]+/locations/[^/]+$", "type" "string", "required" true}}, :description "Service that performs image detection and annotation for a batch of files. Now only \"application/pdf\", \"image/tiff\" and \"image/gif\" are supported. This service will extract at most 5 (customers can specify which 5 in AnnotateFileRequest.pages) frames (gif) or pages (pdf or tiff) from each file provided and perform detection and annotation for each image extracted."}, "vision.projects.files.asyncBatchAnnotate" #:compute.gcp.descriptor{:http-method :post, :path "v1p1beta1/{+parent}/files:asyncBatchAnnotate", :request {"$ref" "GoogleCloudVisionV1p1beta1AsyncBatchAnnotateFilesRequest"}, :response {"$ref" "Operation"}, :parameters {"parent" {"description" "Optional. Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no parent is specified, a region will be chosen automatically. Supported location-ids: `us`: USA country only, `asia`: East asia areas, like Japan, Taiwan, `eu`: The European Union. Example: `projects/project-A/locations/eu`.", "required" true, "type" "string", "location" "path", "pattern" "^projects/[^/]+$"}}, :description "Run asynchronous image detection and annotation for a list of generic files, such as PDF files, which may contain multiple pages and multiple images per page. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains `OperationMetadata` (metadata). `Operation.response` contains `AsyncBatchAnnotateFilesResponse` (results)."}, "vision.projects.locations.images.annotate" #:compute.gcp.descriptor{:http-method :post, :path "v1p1beta1/{+parent}/images:annotate", :request {"$ref" "GoogleCloudVisionV1p1beta1BatchAnnotateImagesRequest"}, :response {"$ref" "GoogleCloudVisionV1p1beta1BatchAnnotateImagesResponse"}, :parameters {"parent" {"description" "Optional. Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no parent is specified, a region will be chosen automatically. Supported location-ids: `us`: USA country only, `asia`: East asia areas, like Japan, Taiwan, `eu`: The European Union. Example: `projects/project-A/locations/eu`.", "pattern" "^projects/[^/]+/locations/[^/]+$", "type" "string", "location" "path", "required" true}}, :description "Run image detection and annotation for a batch of images."}, "vision.files.annotate" #:compute.gcp.descriptor{:http-method :post, :path "v1p1beta1/files:annotate", :request {"$ref" "GoogleCloudVisionV1p1beta1BatchAnnotateFilesRequest"}, :response {"$ref" "GoogleCloudVisionV1p1beta1BatchAnnotateFilesResponse"}, :parameters {}, :description "Service that performs image detection and annotation for a batch of files. Now only \"application/pdf\", \"image/tiff\" and \"image/gif\" are supported. This service will extract at most 5 (customers can specify which 5 in AnnotateFileRequest.pages) frames (gif) or pages (pdf or tiff) from each file provided and perform detection and annotation for each image extracted."}, "vision.projects.locations.images.asyncBatchAnnotate" #:compute.gcp.descriptor{:http-method :post, :path "v1p1beta1/{+parent}/images:asyncBatchAnnotate", :request {"$ref" "GoogleCloudVisionV1p1beta1AsyncBatchAnnotateImagesRequest"}, :response {"$ref" "Operation"}, :parameters {"parent" {"type" "string", "location" "path", "required" true, "pattern" "^projects/[^/]+/locations/[^/]+$", "description" "Optional. Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no parent is specified, a region will be chosen automatically. Supported location-ids: `us`: USA country only, `asia`: East asia areas, like Japan, Taiwan, `eu`: The European Union. Example: `projects/project-A/locations/eu`."}}, :description "Run asynchronous image detection and annotation for a list of images. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains `OperationMetadata` (metadata). `Operation.response` contains `AsyncBatchAnnotateImagesResponse` (results). This service will write image annotation outputs to json files in customer GCS bucket, each json file containing BatchAnnotateImagesResponse proto."}, "vision.images.asyncBatchAnnotate" #:compute.gcp.descriptor{:http-method :post, :path "v1p1beta1/images:asyncBatchAnnotate", :request {"$ref" "GoogleCloudVisionV1p1beta1AsyncBatchAnnotateImagesRequest"}, :response {"$ref" "Operation"}, :parameters {}, :description "Run asynchronous image detection and annotation for a list of images. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains `OperationMetadata` (metadata). `Operation.response` contains `AsyncBatchAnnotateImagesResponse` (results). This service will write image annotation outputs to json files in customer GCS bucket, each json file containing BatchAnnotateImagesResponse proto."}, "vision.images.annotate" #:compute.gcp.descriptor{:http-method :post, :path "v1p1beta1/images:annotate", :request {"$ref" "GoogleCloudVisionV1p1beta1BatchAnnotateImagesRequest"}, :response {"$ref" "GoogleCloudVisionV1p1beta1BatchAnnotateImagesResponse"}, :parameters {}, :description "Run image detection and annotation for a batch of images."}, "vision.files.asyncBatchAnnotate" #:compute.gcp.descriptor{:http-method :post, :path "v1p1beta1/files:asyncBatchAnnotate", :request {"$ref" "GoogleCloudVisionV1p1beta1AsyncBatchAnnotateFilesRequest"}, :response {"$ref" "Operation"}, :parameters {}, :description "Run asynchronous image detection and annotation for a list of generic files, such as PDF files, which may contain multiple pages and multiple images per page. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains `OperationMetadata` (metadata). `Operation.response` contains `AsyncBatchAnnotateFilesResponse` (results)."}, "vision.projects.locations.files.asyncBatchAnnotate" #:compute.gcp.descriptor{:http-method :post, :path "v1p1beta1/{+parent}/files:asyncBatchAnnotate", :request {"$ref" "GoogleCloudVisionV1p1beta1AsyncBatchAnnotateFilesRequest"}, :response {"$ref" "Operation"}, :parameters {"parent" {"required" true, "pattern" "^projects/[^/]+/locations/[^/]+$", "type" "string", "location" "path", "description" "Optional. Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no parent is specified, a region will be chosen automatically. Supported location-ids: `us`: USA country only, `asia`: East asia areas, like Japan, Taiwan, `eu`: The European Union. Example: `projects/project-A/locations/eu`."}}, :description "Run asynchronous image detection and annotation for a list of generic files, such as PDF files, which may contain multiple pages and multiple images per page. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains `OperationMetadata` (metadata). `Operation.response` contains `AsyncBatchAnnotateFilesResponse` (results)."}, "vision.projects.images.asyncBatchAnnotate" #:compute.gcp.descriptor{:http-method :post, :path "v1p1beta1/{+parent}/images:asyncBatchAnnotate", :request {"$ref" "GoogleCloudVisionV1p1beta1AsyncBatchAnnotateImagesRequest"}, :response {"$ref" "Operation"}, :parameters {"parent" {"required" true, "description" "Optional. Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no parent is specified, a region will be chosen automatically. Supported location-ids: `us`: USA country only, `asia`: East asia areas, like Japan, Taiwan, `eu`: The European Union. Example: `projects/project-A/locations/eu`.", "location" "path", "type" "string", "pattern" "^projects/[^/]+$"}}, :description "Run asynchronous image detection and annotation for a list of images. Progress and results can be retrieved through the `google.longrunning.Operations` interface. `Operation.metadata` contains `OperationMetadata` (metadata). `Operation.response` contains `AsyncBatchAnnotateImagesResponse` (results). This service will write image annotation outputs to json files in customer GCS bucket, each json file containing BatchAnnotateImagesResponse proto."}}, :schemas {"GoogleCloudVisionV1p3beta1AnnotateFileResponse" {"properties" {"error" {"$ref" "Status", "description" "If set, represents the error message for the failed request. The `responses` field will not be set in this case."}, "totalPages" {"format" "int32", "type" "integer", "description" "This field gives the total number of pages in the file."}, "inputConfig" {"description" "Information about the file for which this response is generated.", "$ref" "GoogleCloudVisionV1p3beta1InputConfig"}, "responses" {"description" "Individual responses to images found within the file. This field will be empty if the `error` field is set.", "type" "array", "items" {"$ref" "GoogleCloudVisionV1p3beta1AnnotateImageResponse"}}}, "description" "Response to a single file annotation request. A file may contain one or more images, which individually have their own responses.", "id" "GoogleCloudVisionV1p3beta1AnnotateFileResponse", "type" "object"}, "GoogleCloudVisionV1p1beta1ColorInfo" {"type" "object", "properties" {"score" {"description" "Image-specific score for this color. Value in range [0, 1].", "type" "number", "format" "float"}, "color" {"$ref" "Color", "description" "RGB components of the color."}, "pixelFraction" {"description" "The fraction of pixels the color occupies in the image. Value in range [0, 1].", "type" "number", "format" "float"}}, "description" "Color information consists of RGB channels, score, and the fraction of the image that the color occupies in the image.", "id" "GoogleCloudVisionV1p1beta1ColorInfo"}, "GoogleCloudVisionV1p3beta1TextAnnotationDetectedLanguage" {"id" "GoogleCloudVisionV1p3beta1TextAnnotationDetectedLanguage", "type" "object", "properties" {"languageCode" {"type" "string", "description" "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier."}, "confidence" {"description" "Confidence of detected language. Range [0, 1].", "format" "float", "type" "number"}}, "description" "Detected language for a structural component."}, "Symbol" {"description" "A single symbol representation.", "type" "object", "properties" {"confidence" {"description" "Confidence of the OCR results for the symbol. Range [0, 1].", "format" "float", "type" "number"}, "text" {"type" "string", "description" "The actual UTF-8 representation of the symbol."}, "property" {"$ref" "TextProperty", "description" "Additional information detected for the symbol."}, "boundingBox" {"$ref" "BoundingPoly", "description" "The bounding box for the symbol. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the 'natural' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it's rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3)."}}, "id" "Symbol"}, "GoogleCloudVisionV1p4beta1FaceRecognitionResult" {"id" "GoogleCloudVisionV1p4beta1FaceRecognitionResult", "properties" {"celebrity" {"description" "The Celebrity that this face was matched to.", "$ref" "GoogleCloudVisionV1p4beta1Celebrity"}, "confidence" {"description" "Recognition confidence. Range [0, 1].", "type" "number", "format" "float"}}, "description" "Information about a face's identity.", "type" "object"}, "AsyncBatchAnnotateImagesResponse" {"description" "Response to an async batch image annotation request.", "type" "object", "id" "AsyncBatchAnnotateImagesResponse", "properties" {"outputConfig" {"$ref" "OutputConfig", "description" "The output location and metadata from AsyncBatchAnnotateImagesRequest."}}}, "GoogleCloudVisionV1p3beta1WebDetectionWebEntity" {"description" "Entity deduced from similar images on the Internet.", "id" "GoogleCloudVisionV1p3beta1WebDetectionWebEntity", "type" "object", "properties" {"entityId" {"description" "Opaque entity ID.", "type" "string"}, "score" {"type" "number", "description" "Overall relevancy score for the entity. Not normalized and not comparable across different image queries.", "format" "float"}, "description" {"type" "string", "description" "Canonical description of the entity, in English."}}}, "LocalizedObjectAnnotation" {"properties" {"name" {"description" "Object name, expressed in its `language_code` language.", "type" "string"}, "languageCode" {"type" "string", "description" "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier."}, "score" {"format" "float", "type" "number", "description" "Score of the result. Range [0, 1]."}, "mid" {"type" "string", "description" "Object ID that should align with EntityAnnotation mid."}, "boundingPoly" {"description" "Image region to which this object belongs. This must be populated.", "$ref" "BoundingPoly"}}, "id" "LocalizedObjectAnnotation", "description" "Set of detected objects with bounding boxes.", "type" "object"}, "GoogleCloudVisionV1p2beta1Word" {"type" "object", "id" "GoogleCloudVisionV1p2beta1Word", "description" "A word representation.", "properties" {"boundingBox" {"$ref" "GoogleCloudVisionV1p2beta1BoundingPoly", "description" "The bounding box for the word. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the 'natural' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it's rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3)."}, "symbols" {"type" "array", "items" {"$ref" "GoogleCloudVisionV1p2beta1Symbol"}, "description" "List of symbols in the word. The order of the symbols follows the natural reading order."}, "confidence" {"format" "float", "type" "number", "description" "Confidence of the OCR results for the word. Range [0, 1]."}, "property" {"$ref" "GoogleCloudVisionV1p2beta1TextAnnotationTextProperty", "description" "Additional information detected for the word."}}}, "GoogleCloudVisionV1p3beta1AnnotateImageResponse" {"type" "object", "properties" {"imagePropertiesAnnotation" {"$ref" "GoogleCloudVisionV1p3beta1ImageProperties", "description" "If present, image properties were extracted successfully."}, "fullTextAnnotation" {"$ref" "GoogleCloudVisionV1p3beta1TextAnnotation", "description" "If present, text (OCR) detection or document (OCR) text detection has completed successfully. This annotation provides the structural hierarchy for the OCR detected text."}, "logoAnnotations" {"items" {"$ref" "GoogleCloudVisionV1p3beta1EntityAnnotation"}, "description" "If present, logo detection has completed successfully.", "type" "array"}, "webDetection" {"$ref" "GoogleCloudVisionV1p3beta1WebDetection", "description" "If present, web detection has completed successfully."}, "productSearchResults" {"description" "If present, product search has completed successfully.", "$ref" "GoogleCloudVisionV1p3beta1ProductSearchResults"}, "cropHintsAnnotation" {"description" "If present, crop hints have completed successfully.", "$ref" "GoogleCloudVisionV1p3beta1CropHintsAnnotation"}, "error" {"description" "If set, represents the error message for the operation. Note that filled-in image annotations are guaranteed to be correct, even when `error` is set.", "$ref" "Status"}, "safeSearchAnnotation" {"description" "If present, safe-search annotation has completed successfully.", "$ref" "GoogleCloudVisionV1p3beta1SafeSearchAnnotation"}, "labelAnnotations" {"description" "If present, label detection has completed successfully.", "items" {"$ref" "GoogleCloudVisionV1p3beta1EntityAnnotation"}, "type" "array"}, "context" {"$ref" "GoogleCloudVisionV1p3beta1ImageAnnotationContext", "description" "If present, contextual information is needed to understand where this image comes from."}, "faceAnnotations" {"description" "If present, face detection has completed successfully.", "items" {"$ref" "GoogleCloudVisionV1p3beta1FaceAnnotation"}, "type" "array"}, "textAnnotations" {"type" "array", "description" "If present, text (OCR) detection has completed successfully.", "items" {"$ref" "GoogleCloudVisionV1p3beta1EntityAnnotation"}}, "landmarkAnnotations" {"items" {"$ref" "GoogleCloudVisionV1p3beta1EntityAnnotation"}, "type" "array", "description" "If present, landmark detection has completed successfully."}, "localizedObjectAnnotations" {"items" {"$ref" "GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation"}, "description" "If present, localized object detection has completed successfully. This will be sorted descending by confidence score.", "type" "array"}}, "description" "Response to an image annotation request.", "id" "GoogleCloudVisionV1p3beta1AnnotateImageResponse"}, "GoogleCloudVisionV1p2beta1WebDetectionWebLabel" {"id" "GoogleCloudVisionV1p2beta1WebDetectionWebLabel", "type" "object", "properties" {"label" {"type" "string", "description" "Label for extra metadata."}, "languageCode" {"description" "The BCP-47 language code for `label`, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.", "type" "string"}}, "description" "Label to provide extra metadata for the web detection."}, "GoogleCloudVisionV1p3beta1InputConfig" {"properties" {"gcsSource" {"$ref" "GoogleCloudVisionV1p3beta1GcsSource", "description" "The Google Cloud Storage location to read the input from."}, "mimeType" {"description" "The type of the file. Currently only \"application/pdf\", \"image/tiff\" and \"image/gif\" are supported. Wildcards are not supported.", "type" "string"}, "content" {"format" "byte", "type" "string", "description" "File content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64. Currently, this field only works for BatchAnnotateFiles requests. It does not work for AsyncBatchAnnotateFiles requests."}}, "description" "The desired input location and metadata.", "type" "object", "id" "GoogleCloudVisionV1p3beta1InputConfig"}, "GoogleCloudVisionV1p4beta1EntityAnnotation" {"id" "GoogleCloudVisionV1p4beta1EntityAnnotation", "properties" {"properties" {"type" "array", "items" {"$ref" "GoogleCloudVisionV1p4beta1Property"}, "description" "Some entities may have optional user-supplied `Property` (name/value) fields, such a score or string that qualifies the entity."}, "confidence" {"description" "**Deprecated. Use `score` instead.** The accuracy of the entity detection in an image. For example, for an image in which the \"Eiffel Tower\" entity is detected, this field represents the confidence that there is a tower in the query image. Range [0, 1].", "format" "float", "type" "number"}, "score" {"type" "number", "description" "Overall score of the result. Range [0, 1].", "format" "float"}, "topicality" {"description" "The relevancy of the ICA (Image Content Annotation) label to the image. For example, the relevancy of \"tower\" is likely higher to an image containing the detected \"Eiffel Tower\" than to an image containing a detected distant towering building, even though the confidence that there is a tower in each image may be the same. Range [0, 1].", "format" "float", "type" "number"}, "boundingPoly" {"$ref" "GoogleCloudVisionV1p4beta1BoundingPoly", "description" "Image region to which this entity belongs. Not produced for `LABEL_DETECTION` features."}, "locale" {"description" "The language code for the locale in which the entity textual `description` is expressed.", "type" "string"}, "locations" {"items" {"$ref" "GoogleCloudVisionV1p4beta1LocationInfo"}, "type" "array", "description" "The location information for the detected entity. Multiple `LocationInfo` elements can be present because one location may indicate the location of the scene in the image, and another location may indicate the location of the place where the image was taken. Location information is usually present for landmarks."}, "mid" {"type" "string", "description" "Opaque entity ID. Some IDs may be available in [Google Knowledge Graph Search API](https://developers.google.com/knowledge-graph/)."}, "description" {"description" "Entity textual description, expressed in its `locale` language.", "type" "string"}}, "type" "object", "description" "Set of detected entity features."}, "GoogleCloudVisionV1p1beta1SafeSearchAnnotation" {"type" "object", "id" "GoogleCloudVisionV1p1beta1SafeSearchAnnotation", "properties" {"spoof" {"enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "type" "string", "description" "Spoof likelihood. The likelihood that an modification was made to the image's canonical version to make it appear funny or offensive.", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."]}, "medical" {"enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "type" "string", "description" "Likelihood that this is a medical image."}, "adult" {"description" "Represents the adult content likelihood for the image. Adult content may contain elements such as nudity, pornographic images or cartoons, or sexual activities.", "type" "string", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"]}, "violence" {"enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "description" "Likelihood that this image contains violent content.", "type" "string", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."]}, "racy" {"description" "Likelihood that the request image contains racy content. Racy content may include (but is not limited to) skimpy or sheer clothing, strategically covered nudity, lewd or provocative poses, or close-ups of sensitive body areas.", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "type" "string"}}, "description" "Set of features pertaining to the image, computed by computer vision methods over safe-search verticals (for example, adult, spoof, medical, violence)."}, "GoogleCloudVisionV1p4beta1Symbol" {"id" "GoogleCloudVisionV1p4beta1Symbol", "type" "object", "properties" {"text" {"type" "string", "description" "The actual UTF-8 representation of the symbol."}, "boundingBox" {"description" "The bounding box for the symbol. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the 'natural' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it's rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).", "$ref" "GoogleCloudVisionV1p4beta1BoundingPoly"}, "confidence" {"type" "number", "description" "Confidence of the OCR results for the symbol. Range [0, 1].", "format" "float"}, "property" {"description" "Additional information detected for the symbol.", "$ref" "GoogleCloudVisionV1p4beta1TextAnnotationTextProperty"}}, "description" "A single symbol representation."}, "GoogleCloudVisionV1p3beta1Vertex" {"properties" {"x" {"description" "X coordinate.", "type" "integer", "format" "int32"}, "y" {"format" "int32", "description" "Y coordinate.", "type" "integer"}}, "description" "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.", "id" "GoogleCloudVisionV1p3beta1Vertex", "type" "object"}, "GoogleCloudVisionV1p3beta1Word" {"type" "object", "description" "A word representation.", "id" "GoogleCloudVisionV1p3beta1Word", "properties" {"property" {"description" "Additional information detected for the word.", "$ref" "GoogleCloudVisionV1p3beta1TextAnnotationTextProperty"}, "boundingBox" {"$ref" "GoogleCloudVisionV1p3beta1BoundingPoly", "description" "The bounding box for the word. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the 'natural' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it's rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3)."}, "symbols" {"items" {"$ref" "GoogleCloudVisionV1p3beta1Symbol"}, "type" "array", "description" "List of symbols in the word. The order of the symbols follows the natural reading order."}, "confidence" {"description" "Confidence of the OCR results for the word. Range [0, 1].", "type" "number", "format" "float"}}}, "TextProperty" {"properties" {"detectedBreak" {"description" "Detected start or end of a text segment.", "$ref" "DetectedBreak"}, "detectedLanguages" {"description" "A list of detected languages together with confidence.", "type" "array", "items" {"$ref" "DetectedLanguage"}}}, "id" "TextProperty", "description" "Additional information detected on the structural component.", "type" "object"}, "GoogleCloudVisionV1p1beta1AsyncAnnotateFileRequest" {"description" "An offline file annotation request.", "id" "GoogleCloudVisionV1p1beta1AsyncAnnotateFileRequest", "properties" {"inputConfig" {"$ref" "GoogleCloudVisionV1p1beta1InputConfig", "description" "Required. Information about the input file."}, "features" {"description" "Required. Requested features.", "items" {"$ref" "GoogleCloudVisionV1p1beta1Feature"}, "type" "array"}, "outputConfig" {"$ref" "GoogleCloudVisionV1p1beta1OutputConfig", "description" "Required. The desired output location and metadata (e.g. format)."}, "imageContext" {"$ref" "GoogleCloudVisionV1p1beta1ImageContext", "description" "Additional context that may accompany the image(s) in the file."}}, "type" "object"}, "GoogleCloudVisionV1p1beta1Block" {"properties" {"paragraphs" {"description" "List of paragraphs in this block (if this blocks is of type text).", "type" "array", "items" {"$ref" "GoogleCloudVisionV1p1beta1Paragraph"}}, "confidence" {"type" "number", "description" "Confidence of the OCR results on the block. Range [0, 1].", "format" "float"}, "property" {"description" "Additional information detected for the block.", "$ref" "GoogleCloudVisionV1p1beta1TextAnnotationTextProperty"}, "blockType" {"type" "string", "enumDescriptions" ["Unknown block type." "Regular text block." "Table block." "Image block." "Horizontal/vertical line box." "Barcode block."], "enum" ["UNKNOWN" "TEXT" "TABLE" "PICTURE" "RULER" "BARCODE"], "description" "Detected block type (text, image etc) for this block."}, "boundingBox" {"$ref" "GoogleCloudVisionV1p1beta1BoundingPoly", "description" "The bounding box for the block. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the 'natural' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it's rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3)."}}, "type" "object", "id" "GoogleCloudVisionV1p1beta1Block", "description" "Logical element on the page."}, "GoogleCloudVisionV1p1beta1OperationMetadata" {"type" "object", "id" "GoogleCloudVisionV1p1beta1OperationMetadata", "description" "Contains metadata for the BatchAnnotateImages operation.", "properties" {"createTime" {"description" "The time when the batch request was received.", "format" "google-datetime", "type" "string"}, "updateTime" {"format" "google-datetime", "type" "string", "description" "The time when the operation result was last updated."}, "state" {"description" "Current state of the batch operation.", "type" "string", "enum" ["STATE_UNSPECIFIED" "CREATED" "RUNNING" "DONE" "CANCELLED"], "enumDescriptions" ["Invalid." "Request is received." "Request is actively being processed." "The batch processing is done." "The batch processing was cancelled."]}}}, "GoogleCloudVisionV1p4beta1FaceAnnotationLandmark" {"properties" {"position" {"$ref" "GoogleCloudVisionV1p4beta1Position", "description" "Face landmark position."}, "type" {"type" "string", "description" "Face landmark type.", "enum" ["UNKNOWN_LANDMARK" "LEFT_EYE" "RIGHT_EYE" "LEFT_OF_LEFT_EYEBROW" "RIGHT_OF_LEFT_EYEBROW" "LEFT_OF_RIGHT_EYEBROW" "RIGHT_OF_RIGHT_EYEBROW" "MIDPOINT_BETWEEN_EYES" "NOSE_TIP" "UPPER_LIP" "LOWER_LIP" "MOUTH_LEFT" "MOUTH_RIGHT" "MOUTH_CENTER" "NOSE_BOTTOM_RIGHT" "NOSE_BOTTOM_LEFT" "NOSE_BOTTOM_CENTER" "LEFT_EYE_TOP_BOUNDARY" "LEFT_EYE_RIGHT_CORNER" "LEFT_EYE_BOTTOM_BOUNDARY" "LEFT_EYE_LEFT_CORNER" "RIGHT_EYE_TOP_BOUNDARY" "RIGHT_EYE_RIGHT_CORNER" "RIGHT_EYE_BOTTOM_BOUNDARY" "RIGHT_EYE_LEFT_CORNER" "LEFT_EYEBROW_UPPER_MIDPOINT" "RIGHT_EYEBROW_UPPER_MIDPOINT" "LEFT_EAR_TRAGION" "RIGHT_EAR_TRAGION" "LEFT_EYE_PUPIL" "RIGHT_EYE_PUPIL" "FOREHEAD_GLABELLA" "CHIN_GNATHION" "CHIN_LEFT_GONION" "CHIN_RIGHT_GONION" "LEFT_CHEEK_CENTER" "RIGHT_CHEEK_CENTER"], "enumDescriptions" ["Unknown face landmark detected. Should not be filled." "Left eye." "Right eye." "Left of left eyebrow." "Right of left eyebrow." "Left of right eyebrow." "Right of right eyebrow." "Midpoint between eyes." "Nose tip." "Upper lip." "Lower lip." "Mouth left." "Mouth right." "Mouth center." "Nose, bottom right." "Nose, bottom left." "Nose, bottom center." "Left eye, top boundary." "Left eye, right corner." "Left eye, bottom boundary." "Left eye, left corner." "Right eye, top boundary." "Right eye, right corner." "Right eye, bottom boundary." "Right eye, left corner." "Left eyebrow, upper midpoint." "Right eyebrow, upper midpoint." "Left ear tragion." "Right ear tragion." "Left eye pupil." "Right eye pupil." "Forehead glabella." "Chin gnathion." "Chin left gonion." "Chin right gonion." "Left cheek center." "Right cheek center."]}}, "description" "A face-specific landmark (for example, a face feature).", "id" "GoogleCloudVisionV1p4beta1FaceAnnotationLandmark", "type" "object"}, "GoogleCloudVisionV1p1beta1ProductKeyValue" {"type" "object", "id" "GoogleCloudVisionV1p1beta1ProductKeyValue", "description" "A product label represented as a key-value pair.", "properties" {"key" {"description" "The key of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.", "type" "string"}, "value" {"description" "The value of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.", "type" "string"}}}, "GoogleCloudVisionV1p4beta1ImageAnnotationContext" {"type" "object", "description" "If an image was produced from a file (e.g. a PDF), this message gives information about the source of that image.", "properties" {"uri" {"description" "The URI of the file used to produce the image.", "type" "string"}, "pageNumber" {"description" "If the file was a PDF or TIFF, this field gives the page number within the file used to produce the image.", "format" "int32", "type" "integer"}}, "id" "GoogleCloudVisionV1p4beta1ImageAnnotationContext"}, "GoogleCloudVisionV1p3beta1ProductSearchResultsObjectAnnotation" {"type" "object", "properties" {"mid" {"type" "string", "description" "Object ID that should align with EntityAnnotation mid."}, "name" {"description" "Object name, expressed in its `language_code` language.", "type" "string"}, "score" {"type" "number", "format" "float", "description" "Score of the result. Range [0, 1]."}, "languageCode" {"type" "string", "description" "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier."}}, "id" "GoogleCloudVisionV1p3beta1ProductSearchResultsObjectAnnotation", "description" "Prediction for what the object in the bounding box is."}, "GoogleCloudVisionV1p3beta1WebDetectionWebLabel" {"description" "Label to provide extra metadata for the web detection.", "type" "object", "properties" {"label" {"description" "Label for extra metadata.", "type" "string"}, "languageCode" {"description" "The BCP-47 language code for `label`, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.", "type" "string"}}, "id" "GoogleCloudVisionV1p3beta1WebDetectionWebLabel"}, "AnnotateFileResponse" {"description" "Response to a single file annotation request. A file may contain one or more images, which individually have their own responses.", "id" "AnnotateFileResponse", "type" "object", "properties" {"error" {"description" "If set, represents the error message for the failed request. The `responses` field will not be set in this case.", "$ref" "Status"}, "responses" {"type" "array", "description" "Individual responses to images found within the file. This field will be empty if the `error` field is set.", "items" {"$ref" "AnnotateImageResponse"}}, "inputConfig" {"$ref" "InputConfig", "description" "Information about the file for which this response is generated."}, "totalPages" {"description" "This field gives the total number of pages in the file.", "format" "int32", "type" "integer"}}}, "GoogleCloudVisionV1p4beta1Word" {"properties" {"boundingBox" {"$ref" "GoogleCloudVisionV1p4beta1BoundingPoly", "description" "The bounding box for the word. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the 'natural' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it's rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3)."}, "symbols" {"description" "List of symbols in the word. The order of the symbols follows the natural reading order.", "type" "array", "items" {"$ref" "GoogleCloudVisionV1p4beta1Symbol"}}, "confidence" {"format" "float", "type" "number", "description" "Confidence of the OCR results for the word. Range [0, 1]."}, "property" {"description" "Additional information detected for the word.", "$ref" "GoogleCloudVisionV1p4beta1TextAnnotationTextProperty"}}, "id" "GoogleCloudVisionV1p4beta1Word", "type" "object", "description" "A word representation."}, "GoogleCloudVisionV1p2beta1SafeSearchAnnotation" {"properties" {"medical" {"enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "type" "string", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "description" "Likelihood that this is a medical image."}, "spoof" {"description" "Spoof likelihood. The likelihood that an modification was made to the image's canonical version to make it appear funny or offensive.", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "type" "string"}, "violence" {"description" "Likelihood that this image contains violent content.", "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "type" "string"}, "racy" {"enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "type" "string", "description" "Likelihood that the request image contains racy content. Racy content may include (but is not limited to) skimpy or sheer clothing, strategically covered nudity, lewd or provocative poses, or close-ups of sensitive body areas.", "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"]}, "adult" {"enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "type" "string", "description" "Represents the adult content likelihood for the image. Adult content may contain elements such as nudity, pornographic images or cartoons, or sexual activities."}}, "id" "GoogleCloudVisionV1p2beta1SafeSearchAnnotation", "description" "Set of features pertaining to the image, computed by computer vision methods over safe-search verticals (for example, adult, spoof, medical, violence).", "type" "object"}, "WebImage" {"id" "WebImage", "description" "Metadata for online images.", "type" "object", "properties" {"score" {"description" "(Deprecated) Overall relevancy score for the image.", "format" "float", "type" "number"}, "url" {"type" "string", "description" "The result image URL."}}}, "GoogleCloudVisionV1p4beta1Property" {"description" "A `Property` consists of a user-supplied name/value pair.", "type" "object", "properties" {"value" {"description" "Value of the property.", "type" "string"}, "name" {"type" "string", "description" "Name of the property."}, "uint64Value" {"description" "Value of numeric properties.", "type" "string", "format" "uint64"}}, "id" "GoogleCloudVisionV1p4beta1Property"}, "CropHintsAnnotation" {"description" "Set of crop hints that are used to generate new crops when serving images.", "id" "CropHintsAnnotation", "properties" {"cropHints" {"type" "array", "items" {"$ref" "CropHint"}, "description" "Crop hint results."}}, "type" "object"}, "BatchOperationMetadata" {"description" "Metadata for the batch operations such as the current state. This is included in the `metadata` field of the `Operation` returned by the `GetOperation` call of the `google::longrunning::Operations` service.", "type" "object", "id" "BatchOperationMetadata", "properties" {"state" {"type" "string", "description" "The current state of the batch operation.", "enumDescriptions" ["Invalid." "Request is actively being processed." "The request is done and at least one item has been successfully processed." "The request is done and no item has been successfully processed." "The request is done after the longrunning.Operations.CancelOperation has been called by the user. Any records that were processed before the cancel command are output as specified in the request."], "enum" ["STATE_UNSPECIFIED" "PROCESSING" "SUCCESSFUL" "FAILED" "CANCELLED"]}, "endTime" {"format" "google-datetime", "description" "The time when the batch request is finished and google.longrunning.Operation.done is set to true.", "type" "string"}, "submitTime" {"format" "google-datetime", "type" "string", "description" "The time when the batch request was submitted to the server."}}}, "GroupedResult" {"description" "Information about the products similar to a single product in a query image.", "type" "object", "id" "GroupedResult", "properties" {"boundingPoly" {"description" "The bounding polygon around the product detected in the query image.", "$ref" "BoundingPoly"}, "results" {"items" {"$ref" "Result"}, "description" "List of results, one for each product match.", "type" "array"}, "objectAnnotations" {"description" "List of generic predictions for the object in the bounding box.", "type" "array", "items" {"$ref" "ObjectAnnotation"}}}}, "GoogleCloudVisionV1p3beta1AsyncAnnotateFileResponse" {"id" "GoogleCloudVisionV1p3beta1AsyncAnnotateFileResponse", "properties" {"outputConfig" {"description" "The output location and metadata from AsyncAnnotateFileRequest.", "$ref" "GoogleCloudVisionV1p3beta1OutputConfig"}}, "description" "The response for a single offline file annotation request.", "type" "object"}, "GoogleCloudVisionV1p1beta1NormalizedVertex" {"description" "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.", "type" "object", "id" "GoogleCloudVisionV1p1beta1NormalizedVertex", "properties" {"x" {"type" "number", "format" "float", "description" "X coordinate."}, "y" {"description" "Y coordinate.", "format" "float", "type" "number"}}}, "GoogleCloudVisionV1p1beta1AnnotateImageResponse" {"id" "GoogleCloudVisionV1p1beta1AnnotateImageResponse", "description" "Response to an image annotation request.", "type" "object", "properties" {"imagePropertiesAnnotation" {"$ref" "GoogleCloudVisionV1p1beta1ImageProperties", "description" "If present, image properties were extracted successfully."}, "fullTextAnnotation" {"$ref" "GoogleCloudVisionV1p1beta1TextAnnotation", "description" "If present, text (OCR) detection or document (OCR) text detection has completed successfully. This annotation provides the structural hierarchy for the OCR detected text."}, "logoAnnotations" {"type" "array", "description" "If present, logo detection has completed successfully.", "items" {"$ref" "GoogleCloudVisionV1p1beta1EntityAnnotation"}}, "webDetection" {"description" "If present, web detection has completed successfully.", "$ref" "GoogleCloudVisionV1p1beta1WebDetection"}, "productSearchResults" {"description" "If present, product search has completed successfully.", "$ref" "GoogleCloudVisionV1p1beta1ProductSearchResults"}, "cropHintsAnnotation" {"description" "If present, crop hints have completed successfully.", "$ref" "GoogleCloudVisionV1p1beta1CropHintsAnnotation"}, "error" {"description" "If set, represents the error message for the operation. Note that filled-in image annotations are guaranteed to be correct, even when `error` is set.", "$ref" "Status"}, "safeSearchAnnotation" {"$ref" "GoogleCloudVisionV1p1beta1SafeSearchAnnotation", "description" "If present, safe-search annotation has completed successfully."}, "labelAnnotations" {"items" {"$ref" "GoogleCloudVisionV1p1beta1EntityAnnotation"}, "type" "array", "description" "If present, label detection has completed successfully."}, "context" {"description" "If present, contextual information is needed to understand where this image comes from.", "$ref" "GoogleCloudVisionV1p1beta1ImageAnnotationContext"}, "faceAnnotations" {"items" {"$ref" "GoogleCloudVisionV1p1beta1FaceAnnotation"}, "description" "If present, face detection has completed successfully.", "type" "array"}, "textAnnotations" {"type" "array", "description" "If present, text (OCR) detection has completed successfully.", "items" {"$ref" "GoogleCloudVisionV1p1beta1EntityAnnotation"}}, "landmarkAnnotations" {"type" "array", "description" "If present, landmark detection has completed successfully.", "items" {"$ref" "GoogleCloudVisionV1p1beta1EntityAnnotation"}}, "localizedObjectAnnotations" {"description" "If present, localized object detection has completed successfully. This will be sorted descending by confidence score.", "type" "array", "items" {"$ref" "GoogleCloudVisionV1p1beta1LocalizedObjectAnnotation"}}}}, "GoogleCloudVisionV1p4beta1ProductSearchResultsObjectAnnotation" {"description" "Prediction for what the object in the bounding box is.", "type" "object", "properties" {"languageCode" {"description" "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.", "type" "string"}, "mid" {"type" "string", "description" "Object ID that should align with EntityAnnotation mid."}, "score" {"description" "Score of the result. Range [0, 1].", "format" "float", "type" "number"}, "name" {"type" "string", "description" "Object name, expressed in its `language_code` language."}}, "id" "GoogleCloudVisionV1p4beta1ProductSearchResultsObjectAnnotation"}, "GoogleCloudVisionV1p1beta1ProductSearchResultsGroupedResult" {"id" "GoogleCloudVisionV1p1beta1ProductSearchResultsGroupedResult", "properties" {"results" {"description" "List of results, one for each product match.", "type" "array", "items" {"$ref" "GoogleCloudVisionV1p1beta1ProductSearchResultsResult"}}, "objectAnnotations" {"items" {"$ref" "GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation"}, "type" "array", "description" "List of generic predictions for the object in the bounding box."}, "boundingPoly" {"$ref" "GoogleCloudVisionV1p1beta1BoundingPoly", "description" "The bounding polygon around the product detected in the query image."}}, "description" "Information about the products similar to a single product in a query image.", "type" "object"}, "GoogleCloudVisionV1p2beta1BoundingPoly" {"id" "GoogleCloudVisionV1p2beta1BoundingPoly", "description" "A bounding polygon for the detected image annotation.", "type" "object", "properties" {"vertices" {"items" {"$ref" "GoogleCloudVisionV1p2beta1Vertex"}, "type" "array", "description" "The bounding polygon vertices."}, "normalizedVertices" {"type" "array", "description" "The bounding polygon normalized vertices.", "items" {"$ref" "GoogleCloudVisionV1p2beta1NormalizedVertex"}}}}, "GoogleCloudVisionV1p1beta1OutputConfig" {"type" "object", "id" "GoogleCloudVisionV1p1beta1OutputConfig", "properties" {"gcsDestination" {"description" "The Google Cloud Storage location to write the output(s) to.", "$ref" "GoogleCloudVisionV1p1beta1GcsDestination"}, "batchSize" {"description" "The max number of response protos to put into each output JSON file on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 response protos will be generated. If `batch_size` = 20, then 5 json files each containing 20 response protos will be written under the prefix `gcs_destination`.`uri`. Currently, batch_size only applies to GcsDestination, with potential future support for other output configurations.", "type" "integer", "format" "int32"}}, "description" "The desired output location and metadata."}, "GoogleCloudVisionV1p3beta1EntityAnnotation" {"properties" {"properties" {"description" "Some entities may have optional user-supplied `Property` (name/value) fields, such a score or string that qualifies the entity.", "items" {"$ref" "GoogleCloudVisionV1p3beta1Property"}, "type" "array"}, "confidence" {"description" "**Deprecated. Use `score` instead.** The accuracy of the entity detection in an image. For example, for an image in which the \"Eiffel Tower\" entity is detected, this field represents the confidence that there is a tower in the query image. Range [0, 1].", "type" "number", "format" "float"}, "score" {"type" "number", "format" "float", "description" "Overall score of the result. Range [0, 1]."}, "topicality" {"type" "number", "format" "float", "description" "The relevancy of the ICA (Image Content Annotation) label to the image. For example, the relevancy of \"tower\" is likely higher to an image containing the detected \"Eiffel Tower\" than to an image containing a detected distant towering building, even though the confidence that there is a tower in each image may be the same. Range [0, 1]."}, "boundingPoly" {"$ref" "GoogleCloudVisionV1p3beta1BoundingPoly", "description" "Image region to which this entity belongs. Not produced for `LABEL_DETECTION` features."}, "locale" {"type" "string", "description" "The language code for the locale in which the entity textual `description` is expressed."}, "locations" {"items" {"$ref" "GoogleCloudVisionV1p3beta1LocationInfo"}, "description" "The location information for the detected entity. Multiple `LocationInfo` elements can be present because one location may indicate the location of the scene in the image, and another location may indicate the location of the place where the image was taken. Location information is usually present for landmarks.", "type" "array"}, "mid" {"description" "Opaque entity ID. Some IDs may be available in [Google Knowledge Graph Search API](https://developers.google.com/knowledge-graph/).", "type" "string"}, "description" {"type" "string", "description" "Entity textual description, expressed in its `locale` language."}}, "type" "object", "description" "Set of detected entity features.", "id" "GoogleCloudVisionV1p3beta1EntityAnnotation"}, "WebDetection" {"id" "WebDetection", "description" "Relevant information for the image from the Internet.", "properties" {"visuallySimilarImages" {"items" {"$ref" "WebImage"}, "type" "array", "description" "The visually similar image results."}, "bestGuessLabels" {"items" {"$ref" "WebLabel"}, "type" "array", "description" "The service's best guess as to the topic of the request image. Inferred from similar images on the open web."}, "pagesWithMatchingImages" {"type" "array", "items" {"$ref" "WebPage"}, "description" "Web pages containing the matching images from the Internet."}, "partialMatchingImages" {"type" "array", "items" {"$ref" "WebImage"}, "description" "Partial matching images from the Internet. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops."}, "fullMatchingImages" {"description" "Fully matching images from the Internet. Can include resized copies of the query image.", "items" {"$ref" "WebImage"}, "type" "array"}, "webEntities" {"items" {"$ref" "WebEntity"}, "description" "Deduced entities from similar images on the Internet.", "type" "array"}}, "type" "object"}, "KeyValue" {"type" "object", "description" "A product label represented as a key-value pair.", "properties" {"key" {"type" "string", "description" "The key of the label attached to the product. Cannot be empty and cannot exceed 128 bytes."}, "value" {"type" "string", "description" "The value of the label attached to the product. Cannot be empty and cannot exceed 128 bytes."}}, "id" "KeyValue"}, "GoogleCloudVisionV1p4beta1AnnotateImageResponse" {"properties" {"imagePropertiesAnnotation" {"$ref" "GoogleCloudVisionV1p4beta1ImageProperties", "description" "If present, image properties were extracted successfully."}, "fullTextAnnotation" {"description" "If present, text (OCR) detection or document (OCR) text detection has completed successfully. This annotation provides the structural hierarchy for the OCR detected text.", "$ref" "GoogleCloudVisionV1p4beta1TextAnnotation"}, "logoAnnotations" {"type" "array", "items" {"$ref" "GoogleCloudVisionV1p4beta1EntityAnnotation"}, "description" "If present, logo detection has completed successfully."}, "webDetection" {"description" "If present, web detection has completed successfully.", "$ref" "GoogleCloudVisionV1p4beta1WebDetection"}, "productSearchResults" {"$ref" "GoogleCloudVisionV1p4beta1ProductSearchResults", "description" "If present, product search has completed successfully."}, "cropHintsAnnotation" {"description" "If present, crop hints have completed successfully.", "$ref" "GoogleCloudVisionV1p4beta1CropHintsAnnotation"}, "error" {"description" "If set, represents the error message for the operation. Note that filled-in image annotations are guaranteed to be correct, even when `error` is set.", "$ref" "Status"}, "safeSearchAnnotation" {"$ref" "GoogleCloudVisionV1p4beta1SafeSearchAnnotation", "description" "If present, safe-search annotation has completed successfully."}, "labelAnnotations" {"items" {"$ref" "GoogleCloudVisionV1p4beta1EntityAnnotation"}, "type" "array", "description" "If present, label detection has completed successfully."}, "context" {"$ref" "GoogleCloudVisionV1p4beta1ImageAnnotationContext", "description" "If present, contextual information is needed to understand where this image comes from."}, "faceAnnotations" {"type" "array", "items" {"$ref" "GoogleCloudVisionV1p4beta1FaceAnnotation"}, "description" "If present, face detection has completed successfully."}, "textAnnotations" {"description" "If present, text (OCR) detection has completed successfully.", "items" {"$ref" "GoogleCloudVisionV1p4beta1EntityAnnotation"}, "type" "array"}, "landmarkAnnotations" {"description" "If present, landmark detection has completed successfully.", "items" {"$ref" "GoogleCloudVisionV1p4beta1EntityAnnotation"}, "type" "array"}, "localizedObjectAnnotations" {"type" "array", "items" {"$ref" "GoogleCloudVisionV1p4beta1LocalizedObjectAnnotation"}, "description" "If present, localized object detection has completed successfully. This will be sorted descending by confidence score."}}, "type" "object", "id" "GoogleCloudVisionV1p4beta1AnnotateImageResponse", "description" "Response to an image annotation request."}, "GoogleCloudVisionV1p2beta1AnnotateFileResponse" {"description" "Response to a single file annotation request. A file may contain one or more images, which individually have their own responses.", "id" "GoogleCloudVisionV1p2beta1AnnotateFileResponse", "type" "object", "properties" {"error" {"$ref" "Status", "description" "If set, represents the error message for the failed request. The `responses` field will not be set in this case."}, "responses" {"items" {"$ref" "GoogleCloudVisionV1p2beta1AnnotateImageResponse"}, "type" "array", "description" "Individual responses to images found within the file. This field will be empty if the `error` field is set."}, "totalPages" {"description" "This field gives the total number of pages in the file.", "type" "integer", "format" "int32"}, "inputConfig" {"description" "Information about the file for which this response is generated.", "$ref" "GoogleCloudVisionV1p2beta1InputConfig"}}}, "GoogleCloudVisionV1p1beta1TextAnnotationTextProperty" {"id" "GoogleCloudVisionV1p1beta1TextAnnotationTextProperty", "properties" {"detectedBreak" {"$ref" "GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak", "description" "Detected start or end of a text segment."}, "detectedLanguages" {"items" {"$ref" "GoogleCloudVisionV1p1beta1TextAnnotationDetectedLanguage"}, "type" "array", "description" "A list of detected languages together with confidence."}}, "description" "Additional information detected on the structural component.", "type" "object"}, "GoogleCloudVisionV1p1beta1Page" {"properties" {"height" {"description" "Page height. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.", "format" "int32", "type" "integer"}, "blocks" {"items" {"$ref" "GoogleCloudVisionV1p1beta1Block"}, "type" "array", "description" "List of blocks of text, images etc on this page."}, "width" {"type" "integer", "description" "Page width. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.", "format" "int32"}, "property" {"description" "Additional information detected on the page.", "$ref" "GoogleCloudVisionV1p1beta1TextAnnotationTextProperty"}, "confidence" {"type" "number", "format" "float", "description" "Confidence of the OCR results on the page. Range [0, 1]."}}, "id" "GoogleCloudVisionV1p1beta1Page", "description" "Detected page from OCR.", "type" "object"}, "Product" {"description" "A Product contains ReferenceImages.", "type" "object", "id" "Product", "properties" {"productLabels" {"items" {"$ref" "KeyValue"}, "description" "Key-value pairs that can be attached to a product. At query time, constraints can be specified based on the product_labels. Note that integer values can be provided as strings, e.g. \"1199\". Only strings with integer values can match a range-based restriction which is to be supported soon. Multiple values can be assigned to the same key. One product may have up to 500 product_labels. Notice that the total number of distinct product_labels over all products in one ProductSet cannot exceed 1M, otherwise the product search pipeline will refuse to work for that ProductSet.", "type" "array"}, "productCategory" {"description" "Immutable. The category for the product identified by the reference image. This should be one of \"homegoods-v2\", \"apparel-v2\", \"toys-v2\", \"packagedgoods-v1\" or \"general-v1\". The legacy categories \"homegoods\", \"apparel\", and \"toys\" are still supported, but these should not be used for new products.", "type" "string"}, "description" {"type" "string", "description" "User-provided metadata to be stored with this product. Must be at most 4096 characters long."}, "displayName" {"type" "string", "description" "The user-provided name for this Product. Must not be empty. Must be at most 4096 characters long."}, "name" {"type" "string", "description" "The resource name of the product. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`. This field is ignored when creating a product."}}}, "NormalizedVertex" {"id" "NormalizedVertex", "type" "object", "description" "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.", "properties" {"x" {"type" "number", "description" "X coordinate.", "format" "float"}, "y" {"format" "float", "type" "number", "description" "Y coordinate."}}}, "GoogleCloudVisionV1p4beta1Paragraph" {"description" "Structural unit of text representing a number of words in certain order.", "type" "object", "properties" {"words" {"type" "array", "items" {"$ref" "GoogleCloudVisionV1p4beta1Word"}, "description" "List of all words in this paragraph."}, "confidence" {"format" "float", "description" "Confidence of the OCR results for the paragraph. Range [0, 1].", "type" "number"}, "property" {"$ref" "GoogleCloudVisionV1p4beta1TextAnnotationTextProperty", "description" "Additional information detected for the paragraph."}, "boundingBox" {"$ref" "GoogleCloudVisionV1p4beta1BoundingPoly", "description" "The bounding box for the paragraph. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the 'natural' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it's rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3)."}}, "id" "GoogleCloudVisionV1p4beta1Paragraph"}, "InputConfig" {"id" "InputConfig", "type" "object", "description" "The desired input location and metadata.", "properties" {"gcsSource" {"$ref" "GcsSource", "description" "The Google Cloud Storage location to read the input from."}, "content" {"description" "File content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64. Currently, this field only works for BatchAnnotateFiles requests. It does not work for AsyncBatchAnnotateFiles requests.", "type" "string", "format" "byte"}, "mimeType" {"type" "string", "description" "The type of the file. Currently only \"application/pdf\", \"image/tiff\" and \"image/gif\" are supported. Wildcards are not supported."}}}, "BatchAnnotateFilesResponse" {"properties" {"responses" {"description" "The list of file annotation responses, each response corresponding to each AnnotateFileRequest in BatchAnnotateFilesRequest.", "type" "array", "items" {"$ref" "AnnotateFileResponse"}}}, "description" "A list of file annotation responses.", "type" "object", "id" "BatchAnnotateFilesResponse"}, "Landmark" {"id" "Landmark", "type" "object", "properties" {"type" {"enum" ["UNKNOWN_LANDMARK" "LEFT_EYE" "RIGHT_EYE" "LEFT_OF_LEFT_EYEBROW" "RIGHT_OF_LEFT_EYEBROW" "LEFT_OF_RIGHT_EYEBROW" "RIGHT_OF_RIGHT_EYEBROW" "MIDPOINT_BETWEEN_EYES" "NOSE_TIP" "UPPER_LIP" "LOWER_LIP" "MOUTH_LEFT" "MOUTH_RIGHT" "MOUTH_CENTER" "NOSE_BOTTOM_RIGHT" "NOSE_BOTTOM_LEFT" "NOSE_BOTTOM_CENTER" "LEFT_EYE_TOP_BOUNDARY" "LEFT_EYE_RIGHT_CORNER" "LEFT_EYE_BOTTOM_BOUNDARY" "LEFT_EYE_LEFT_CORNER" "RIGHT_EYE_TOP_BOUNDARY" "RIGHT_EYE_RIGHT_CORNER" "RIGHT_EYE_BOTTOM_BOUNDARY" "RIGHT_EYE_LEFT_CORNER" "LEFT_EYEBROW_UPPER_MIDPOINT" "RIGHT_EYEBROW_UPPER_MIDPOINT" "LEFT_EAR_TRAGION" "RIGHT_EAR_TRAGION" "LEFT_EYE_PUPIL" "RIGHT_EYE_PUPIL" "FOREHEAD_GLABELLA" "CHIN_GNATHION" "CHIN_LEFT_GONION" "CHIN_RIGHT_GONION" "LEFT_CHEEK_CENTER" "RIGHT_CHEEK_CENTER"], "description" "Face landmark type.", "type" "string", "enumDescriptions" ["Unknown face landmark detected. Should not be filled." "Left eye." "Right eye." "Left of left eyebrow." "Right of left eyebrow." "Left of right eyebrow." "Right of right eyebrow." "Midpoint between eyes." "Nose tip." "Upper lip." "Lower lip." "Mouth left." "Mouth right." "Mouth center." "Nose, bottom right." "Nose, bottom left." "Nose, bottom center." "Left eye, top boundary." "Left eye, right corner." "Left eye, bottom boundary." "Left eye, left corner." "Right eye, top boundary." "Right eye, right corner." "Right eye, bottom boundary." "Right eye, left corner." "Left eyebrow, upper midpoint." "Right eyebrow, upper midpoint." "Left ear tragion." "Right ear tragion." "Left eye pupil." "Right eye pupil." "Forehead glabella." "Chin gnathion." "Chin left gonion." "Chin right gonion." "Left cheek center." "Right cheek center."]}, "position" {"$ref" "Position", "description" "Face landmark position."}}, "description" "A face-specific landmark (for example, a face feature)."}, "GoogleCloudVisionV1p2beta1ProductSearchResultsGroupedResult" {"properties" {"objectAnnotations" {"type" "array", "items" {"$ref" "GoogleCloudVisionV1p2beta1ProductSearchResultsObjectAnnotation"}, "description" "List of generic predictions for the object in the bounding box."}, "results" {"type" "array", "description" "List of results, one for each product match.", "items" {"$ref" "GoogleCloudVisionV1p2beta1ProductSearchResultsResult"}}, "boundingPoly" {"description" "The bounding polygon around the product detected in the query image.", "$ref" "GoogleCloudVisionV1p2beta1BoundingPoly"}}, "description" "Information about the products similar to a single product in a query image.", "id" "GoogleCloudVisionV1p2beta1ProductSearchResultsGroupedResult", "type" "object"}, "GoogleCloudVisionV1p3beta1Property" {"description" "A `Property` consists of a user-supplied name/value pair.", "type" "object", "properties" {"name" {"description" "Name of the property.", "type" "string"}, "uint64Value" {"format" "uint64", "type" "string", "description" "Value of numeric properties."}, "value" {"type" "string", "description" "Value of the property."}}, "id" "GoogleCloudVisionV1p3beta1Property"}, "TextAnnotation" {"description" "TextAnnotation contains a structured representation of OCR extracted text. The hierarchy of an OCR extracted text structure is like this: TextAnnotation -> Page -> Block -> Paragraph -> Word -> Symbol Each structural component, starting from Page, may further have their own properties. Properties describe detected languages, breaks etc.. Please refer to the TextAnnotation.TextProperty message definition below for more detail.", "properties" {"text" {"type" "string", "description" "UTF-8 text detected on the pages."}, "pages" {"type" "array", "description" "List of pages detected by OCR.", "items" {"$ref" "Page"}}}, "id" "TextAnnotation", "type" "object"}, "GoogleCloudVisionV1p4beta1ProductSearchResultsResult" {"properties" {"image" {"type" "string", "description" "The resource name of the image from the product that is the closest match to the query."}, "product" {"$ref" "GoogleCloudVisionV1p4beta1Product", "description" "The Product."}, "score" {"format" "float", "description" "A confidence level on the match, ranging from 0 (no confidence) to 1 (full confidence).", "type" "number"}}, "type" "object", "id" "GoogleCloudVisionV1p4beta1ProductSearchResultsResult", "description" "Information about a product."}, "GoogleCloudVisionV1p1beta1AsyncBatchAnnotateImagesRequest" {"properties" {"outputConfig" {"description" "Required. The desired output location and metadata (e.g. format).", "$ref" "GoogleCloudVisionV1p1beta1OutputConfig"}, "requests" {"items" {"$ref" "GoogleCloudVisionV1p1beta1AnnotateImageRequest"}, "description" "Required. Individual image annotation requests for this batch.", "type" "array"}, "parent" {"type" "string", "description" "Optional. Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no parent is specified, a region will be chosen automatically. Supported location-ids: `us`: USA country only, `asia`: East asia areas, like Japan, Taiwan, `eu`: The European Union. Example: `projects/project-A/locations/eu`."}}, "id" "GoogleCloudVisionV1p1beta1AsyncBatchAnnotateImagesRequest", "description" "Request for async image annotation for a list of images.", "type" "object"}, "GoogleCloudVisionV1p1beta1GcsDestination" {"properties" {"uri" {"description" "Google Cloud Storage URI prefix where the results will be stored. Results will be in JSON format and preceded by its corresponding input URI prefix. This field can either represent a gcs file prefix or gcs directory. In either case, the uri should be unique because in order to get all of the output files, you will need to do a wildcard gcs search on the uri prefix you provide. Examples: * File Prefix: gs://bucket-name/here/filenameprefix The output files will be created in gs://bucket-name/here/ and the names of the output files will begin with \"filenameprefix\". * Directory Prefix: gs://bucket-name/some/location/ The output files will be created in gs://bucket-name/some/location/ and the names of the output files could be anything because there was no filename prefix specified. If multiple outputs, each response is still AnnotateFileResponse, each of which contains some subset of the full list of AnnotateImageResponse. Multiple outputs can happen if, for example, the output JSON is too large and overflows into multiple sharded files.", "type" "string"}}, "type" "object", "description" "The Google Cloud Storage location where the output will be written to.", "id" "GoogleCloudVisionV1p1beta1GcsDestination"}, "GoogleCloudVisionV1p3beta1FaceAnnotation" {"description" "A face annotation object contains the results of face detection.", "properties" {"angerLikelihood" {"enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "description" "Anger likelihood.", "type" "string", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."]}, "landmarks" {"description" "Detected face landmarks.", "type" "array", "items" {"$ref" "GoogleCloudVisionV1p3beta1FaceAnnotationLandmark"}}, "surpriseLikelihood" {"type" "string", "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "description" "Surprise likelihood."}, "landmarkingConfidence" {"format" "float", "description" "Face landmarking confidence. Range [0, 1].", "type" "number"}, "boundingPoly" {"description" "The bounding polygon around the face. The coordinates of the bounding box are in the original image's scale. The bounding box is computed to \"frame\" the face in accordance with human expectations. It is based on the landmarker results. Note that one or more x and/or y coordinates may not be generated in the `BoundingPoly` (the polygon will be unbounded) if only a partial face appears in the image to be annotated.", "$ref" "GoogleCloudVisionV1p3beta1BoundingPoly"}, "blurredLikelihood" {"description" "Blurred likelihood.", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "type" "string", "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"]}, "rollAngle" {"format" "float", "type" "number", "description" "Roll angle, which indicates the amount of clockwise/anti-clockwise rotation of the face relative to the image vertical about the axis perpendicular to the face. Range [-180,180]."}, "fdBoundingPoly" {"$ref" "GoogleCloudVisionV1p3beta1BoundingPoly", "description" "The `fd_bounding_poly` bounding polygon is tighter than the `boundingPoly`, and encloses only the skin part of the face. Typically, it is used to eliminate the face from any image analysis that detects the \"amount of skin\" visible in an image. It is not based on the landmarker results, only on the initial face detection, hence the fd (face detection) prefix."}, "headwearLikelihood" {"enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "description" "Headwear likelihood.", "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "type" "string"}, "underExposedLikelihood" {"enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "type" "string", "description" "Under-exposed likelihood.", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."]}, "panAngle" {"format" "float", "description" "Yaw angle, which indicates the leftward/rightward angle that the face is pointing relative to the vertical plane perpendicular to the image. Range [-180,180].", "type" "number"}, "joyLikelihood" {"description" "Joy likelihood.", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "type" "string", "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"]}, "tiltAngle" {"format" "float", "description" "Pitch angle, which indicates the upwards/downwards angle that the face is pointing relative to the image's horizontal plane. Range [-180,180].", "type" "number"}, "sorrowLikelihood" {"description" "Sorrow likelihood.", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "type" "string", "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"]}, "detectionConfidence" {"description" "Detection confidence. Range [0, 1].", "format" "float", "type" "number"}}, "id" "GoogleCloudVisionV1p3beta1FaceAnnotation", "type" "object"}, "LocationInfo" {"type" "object", "description" "Detected entity location information.", "id" "LocationInfo", "properties" {"latLng" {"description" "lat/long location coordinates.", "$ref" "LatLng"}}}, "ColorInfo" {"properties" {"score" {"format" "float", "type" "number", "description" "Image-specific score for this color. Value in range [0, 1]."}, "color" {"description" "RGB components of the color.", "$ref" "Color"}, "pixelFraction" {"description" "The fraction of pixels the color occupies in the image. Value in range [0, 1].", "type" "number", "format" "float"}}, "type" "object", "description" "Color information consists of RGB channels, score, and the fraction of the image that the color occupies in the image.", "id" "ColorInfo"}, "GoogleCloudVisionV1p1beta1BoundingPoly" {"id" "GoogleCloudVisionV1p1beta1BoundingPoly", "properties" {"vertices" {"type" "array", "description" "The bounding polygon vertices.", "items" {"$ref" "GoogleCloudVisionV1p1beta1Vertex"}}, "normalizedVertices" {"items" {"$ref" "GoogleCloudVisionV1p1beta1NormalizedVertex"}, "description" "The bounding polygon normalized vertices.", "type" "array"}}, "type" "object", "description" "A bounding polygon for the detected image annotation."}, "GoogleCloudVisionV1p4beta1BatchAnnotateFilesResponse" {"properties" {"responses" {"type" "array", "description" "The list of file annotation responses, each response corresponding to each AnnotateFileRequest in BatchAnnotateFilesRequest.", "items" {"$ref" "GoogleCloudVisionV1p4beta1AnnotateFileResponse"}}}, "description" "A list of file annotation responses.", "type" "object", "id" "GoogleCloudVisionV1p4beta1BatchAnnotateFilesResponse"}, "GoogleCloudVisionV1p4beta1SafeSearchAnnotation" {"type" "object", "id" "GoogleCloudVisionV1p4beta1SafeSearchAnnotation", "properties" {"racy" {"description" "Likelihood that the request image contains racy content. Racy content may include (but is not limited to) skimpy or sheer clothing, strategically covered nudity, lewd or provocative poses, or close-ups of sensitive body areas.", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "type" "string", "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"]}, "spoof" {"description" "Spoof likelihood. The likelihood that an modification was made to the image's canonical version to make it appear funny or offensive.", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "type" "string"}, "medical" {"type" "string", "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "description" "Likelihood that this is a medical image.", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."]}, "adult" {"enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "type" "string", "description" "Represents the adult content likelihood for the image. Adult content may contain elements such as nudity, pornographic images or cartoons, or sexual activities.", "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"]}, "violence" {"description" "Likelihood that this image contains violent content.", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "type" "string", "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"]}}, "description" "Set of features pertaining to the image, computed by computer vision methods over safe-search verticals (for example, adult, spoof, medical, violence)."}, "GoogleCloudVisionV1p1beta1WebDetectionWebLabel" {"description" "Label to provide extra metadata for the web detection.", "type" "object", "id" "GoogleCloudVisionV1p1beta1WebDetectionWebLabel", "properties" {"label" {"description" "Label for extra metadata.", "type" "string"}, "languageCode" {"description" "The BCP-47 language code for `label`, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.", "type" "string"}}}, "GoogleCloudVisionV1p2beta1TextAnnotationDetectedLanguage" {"type" "object", "description" "Detected language for a structural component.", "properties" {"languageCode" {"type" "string", "description" "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier."}, "confidence" {"type" "number", "description" "Confidence of detected language. Range [0, 1].", "format" "float"}}, "id" "GoogleCloudVisionV1p2beta1TextAnnotationDetectedLanguage"}, "GoogleCloudVisionV1p1beta1AsyncBatchAnnotateFilesRequest" {"properties" {"requests" {"type" "array", "description" "Required. Individual async file annotation requests for this batch.", "items" {"$ref" "GoogleCloudVisionV1p1beta1AsyncAnnotateFileRequest"}}, "parent" {"description" "Optional. Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no parent is specified, a region will be chosen automatically. Supported location-ids: `us`: USA country only, `asia`: East asia areas, like Japan, Taiwan, `eu`: The European Union. Example: `projects/project-A/locations/eu`.", "type" "string"}}, "description" "Multiple async file annotation requests are batched into a single service call.", "id" "GoogleCloudVisionV1p1beta1AsyncBatchAnnotateFilesRequest", "type" "object"}, "GoogleCloudVisionV1p1beta1ImageAnnotationContext" {"description" "If an image was produced from a file (e.g. a PDF), this message gives information about the source of that image.", "id" "GoogleCloudVisionV1p1beta1ImageAnnotationContext", "type" "object", "properties" {"uri" {"description" "The URI of the file used to produce the image.", "type" "string"}, "pageNumber" {"type" "integer", "format" "int32", "description" "If the file was a PDF or TIFF, this field gives the page number within the file used to produce the image."}}}, "GoogleCloudVisionV1p2beta1ImageAnnotationContext" {"properties" {"uri" {"description" "The URI of the file used to produce the image.", "type" "string"}, "pageNumber" {"type" "integer", "description" "If the file was a PDF or TIFF, this field gives the page number within the file used to produce the image.", "format" "int32"}}, "id" "GoogleCloudVisionV1p2beta1ImageAnnotationContext", "type" "object", "description" "If an image was produced from a file (e.g. a PDF), this message gives information about the source of that image."}, "GoogleCloudVisionV1p4beta1ReferenceImage" {"type" "object", "id" "GoogleCloudVisionV1p4beta1ReferenceImage", "properties" {"name" {"type" "string", "description" "The resource name of the reference image. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID`. This field is ignored when creating a reference image."}, "boundingPolys" {"description" "Optional. Bounding polygons around the areas of interest in the reference image. If this field is empty, the system will try to detect regions of interest. At most 10 bounding polygons will be used. The provided shape is converted into a non-rotated rectangle. Once converted, the small edge of the rectangle must be greater than or equal to 300 pixels. The aspect ratio must be 1:4 or less (i.e. 1:3 is ok; 1:5 is not).", "type" "array", "items" {"$ref" "GoogleCloudVisionV1p4beta1BoundingPoly"}}, "uri" {"type" "string", "description" "Required. The Google Cloud Storage URI of the reference image. The URI must start with `gs://`."}}, "description" "A `ReferenceImage` represents a product image and its associated metadata, such as bounding boxes."}, "Result" {"id" "Result", "description" "Information about a product.", "type" "object", "properties" {"product" {"description" "The Product.", "$ref" "Product"}, "image" {"type" "string", "description" "The resource name of the image from the product that is the closest match to the query."}, "score" {"type" "number", "format" "float", "description" "A confidence level on the match, ranging from 0 (no confidence) to 1 (full confidence)."}}}, "GoogleCloudVisionV1p3beta1AsyncBatchAnnotateFilesResponse" {"description" "Response to an async batch file annotation request.", "properties" {"responses" {"description" "The list of file annotation responses, one for each request in AsyncBatchAnnotateFilesRequest.", "type" "array", "items" {"$ref" "GoogleCloudVisionV1p3beta1AsyncAnnotateFileResponse"}}}, "id" "GoogleCloudVisionV1p3beta1AsyncBatchAnnotateFilesResponse", "type" "object"}, "GoogleCloudVisionV1p2beta1WebDetectionWebPage" {"id" "GoogleCloudVisionV1p2beta1WebDetectionWebPage", "description" "Metadata for web pages.", "properties" {"partialMatchingImages" {"type" "array", "items" {"$ref" "GoogleCloudVisionV1p2beta1WebDetectionWebImage"}, "description" "Partial matching images on the page. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops."}, "pageTitle" {"type" "string", "description" "Title for the web page, may contain HTML markups."}, "fullMatchingImages" {"items" {"$ref" "GoogleCloudVisionV1p2beta1WebDetectionWebImage"}, "type" "array", "description" "Fully matching images on the page. Can include resized copies of the query image."}, "score" {"type" "number", "format" "float", "description" "(Deprecated) Overall relevancy score for the web page."}, "url" {"type" "string", "description" "The result web page URL."}}, "type" "object"}, "GoogleCloudVisionV1p1beta1Position" {"type" "object", "id" "GoogleCloudVisionV1p1beta1Position", "description" "A 3D position in the image, used primarily for Face detection landmarks. A valid Position must have both x and y coordinates. The position coordinates are in the same scale as the original image.", "properties" {"x" {"type" "number", "description" "X coordinate.", "format" "float"}, "y" {"format" "float", "type" "number", "description" "Y coordinate."}, "z" {"description" "Z coordinate (or depth).", "format" "float", "type" "number"}}}, "GoogleCloudVisionV1p2beta1ColorInfo" {"type" "object", "description" "Color information consists of RGB channels, score, and the fraction of the image that the color occupies in the image.", "properties" {"score" {"format" "float", "description" "Image-specific score for this color. Value in range [0, 1].", "type" "number"}, "color" {"$ref" "Color", "description" "RGB components of the color."}, "pixelFraction" {"format" "float", "description" "The fraction of pixels the color occupies in the image. Value in range [0, 1].", "type" "number"}}, "id" "GoogleCloudVisionV1p2beta1ColorInfo"}, "GoogleCloudVisionV1p2beta1FaceAnnotation" {"id" "GoogleCloudVisionV1p2beta1FaceAnnotation", "type" "object", "properties" {"angerLikelihood" {"enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "type" "string", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "description" "Anger likelihood."}, "landmarks" {"type" "array", "items" {"$ref" "GoogleCloudVisionV1p2beta1FaceAnnotationLandmark"}, "description" "Detected face landmarks."}, "surpriseLikelihood" {"description" "Surprise likelihood.", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "type" "string"}, "landmarkingConfidence" {"description" "Face landmarking confidence. Range [0, 1].", "type" "number", "format" "float"}, "boundingPoly" {"$ref" "GoogleCloudVisionV1p2beta1BoundingPoly", "description" "The bounding polygon around the face. The coordinates of the bounding box are in the original image's scale. The bounding box is computed to \"frame\" the face in accordance with human expectations. It is based on the landmarker results. Note that one or more x and/or y coordinates may not be generated in the `BoundingPoly` (the polygon will be unbounded) if only a partial face appears in the image to be annotated."}, "blurredLikelihood" {"enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "type" "string", "description" "Blurred likelihood.", "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"]}, "rollAngle" {"description" "Roll angle, which indicates the amount of clockwise/anti-clockwise rotation of the face relative to the image vertical about the axis perpendicular to the face. Range [-180,180].", "type" "number", "format" "float"}, "fdBoundingPoly" {"description" "The `fd_bounding_poly` bounding polygon is tighter than the `boundingPoly`, and encloses only the skin part of the face. Typically, it is used to eliminate the face from any image analysis that detects the \"amount of skin\" visible in an image. It is not based on the landmarker results, only on the initial face detection, hence the fd (face detection) prefix.", "$ref" "GoogleCloudVisionV1p2beta1BoundingPoly"}, "headwearLikelihood" {"type" "string", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "description" "Headwear likelihood.", "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"]}, "underExposedLikelihood" {"description" "Under-exposed likelihood.", "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "type" "string"}, "panAngle" {"description" "Yaw angle, which indicates the leftward/rightward angle that the face is pointing relative to the vertical plane perpendicular to the image. Range [-180,180].", "type" "number", "format" "float"}, "joyLikelihood" {"type" "string", "description" "Joy likelihood.", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"]}, "tiltAngle" {"description" "Pitch angle, which indicates the upwards/downwards angle that the face is pointing relative to the image's horizontal plane. Range [-180,180].", "format" "float", "type" "number"}, "sorrowLikelihood" {"enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "description" "Sorrow likelihood.", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "type" "string"}, "detectionConfidence" {"description" "Detection confidence. Range [0, 1].", "type" "number", "format" "float"}}, "description" "A face annotation object contains the results of face detection."}, "FaceAnnotation" {"type" "object", "id" "FaceAnnotation", "description" "A face annotation object contains the results of face detection.", "properties" {"angerLikelihood" {"description" "Anger likelihood.", "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "type" "string", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."]}, "landmarks" {"items" {"$ref" "Landmark"}, "type" "array", "description" "Detected face landmarks."}, "surpriseLikelihood" {"description" "Surprise likelihood.", "type" "string", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"]}, "landmarkingConfidence" {"description" "Face landmarking confidence. Range [0, 1].", "type" "number", "format" "float"}, "boundingPoly" {"description" "The bounding polygon around the face. The coordinates of the bounding box are in the original image's scale. The bounding box is computed to \"frame\" the face in accordance with human expectations. It is based on the landmarker results. Note that one or more x and/or y coordinates may not be generated in the `BoundingPoly` (the polygon will be unbounded) if only a partial face appears in the image to be annotated.", "$ref" "BoundingPoly"}, "blurredLikelihood" {"enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "type" "string", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "description" "Blurred likelihood."}, "rollAngle" {"description" "Roll angle, which indicates the amount of clockwise/anti-clockwise rotation of the face relative to the image vertical about the axis perpendicular to the face. Range [-180,180].", "type" "number", "format" "float"}, "fdBoundingPoly" {"$ref" "BoundingPoly", "description" "The `fd_bounding_poly` bounding polygon is tighter than the `boundingPoly`, and encloses only the skin part of the face. Typically, it is used to eliminate the face from any image analysis that detects the \"amount of skin\" visible in an image. It is not based on the landmarker results, only on the initial face detection, hence the fd (face detection) prefix."}, "headwearLikelihood" {"enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "description" "Headwear likelihood.", "type" "string", "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"]}, "underExposedLikelihood" {"enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "description" "Under-exposed likelihood.", "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "type" "string"}, "panAngle" {"format" "float", "type" "number", "description" "Yaw angle, which indicates the leftward/rightward angle that the face is pointing relative to the vertical plane perpendicular to the image. Range [-180,180]."}, "joyLikelihood" {"enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "type" "string", "description" "Joy likelihood."}, "tiltAngle" {"description" "Pitch angle, which indicates the upwards/downwards angle that the face is pointing relative to the image's horizontal plane. Range [-180,180].", "type" "number", "format" "float"}, "sorrowLikelihood" {"type" "string", "description" "Sorrow likelihood.", "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."]}, "detectionConfidence" {"description" "Detection confidence. Range [0, 1].", "format" "float", "type" "number"}}}, "GoogleCloudVisionV1p4beta1Product" {"id" "GoogleCloudVisionV1p4beta1Product", "type" "object", "properties" {"productLabels" {"type" "array", "description" "Key-value pairs that can be attached to a product. At query time, constraints can be specified based on the product_labels. Note that integer values can be provided as strings, e.g. \"1199\". Only strings with integer values can match a range-based restriction which is to be supported soon. Multiple values can be assigned to the same key. One product may have up to 500 product_labels. Notice that the total number of distinct product_labels over all products in one ProductSet cannot exceed 1M, otherwise the product search pipeline will refuse to work for that ProductSet.", "items" {"$ref" "GoogleCloudVisionV1p4beta1ProductKeyValue"}}, "displayName" {"type" "string", "description" "The user-provided name for this Product. Must not be empty. Must be at most 4096 characters long."}, "productCategory" {"description" "Immutable. The category for the product identified by the reference image. This should be one of \"homegoods-v2\", \"apparel-v2\", \"toys-v2\", \"packagedgoods-v1\" or \"general-v1\". The legacy categories \"homegoods\", \"apparel\", and \"toys\" are still supported, but these should not be used for new products.", "type" "string"}, "description" {"type" "string", "description" "User-provided metadata to be stored with this product. Must be at most 4096 characters long."}, "name" {"description" "The resource name of the product. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`. This field is ignored when creating a product.", "type" "string"}}, "description" "A Product contains ReferenceImages."}, "Operation" {"description" "This resource represents a long-running operation that is the result of a network API call.", "id" "Operation", "type" "object", "properties" {"metadata" {"description" "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.", "type" "object", "additionalProperties" {"type" "any", "description" "Properties of the object. Contains field @type with type URL."}}, "done" {"type" "boolean", "description" "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."}, "name" {"type" "string", "description" "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."}, "response" {"additionalProperties" {"description" "Properties of the object. Contains field @type with type URL.", "type" "any"}, "type" "object", "description" "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."}, "error" {"$ref" "Status", "description" "The error result of the operation in case of failure or cancellation."}}}, "GoogleCloudVisionV1p2beta1DominantColorsAnnotation" {"type" "object", "properties" {"colors" {"description" "RGB color values with their score and pixel fraction.", "type" "array", "items" {"$ref" "GoogleCloudVisionV1p2beta1ColorInfo"}}}, "id" "GoogleCloudVisionV1p2beta1DominantColorsAnnotation", "description" "Set of dominant colors and their corresponding scores."}, "GoogleCloudVisionV1p2beta1NormalizedVertex" {"description" "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.", "id" "GoogleCloudVisionV1p2beta1NormalizedVertex", "type" "object", "properties" {"x" {"format" "float", "type" "number", "description" "X coordinate."}, "y" {"description" "Y coordinate.", "type" "number", "format" "float"}}}, "GoogleCloudVisionV1p1beta1ImageSource" {"properties" {"imageUri" {"description" "The URI of the source image. Can be either: 1. A Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris) for more info. 2. A publicly-accessible image HTTP/HTTPS URL. When fetching images from HTTP/HTTPS URLs, Google cannot guarantee that the request will be completed. Your request may fail if the specified host denies the request (e.g. due to request throttling or DOS prevention), or if Google throttles requests to the site for abuse prevention. You should not depend on externally-hosted images for production applications. When both `gcs_image_uri` and `image_uri` are specified, `image_uri` takes precedence.", "type" "string"}, "gcsImageUri" {"type" "string", "description" "**Use `image_uri` instead.** The Google Cloud Storage URI of the form `gs://bucket_name/object_name`. Object versioning is not supported. See [Google Cloud Storage Request URIs](https://cloud.google.com/storage/docs/reference-uris) for more info."}}, "id" "GoogleCloudVisionV1p1beta1ImageSource", "type" "object", "description" "External image source (Google Cloud Storage or web URL image location)."}, "GoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse" {"type" "object", "description" "The response for a single offline file annotation request.", "properties" {"outputConfig" {"$ref" "GoogleCloudVisionV1p2beta1OutputConfig", "description" "The output location and metadata from AsyncAnnotateFileRequest."}}, "id" "GoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse"}, "GoogleCloudVisionV1p4beta1WebDetectionWebLabel" {"type" "object", "id" "GoogleCloudVisionV1p4beta1WebDetectionWebLabel", "description" "Label to provide extra metadata for the web detection.", "properties" {"label" {"type" "string", "description" "Label for extra metadata."}, "languageCode" {"description" "The BCP-47 language code for `label`, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.", "type" "string"}}}, "GoogleCloudVisionV1p4beta1ProductKeyValue" {"type" "object", "id" "GoogleCloudVisionV1p4beta1ProductKeyValue", "properties" {"key" {"type" "string", "description" "The key of the label attached to the product. Cannot be empty and cannot exceed 128 bytes."}, "value" {"type" "string", "description" "The value of the label attached to the product. Cannot be empty and cannot exceed 128 bytes."}}, "description" "A product label represented as a key-value pair."}, "GoogleCloudVisionV1p4beta1GcsDestination" {"id" "GoogleCloudVisionV1p4beta1GcsDestination", "properties" {"uri" {"description" "Google Cloud Storage URI prefix where the results will be stored. Results will be in JSON format and preceded by its corresponding input URI prefix. This field can either represent a gcs file prefix or gcs directory. In either case, the uri should be unique because in order to get all of the output files, you will need to do a wildcard gcs search on the uri prefix you provide. Examples: * File Prefix: gs://bucket-name/here/filenameprefix The output files will be created in gs://bucket-name/here/ and the names of the output files will begin with \"filenameprefix\". * Directory Prefix: gs://bucket-name/some/location/ The output files will be created in gs://bucket-name/some/location/ and the names of the output files could be anything because there was no filename prefix specified. If multiple outputs, each response is still AnnotateFileResponse, each of which contains some subset of the full list of AnnotateImageResponse. Multiple outputs can happen if, for example, the output JSON is too large and overflows into multiple sharded files.", "type" "string"}}, "type" "object", "description" "The Google Cloud Storage location where the output will be written to."}, "OperationMetadata" {"description" "Contains metadata for the BatchAnnotateImages operation.", "id" "OperationMetadata", "properties" {"updateTime" {"description" "The time when the operation result was last updated.", "format" "google-datetime", "type" "string"}, "createTime" {"type" "string", "description" "The time when the batch request was received.", "format" "google-datetime"}, "state" {"enumDescriptions" ["Invalid." "Request is received." "Request is actively being processed." "The batch processing is done." "The batch processing was cancelled."], "type" "string", "description" "Current state of the batch operation.", "enum" ["STATE_UNSPECIFIED" "CREATED" "RUNNING" "DONE" "CANCELLED"]}}, "type" "object"}, "GoogleCloudVisionV1p3beta1FaceAnnotationLandmark" {"description" "A face-specific landmark (for example, a face feature).", "type" "object", "properties" {"position" {"$ref" "GoogleCloudVisionV1p3beta1Position", "description" "Face landmark position."}, "type" {"enum" ["UNKNOWN_LANDMARK" "LEFT_EYE" "RIGHT_EYE" "LEFT_OF_LEFT_EYEBROW" "RIGHT_OF_LEFT_EYEBROW" "LEFT_OF_RIGHT_EYEBROW" "RIGHT_OF_RIGHT_EYEBROW" "MIDPOINT_BETWEEN_EYES" "NOSE_TIP" "UPPER_LIP" "LOWER_LIP" "MOUTH_LEFT" "MOUTH_RIGHT" "MOUTH_CENTER" "NOSE_BOTTOM_RIGHT" "NOSE_BOTTOM_LEFT" "NOSE_BOTTOM_CENTER" "LEFT_EYE_TOP_BOUNDARY" "LEFT_EYE_RIGHT_CORNER" "LEFT_EYE_BOTTOM_BOUNDARY" "LEFT_EYE_LEFT_CORNER" "RIGHT_EYE_TOP_BOUNDARY" "RIGHT_EYE_RIGHT_CORNER" "RIGHT_EYE_BOTTOM_BOUNDARY" "RIGHT_EYE_LEFT_CORNER" "LEFT_EYEBROW_UPPER_MIDPOINT" "RIGHT_EYEBROW_UPPER_MIDPOINT" "LEFT_EAR_TRAGION" "RIGHT_EAR_TRAGION" "LEFT_EYE_PUPIL" "RIGHT_EYE_PUPIL" "FOREHEAD_GLABELLA" "CHIN_GNATHION" "CHIN_LEFT_GONION" "CHIN_RIGHT_GONION" "LEFT_CHEEK_CENTER" "RIGHT_CHEEK_CENTER"], "description" "Face landmark type.", "enumDescriptions" ["Unknown face landmark detected. Should not be filled." "Left eye." "Right eye." "Left of left eyebrow." "Right of left eyebrow." "Left of right eyebrow." "Right of right eyebrow." "Midpoint between eyes." "Nose tip." "Upper lip." "Lower lip." "Mouth left." "Mouth right." "Mouth center." "Nose, bottom right." "Nose, bottom left." "Nose, bottom center." "Left eye, top boundary." "Left eye, right corner." "Left eye, bottom boundary." "Left eye, left corner." "Right eye, top boundary." "Right eye, right corner." "Right eye, bottom boundary." "Right eye, left corner." "Left eyebrow, upper midpoint." "Right eyebrow, upper midpoint." "Left ear tragion." "Right ear tragion." "Left eye pupil." "Right eye pupil." "Forehead glabella." "Chin gnathion." "Chin left gonion." "Chin right gonion." "Left cheek center." "Right cheek center."], "type" "string"}}, "id" "GoogleCloudVisionV1p3beta1FaceAnnotationLandmark"}, "GoogleCloudVisionV1p3beta1Position" {"type" "object", "id" "GoogleCloudVisionV1p3beta1Position", "properties" {"z" {"type" "number", "description" "Z coordinate (or depth).", "format" "float"}, "y" {"format" "float", "description" "Y coordinate.", "type" "number"}, "x" {"type" "number", "description" "X coordinate.", "format" "float"}}, "description" "A 3D position in the image, used primarily for Face detection landmarks. A valid Position must have both x and y coordinates. The position coordinates are in the same scale as the original image."}, "Status" {"properties" {"message" {"description" "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.", "type" "string"}, "details" {"type" "array", "description" "A list of messages that carry the error details. There is a common set of message types for APIs to use.", "items" {"additionalProperties" {"type" "any", "description" "Properties of the object. Contains field @type with type URL."}, "type" "object"}}, "code" {"description" "The status code, which should be an enum value of google.rpc.Code.", "format" "int32", "type" "integer"}}, "description" "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).", "type" "object", "id" "Status"}, "GoogleCloudVisionV1p3beta1Paragraph" {"description" "Structural unit of text representing a number of words in certain order.", "type" "object", "properties" {"boundingBox" {"description" "The bounding box for the paragraph. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the 'natural' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it's rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).", "$ref" "GoogleCloudVisionV1p3beta1BoundingPoly"}, "property" {"$ref" "GoogleCloudVisionV1p3beta1TextAnnotationTextProperty", "description" "Additional information detected for the paragraph."}, "confidence" {"format" "float", "type" "number", "description" "Confidence of the OCR results for the paragraph. Range [0, 1]."}, "words" {"items" {"$ref" "GoogleCloudVisionV1p3beta1Word"}, "description" "List of all words in this paragraph.", "type" "array"}}, "id" "GoogleCloudVisionV1p3beta1Paragraph"}, "GoogleCloudVisionV1p2beta1Property" {"type" "object", "description" "A `Property` consists of a user-supplied name/value pair.", "properties" {"uint64Value" {"format" "uint64", "type" "string", "description" "Value of numeric properties."}, "value" {"type" "string", "description" "Value of the property."}, "name" {"type" "string", "description" "Name of the property."}}, "id" "GoogleCloudVisionV1p2beta1Property"}, "GoogleCloudVisionV1p2beta1FaceAnnotationLandmark" {"id" "GoogleCloudVisionV1p2beta1FaceAnnotationLandmark", "type" "object", "description" "A face-specific landmark (for example, a face feature).", "properties" {"type" {"enum" ["UNKNOWN_LANDMARK" "LEFT_EYE" "RIGHT_EYE" "LEFT_OF_LEFT_EYEBROW" "RIGHT_OF_LEFT_EYEBROW" "LEFT_OF_RIGHT_EYEBROW" "RIGHT_OF_RIGHT_EYEBROW" "MIDPOINT_BETWEEN_EYES" "NOSE_TIP" "UPPER_LIP" "LOWER_LIP" "MOUTH_LEFT" "MOUTH_RIGHT" "MOUTH_CENTER" "NOSE_BOTTOM_RIGHT" "NOSE_BOTTOM_LEFT" "NOSE_BOTTOM_CENTER" "LEFT_EYE_TOP_BOUNDARY" "LEFT_EYE_RIGHT_CORNER" "LEFT_EYE_BOTTOM_BOUNDARY" "LEFT_EYE_LEFT_CORNER" "RIGHT_EYE_TOP_BOUNDARY" "RIGHT_EYE_RIGHT_CORNER" "RIGHT_EYE_BOTTOM_BOUNDARY" "RIGHT_EYE_LEFT_CORNER" "LEFT_EYEBROW_UPPER_MIDPOINT" "RIGHT_EYEBROW_UPPER_MIDPOINT" "LEFT_EAR_TRAGION" "RIGHT_EAR_TRAGION" "LEFT_EYE_PUPIL" "RIGHT_EYE_PUPIL" "FOREHEAD_GLABELLA" "CHIN_GNATHION" "CHIN_LEFT_GONION" "CHIN_RIGHT_GONION" "LEFT_CHEEK_CENTER" "RIGHT_CHEEK_CENTER"], "description" "Face landmark type.", "type" "string", "enumDescriptions" ["Unknown face landmark detected. Should not be filled." "Left eye." "Right eye." "Left of left eyebrow." "Right of left eyebrow." "Left of right eyebrow." "Right of right eyebrow." "Midpoint between eyes." "Nose tip." "Upper lip." "Lower lip." "Mouth left." "Mouth right." "Mouth center." "Nose, bottom right." "Nose, bottom left." "Nose, bottom center." "Left eye, top boundary." "Left eye, right corner." "Left eye, bottom boundary." "Left eye, left corner." "Right eye, top boundary." "Right eye, right corner." "Right eye, bottom boundary." "Right eye, left corner." "Left eyebrow, upper midpoint." "Right eyebrow, upper midpoint." "Left ear tragion." "Right ear tragion." "Left eye pupil." "Right eye pupil." "Forehead glabella." "Chin gnathion." "Chin left gonion." "Chin right gonion." "Left cheek center." "Right cheek center."]}, "position" {"description" "Face landmark position.", "$ref" "GoogleCloudVisionV1p2beta1Position"}}}, "Block" {"type" "object", "properties" {"boundingBox" {"$ref" "BoundingPoly", "description" "The bounding box for the block. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the 'natural' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it's rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3)."}, "paragraphs" {"items" {"$ref" "Paragraph"}, "description" "List of paragraphs in this block (if this blocks is of type text).", "type" "array"}, "blockType" {"enum" ["UNKNOWN" "TEXT" "TABLE" "PICTURE" "RULER" "BARCODE"], "enumDescriptions" ["Unknown block type." "Regular text block." "Table block." "Image block." "Horizontal/vertical line box." "Barcode block."], "type" "string", "description" "Detected block type (text, image etc) for this block."}, "confidence" {"format" "float", "type" "number", "description" "Confidence of the OCR results on the block. Range [0, 1]."}, "property" {"description" "Additional information detected for the block.", "$ref" "TextProperty"}}, "id" "Block", "description" "Logical element on the page."}, "GoogleCloudVisionV1p4beta1LocationInfo" {"properties" {"latLng" {"description" "lat/long location coordinates.", "$ref" "LatLng"}}, "type" "object", "id" "GoogleCloudVisionV1p4beta1LocationInfo", "description" "Detected entity location information."}, "GoogleCloudVisionV1p4beta1Page" {"id" "GoogleCloudVisionV1p4beta1Page", "description" "Detected page from OCR.", "properties" {"height" {"description" "Page height. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.", "format" "int32", "type" "integer"}, "blocks" {"description" "List of blocks of text, images etc on this page.", "items" {"$ref" "GoogleCloudVisionV1p4beta1Block"}, "type" "array"}, "width" {"type" "integer", "format" "int32", "description" "Page width. For PDFs the unit is points. For images (including TIFFs) the unit is pixels."}, "confidence" {"type" "number", "description" "Confidence of the OCR results on the page. Range [0, 1].", "format" "float"}, "property" {"description" "Additional information detected on the page.", "$ref" "GoogleCloudVisionV1p4beta1TextAnnotationTextProperty"}}, "type" "object"}, "GoogleCloudVisionV1p2beta1ProductKeyValue" {"type" "object", "id" "GoogleCloudVisionV1p2beta1ProductKeyValue", "description" "A product label represented as a key-value pair.", "properties" {"value" {"type" "string", "description" "The value of the label attached to the product. Cannot be empty and cannot exceed 128 bytes."}, "key" {"description" "The key of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.", "type" "string"}}}, "GoogleCloudVisionV1p1beta1TextDetectionParams" {"id" "GoogleCloudVisionV1p1beta1TextDetectionParams", "description" "Parameters for text detections. This is used to control TEXT_DETECTION and DOCUMENT_TEXT_DETECTION features.", "properties" {"enableTextDetectionConfidenceScore" {"type" "boolean", "description" "By default, Cloud Vision API only includes confidence score for DOCUMENT_TEXT_DETECTION result. Set the flag to true to include confidence score for TEXT_DETECTION as well."}}, "type" "object"}, "ImageAnnotationContext" {"description" "If an image was produced from a file (e.g. a PDF), this message gives information about the source of that image.", "properties" {"pageNumber" {"format" "int32", "type" "integer", "description" "If the file was a PDF or TIFF, this field gives the page number within the file used to produce the image."}, "uri" {"type" "string", "description" "The URI of the file used to produce the image."}}, "type" "object", "id" "ImageAnnotationContext"}, "GoogleCloudVisionV1p3beta1ReferenceImage" {"id" "GoogleCloudVisionV1p3beta1ReferenceImage", "description" "A `ReferenceImage` represents a product image and its associated metadata, such as bounding boxes.", "properties" {"uri" {"description" "Required. The Google Cloud Storage URI of the reference image. The URI must start with `gs://`.", "type" "string"}, "name" {"type" "string", "description" "The resource name of the reference image. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID`. This field is ignored when creating a reference image."}, "boundingPolys" {"description" "Optional. Bounding polygons around the areas of interest in the reference image. If this field is empty, the system will try to detect regions of interest. At most 10 bounding polygons will be used. The provided shape is converted into a non-rotated rectangle. Once converted, the small edge of the rectangle must be greater than or equal to 300 pixels. The aspect ratio must be 1:4 or less (i.e. 1:3 is ok; 1:5 is not).", "items" {"$ref" "GoogleCloudVisionV1p3beta1BoundingPoly"}, "type" "array"}}, "type" "object"}, "GoogleCloudVisionV1p2beta1Symbol" {"type" "object", "properties" {"boundingBox" {"$ref" "GoogleCloudVisionV1p2beta1BoundingPoly", "description" "The bounding box for the symbol. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the 'natural' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it's rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3)."}, "confidence" {"format" "float", "description" "Confidence of the OCR results for the symbol. Range [0, 1].", "type" "number"}, "text" {"description" "The actual UTF-8 representation of the symbol.", "type" "string"}, "property" {"description" "Additional information detected for the symbol.", "$ref" "GoogleCloudVisionV1p2beta1TextAnnotationTextProperty"}}, "description" "A single symbol representation.", "id" "GoogleCloudVisionV1p2beta1Symbol"}, "GoogleCloudVisionV1p1beta1ImageContext" {"id" "GoogleCloudVisionV1p1beta1ImageContext", "type" "object", "properties" {"productSearchParams" {"description" "Parameters for product search.", "$ref" "GoogleCloudVisionV1p1beta1ProductSearchParams"}, "textDetectionParams" {"description" "Parameters for text detection and document text detection.", "$ref" "GoogleCloudVisionV1p1beta1TextDetectionParams"}, "webDetectionParams" {"$ref" "GoogleCloudVisionV1p1beta1WebDetectionParams", "description" "Parameters for web detection."}, "languageHints" {"items" {"type" "string"}, "type" "array", "description" "List of languages to use for TEXT_DETECTION. In most cases, an empty value yields the best results since it enables automatic language detection. For languages based on the Latin alphabet, setting `language_hints` is not needed. In rare cases, when the language of the text in the image is known, setting a hint will help get better results (although it will be a significant hindrance if the hint is wrong). Text detection returns an error if one or more of the specified languages is not one of the [supported languages](https://cloud.google.com/vision/docs/languages)."}, "latLongRect" {"description" "Not used.", "$ref" "GoogleCloudVisionV1p1beta1LatLongRect"}, "cropHintsParams" {"$ref" "GoogleCloudVisionV1p1beta1CropHintsParams", "description" "Parameters for crop hints annotation request."}}, "description" "Image context and/or feature-specific parameters."}, "GoogleCloudVisionV1p2beta1LocationInfo" {"description" "Detected entity location information.", "id" "GoogleCloudVisionV1p2beta1LocationInfo", "properties" {"latLng" {"$ref" "LatLng", "description" "lat/long location coordinates."}}, "type" "object"}, "GoogleCloudVisionV1p2beta1WebDetectionWebEntity" {"type" "object", "properties" {"entityId" {"type" "string", "description" "Opaque entity ID."}, "description" {"description" "Canonical description of the entity, in English.", "type" "string"}, "score" {"description" "Overall relevancy score for the entity. Not normalized and not comparable across different image queries.", "format" "float", "type" "number"}}, "description" "Entity deduced from similar images on the Internet.", "id" "GoogleCloudVisionV1p2beta1WebDetectionWebEntity"}, "GoogleCloudVisionV1p4beta1Position" {"id" "GoogleCloudVisionV1p4beta1Position", "type" "object", "properties" {"z" {"type" "number", "format" "float", "description" "Z coordinate (or depth)."}, "x" {"description" "X coordinate.", "type" "number", "format" "float"}, "y" {"description" "Y coordinate.", "type" "number", "format" "float"}}, "description" "A 3D position in the image, used primarily for Face detection landmarks. A valid Position must have both x and y coordinates. The position coordinates are in the same scale as the original image."}, "GoogleCloudVisionV1p3beta1CropHint" {"description" "Single crop hint that is used to generate a new crop when serving an image.", "properties" {"importanceFraction" {"type" "number", "description" "Fraction of importance of this salient region with respect to the original image.", "format" "float"}, "confidence" {"type" "number", "description" "Confidence of this being a salient region. Range [0, 1].", "format" "float"}, "boundingPoly" {"description" "The bounding polygon for the crop region. The coordinates of the bounding box are in the original image's scale.", "$ref" "GoogleCloudVisionV1p3beta1BoundingPoly"}}, "type" "object", "id" "GoogleCloudVisionV1p3beta1CropHint"}, "DetectedBreak" {"description" "Detected start or end of a structural component.", "properties" {"type" {"type" "string", "description" "Detected break type.", "enumDescriptions" ["Unknown break label type." "Regular space." "Sure space (very wide)." "Line-wrapping break." "End-line hyphen that is not present in text; does not co-occur with `SPACE`, `LEADER_SPACE`, or `LINE_BREAK`." "Line break that ends a paragraph."], "enum" ["UNKNOWN" "SPACE" "SURE_SPACE" "EOL_SURE_SPACE" "HYPHEN" "LINE_BREAK"]}, "isPrefix" {"description" "True if break prepends the element.", "type" "boolean"}}, "id" "DetectedBreak", "type" "object"}, "GoogleCloudVisionV1p2beta1AnnotateImageResponse" {"description" "Response to an image annotation request.", "properties" {"imagePropertiesAnnotation" {"$ref" "GoogleCloudVisionV1p2beta1ImageProperties", "description" "If present, image properties were extracted successfully."}, "fullTextAnnotation" {"description" "If present, text (OCR) detection or document (OCR) text detection has completed successfully. This annotation provides the structural hierarchy for the OCR detected text.", "$ref" "GoogleCloudVisionV1p2beta1TextAnnotation"}, "logoAnnotations" {"items" {"$ref" "GoogleCloudVisionV1p2beta1EntityAnnotation"}, "type" "array", "description" "If present, logo detection has completed successfully."}, "webDetection" {"$ref" "GoogleCloudVisionV1p2beta1WebDetection", "description" "If present, web detection has completed successfully."}, "productSearchResults" {"$ref" "GoogleCloudVisionV1p2beta1ProductSearchResults", "description" "If present, product search has completed successfully."}, "cropHintsAnnotation" {"$ref" "GoogleCloudVisionV1p2beta1CropHintsAnnotation", "description" "If present, crop hints have completed successfully."}, "error" {"$ref" "Status", "description" "If set, represents the error message for the operation. Note that filled-in image annotations are guaranteed to be correct, even when `error` is set."}, "safeSearchAnnotation" {"$ref" "GoogleCloudVisionV1p2beta1SafeSearchAnnotation", "description" "If present, safe-search annotation has completed successfully."}, "labelAnnotations" {"items" {"$ref" "GoogleCloudVisionV1p2beta1EntityAnnotation"}, "type" "array", "description" "If present, label detection has completed successfully."}, "context" {"description" "If present, contextual information is needed to understand where this image comes from.", "$ref" "GoogleCloudVisionV1p2beta1ImageAnnotationContext"}, "faceAnnotations" {"items" {"$ref" "GoogleCloudVisionV1p2beta1FaceAnnotation"}, "type" "array", "description" "If present, face detection has completed successfully."}, "textAnnotations" {"description" "If present, text (OCR) detection has completed successfully.", "type" "array", "items" {"$ref" "GoogleCloudVisionV1p2beta1EntityAnnotation"}}, "landmarkAnnotations" {"items" {"$ref" "GoogleCloudVisionV1p2beta1EntityAnnotation"}, "type" "array", "description" "If present, landmark detection has completed successfully."}, "localizedObjectAnnotations" {"type" "array", "items" {"$ref" "GoogleCloudVisionV1p2beta1LocalizedObjectAnnotation"}, "description" "If present, localized object detection has completed successfully. This will be sorted descending by confidence score."}}, "type" "object", "id" "GoogleCloudVisionV1p2beta1AnnotateImageResponse"}, "GoogleCloudVisionV1p3beta1Product" {"type" "object", "id" "GoogleCloudVisionV1p3beta1Product", "properties" {"description" {"description" "User-provided metadata to be stored with this product. Must be at most 4096 characters long.", "type" "string"}, "displayName" {"type" "string", "description" "The user-provided name for this Product. Must not be empty. Must be at most 4096 characters long."}, "name" {"description" "The resource name of the product. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`. This field is ignored when creating a product.", "type" "string"}, "productLabels" {"type" "array", "items" {"$ref" "GoogleCloudVisionV1p3beta1ProductKeyValue"}, "description" "Key-value pairs that can be attached to a product. At query time, constraints can be specified based on the product_labels. Note that integer values can be provided as strings, e.g. \"1199\". Only strings with integer values can match a range-based restriction which is to be supported soon. Multiple values can be assigned to the same key. One product may have up to 500 product_labels. Notice that the total number of distinct product_labels over all products in one ProductSet cannot exceed 1M, otherwise the product search pipeline will refuse to work for that ProductSet."}, "productCategory" {"description" "Immutable. The category for the product identified by the reference image. This should be one of \"homegoods-v2\", \"apparel-v2\", \"toys-v2\", \"packagedgoods-v1\" or \"general-v1\". The legacy categories \"homegoods\", \"apparel\", and \"toys\" are still supported, but these should not be used for new products.", "type" "string"}}, "description" "A Product contains ReferenceImages."}, "GoogleCloudVisionV1p4beta1CropHintsAnnotation" {"properties" {"cropHints" {"description" "Crop hint results.", "type" "array", "items" {"$ref" "GoogleCloudVisionV1p4beta1CropHint"}}}, "description" "Set of crop hints that are used to generate new crops when serving images.", "type" "object", "id" "GoogleCloudVisionV1p4beta1CropHintsAnnotation"}, "GoogleCloudVisionV1p1beta1DominantColorsAnnotation" {"type" "object", "properties" {"colors" {"items" {"$ref" "GoogleCloudVisionV1p1beta1ColorInfo"}, "type" "array", "description" "RGB color values with their score and pixel fraction."}}, "description" "Set of dominant colors and their corresponding scores.", "id" "GoogleCloudVisionV1p1beta1DominantColorsAnnotation"}, "GoogleCloudVisionV1p4beta1TextAnnotationDetectedLanguage" {"id" "GoogleCloudVisionV1p4beta1TextAnnotationDetectedLanguage", "properties" {"languageCode" {"type" "string", "description" "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier."}, "confidence" {"format" "float", "type" "number", "description" "Confidence of detected language. Range [0, 1]."}}, "type" "object", "description" "Detected language for a structural component."}, "GoogleCloudVisionV1p1beta1WebDetection" {"id" "GoogleCloudVisionV1p1beta1WebDetection", "description" "Relevant information for the image from the Internet.", "type" "object", "properties" {"visuallySimilarImages" {"items" {"$ref" "GoogleCloudVisionV1p1beta1WebDetectionWebImage"}, "description" "The visually similar image results.", "type" "array"}, "partialMatchingImages" {"items" {"$ref" "GoogleCloudVisionV1p1beta1WebDetectionWebImage"}, "type" "array", "description" "Partial matching images from the Internet. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops."}, "webEntities" {"items" {"$ref" "GoogleCloudVisionV1p1beta1WebDetectionWebEntity"}, "description" "Deduced entities from similar images on the Internet.", "type" "array"}, "bestGuessLabels" {"type" "array", "items" {"$ref" "GoogleCloudVisionV1p1beta1WebDetectionWebLabel"}, "description" "The service's best guess as to the topic of the request image. Inferred from similar images on the open web."}, "pagesWithMatchingImages" {"type" "array", "description" "Web pages containing the matching images from the Internet.", "items" {"$ref" "GoogleCloudVisionV1p1beta1WebDetectionWebPage"}}, "fullMatchingImages" {"items" {"$ref" "GoogleCloudVisionV1p1beta1WebDetectionWebImage"}, "type" "array", "description" "Fully matching images from the Internet. Can include resized copies of the query image."}}}, "GoogleCloudVisionV1p3beta1WebDetectionWebPage" {"description" "Metadata for web pages.", "id" "GoogleCloudVisionV1p3beta1WebDetectionWebPage", "properties" {"pageTitle" {"type" "string", "description" "Title for the web page, may contain HTML markups."}, "score" {"format" "float", "type" "number", "description" "(Deprecated) Overall relevancy score for the web page."}, "partialMatchingImages" {"items" {"$ref" "GoogleCloudVisionV1p3beta1WebDetectionWebImage"}, "type" "array", "description" "Partial matching images on the page. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops."}, "fullMatchingImages" {"description" "Fully matching images on the page. Can include resized copies of the query image.", "type" "array", "items" {"$ref" "GoogleCloudVisionV1p3beta1WebDetectionWebImage"}}, "url" {"type" "string", "description" "The result web page URL."}}, "type" "object"}, "GoogleCloudVisionV1p1beta1ProductSearchParams" {"id" "GoogleCloudVisionV1p1beta1ProductSearchParams", "type" "object", "properties" {"boundingPoly" {"$ref" "GoogleCloudVisionV1p1beta1BoundingPoly", "description" "The bounding polygon around the area of interest in the image. If it is not specified, system discretion will be applied."}, "filter" {"description" "The filtering expression. This can be used to restrict search results based on Product labels. We currently support an AND of OR of key-value expressions, where each expression within an OR must have the same key. An '=' should be used to connect the key and value. For example, \"(color = red OR color = blue) AND brand = Google\" is acceptable, but \"(color = red OR brand = Google)\" is not acceptable. \"color: red\" is not acceptable because it uses a ':' instead of an '='.", "type" "string"}, "productCategories" {"type" "array", "description" "The list of product categories to search in. Currently, we only consider the first category, and either \"homegoods-v2\", \"apparel-v2\", \"toys-v2\", \"packagedgoods-v1\", or \"general-v1\" should be specified. The legacy categories \"homegoods\", \"apparel\", and \"toys\" are still supported but will be deprecated. For new products, please use \"homegoods-v2\", \"apparel-v2\", or \"toys-v2\" for better product search accuracy. It is recommended to migrate existing products to these categories as well.", "items" {"type" "string"}}, "productSet" {"type" "string", "description" "The resource name of a ProductSet to be searched for similar images. Format is: `projects/PROJECT_ID/locations/LOC_ID/productSets/PRODUCT_SET_ID`."}}, "description" "Parameters for a product search request."}, "GoogleCloudVisionV1p1beta1AnnotateImageRequest" {"properties" {"imageContext" {"$ref" "GoogleCloudVisionV1p1beta1ImageContext", "description" "Additional context that may accompany the image."}, "features" {"items" {"$ref" "GoogleCloudVisionV1p1beta1Feature"}, "type" "array", "description" "Requested features."}, "image" {"$ref" "GoogleCloudVisionV1p1beta1Image", "description" "The image to be processed."}}, "id" "GoogleCloudVisionV1p1beta1AnnotateImageRequest", "type" "object", "description" "Request for performing Google Cloud Vision API tasks over a user-provided image, with user-requested features, and with context information."}, "GoogleCloudVisionV1p1beta1WebDetectionWebEntity" {"type" "object", "description" "Entity deduced from similar images on the Internet.", "id" "GoogleCloudVisionV1p1beta1WebDetectionWebEntity", "properties" {"description" {"description" "Canonical description of the entity, in English.", "type" "string"}, "score" {"description" "Overall relevancy score for the entity. Not normalized and not comparable across different image queries.", "type" "number", "format" "float"}, "entityId" {"description" "Opaque entity ID.", "type" "string"}}}, "GoogleCloudVisionV1p3beta1NormalizedVertex" {"type" "object", "description" "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.", "id" "GoogleCloudVisionV1p3beta1NormalizedVertex", "properties" {"x" {"type" "number", "format" "float", "description" "X coordinate."}, "y" {"description" "Y coordinate.", "format" "float", "type" "number"}}}, "GoogleCloudVisionV1p4beta1OutputConfig" {"properties" {"gcsDestination" {"description" "The Google Cloud Storage location to write the output(s) to.", "$ref" "GoogleCloudVisionV1p4beta1GcsDestination"}, "batchSize" {"format" "int32", "type" "integer", "description" "The max number of response protos to put into each output JSON file on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 response protos will be generated. If `batch_size` = 20, then 5 json files each containing 20 response protos will be written under the prefix `gcs_destination`.`uri`. Currently, batch_size only applies to GcsDestination, with potential future support for other output configurations."}}, "description" "The desired output location and metadata.", "type" "object", "id" "GoogleCloudVisionV1p4beta1OutputConfig"}, "GoogleCloudVisionV1p3beta1ProductSearchResults" {"description" "Results for a product search request.", "properties" {"productGroupedResults" {"items" {"$ref" "GoogleCloudVisionV1p3beta1ProductSearchResultsGroupedResult"}, "description" "List of results grouped by products detected in the query image. Each entry corresponds to one bounding polygon in the query image, and contains the matching products specific to that region. There may be duplicate product matches in the union of all the per-product results.", "type" "array"}, "results" {"type" "array", "description" "List of results, one for each product match.", "items" {"$ref" "GoogleCloudVisionV1p3beta1ProductSearchResultsResult"}}, "indexTime" {"description" "Timestamp of the index which provided these results. Products added to the product set and products removed from the product set after this time are not reflected in the current results.", "type" "string", "format" "google-datetime"}}, "id" "GoogleCloudVisionV1p3beta1ProductSearchResults", "type" "object"}, "GoogleCloudVisionV1p2beta1Position" {"id" "GoogleCloudVisionV1p2beta1Position", "type" "object", "description" "A 3D position in the image, used primarily for Face detection landmarks. A valid Position must have both x and y coordinates. The position coordinates are in the same scale as the original image.", "properties" {"y" {"description" "Y coordinate.", "type" "number", "format" "float"}, "x" {"type" "number", "description" "X coordinate.", "format" "float"}, "z" {"description" "Z coordinate (or depth).", "format" "float", "type" "number"}}}, "GoogleCloudVisionV1p1beta1AnnotateFileResponse" {"properties" {"error" {"$ref" "Status", "description" "If set, represents the error message for the failed request. The `responses` field will not be set in this case."}, "totalPages" {"format" "int32", "description" "This field gives the total number of pages in the file.", "type" "integer"}, "responses" {"type" "array", "description" "Individual responses to images found within the file. This field will be empty if the `error` field is set.", "items" {"$ref" "GoogleCloudVisionV1p1beta1AnnotateImageResponse"}}, "inputConfig" {"$ref" "GoogleCloudVisionV1p1beta1InputConfig", "description" "Information about the file for which this response is generated."}}, "description" "Response to a single file annotation request. A file may contain one or more images, which individually have their own responses.", "type" "object", "id" "GoogleCloudVisionV1p1beta1AnnotateFileResponse"}, "GoogleCloudVisionV1p3beta1ProductSearchResultsResult" {"type" "object", "properties" {"score" {"format" "float", "type" "number", "description" "A confidence level on the match, ranging from 0 (no confidence) to 1 (full confidence)."}, "image" {"description" "The resource name of the image from the product that is the closest match to the query.", "type" "string"}, "product" {"description" "The Product.", "$ref" "GoogleCloudVisionV1p3beta1Product"}}, "description" "Information about a product.", "id" "GoogleCloudVisionV1p3beta1ProductSearchResultsResult"}, "GoogleCloudVisionV1p2beta1TextAnnotationDetectedBreak" {"type" "object", "id" "GoogleCloudVisionV1p2beta1TextAnnotationDetectedBreak", "properties" {"isPrefix" {"description" "True if break prepends the element.", "type" "boolean"}, "type" {"enum" ["UNKNOWN" "SPACE" "SURE_SPACE" "EOL_SURE_SPACE" "HYPHEN" "LINE_BREAK"], "type" "string", "enumDescriptions" ["Unknown break label type." "Regular space." "Sure space (very wide)." "Line-wrapping break." "End-line hyphen that is not present in text; does not co-occur with `SPACE`, `LEADER_SPACE`, or `LINE_BREAK`." "Line break that ends a paragraph."], "description" "Detected break type."}}, "description" "Detected start or end of a structural component."}, "GoogleCloudVisionV1p1beta1CropHintsAnnotation" {"description" "Set of crop hints that are used to generate new crops when serving images.", "type" "object", "properties" {"cropHints" {"items" {"$ref" "GoogleCloudVisionV1p1beta1CropHint"}, "description" "Crop hint results.", "type" "array"}}, "id" "GoogleCloudVisionV1p1beta1CropHintsAnnotation"}, "WebLabel" {"description" "Label to provide extra metadata for the web detection.", "id" "WebLabel", "type" "object", "properties" {"languageCode" {"type" "string", "description" "The BCP-47 language code for `label`, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier."}, "label" {"description" "Label for extra metadata.", "type" "string"}}}, "GoogleCloudVisionV1p4beta1TextAnnotation" {"description" "TextAnnotation contains a structured representation of OCR extracted text. The hierarchy of an OCR extracted text structure is like this: TextAnnotation -> Page -> Block -> Paragraph -> Word -> Symbol Each structural component, starting from Page, may further have their own properties. Properties describe detected languages, breaks etc.. Please refer to the TextAnnotation.TextProperty message definition below for more detail.", "id" "GoogleCloudVisionV1p4beta1TextAnnotation", "properties" {"pages" {"description" "List of pages detected by OCR.", "items" {"$ref" "GoogleCloudVisionV1p4beta1Page"}, "type" "array"}, "text" {"type" "string", "description" "UTF-8 text detected on the pages."}}, "type" "object"}, "GoogleCloudVisionV1p1beta1ImageProperties" {"properties" {"dominantColors" {"$ref" "GoogleCloudVisionV1p1beta1DominantColorsAnnotation", "description" "If present, dominant colors completed successfully."}}, "type" "object", "id" "GoogleCloudVisionV1p1beta1ImageProperties", "description" "Stores image properties, such as dominant colors."}, "AsyncBatchAnnotateFilesResponse" {"description" "Response to an async batch file annotation request.", "id" "AsyncBatchAnnotateFilesResponse", "type" "object", "properties" {"responses" {"items" {"$ref" "AsyncAnnotateFileResponse"}, "description" "The list of file annotation responses, one for each request in AsyncBatchAnnotateFilesRequest.", "type" "array"}}}, "GoogleCloudVisionV1p1beta1Word" {"id" "GoogleCloudVisionV1p1beta1Word", "type" "object", "description" "A word representation.", "properties" {"property" {"description" "Additional information detected for the word.", "$ref" "GoogleCloudVisionV1p1beta1TextAnnotationTextProperty"}, "boundingBox" {"description" "The bounding box for the word. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the 'natural' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it's rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).", "$ref" "GoogleCloudVisionV1p1beta1BoundingPoly"}, "confidence" {"format" "float", "type" "number", "description" "Confidence of the OCR results for the word. Range [0, 1]."}, "symbols" {"items" {"$ref" "GoogleCloudVisionV1p1beta1Symbol"}, "type" "array", "description" "List of symbols in the word. The order of the symbols follows the natural reading order."}}}, "GoogleCloudVisionV1p3beta1SafeSearchAnnotation" {"description" "Set of features pertaining to the image, computed by computer vision methods over safe-search verticals (for example, adult, spoof, medical, violence).", "id" "GoogleCloudVisionV1p3beta1SafeSearchAnnotation", "properties" {"spoof" {"enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "type" "string", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "description" "Spoof likelihood. The likelihood that an modification was made to the image's canonical version to make it appear funny or offensive."}, "violence" {"description" "Likelihood that this image contains violent content.", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "type" "string", "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"]}, "racy" {"description" "Likelihood that the request image contains racy content. Racy content may include (but is not limited to) skimpy or sheer clothing, strategically covered nudity, lewd or provocative poses, or close-ups of sensitive body areas.", "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "type" "string"}, "medical" {"description" "Likelihood that this is a medical image.", "type" "string", "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."]}, "adult" {"enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "description" "Represents the adult content likelihood for the image. Adult content may contain elements such as nudity, pornographic images or cartoons, or sexual activities.", "type" "string", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."]}}, "type" "object"}, "GoogleCloudVisionV1p3beta1ProductSearchResultsGroupedResult" {"properties" {"objectAnnotations" {"items" {"$ref" "GoogleCloudVisionV1p3beta1ProductSearchResultsObjectAnnotation"}, "description" "List of generic predictions for the object in the bounding box.", "type" "array"}, "boundingPoly" {"$ref" "GoogleCloudVisionV1p3beta1BoundingPoly", "description" "The bounding polygon around the product detected in the query image."}, "results" {"description" "List of results, one for each product match.", "items" {"$ref" "GoogleCloudVisionV1p3beta1ProductSearchResultsResult"}, "type" "array"}}, "type" "object", "description" "Information about the products similar to a single product in a query image.", "id" "GoogleCloudVisionV1p3beta1ProductSearchResultsGroupedResult"}, "GoogleCloudVisionV1p3beta1TextAnnotationDetectedBreak" {"id" "GoogleCloudVisionV1p3beta1TextAnnotationDetectedBreak", "properties" {"type" {"type" "string", "enum" ["UNKNOWN" "SPACE" "SURE_SPACE" "EOL_SURE_SPACE" "HYPHEN" "LINE_BREAK"], "enumDescriptions" ["Unknown break label type." "Regular space." "Sure space (very wide)." "Line-wrapping break." "End-line hyphen that is not present in text; does not co-occur with `SPACE`, `LEADER_SPACE`, or `LINE_BREAK`." "Line break that ends a paragraph."], "description" "Detected break type."}, "isPrefix" {"description" "True if break prepends the element.", "type" "boolean"}}, "type" "object", "description" "Detected start or end of a structural component."}, "GoogleCloudVisionV1p2beta1LocalizedObjectAnnotation" {"properties" {"languageCode" {"type" "string", "description" "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier."}, "mid" {"type" "string", "description" "Object ID that should align with EntityAnnotation mid."}, "score" {"format" "float", "description" "Score of the result. Range [0, 1].", "type" "number"}, "boundingPoly" {"$ref" "GoogleCloudVisionV1p2beta1BoundingPoly", "description" "Image region to which this object belongs. This must be populated."}, "name" {"type" "string", "description" "Object name, expressed in its `language_code` language."}}, "id" "GoogleCloudVisionV1p2beta1LocalizedObjectAnnotation", "type" "object", "description" "Set of detected objects with bounding boxes."}, "GoogleCloudVisionV1p3beta1WebDetectionWebImage" {"description" "Metadata for online images.", "id" "GoogleCloudVisionV1p3beta1WebDetectionWebImage", "type" "object", "properties" {"score" {"format" "float", "description" "(Deprecated) Overall relevancy score for the image.", "type" "number"}, "url" {"type" "string", "description" "The result image URL."}}}, "GoogleCloudVisionV1p2beta1OperationMetadata" {"type" "object", "id" "GoogleCloudVisionV1p2beta1OperationMetadata", "description" "Contains metadata for the BatchAnnotateImages operation.", "properties" {"createTime" {"type" "string", "format" "google-datetime", "description" "The time when the batch request was received."}, "updateTime" {"format" "google-datetime", "description" "The time when the operation result was last updated.", "type" "string"}, "state" {"type" "string", "description" "Current state of the batch operation.", "enumDescriptions" ["Invalid." "Request is received." "Request is actively being processed." "The batch processing is done." "The batch processing was cancelled."], "enum" ["STATE_UNSPECIFIED" "CREATED" "RUNNING" "DONE" "CANCELLED"]}}}, "GoogleCloudVisionV1p4beta1OperationMetadata" {"type" "object", "properties" {"state" {"type" "string", "enum" ["STATE_UNSPECIFIED" "CREATED" "RUNNING" "DONE" "CANCELLED"], "enumDescriptions" ["Invalid." "Request is received." "Request is actively being processed." "The batch processing is done." "The batch processing was cancelled."], "description" "Current state of the batch operation."}, "updateTime" {"description" "The time when the operation result was last updated.", "type" "string", "format" "google-datetime"}, "createTime" {"description" "The time when the batch request was received.", "format" "google-datetime", "type" "string"}}, "description" "Contains metadata for the BatchAnnotateImages operation.", "id" "GoogleCloudVisionV1p4beta1OperationMetadata"}, "GoogleCloudVisionV1p4beta1Celebrity" {"properties" {"description" {"type" "string", "description" "The Celebrity's description."}, "name" {"type" "string", "description" "The resource name of the preloaded Celebrity. Has the format `builtin/{mid}`."}, "displayName" {"type" "string", "description" "The Celebrity's display name."}}, "description" "A Celebrity is a group of Faces with an identity.", "type" "object", "id" "GoogleCloudVisionV1p4beta1Celebrity"}, "GoogleCloudVisionV1p1beta1FaceAnnotationLandmark" {"description" "A face-specific landmark (for example, a face feature).", "type" "object", "properties" {"type" {"type" "string", "enumDescriptions" ["Unknown face landmark detected. Should not be filled." "Left eye." "Right eye." "Left of left eyebrow." "Right of left eyebrow." "Left of right eyebrow." "Right of right eyebrow." "Midpoint between eyes." "Nose tip." "Upper lip." "Lower lip." "Mouth left." "Mouth right." "Mouth center." "Nose, bottom right." "Nose, bottom left." "Nose, bottom center." "Left eye, top boundary." "Left eye, right corner." "Left eye, bottom boundary." "Left eye, left corner." "Right eye, top boundary." "Right eye, right corner." "Right eye, bottom boundary." "Right eye, left corner." "Left eyebrow, upper midpoint." "Right eyebrow, upper midpoint." "Left ear tragion." "Right ear tragion." "Left eye pupil." "Right eye pupil." "Forehead glabella." "Chin gnathion." "Chin left gonion." "Chin right gonion." "Left cheek center." "Right cheek center."], "enum" ["UNKNOWN_LANDMARK" "LEFT_EYE" "RIGHT_EYE" "LEFT_OF_LEFT_EYEBROW" "RIGHT_OF_LEFT_EYEBROW" "LEFT_OF_RIGHT_EYEBROW" "RIGHT_OF_RIGHT_EYEBROW" "MIDPOINT_BETWEEN_EYES" "NOSE_TIP" "UPPER_LIP" "LOWER_LIP" "MOUTH_LEFT" "MOUTH_RIGHT" "MOUTH_CENTER" "NOSE_BOTTOM_RIGHT" "NOSE_BOTTOM_LEFT" "NOSE_BOTTOM_CENTER" "LEFT_EYE_TOP_BOUNDARY" "LEFT_EYE_RIGHT_CORNER" "LEFT_EYE_BOTTOM_BOUNDARY" "LEFT_EYE_LEFT_CORNER" "RIGHT_EYE_TOP_BOUNDARY" "RIGHT_EYE_RIGHT_CORNER" "RIGHT_EYE_BOTTOM_BOUNDARY" "RIGHT_EYE_LEFT_CORNER" "LEFT_EYEBROW_UPPER_MIDPOINT" "RIGHT_EYEBROW_UPPER_MIDPOINT" "LEFT_EAR_TRAGION" "RIGHT_EAR_TRAGION" "LEFT_EYE_PUPIL" "RIGHT_EYE_PUPIL" "FOREHEAD_GLABELLA" "CHIN_GNATHION" "CHIN_LEFT_GONION" "CHIN_RIGHT_GONION" "LEFT_CHEEK_CENTER" "RIGHT_CHEEK_CENTER"], "description" "Face landmark type."}, "position" {"description" "Face landmark position.", "$ref" "GoogleCloudVisionV1p1beta1Position"}}, "id" "GoogleCloudVisionV1p1beta1FaceAnnotationLandmark"}, "GoogleCloudVisionV1p4beta1AsyncBatchAnnotateFilesResponse" {"description" "Response to an async batch file annotation request.", "id" "GoogleCloudVisionV1p4beta1AsyncBatchAnnotateFilesResponse", "type" "object", "properties" {"responses" {"items" {"$ref" "GoogleCloudVisionV1p4beta1AsyncAnnotateFileResponse"}, "type" "array", "description" "The list of file annotation responses, one for each request in AsyncBatchAnnotateFilesRequest."}}}, "GoogleCloudVisionV1p2beta1ImageProperties" {"description" "Stores image properties, such as dominant colors.", "type" "object", "properties" {"dominantColors" {"description" "If present, dominant colors completed successfully.", "$ref" "GoogleCloudVisionV1p2beta1DominantColorsAnnotation"}}, "id" "GoogleCloudVisionV1p2beta1ImageProperties"}, "GoogleCloudVisionV1p1beta1InputConfig" {"properties" {"gcsSource" {"$ref" "GoogleCloudVisionV1p1beta1GcsSource", "description" "The Google Cloud Storage location to read the input from."}, "mimeType" {"type" "string", "description" "The type of the file. Currently only \"application/pdf\", \"image/tiff\" and \"image/gif\" are supported. Wildcards are not supported."}, "content" {"type" "string", "description" "File content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64. Currently, this field only works for BatchAnnotateFiles requests. It does not work for AsyncBatchAnnotateFiles requests.", "format" "byte"}}, "id" "GoogleCloudVisionV1p1beta1InputConfig", "type" "object", "description" "The desired input location and metadata."}, "GoogleCloudVisionV1p2beta1WebDetection" {"id" "GoogleCloudVisionV1p2beta1WebDetection", "properties" {"bestGuessLabels" {"items" {"$ref" "GoogleCloudVisionV1p2beta1WebDetectionWebLabel"}, "type" "array", "description" "The service's best guess as to the topic of the request image. Inferred from similar images on the open web."}, "pagesWithMatchingImages" {"description" "Web pages containing the matching images from the Internet.", "items" {"$ref" "GoogleCloudVisionV1p2beta1WebDetectionWebPage"}, "type" "array"}, "webEntities" {"type" "array", "description" "Deduced entities from similar images on the Internet.", "items" {"$ref" "GoogleCloudVisionV1p2beta1WebDetectionWebEntity"}}, "fullMatchingImages" {"type" "array", "description" "Fully matching images from the Internet. Can include resized copies of the query image.", "items" {"$ref" "GoogleCloudVisionV1p2beta1WebDetectionWebImage"}}, "partialMatchingImages" {"items" {"$ref" "GoogleCloudVisionV1p2beta1WebDetectionWebImage"}, "description" "Partial matching images from the Internet. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.", "type" "array"}, "visuallySimilarImages" {"description" "The visually similar image results.", "type" "array", "items" {"$ref" "GoogleCloudVisionV1p2beta1WebDetectionWebImage"}}}, "type" "object", "description" "Relevant information for the image from the Internet."}, "GoogleCloudVisionV1p4beta1AsyncBatchAnnotateImagesResponse" {"id" "GoogleCloudVisionV1p4beta1AsyncBatchAnnotateImagesResponse", "properties" {"outputConfig" {"$ref" "GoogleCloudVisionV1p4beta1OutputConfig", "description" "The output location and metadata from AsyncBatchAnnotateImagesRequest."}}, "type" "object", "description" "Response to an async batch image annotation request."}, "GoogleCloudVisionV1p2beta1GcsDestination" {"type" "object", "id" "GoogleCloudVisionV1p2beta1GcsDestination", "description" "The Google Cloud Storage location where the output will be written to.", "properties" {"uri" {"type" "string", "description" "Google Cloud Storage URI prefix where the results will be stored. Results will be in JSON format and preceded by its corresponding input URI prefix. This field can either represent a gcs file prefix or gcs directory. In either case, the uri should be unique because in order to get all of the output files, you will need to do a wildcard gcs search on the uri prefix you provide. Examples: * File Prefix: gs://bucket-name/here/filenameprefix The output files will be created in gs://bucket-name/here/ and the names of the output files will begin with \"filenameprefix\". * Directory Prefix: gs://bucket-name/some/location/ The output files will be created in gs://bucket-name/some/location/ and the names of the output files could be anything because there was no filename prefix specified. If multiple outputs, each response is still AnnotateFileResponse, each of which contains some subset of the full list of AnnotateImageResponse. Multiple outputs can happen if, for example, the output JSON is too large and overflows into multiple sharded files."}}}, "GoogleCloudVisionV1p3beta1BatchOperationMetadata" {"id" "GoogleCloudVisionV1p3beta1BatchOperationMetadata", "description" "Metadata for the batch operations such as the current state. This is included in the `metadata` field of the `Operation` returned by the `GetOperation` call of the `google::longrunning::Operations` service.", "properties" {"endTime" {"format" "google-datetime", "description" "The time when the batch request is finished and google.longrunning.Operation.done is set to true.", "type" "string"}, "submitTime" {"description" "The time when the batch request was submitted to the server.", "type" "string", "format" "google-datetime"}, "state" {"enum" ["STATE_UNSPECIFIED" "PROCESSING" "SUCCESSFUL" "FAILED" "CANCELLED"], "type" "string", "enumDescriptions" ["Invalid." "Request is actively being processed." "The request is done and at least one item has been successfully processed." "The request is done and no item has been successfully processed." "The request is done after the longrunning.Operations.CancelOperation has been called by the user. Any records that were processed before the cancel command are output as specified in the request."], "description" "The current state of the batch operation."}}, "type" "object"}, "GoogleCloudVisionV1p3beta1CropHintsAnnotation" {"id" "GoogleCloudVisionV1p3beta1CropHintsAnnotation", "type" "object", "properties" {"cropHints" {"description" "Crop hint results.", "type" "array", "items" {"$ref" "GoogleCloudVisionV1p3beta1CropHint"}}}, "description" "Set of crop hints that are used to generate new crops when serving images."}, "GoogleCloudVisionV1p3beta1GcsDestination" {"id" "GoogleCloudVisionV1p3beta1GcsDestination", "type" "object", "properties" {"uri" {"type" "string", "description" "Google Cloud Storage URI prefix where the results will be stored. Results will be in JSON format and preceded by its corresponding input URI prefix. This field can either represent a gcs file prefix or gcs directory. In either case, the uri should be unique because in order to get all of the output files, you will need to do a wildcard gcs search on the uri prefix you provide. Examples: * File Prefix: gs://bucket-name/here/filenameprefix The output files will be created in gs://bucket-name/here/ and the names of the output files will begin with \"filenameprefix\". * Directory Prefix: gs://bucket-name/some/location/ The output files will be created in gs://bucket-name/some/location/ and the names of the output files could be anything because there was no filename prefix specified. If multiple outputs, each response is still AnnotateFileResponse, each of which contains some subset of the full list of AnnotateImageResponse. Multiple outputs can happen if, for example, the output JSON is too large and overflows into multiple sharded files."}}, "description" "The Google Cloud Storage location where the output will be written to."}, "GoogleCloudVisionV1p2beta1EntityAnnotation" {"properties" {"properties" {"description" "Some entities may have optional user-supplied `Property` (name/value) fields, such a score or string that qualifies the entity.", "items" {"$ref" "GoogleCloudVisionV1p2beta1Property"}, "type" "array"}, "confidence" {"type" "number", "description" "**Deprecated. Use `score` instead.** The accuracy of the entity detection in an image. For example, for an image in which the \"Eiffel Tower\" entity is detected, this field represents the confidence that there is a tower in the query image. Range [0, 1].", "format" "float"}, "score" {"format" "float", "description" "Overall score of the result. Range [0, 1].", "type" "number"}, "topicality" {"type" "number", "format" "float", "description" "The relevancy of the ICA (Image Content Annotation) label to the image. For example, the relevancy of \"tower\" is likely higher to an image containing the detected \"Eiffel Tower\" than to an image containing a detected distant towering building, even though the confidence that there is a tower in each image may be the same. Range [0, 1]."}, "boundingPoly" {"description" "Image region to which this entity belongs. Not produced for `LABEL_DETECTION` features.", "$ref" "GoogleCloudVisionV1p2beta1BoundingPoly"}, "locale" {"type" "string", "description" "The language code for the locale in which the entity textual `description` is expressed."}, "locations" {"type" "array", "description" "The location information for the detected entity. Multiple `LocationInfo` elements can be present because one location may indicate the location of the scene in the image, and another location may indicate the location of the place where the image was taken. Location information is usually present for landmarks.", "items" {"$ref" "GoogleCloudVisionV1p2beta1LocationInfo"}}, "mid" {"type" "string", "description" "Opaque entity ID. Some IDs may be available in [Google Knowledge Graph Search API](https://developers.google.com/knowledge-graph/)."}, "description" {"type" "string", "description" "Entity textual description, expressed in its `locale` language."}}, "id" "GoogleCloudVisionV1p2beta1EntityAnnotation", "type" "object", "description" "Set of detected entity features."}, "Page" {"type" "object", "properties" {"width" {"format" "int32", "type" "integer", "description" "Page width. For PDFs the unit is points. For images (including TIFFs) the unit is pixels."}, "confidence" {"type" "number", "description" "Confidence of the OCR results on the page. Range [0, 1].", "format" "float"}, "blocks" {"items" {"$ref" "Block"}, "type" "array", "description" "List of blocks of text, images etc on this page."}, "property" {"description" "Additional information detected on the page.", "$ref" "TextProperty"}, "height" {"description" "Page height. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.", "type" "integer", "format" "int32"}}, "id" "Page", "description" "Detected page from OCR."}, "GoogleCloudVisionV1p1beta1LocationInfo" {"type" "object", "properties" {"latLng" {"$ref" "LatLng", "description" "lat/long location coordinates."}}, "id" "GoogleCloudVisionV1p1beta1LocationInfo", "description" "Detected entity location information."}, "GoogleCloudVisionV1p1beta1FaceAnnotation" {"description" "A face annotation object contains the results of face detection.", "id" "GoogleCloudVisionV1p1beta1FaceAnnotation", "type" "object", "properties" {"angerLikelihood" {"enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "description" "Anger likelihood.", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "type" "string"}, "landmarks" {"description" "Detected face landmarks.", "items" {"$ref" "GoogleCloudVisionV1p1beta1FaceAnnotationLandmark"}, "type" "array"}, "surpriseLikelihood" {"enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "description" "Surprise likelihood.", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "type" "string"}, "landmarkingConfidence" {"description" "Face landmarking confidence. Range [0, 1].", "format" "float", "type" "number"}, "boundingPoly" {"description" "The bounding polygon around the face. The coordinates of the bounding box are in the original image's scale. The bounding box is computed to \"frame\" the face in accordance with human expectations. It is based on the landmarker results. Note that one or more x and/or y coordinates may not be generated in the `BoundingPoly` (the polygon will be unbounded) if only a partial face appears in the image to be annotated.", "$ref" "GoogleCloudVisionV1p1beta1BoundingPoly"}, "blurredLikelihood" {"description" "Blurred likelihood.", "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "type" "string"}, "rollAngle" {"description" "Roll angle, which indicates the amount of clockwise/anti-clockwise rotation of the face relative to the image vertical about the axis perpendicular to the face. Range [-180,180].", "type" "number", "format" "float"}, "fdBoundingPoly" {"$ref" "GoogleCloudVisionV1p1beta1BoundingPoly", "description" "The `fd_bounding_poly` bounding polygon is tighter than the `boundingPoly`, and encloses only the skin part of the face. Typically, it is used to eliminate the face from any image analysis that detects the \"amount of skin\" visible in an image. It is not based on the landmarker results, only on the initial face detection, hence the fd (face detection) prefix."}, "headwearLikelihood" {"enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "type" "string", "description" "Headwear likelihood.", "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"]}, "underExposedLikelihood" {"type" "string", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "description" "Under-exposed likelihood.", "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"]}, "panAngle" {"type" "number", "format" "float", "description" "Yaw angle, which indicates the leftward/rightward angle that the face is pointing relative to the vertical plane perpendicular to the image. Range [-180,180]."}, "joyLikelihood" {"type" "string", "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "description" "Joy likelihood."}, "tiltAngle" {"type" "number", "description" "Pitch angle, which indicates the upwards/downwards angle that the face is pointing relative to the image's horizontal plane. Range [-180,180].", "format" "float"}, "sorrowLikelihood" {"type" "string", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "description" "Sorrow likelihood."}, "detectionConfidence" {"description" "Detection confidence. Range [0, 1].", "format" "float", "type" "number"}}}, "GoogleCloudVisionV1p1beta1Symbol" {"description" "A single symbol representation.", "properties" {"confidence" {"description" "Confidence of the OCR results for the symbol. Range [0, 1].", "type" "number", "format" "float"}, "property" {"description" "Additional information detected for the symbol.", "$ref" "GoogleCloudVisionV1p1beta1TextAnnotationTextProperty"}, "boundingBox" {"description" "The bounding box for the symbol. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the 'natural' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it's rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).", "$ref" "GoogleCloudVisionV1p1beta1BoundingPoly"}, "text" {"description" "The actual UTF-8 representation of the symbol.", "type" "string"}}, "type" "object", "id" "GoogleCloudVisionV1p1beta1Symbol"}, "GoogleCloudVisionV1p3beta1ProductKeyValue" {"id" "GoogleCloudVisionV1p3beta1ProductKeyValue", "description" "A product label represented as a key-value pair.", "type" "object", "properties" {"value" {"description" "The value of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.", "type" "string"}, "key" {"description" "The key of the label attached to the product. Cannot be empty and cannot exceed 128 bytes.", "type" "string"}}}, "ReferenceImage" {"description" "A `ReferenceImage` represents a product image and its associated metadata, such as bounding boxes.", "id" "ReferenceImage", "type" "object", "properties" {"uri" {"description" "Required. The Google Cloud Storage URI of the reference image. The URI must start with `gs://`.", "type" "string"}, "name" {"description" "The resource name of the reference image. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID/referenceImages/IMAGE_ID`. This field is ignored when creating a reference image.", "type" "string"}, "boundingPolys" {"items" {"$ref" "BoundingPoly"}, "description" "Optional. Bounding polygons around the areas of interest in the reference image. If this field is empty, the system will try to detect regions of interest. At most 10 bounding polygons will be used. The provided shape is converted into a non-rotated rectangle. Once converted, the small edge of the rectangle must be greater than or equal to 300 pixels. The aspect ratio must be 1:4 or less (i.e. 1:3 is ok; 1:5 is not).", "type" "array"}}}, "GoogleCloudVisionV1p1beta1Property" {"id" "GoogleCloudVisionV1p1beta1Property", "description" "A `Property` consists of a user-supplied name/value pair.", "properties" {"uint64Value" {"description" "Value of numeric properties.", "format" "uint64", "type" "string"}, "name" {"type" "string", "description" "Name of the property."}, "value" {"description" "Value of the property.", "type" "string"}}, "type" "object"}, "GoogleCloudVisionV1p3beta1BoundingPoly" {"description" "A bounding polygon for the detected image annotation.", "properties" {"normalizedVertices" {"items" {"$ref" "GoogleCloudVisionV1p3beta1NormalizedVertex"}, "description" "The bounding polygon normalized vertices.", "type" "array"}, "vertices" {"type" "array", "items" {"$ref" "GoogleCloudVisionV1p3beta1Vertex"}, "description" "The bounding polygon vertices."}}, "id" "GoogleCloudVisionV1p3beta1BoundingPoly", "type" "object"}, "GoogleCloudVisionV1p1beta1AnnotateFileRequest" {"description" "A request to annotate one single file, e.g. a PDF, TIFF or GIF file.", "id" "GoogleCloudVisionV1p1beta1AnnotateFileRequest", "properties" {"features" {"type" "array", "description" "Required. Requested features.", "items" {"$ref" "GoogleCloudVisionV1p1beta1Feature"}}, "imageContext" {"$ref" "GoogleCloudVisionV1p1beta1ImageContext", "description" "Additional context that may accompany the image(s) in the file."}, "inputConfig" {"description" "Required. Information about the input file.", "$ref" "GoogleCloudVisionV1p1beta1InputConfig"}, "pages" {"type" "array", "items" {"format" "int32", "type" "integer"}, "description" "Pages of the file to perform image annotation. Pages starts from 1, we assume the first page of the file is page 1. At most 5 pages are supported per request. Pages can be negative. Page 1 means the first page. Page 2 means the second page. Page -1 means the last page. Page -2 means the second to the last page. If the file is GIF instead of PDF or TIFF, page refers to GIF frames. If this field is empty, by default the service performs image annotation for the first 5 pages of the file."}}, "type" "object"}, "GoogleCloudVisionV1p3beta1TextAnnotation" {"type" "object", "properties" {"pages" {"description" "List of pages detected by OCR.", "type" "array", "items" {"$ref" "GoogleCloudVisionV1p3beta1Page"}}, "text" {"type" "string", "description" "UTF-8 text detected on the pages."}}, "description" "TextAnnotation contains a structured representation of OCR extracted text. The hierarchy of an OCR extracted text structure is like this: TextAnnotation -> Page -> Block -> Paragraph -> Word -> Symbol Each structural component, starting from Page, may further have their own properties. Properties describe detected languages, breaks etc.. Please refer to the TextAnnotation.TextProperty message definition below for more detail.", "id" "GoogleCloudVisionV1p3beta1TextAnnotation"}, "GoogleCloudVisionV1p3beta1DominantColorsAnnotation" {"id" "GoogleCloudVisionV1p3beta1DominantColorsAnnotation", "properties" {"colors" {"items" {"$ref" "GoogleCloudVisionV1p3beta1ColorInfo"}, "type" "array", "description" "RGB color values with their score and pixel fraction."}}, "type" "object", "description" "Set of dominant colors and their corresponding scores."}, "Position" {"type" "object", "description" "A 3D position in the image, used primarily for Face detection landmarks. A valid Position must have both x and y coordinates. The position coordinates are in the same scale as the original image.", "id" "Position", "properties" {"z" {"description" "Z coordinate (or depth).", "type" "number", "format" "float"}, "x" {"format" "float", "description" "X coordinate.", "type" "number"}, "y" {"format" "float", "type" "number", "description" "Y coordinate."}}}, "GoogleCloudVisionV1p1beta1LocalizedObjectAnnotation" {"type" "object", "description" "Set of detected objects with bounding boxes.", "id" "GoogleCloudVisionV1p1beta1LocalizedObjectAnnotation", "properties" {"score" {"format" "float", "type" "number", "description" "Score of the result. Range [0, 1]."}, "mid" {"type" "string", "description" "Object ID that should align with EntityAnnotation mid."}, "languageCode" {"type" "string", "description" "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier."}, "name" {"type" "string", "description" "Object name, expressed in its `language_code` language."}, "boundingPoly" {"$ref" "GoogleCloudVisionV1p1beta1BoundingPoly", "description" "Image region to which this object belongs. This must be populated."}}}, "GoogleCloudVisionV1p4beta1GcsSource" {"description" "The Google Cloud Storage location where the input will be read from.", "id" "GoogleCloudVisionV1p4beta1GcsSource", "properties" {"uri" {"type" "string", "description" "Google Cloud Storage URI for the input file. This must only be a Google Cloud Storage object. Wildcards are not currently supported."}}, "type" "object"}, "GoogleCloudVisionV1p2beta1OutputConfig" {"description" "The desired output location and metadata.", "type" "object", "id" "GoogleCloudVisionV1p2beta1OutputConfig", "properties" {"batchSize" {"type" "integer", "description" "The max number of response protos to put into each output JSON file on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 response protos will be generated. If `batch_size` = 20, then 5 json files each containing 20 response protos will be written under the prefix `gcs_destination`.`uri`. Currently, batch_size only applies to GcsDestination, with potential future support for other output configurations.", "format" "int32"}, "gcsDestination" {"description" "The Google Cloud Storage location to write the output(s) to.", "$ref" "GoogleCloudVisionV1p2beta1GcsDestination"}}}, "GoogleCloudVisionV1p1beta1CropHint" {"type" "object", "id" "GoogleCloudVisionV1p1beta1CropHint", "description" "Single crop hint that is used to generate a new crop when serving an image.", "properties" {"boundingPoly" {"$ref" "GoogleCloudVisionV1p1beta1BoundingPoly", "description" "The bounding polygon for the crop region. The coordinates of the bounding box are in the original image's scale."}, "confidence" {"format" "float", "type" "number", "description" "Confidence of this being a salient region. Range [0, 1]."}, "importanceFraction" {"format" "float", "type" "number", "description" "Fraction of importance of this salient region with respect to the original image."}}}, "GoogleCloudVisionV1p1beta1TextAnnotation" {"id" "GoogleCloudVisionV1p1beta1TextAnnotation", "description" "TextAnnotation contains a structured representation of OCR extracted text. The hierarchy of an OCR extracted text structure is like this: TextAnnotation -> Page -> Block -> Paragraph -> Word -> Symbol Each structural component, starting from Page, may further have their own properties. Properties describe detected languages, breaks etc.. Please refer to the TextAnnotation.TextProperty message definition below for more detail.", "type" "object", "properties" {"text" {"type" "string", "description" "UTF-8 text detected on the pages."}, "pages" {"description" "List of pages detected by OCR.", "items" {"$ref" "GoogleCloudVisionV1p1beta1Page"}, "type" "array"}}}, "GoogleCloudVisionV1p1beta1Vertex" {"id" "GoogleCloudVisionV1p1beta1Vertex", "description" "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.", "properties" {"x" {"type" "integer", "description" "X coordinate.", "format" "int32"}, "y" {"type" "integer", "format" "int32", "description" "Y coordinate."}}, "type" "object"}, "GoogleCloudVisionV1p1beta1TextAnnotationDetectedLanguage" {"type" "object", "properties" {"languageCode" {"type" "string", "description" "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier."}, "confidence" {"format" "float", "description" "Confidence of detected language. Range [0, 1].", "type" "number"}}, "description" "Detected language for a structural component.", "id" "GoogleCloudVisionV1p1beta1TextAnnotationDetectedLanguage"}, "GoogleCloudVisionV1p4beta1BoundingPoly" {"properties" {"normalizedVertices" {"items" {"$ref" "GoogleCloudVisionV1p4beta1NormalizedVertex"}, "type" "array", "description" "The bounding polygon normalized vertices."}, "vertices" {"description" "The bounding polygon vertices.", "items" {"$ref" "GoogleCloudVisionV1p4beta1Vertex"}, "type" "array"}}, "type" "object", "description" "A bounding polygon for the detected image annotation.", "id" "GoogleCloudVisionV1p4beta1BoundingPoly"}, "GoogleCloudVisionV1p1beta1Paragraph" {"type" "object", "properties" {"confidence" {"type" "number", "description" "Confidence of the OCR results for the paragraph. Range [0, 1].", "format" "float"}, "words" {"description" "List of all words in this paragraph.", "type" "array", "items" {"$ref" "GoogleCloudVisionV1p1beta1Word"}}, "boundingBox" {"$ref" "GoogleCloudVisionV1p1beta1BoundingPoly", "description" "The bounding box for the paragraph. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the 'natural' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it's rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3)."}, "property" {"description" "Additional information detected for the paragraph.", "$ref" "GoogleCloudVisionV1p1beta1TextAnnotationTextProperty"}}, "id" "GoogleCloudVisionV1p1beta1Paragraph", "description" "Structural unit of text representing a number of words in certain order."}, "GoogleCloudVisionV1p3beta1WebDetection" {"properties" {"webEntities" {"description" "Deduced entities from similar images on the Internet.", "items" {"$ref" "GoogleCloudVisionV1p3beta1WebDetectionWebEntity"}, "type" "array"}, "partialMatchingImages" {"type" "array", "description" "Partial matching images from the Internet. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.", "items" {"$ref" "GoogleCloudVisionV1p3beta1WebDetectionWebImage"}}, "bestGuessLabels" {"items" {"$ref" "GoogleCloudVisionV1p3beta1WebDetectionWebLabel"}, "description" "The service's best guess as to the topic of the request image. Inferred from similar images on the open web.", "type" "array"}, "fullMatchingImages" {"description" "Fully matching images from the Internet. Can include resized copies of the query image.", "type" "array", "items" {"$ref" "GoogleCloudVisionV1p3beta1WebDetectionWebImage"}}, "visuallySimilarImages" {"description" "The visually similar image results.", "items" {"$ref" "GoogleCloudVisionV1p3beta1WebDetectionWebImage"}, "type" "array"}, "pagesWithMatchingImages" {"description" "Web pages containing the matching images from the Internet.", "items" {"$ref" "GoogleCloudVisionV1p3beta1WebDetectionWebPage"}, "type" "array"}}, "description" "Relevant information for the image from the Internet.", "type" "object", "id" "GoogleCloudVisionV1p3beta1WebDetection"}, "GoogleCloudVisionV1p4beta1ProductSearchResultsGroupedResult" {"id" "GoogleCloudVisionV1p4beta1ProductSearchResultsGroupedResult", "type" "object", "properties" {"results" {"type" "array", "description" "List of results, one for each product match.", "items" {"$ref" "GoogleCloudVisionV1p4beta1ProductSearchResultsResult"}}, "boundingPoly" {"description" "The bounding polygon around the product detected in the query image.", "$ref" "GoogleCloudVisionV1p4beta1BoundingPoly"}, "objectAnnotations" {"type" "array", "description" "List of generic predictions for the object in the bounding box.", "items" {"$ref" "GoogleCloudVisionV1p4beta1ProductSearchResultsObjectAnnotation"}}}, "description" "Information about the products similar to a single product in a query image."}, "GoogleCloudVisionV1p2beta1TextAnnotationTextProperty" {"properties" {"detectedBreak" {"$ref" "GoogleCloudVisionV1p2beta1TextAnnotationDetectedBreak", "description" "Detected start or end of a text segment."}, "detectedLanguages" {"items" {"$ref" "GoogleCloudVisionV1p2beta1TextAnnotationDetectedLanguage"}, "type" "array", "description" "A list of detected languages together with confidence."}}, "type" "object", "description" "Additional information detected on the structural component.", "id" "GoogleCloudVisionV1p2beta1TextAnnotationTextProperty"}, "GoogleCloudVisionV1p3beta1ImageProperties" {"id" "GoogleCloudVisionV1p3beta1ImageProperties", "description" "Stores image properties, such as dominant colors.", "properties" {"dominantColors" {"description" "If present, dominant colors completed successfully.", "$ref" "GoogleCloudVisionV1p3beta1DominantColorsAnnotation"}}, "type" "object"}, "GoogleCloudVisionV1p2beta1Product" {"description" "A Product contains ReferenceImages.", "id" "GoogleCloudVisionV1p2beta1Product", "type" "object", "properties" {"description" {"type" "string", "description" "User-provided metadata to be stored with this product. Must be at most 4096 characters long."}, "name" {"description" "The resource name of the product. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`. This field is ignored when creating a product.", "type" "string"}, "displayName" {"type" "string", "description" "The user-provided name for this Product. Must not be empty. Must be at most 4096 characters long."}, "productCategory" {"description" "Immutable. The category for the product identified by the reference image. This should be one of \"homegoods-v2\", \"apparel-v2\", \"toys-v2\", \"packagedgoods-v1\" or \"general-v1\". The legacy categories \"homegoods\", \"apparel\", and \"toys\" are still supported, but these should not be used for new products.", "type" "string"}, "productLabels" {"description" "Key-value pairs that can be attached to a product. At query time, constraints can be specified based on the product_labels. Note that integer values can be provided as strings, e.g. \"1199\". Only strings with integer values can match a range-based restriction which is to be supported soon. Multiple values can be assigned to the same key. One product may have up to 500 product_labels. Notice that the total number of distinct product_labels over all products in one ProductSet cannot exceed 1M, otherwise the product search pipeline will refuse to work for that ProductSet.", "items" {"$ref" "GoogleCloudVisionV1p2beta1ProductKeyValue"}, "type" "array"}}}, "Property" {"properties" {"uint64Value" {"format" "uint64", "type" "string", "description" "Value of numeric properties."}, "value" {"description" "Value of the property.", "type" "string"}, "name" {"description" "Name of the property.", "type" "string"}}, "id" "Property", "type" "object", "description" "A `Property` consists of a user-supplied name/value pair."}, "GoogleCloudVisionV1p3beta1OutputConfig" {"description" "The desired output location and metadata.", "type" "object", "properties" {"batchSize" {"type" "integer", "format" "int32", "description" "The max number of response protos to put into each output JSON file on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 response protos will be generated. If `batch_size` = 20, then 5 json files each containing 20 response protos will be written under the prefix `gcs_destination`.`uri`. Currently, batch_size only applies to GcsDestination, with potential future support for other output configurations."}, "gcsDestination" {"$ref" "GoogleCloudVisionV1p3beta1GcsDestination", "description" "The Google Cloud Storage location to write the output(s) to."}}, "id" "GoogleCloudVisionV1p3beta1OutputConfig"}, "GoogleCloudVisionV1p4beta1Vertex" {"id" "GoogleCloudVisionV1p4beta1Vertex", "type" "object", "properties" {"x" {"type" "integer", "format" "int32", "description" "X coordinate."}, "y" {"description" "Y coordinate.", "type" "integer", "format" "int32"}}, "description" "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image."}, "DominantColorsAnnotation" {"description" "Set of dominant colors and their corresponding scores.", "type" "object", "id" "DominantColorsAnnotation", "properties" {"colors" {"items" {"$ref" "ColorInfo"}, "type" "array", "description" "RGB color values with their score and pixel fraction."}}}, "GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak" {"type" "object", "properties" {"type" {"enumDescriptions" ["Unknown break label type." "Regular space." "Sure space (very wide)." "Line-wrapping break." "End-line hyphen that is not present in text; does not co-occur with `SPACE`, `LEADER_SPACE`, or `LINE_BREAK`." "Line break that ends a paragraph."], "description" "Detected break type.", "type" "string", "enum" ["UNKNOWN" "SPACE" "SURE_SPACE" "EOL_SURE_SPACE" "HYPHEN" "LINE_BREAK"]}, "isPrefix" {"type" "boolean", "description" "True if break prepends the element."}}, "id" "GoogleCloudVisionV1p1beta1TextAnnotationDetectedBreak", "description" "Detected start or end of a structural component."}, "WebEntity" {"description" "Entity deduced from similar images on the Internet.", "id" "WebEntity", "properties" {"entityId" {"description" "Opaque entity ID.", "type" "string"}, "description" {"type" "string", "description" "Canonical description of the entity, in English."}, "score" {"type" "number", "format" "float", "description" "Overall relevancy score for the entity. Not normalized and not comparable across different image queries."}}, "type" "object"}, "GoogleCloudVisionV1p1beta1Product" {"properties" {"displayName" {"type" "string", "description" "The user-provided name for this Product. Must not be empty. Must be at most 4096 characters long."}, "description" {"type" "string", "description" "User-provided metadata to be stored with this product. Must be at most 4096 characters long."}, "name" {"description" "The resource name of the product. Format is: `projects/PROJECT_ID/locations/LOC_ID/products/PRODUCT_ID`. This field is ignored when creating a product.", "type" "string"}, "productLabels" {"type" "array", "items" {"$ref" "GoogleCloudVisionV1p1beta1ProductKeyValue"}, "description" "Key-value pairs that can be attached to a product. At query time, constraints can be specified based on the product_labels. Note that integer values can be provided as strings, e.g. \"1199\". Only strings with integer values can match a range-based restriction which is to be supported soon. Multiple values can be assigned to the same key. One product may have up to 500 product_labels. Notice that the total number of distinct product_labels over all products in one ProductSet cannot exceed 1M, otherwise the product search pipeline will refuse to work for that ProductSet."}, "productCategory" {"type" "string", "description" "Immutable. The category for the product identified by the reference image. This should be one of \"homegoods-v2\", \"apparel-v2\", \"toys-v2\", \"packagedgoods-v1\" or \"general-v1\". The legacy categories \"homegoods\", \"apparel\", and \"toys\" are still supported, but these should not be used for new products."}}, "description" "A Product contains ReferenceImages.", "id" "GoogleCloudVisionV1p1beta1Product", "type" "object"}, "GoogleCloudVisionV1p4beta1InputConfig" {"type" "object", "properties" {"mimeType" {"type" "string", "description" "The type of the file. Currently only \"application/pdf\", \"image/tiff\" and \"image/gif\" are supported. Wildcards are not supported."}, "content" {"description" "File content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64. Currently, this field only works for BatchAnnotateFiles requests. It does not work for AsyncBatchAnnotateFiles requests.", "format" "byte", "type" "string"}, "gcsSource" {"description" "The Google Cloud Storage location to read the input from.", "$ref" "GoogleCloudVisionV1p4beta1GcsSource"}}, "id" "GoogleCloudVisionV1p4beta1InputConfig", "description" "The desired input location and metadata."}, "GoogleCloudVisionV1p3beta1OperationMetadata" {"description" "Contains metadata for the BatchAnnotateImages operation.", "id" "GoogleCloudVisionV1p3beta1OperationMetadata", "type" "object", "properties" {"createTime" {"description" "The time when the batch request was received.", "format" "google-datetime", "type" "string"}, "state" {"description" "Current state of the batch operation.", "enumDescriptions" ["Invalid." "Request is received." "Request is actively being processed." "The batch processing is done." "The batch processing was cancelled."], "enum" ["STATE_UNSPECIFIED" "CREATED" "RUNNING" "DONE" "CANCELLED"], "type" "string"}, "updateTime" {"description" "The time when the operation result was last updated.", "format" "google-datetime", "type" "string"}}}, "GoogleCloudVisionV1p1beta1AsyncBatchAnnotateFilesResponse" {"id" "GoogleCloudVisionV1p1beta1AsyncBatchAnnotateFilesResponse", "type" "object", "properties" {"responses" {"type" "array", "items" {"$ref" "GoogleCloudVisionV1p1beta1AsyncAnnotateFileResponse"}, "description" "The list of file annotation responses, one for each request in AsyncBatchAnnotateFilesRequest."}}, "description" "Response to an async batch file annotation request."}, "GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation" {"description" "Prediction for what the object in the bounding box is.", "id" "GoogleCloudVisionV1p1beta1ProductSearchResultsObjectAnnotation", "properties" {"languageCode" {"type" "string", "description" "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier."}, "mid" {"type" "string", "description" "Object ID that should align with EntityAnnotation mid."}, "score" {"format" "float", "type" "number", "description" "Score of the result. Range [0, 1]."}, "name" {"type" "string", "description" "Object name, expressed in its `language_code` language."}}, "type" "object"}, "GoogleCloudVisionV1p2beta1GcsSource" {"id" "GoogleCloudVisionV1p2beta1GcsSource", "properties" {"uri" {"type" "string", "description" "Google Cloud Storage URI for the input file. This must only be a Google Cloud Storage object. Wildcards are not currently supported."}}, "type" "object", "description" "The Google Cloud Storage location where the input will be read from."}, "GoogleCloudVisionV1p4beta1AsyncAnnotateFileResponse" {"properties" {"outputConfig" {"$ref" "GoogleCloudVisionV1p4beta1OutputConfig", "description" "The output location and metadata from AsyncAnnotateFileRequest."}}, "description" "The response for a single offline file annotation request.", "type" "object", "id" "GoogleCloudVisionV1p4beta1AsyncAnnotateFileResponse"}, "AsyncAnnotateFileResponse" {"properties" {"outputConfig" {"$ref" "OutputConfig", "description" "The output location and metadata from AsyncAnnotateFileRequest."}}, "description" "The response for a single offline file annotation request.", "type" "object", "id" "AsyncAnnotateFileResponse"}, "GoogleCloudVisionV1p4beta1ColorInfo" {"type" "object", "properties" {"pixelFraction" {"format" "float", "type" "number", "description" "The fraction of pixels the color occupies in the image. Value in range [0, 1]."}, "color" {"$ref" "Color", "description" "RGB components of the color."}, "score" {"format" "float", "type" "number", "description" "Image-specific score for this color. Value in range [0, 1]."}}, "description" "Color information consists of RGB channels, score, and the fraction of the image that the color occupies in the image.", "id" "GoogleCloudVisionV1p4beta1ColorInfo"}, "GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation" {"properties" {"name" {"type" "string", "description" "Object name, expressed in its `language_code` language."}, "mid" {"description" "Object ID that should align with EntityAnnotation mid.", "type" "string"}, "score" {"description" "Score of the result. Range [0, 1].", "format" "float", "type" "number"}, "boundingPoly" {"description" "Image region to which this object belongs. This must be populated.", "$ref" "GoogleCloudVisionV1p3beta1BoundingPoly"}, "languageCode" {"type" "string", "description" "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier."}}, "description" "Set of detected objects with bounding boxes.", "type" "object", "id" "GoogleCloudVisionV1p3beta1LocalizedObjectAnnotation"}, "WebPage" {"description" "Metadata for web pages.", "id" "WebPage", "properties" {"pageTitle" {"type" "string", "description" "Title for the web page, may contain HTML markups."}, "fullMatchingImages" {"type" "array", "items" {"$ref" "WebImage"}, "description" "Fully matching images on the page. Can include resized copies of the query image."}, "partialMatchingImages" {"description" "Partial matching images on the page. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.", "items" {"$ref" "WebImage"}, "type" "array"}, "url" {"description" "The result web page URL.", "type" "string"}, "score" {"type" "number", "description" "(Deprecated) Overall relevancy score for the web page.", "format" "float"}}, "type" "object"}, "Word" {"properties" {"confidence" {"format" "float", "description" "Confidence of the OCR results for the word. Range [0, 1].", "type" "number"}, "property" {"description" "Additional information detected for the word.", "$ref" "TextProperty"}, "symbols" {"items" {"$ref" "Symbol"}, "type" "array", "description" "List of symbols in the word. The order of the symbols follows the natural reading order."}, "boundingBox" {"description" "The bounding box for the word. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the 'natural' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it's rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).", "$ref" "BoundingPoly"}}, "type" "object", "id" "Word", "description" "A word representation."}, "Vertex" {"description" "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.", "properties" {"x" {"format" "int32", "type" "integer", "description" "X coordinate."}, "y" {"description" "Y coordinate.", "format" "int32", "type" "integer"}}, "type" "object", "id" "Vertex"}, "GoogleCloudVisionV1p4beta1AnnotateFileResponse" {"description" "Response to a single file annotation request. A file may contain one or more images, which individually have their own responses.", "type" "object", "id" "GoogleCloudVisionV1p4beta1AnnotateFileResponse", "properties" {"inputConfig" {"description" "Information about the file for which this response is generated.", "$ref" "GoogleCloudVisionV1p4beta1InputConfig"}, "totalPages" {"format" "int32", "description" "This field gives the total number of pages in the file.", "type" "integer"}, "responses" {"description" "Individual responses to images found within the file. This field will be empty if the `error` field is set.", "type" "array", "items" {"$ref" "GoogleCloudVisionV1p4beta1AnnotateImageResponse"}}, "error" {"$ref" "Status", "description" "If set, represents the error message for the failed request. The `responses` field will not be set in this case."}}}, "AnnotateImageResponse" {"type" "object", "properties" {"imagePropertiesAnnotation" {"$ref" "ImageProperties", "description" "If present, image properties were extracted successfully."}, "fullTextAnnotation" {"$ref" "TextAnnotation", "description" "If present, text (OCR) detection or document (OCR) text detection has completed successfully. This annotation provides the structural hierarchy for the OCR detected text."}, "logoAnnotations" {"type" "array", "items" {"$ref" "EntityAnnotation"}, "description" "If present, logo detection has completed successfully."}, "webDetection" {"$ref" "WebDetection", "description" "If present, web detection has completed successfully."}, "productSearchResults" {"$ref" "ProductSearchResults", "description" "If present, product search has completed successfully."}, "cropHintsAnnotation" {"$ref" "CropHintsAnnotation", "description" "If present, crop hints have completed successfully."}, "error" {"$ref" "Status", "description" "If set, represents the error message for the operation. Note that filled-in image annotations are guaranteed to be correct, even when `error` is set."}, "safeSearchAnnotation" {"$ref" "SafeSearchAnnotation", "description" "If present, safe-search annotation has completed successfully."}, "labelAnnotations" {"description" "If present, label detection has completed successfully.", "items" {"$ref" "EntityAnnotation"}, "type" "array"}, "context" {"description" "If present, contextual information is needed to understand where this image comes from.", "$ref" "ImageAnnotationContext"}, "faceAnnotations" {"items" {"$ref" "FaceAnnotation"}, "description" "If present, face detection has completed successfully.", "type" "array"}, "textAnnotations" {"items" {"$ref" "EntityAnnotation"}, "description" "If present, text (OCR) detection has completed successfully.", "type" "array"}, "landmarkAnnotations" {"type" "array", "items" {"$ref" "EntityAnnotation"}, "description" "If present, landmark detection has completed successfully."}, "localizedObjectAnnotations" {"items" {"$ref" "LocalizedObjectAnnotation"}, "description" "If present, localized object detection has completed successfully. This will be sorted descending by confidence score.", "type" "array"}}, "id" "AnnotateImageResponse", "description" "Response to an image annotation request."}, "GoogleCloudVisionV1p1beta1WebDetectionWebImage" {"properties" {"score" {"description" "(Deprecated) Overall relevancy score for the image.", "format" "float", "type" "number"}, "url" {"type" "string", "description" "The result image URL."}}, "type" "object", "description" "Metadata for online images.", "id" "GoogleCloudVisionV1p1beta1WebDetectionWebImage"}, "GoogleCloudVisionV1p2beta1ProductSearchResultsResult" {"id" "GoogleCloudVisionV1p2beta1ProductSearchResultsResult", "description" "Information about a product.", "properties" {"product" {"$ref" "GoogleCloudVisionV1p2beta1Product", "description" "The Product."}, "image" {"description" "The resource name of the image from the product that is the closest match to the query.", "type" "string"}, "score" {"format" "float", "description" "A confidence level on the match, ranging from 0 (no confidence) to 1 (full confidence).", "type" "number"}}, "type" "object"}, "GoogleCloudVisionV1p4beta1WebDetectionWebEntity" {"type" "object", "id" "GoogleCloudVisionV1p4beta1WebDetectionWebEntity", "description" "Entity deduced from similar images on the Internet.", "properties" {"score" {"type" "number", "format" "float", "description" "Overall relevancy score for the entity. Not normalized and not comparable across different image queries."}, "entityId" {"type" "string", "description" "Opaque entity ID."}, "description" {"type" "string", "description" "Canonical description of the entity, in English."}}}, "GoogleCloudVisionV1p4beta1NormalizedVertex" {"type" "object", "description" "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.", "properties" {"x" {"type" "number", "description" "X coordinate.", "format" "float"}, "y" {"type" "number", "description" "Y coordinate.", "format" "float"}}, "id" "GoogleCloudVisionV1p4beta1NormalizedVertex"}, "GoogleCloudVisionV1p4beta1ImportProductSetsResponse" {"description" "Response message for the `ImportProductSets` method. This message is returned by the google.longrunning.Operations.GetOperation method in the returned google.longrunning.Operation.response field.", "properties" {"referenceImages" {"items" {"$ref" "GoogleCloudVisionV1p4beta1ReferenceImage"}, "type" "array", "description" "The list of reference_images that are imported successfully."}, "statuses" {"description" "The rpc status for each ImportProductSet request, including both successes and errors. The number of statuses here matches the number of lines in the csv file, and statuses[i] stores the success or failure status of processing the i-th line of the csv, starting from line 0.", "items" {"$ref" "Status"}, "type" "array"}}, "type" "object", "id" "GoogleCloudVisionV1p4beta1ImportProductSetsResponse"}, "GoogleCloudVisionV1p2beta1Block" {"description" "Logical element on the page.", "type" "object", "properties" {"boundingBox" {"$ref" "GoogleCloudVisionV1p2beta1BoundingPoly", "description" "The bounding box for the block. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the 'natural' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it's rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3)."}, "property" {"$ref" "GoogleCloudVisionV1p2beta1TextAnnotationTextProperty", "description" "Additional information detected for the block."}, "paragraphs" {"description" "List of paragraphs in this block (if this blocks is of type text).", "type" "array", "items" {"$ref" "GoogleCloudVisionV1p2beta1Paragraph"}}, "confidence" {"description" "Confidence of the OCR results on the block. Range [0, 1].", "type" "number", "format" "float"}, "blockType" {"type" "string", "enum" ["UNKNOWN" "TEXT" "TABLE" "PICTURE" "RULER" "BARCODE"], "description" "Detected block type (text, image etc) for this block.", "enumDescriptions" ["Unknown block type." "Regular text block." "Table block." "Image block." "Horizontal/vertical line box." "Barcode block."]}}, "id" "GoogleCloudVisionV1p2beta1Block"}, "GoogleCloudVisionV1p2beta1ProductSearchResultsObjectAnnotation" {"description" "Prediction for what the object in the bounding box is.", "id" "GoogleCloudVisionV1p2beta1ProductSearchResultsObjectAnnotation", "type" "object", "properties" {"mid" {"type" "string", "description" "Object ID that should align with EntityAnnotation mid."}, "name" {"description" "Object name, expressed in its `language_code` language.", "type" "string"}, "languageCode" {"description" "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.", "type" "string"}, "score" {"format" "float", "description" "Score of the result. Range [0, 1].", "type" "number"}}}, "GoogleCloudVisionV1p4beta1FaceAnnotation" {"type" "object", "id" "GoogleCloudVisionV1p4beta1FaceAnnotation", "description" "A face annotation object contains the results of face detection.", "properties" {"angerLikelihood" {"enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "type" "string", "description" "Anger likelihood."}, "landmarks" {"items" {"$ref" "GoogleCloudVisionV1p4beta1FaceAnnotationLandmark"}, "type" "array", "description" "Detected face landmarks."}, "surpriseLikelihood" {"enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "type" "string", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "description" "Surprise likelihood."}, "landmarkingConfidence" {"type" "number", "description" "Face landmarking confidence. Range [0, 1].", "format" "float"}, "boundingPoly" {"$ref" "GoogleCloudVisionV1p4beta1BoundingPoly", "description" "The bounding polygon around the face. The coordinates of the bounding box are in the original image's scale. The bounding box is computed to \"frame\" the face in accordance with human expectations. It is based on the landmarker results. Note that one or more x and/or y coordinates may not be generated in the `BoundingPoly` (the polygon will be unbounded) if only a partial face appears in the image to be annotated."}, "recognitionResult" {"type" "array", "items" {"$ref" "GoogleCloudVisionV1p4beta1FaceRecognitionResult"}, "description" "Additional recognition information. Only computed if image_context.face_recognition_params is provided, **and** a match is found to a Celebrity in the input CelebritySet. This field is sorted in order of decreasing confidence values."}, "blurredLikelihood" {"enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "type" "string", "description" "Blurred likelihood.", "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"]}, "rollAngle" {"type" "number", "description" "Roll angle, which indicates the amount of clockwise/anti-clockwise rotation of the face relative to the image vertical about the axis perpendicular to the face. Range [-180,180].", "format" "float"}, "fdBoundingPoly" {"description" "The `fd_bounding_poly` bounding polygon is tighter than the `boundingPoly`, and encloses only the skin part of the face. Typically, it is used to eliminate the face from any image analysis that detects the \"amount of skin\" visible in an image. It is not based on the landmarker results, only on the initial face detection, hence the fd (face detection) prefix.", "$ref" "GoogleCloudVisionV1p4beta1BoundingPoly"}, "headwearLikelihood" {"type" "string", "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "description" "Headwear likelihood.", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."]}, "underExposedLikelihood" {"enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "type" "string", "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "description" "Under-exposed likelihood."}, "panAngle" {"type" "number", "format" "float", "description" "Yaw angle, which indicates the leftward/rightward angle that the face is pointing relative to the vertical plane perpendicular to the image. Range [-180,180]."}, "joyLikelihood" {"enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "description" "Joy likelihood.", "type" "string", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."]}, "tiltAngle" {"description" "Pitch angle, which indicates the upwards/downwards angle that the face is pointing relative to the image's horizontal plane. Range [-180,180].", "format" "float", "type" "number"}, "sorrowLikelihood" {"description" "Sorrow likelihood.", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "type" "string", "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"]}, "detectionConfidence" {"format" "float", "type" "number", "description" "Detection confidence. Range [0, 1]."}}}, "GoogleCloudVisionV1p2beta1InputConfig" {"type" "object", "properties" {"gcsSource" {"$ref" "GoogleCloudVisionV1p2beta1GcsSource", "description" "The Google Cloud Storage location to read the input from."}, "mimeType" {"type" "string", "description" "The type of the file. Currently only \"application/pdf\", \"image/tiff\" and \"image/gif\" are supported. Wildcards are not supported."}, "content" {"format" "byte", "type" "string", "description" "File content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64. Currently, this field only works for BatchAnnotateFiles requests. It does not work for AsyncBatchAnnotateFiles requests."}}, "description" "The desired input location and metadata.", "id" "GoogleCloudVisionV1p2beta1InputConfig"}, "CropHint" {"id" "CropHint", "description" "Single crop hint that is used to generate a new crop when serving an image.", "type" "object", "properties" {"confidence" {"type" "number", "format" "float", "description" "Confidence of this being a salient region. Range [0, 1]."}, "boundingPoly" {"$ref" "BoundingPoly", "description" "The bounding polygon for the crop region. The coordinates of the bounding box are in the original image's scale."}, "importanceFraction" {"format" "float", "type" "number", "description" "Fraction of importance of this salient region with respect to the original image."}}}, "GoogleCloudVisionV1p4beta1WebDetectionWebImage" {"description" "Metadata for online images.", "id" "GoogleCloudVisionV1p4beta1WebDetectionWebImage", "properties" {"score" {"format" "float", "type" "number", "description" "(Deprecated) Overall relevancy score for the image."}, "url" {"description" "The result image URL.", "type" "string"}}, "type" "object"}, "GoogleCloudVisionV1p1beta1ProductSearchResults" {"type" "object", "id" "GoogleCloudVisionV1p1beta1ProductSearchResults", "properties" {"indexTime" {"type" "string", "format" "google-datetime", "description" "Timestamp of the index which provided these results. Products added to the product set and products removed from the product set after this time are not reflected in the current results."}, "productGroupedResults" {"items" {"$ref" "GoogleCloudVisionV1p1beta1ProductSearchResultsGroupedResult"}, "type" "array", "description" "List of results grouped by products detected in the query image. Each entry corresponds to one bounding polygon in the query image, and contains the matching products specific to that region. There may be duplicate product matches in the union of all the per-product results."}, "results" {"items" {"$ref" "GoogleCloudVisionV1p1beta1ProductSearchResultsResult"}, "type" "array", "description" "List of results, one for each product match."}}, "description" "Results for a product search request."}, "GoogleCloudVisionV1p1beta1WebDetectionWebPage" {"type" "object", "id" "GoogleCloudVisionV1p1beta1WebDetectionWebPage", "description" "Metadata for web pages.", "properties" {"pageTitle" {"type" "string", "description" "Title for the web page, may contain HTML markups."}, "fullMatchingImages" {"type" "array", "description" "Fully matching images on the page. Can include resized copies of the query image.", "items" {"$ref" "GoogleCloudVisionV1p1beta1WebDetectionWebImage"}}, "url" {"type" "string", "description" "The result web page URL."}, "score" {"format" "float", "description" "(Deprecated) Overall relevancy score for the web page.", "type" "number"}, "partialMatchingImages" {"items" {"$ref" "GoogleCloudVisionV1p1beta1WebDetectionWebImage"}, "description" "Partial matching images on the page. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.", "type" "array"}}}, "GoogleCloudVisionV1p1beta1LatLongRect" {"type" "object", "id" "GoogleCloudVisionV1p1beta1LatLongRect", "description" "Rectangle determined by min and max `LatLng` pairs.", "properties" {"maxLatLng" {"description" "Max lat/long pair.", "$ref" "LatLng"}, "minLatLng" {"description" "Min lat/long pair.", "$ref" "LatLng"}}}, "GoogleCloudVisionV1p2beta1CropHint" {"id" "GoogleCloudVisionV1p2beta1CropHint", "properties" {"importanceFraction" {"type" "number", "description" "Fraction of importance of this salient region with respect to the original image.", "format" "float"}, "confidence" {"type" "number", "description" "Confidence of this being a salient region. Range [0, 1].", "format" "float"}, "boundingPoly" {"$ref" "GoogleCloudVisionV1p2beta1BoundingPoly", "description" "The bounding polygon for the crop region. The coordinates of the bounding box are in the original image's scale."}}, "description" "Single crop hint that is used to generate a new crop when serving an image.", "type" "object"}, "GoogleCloudVisionV1p4beta1WebDetection" {"type" "object", "properties" {"webEntities" {"type" "array", "description" "Deduced entities from similar images on the Internet.", "items" {"$ref" "GoogleCloudVisionV1p4beta1WebDetectionWebEntity"}}, "bestGuessLabels" {"type" "array", "items" {"$ref" "GoogleCloudVisionV1p4beta1WebDetectionWebLabel"}, "description" "The service's best guess as to the topic of the request image. Inferred from similar images on the open web."}, "fullMatchingImages" {"description" "Fully matching images from the Internet. Can include resized copies of the query image.", "items" {"$ref" "GoogleCloudVisionV1p4beta1WebDetectionWebImage"}, "type" "array"}, "visuallySimilarImages" {"description" "The visually similar image results.", "type" "array", "items" {"$ref" "GoogleCloudVisionV1p4beta1WebDetectionWebImage"}}, "pagesWithMatchingImages" {"items" {"$ref" "GoogleCloudVisionV1p4beta1WebDetectionWebPage"}, "description" "Web pages containing the matching images from the Internet.", "type" "array"}, "partialMatchingImages" {"items" {"$ref" "GoogleCloudVisionV1p4beta1WebDetectionWebImage"}, "description" "Partial matching images from the Internet. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.", "type" "array"}}, "id" "GoogleCloudVisionV1p4beta1WebDetection", "description" "Relevant information for the image from the Internet."}, "SafeSearchAnnotation" {"id" "SafeSearchAnnotation", "type" "object", "description" "Set of features pertaining to the image, computed by computer vision methods over safe-search verticals (for example, adult, spoof, medical, violence).", "properties" {"adult" {"enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "type" "string", "description" "Represents the adult content likelihood for the image. Adult content may contain elements such as nudity, pornographic images or cartoons, or sexual activities.", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."]}, "violence" {"enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "type" "string", "description" "Likelihood that this image contains violent content."}, "spoof" {"type" "string", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "description" "Spoof likelihood. The likelihood that an modification was made to the image's canonical version to make it appear funny or offensive."}, "racy" {"description" "Likelihood that the request image contains racy content. Racy content may include (but is not limited to) skimpy or sheer clothing, strategically covered nudity, lewd or provocative poses, or close-ups of sensitive body areas.", "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "type" "string"}, "medical" {"type" "string", "enum" ["UNKNOWN" "VERY_UNLIKELY" "UNLIKELY" "POSSIBLE" "LIKELY" "VERY_LIKELY"], "enumDescriptions" ["Unknown likelihood." "It is very unlikely." "It is unlikely." "It is possible." "It is likely." "It is very likely."], "description" "Likelihood that this is a medical image."}}}, "GoogleCloudVisionV1p2beta1Vertex" {"properties" {"x" {"description" "X coordinate.", "type" "integer", "format" "int32"}, "y" {"description" "Y coordinate.", "type" "integer", "format" "int32"}}, "type" "object", "description" "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.", "id" "GoogleCloudVisionV1p2beta1Vertex"}, "ObjectAnnotation" {"id" "ObjectAnnotation", "type" "object", "properties" {"name" {"type" "string", "description" "Object name, expressed in its `language_code` language."}, "score" {"format" "float", "type" "number", "description" "Score of the result. Range [0, 1]."}, "mid" {"description" "Object ID that should align with EntityAnnotation mid.", "type" "string"}, "languageCode" {"description" "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.", "type" "string"}}, "description" "Prediction for what the object in the bounding box is."}, "GoogleCloudVisionV1p3beta1Page" {"id" "GoogleCloudVisionV1p3beta1Page", "properties" {"height" {"format" "int32", "description" "Page height. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.", "type" "integer"}, "confidence" {"format" "float", "type" "number", "description" "Confidence of the OCR results on the page. Range [0, 1]."}, "property" {"description" "Additional information detected on the page.", "$ref" "GoogleCloudVisionV1p3beta1TextAnnotationTextProperty"}, "blocks" {"type" "array", "description" "List of blocks of text, images etc on this page.", "items" {"$ref" "GoogleCloudVisionV1p3beta1Block"}}, "width" {"format" "int32", "type" "integer", "description" "Page width. For PDFs the unit is points. For images (including TIFFs) the unit is pixels."}}, "type" "object", "description" "Detected page from OCR."}, "GoogleCloudVisionV1p2beta1CropHintsAnnotation" {"description" "Set of crop hints that are used to generate new crops when serving images.", "type" "object", "id" "GoogleCloudVisionV1p2beta1CropHintsAnnotation", "properties" {"cropHints" {"items" {"$ref" "GoogleCloudVisionV1p2beta1CropHint"}, "description" "Crop hint results.", "type" "array"}}}, "GoogleCloudVisionV1p1beta1EntityAnnotation" {"id" "GoogleCloudVisionV1p1beta1EntityAnnotation", "properties" {"properties" {"type" "array", "items" {"$ref" "GoogleCloudVisionV1p1beta1Property"}, "description" "Some entities may have optional user-supplied `Property` (name/value) fields, such a score or string that qualifies the entity."}, "confidence" {"type" "number", "description" "**Deprecated. Use `score` instead.** The accuracy of the entity detection in an image. For example, for an image in which the \"Eiffel Tower\" entity is detected, this field represents the confidence that there is a tower in the query image. Range [0, 1].", "format" "float"}, "score" {"type" "number", "format" "float", "description" "Overall score of the result. Range [0, 1]."}, "topicality" {"type" "number", "description" "The relevancy of the ICA (Image Content Annotation) label to the image. For example, the relevancy of \"tower\" is likely higher to an image containing the detected \"Eiffel Tower\" than to an image containing a detected distant towering building, even though the confidence that there is a tower in each image may be the same. Range [0, 1].", "format" "float"}, "boundingPoly" {"$ref" "GoogleCloudVisionV1p1beta1BoundingPoly", "description" "Image region to which this entity belongs. Not produced for `LABEL_DETECTION` features."}, "locale" {"type" "string", "description" "The language code for the locale in which the entity textual `description` is expressed."}, "locations" {"type" "array", "items" {"$ref" "GoogleCloudVisionV1p1beta1LocationInfo"}, "description" "The location information for the detected entity. Multiple `LocationInfo` elements can be present because one location may indicate the location of the scene in the image, and another location may indicate the location of the place where the image was taken. Location information is usually present for landmarks."}, "mid" {"type" "string", "description" "Opaque entity ID. Some IDs may be available in [Google Knowledge Graph Search API](https://developers.google.com/knowledge-graph/)."}, "description" {"type" "string", "description" "Entity textual description, expressed in its `locale` language."}}, "type" "object", "description" "Set of detected entity features."}, "GoogleCloudVisionV1p3beta1ImageAnnotationContext" {"description" "If an image was produced from a file (e.g. a PDF), this message gives information about the source of that image.", "type" "object", "properties" {"pageNumber" {"type" "integer", "format" "int32", "description" "If the file was a PDF or TIFF, this field gives the page number within the file used to produce the image."}, "uri" {"type" "string", "description" "The URI of the file used to produce the image."}}, "id" "GoogleCloudVisionV1p3beta1ImageAnnotationContext"}, "Paragraph" {"type" "object", "id" "Paragraph", "properties" {"boundingBox" {"$ref" "BoundingPoly", "description" "The bounding box for the paragraph. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the 'natural' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it's rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3)."}, "property" {"$ref" "TextProperty", "description" "Additional information detected for the paragraph."}, "confidence" {"type" "number", "description" "Confidence of the OCR results for the paragraph. Range [0, 1].", "format" "float"}, "words" {"items" {"$ref" "Word"}, "type" "array", "description" "List of all words in this paragraph."}}, "description" "Structural unit of text representing a number of words in certain order."}, "GoogleCloudVisionV1p1beta1BatchAnnotateImagesRequest" {"id" "GoogleCloudVisionV1p1beta1BatchAnnotateImagesRequest", "type" "object", "description" "Multiple image annotation requests are batched into a single service call.", "properties" {"parent" {"type" "string", "description" "Optional. Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no parent is specified, a region will be chosen automatically. Supported location-ids: `us`: USA country only, `asia`: East asia areas, like Japan, Taiwan, `eu`: The European Union. Example: `projects/project-A/locations/eu`."}, "requests" {"type" "array", "description" "Required. Individual image annotation requests for this batch.", "items" {"$ref" "GoogleCloudVisionV1p1beta1AnnotateImageRequest"}}}}, "GcsDestination" {"type" "object", "description" "The Google Cloud Storage location where the output will be written to.", "id" "GcsDestination", "properties" {"uri" {"type" "string", "description" "Google Cloud Storage URI prefix where the results will be stored. Results will be in JSON format and preceded by its corresponding input URI prefix. This field can either represent a gcs file prefix or gcs directory. In either case, the uri should be unique because in order to get all of the output files, you will need to do a wildcard gcs search on the uri prefix you provide. Examples: * File Prefix: gs://bucket-name/here/filenameprefix The output files will be created in gs://bucket-name/here/ and the names of the output files will begin with \"filenameprefix\". * Directory Prefix: gs://bucket-name/some/location/ The output files will be created in gs://bucket-name/some/location/ and the names of the output files could be anything because there was no filename prefix specified. If multiple outputs, each response is still AnnotateFileResponse, each of which contains some subset of the full list of AnnotateImageResponse. Multiple outputs can happen if, for example, the output JSON is too large and overflows into multiple sharded files."}}}, "GoogleCloudVisionV1p1beta1WebDetectionParams" {"description" "Parameters for web detection request.", "type" "object", "id" "GoogleCloudVisionV1p1beta1WebDetectionParams", "properties" {"includeGeoResults" {"type" "boolean", "description" "Whether to include results derived from the geo information in the image."}}}, "GoogleCloudVisionV1p2beta1TextAnnotation" {"properties" {"text" {"type" "string", "description" "UTF-8 text detected on the pages."}, "pages" {"items" {"$ref" "GoogleCloudVisionV1p2beta1Page"}, "type" "array", "description" "List of pages detected by OCR."}}, "type" "object", "description" "TextAnnotation contains a structured representation of OCR extracted text. The hierarchy of an OCR extracted text structure is like this: TextAnnotation -> Page -> Block -> Paragraph -> Word -> Symbol Each structural component, starting from Page, may further have their own properties. Properties describe detected languages, breaks etc.. Please refer to the TextAnnotation.TextProperty message definition below for more detail.", "id" "GoogleCloudVisionV1p2beta1TextAnnotation"}, "GoogleCloudVisionV1p4beta1CropHint" {"properties" {"boundingPoly" {"description" "The bounding polygon for the crop region. The coordinates of the bounding box are in the original image's scale.", "$ref" "GoogleCloudVisionV1p4beta1BoundingPoly"}, "confidence" {"format" "float", "description" "Confidence of this being a salient region. Range [0, 1].", "type" "number"}, "importanceFraction" {"format" "float", "description" "Fraction of importance of this salient region with respect to the original image.", "type" "number"}}, "description" "Single crop hint that is used to generate a new crop when serving an image.", "type" "object", "id" "GoogleCloudVisionV1p4beta1CropHint"}, "GoogleCloudVisionV1p1beta1CropHintsParams" {"type" "object", "id" "GoogleCloudVisionV1p1beta1CropHintsParams", "properties" {"aspectRatios" {"type" "array", "items" {"type" "number", "format" "float"}, "description" "Aspect ratios in floats, representing the ratio of the width to the height of the image. For example, if the desired aspect ratio is 4/3, the corresponding float value should be 1.33333. If not specified, the best possible crop is returned. The number of provided aspect ratios is limited to a maximum of 16; any aspect ratios provided after the 16th are ignored."}}, "description" "Parameters for crop hints annotation request."}, "GoogleCloudVisionV1p3beta1GcsSource" {"id" "GoogleCloudVisionV1p3beta1GcsSource", "type" "object", "description" "The Google Cloud Storage location where the input will be read from.", "properties" {"uri" {"description" "Google Cloud Storage URI for the input file. This must only be a Google Cloud Storage object. Wildcards are not currently supported.", "type" "string"}}}, "EntityAnnotation" {"type" "object", "id" "EntityAnnotation", "properties" {"properties" {"description" "Some entities may have optional user-supplied `Property` (name/value) fields, such a score or string that qualifies the entity.", "type" "array", "items" {"$ref" "Property"}}, "confidence" {"format" "float", "description" "**Deprecated. Use `score` instead.** The accuracy of the entity detection in an image. For example, for an image in which the \"Eiffel Tower\" entity is detected, this field represents the confidence that there is a tower in the query image. Range [0, 1].", "type" "number"}, "score" {"format" "float", "description" "Overall score of the result. Range [0, 1].", "type" "number"}, "topicality" {"type" "number", "format" "float", "description" "The relevancy of the ICA (Image Content Annotation) label to the image. For example, the relevancy of \"tower\" is likely higher to an image containing the detected \"Eiffel Tower\" than to an image containing a detected distant towering building, even though the confidence that there is a tower in each image may be the same. Range [0, 1]."}, "boundingPoly" {"description" "Image region to which this entity belongs. Not produced for `LABEL_DETECTION` features.", "$ref" "BoundingPoly"}, "locale" {"type" "string", "description" "The language code for the locale in which the entity textual `description` is expressed."}, "locations" {"type" "array", "description" "The location information for the detected entity. Multiple `LocationInfo` elements can be present because one location may indicate the location of the scene in the image, and another location may indicate the location of the place where the image was taken. Location information is usually present for landmarks.", "items" {"$ref" "LocationInfo"}}, "mid" {"description" "Opaque entity ID. Some IDs may be available in [Google Knowledge Graph Search API](https://developers.google.com/knowledge-graph/).", "type" "string"}, "description" {"type" "string", "description" "Entity textual description, expressed in its `locale` language."}}, "description" "Set of detected entity features."}, "GoogleCloudVisionV1p4beta1TextAnnotationTextProperty" {"properties" {"detectedBreak" {"$ref" "GoogleCloudVisionV1p4beta1TextAnnotationDetectedBreak", "description" "Detected start or end of a text segment."}, "detectedLanguages" {"items" {"$ref" "GoogleCloudVisionV1p4beta1TextAnnotationDetectedLanguage"}, "type" "array", "description" "A list of detected languages together with confidence."}}, "id" "GoogleCloudVisionV1p4beta1TextAnnotationTextProperty", "description" "Additional information detected on the structural component.", "type" "object"}, "GcsSource" {"id" "GcsSource", "properties" {"uri" {"description" "Google Cloud Storage URI for the input file. This must only be a Google Cloud Storage object. Wildcards are not currently supported.", "type" "string"}}, "type" "object", "description" "The Google Cloud Storage location where the input will be read from."}, "GoogleCloudVisionV1p2beta1WebDetectionWebImage" {"properties" {"score" {"type" "number", "format" "float", "description" "(Deprecated) Overall relevancy score for the image."}, "url" {"type" "string", "description" "The result image URL."}}, "description" "Metadata for online images.", "type" "object", "id" "GoogleCloudVisionV1p2beta1WebDetectionWebImage"}, "GoogleCloudVisionV1p3beta1ImportProductSetsResponse" {"properties" {"referenceImages" {"items" {"$ref" "GoogleCloudVisionV1p3beta1ReferenceImage"}, "description" "The list of reference_images that are imported successfully.", "type" "array"}, "statuses" {"items" {"$ref" "Status"}, "type" "array", "description" "The rpc status for each ImportProductSet request, including both successes and errors. The number of statuses here matches the number of lines in the csv file, and statuses[i] stores the success or failure status of processing the i-th line of the csv, starting from line 0."}}, "description" "Response message for the `ImportProductSets` method. This message is returned by the google.longrunning.Operations.GetOperation method in the returned google.longrunning.Operation.response field.", "id" "GoogleCloudVisionV1p3beta1ImportProductSetsResponse", "type" "object"}, "GoogleCloudVisionV1p4beta1BatchOperationMetadata" {"type" "object", "description" "Metadata for the batch operations such as the current state. This is included in the `metadata` field of the `Operation` returned by the `GetOperation` call of the `google::longrunning::Operations` service.", "properties" {"state" {"enumDescriptions" ["Invalid." "Request is actively being processed." "The request is done and at least one item has been successfully processed." "The request is done and no item has been successfully processed." "The request is done after the longrunning.Operations.CancelOperation has been called by the user. Any records that were processed before the cancel command are output as specified in the request."], "enum" ["STATE_UNSPECIFIED" "PROCESSING" "SUCCESSFUL" "FAILED" "CANCELLED"], "description" "The current state of the batch operation.", "type" "string"}, "submitTime" {"description" "The time when the batch request was submitted to the server.", "type" "string", "format" "google-datetime"}, "endTime" {"description" "The time when the batch request is finished and google.longrunning.Operation.done is set to true.", "type" "string", "format" "google-datetime"}}, "id" "GoogleCloudVisionV1p4beta1BatchOperationMetadata"}, "ImportProductSetsResponse" {"description" "Response message for the `ImportProductSets` method. This message is returned by the google.longrunning.Operations.GetOperation method in the returned google.longrunning.Operation.response field.", "properties" {"statuses" {"items" {"$ref" "Status"}, "type" "array", "description" "The rpc status for each ImportProductSet request, including both successes and errors. The number of statuses here matches the number of lines in the csv file, and statuses[i] stores the success or failure status of processing the i-th line of the csv, starting from line 0."}, "referenceImages" {"items" {"$ref" "ReferenceImage"}, "description" "The list of reference_images that are imported successfully.", "type" "array"}}, "type" "object", "id" "ImportProductSetsResponse"}, "Color" {"id" "Color", "type" "object", "properties" {"blue" {"description" "The amount of blue in the color as a value in the interval [0, 1].", "type" "number", "format" "float"}, "green" {"type" "number", "description" "The amount of green in the color as a value in the interval [0, 1].", "format" "float"}, "red" {"format" "float", "type" "number", "description" "The amount of red in the color as a value in the interval [0, 1]."}, "alpha" {"type" "number", "format" "float", "description" "The fraction of this color that should be applied to the pixel. That is, the final pixel color is defined by the equation: `pixel color = alpha * (this color) + (1.0 - alpha) * (background color)` This means that a value of 1.0 corresponds to a solid color, whereas a value of 0.0 corresponds to a completely transparent color. This uses a wrapper message rather than a simple float scalar so that it is possible to distinguish between a default value and the value being unset. If omitted, this color object is rendered as a solid color (as if the alpha value had been explicitly given a value of 1.0)."}}, "description" "Represents a color in the RGBA color space. This representation is designed for simplicity of conversion to/from color representations in various languages over compactness. For example, the fields of this representation can be trivially provided to the constructor of `java.awt.Color` in Java; it can also be trivially provided to UIColor's `+colorWithRed:green:blue:alpha` method in iOS; and, with just a little work, it can be easily formatted into a CSS `rgba()` string in JavaScript. This reference page doesn't carry information about the absolute color space that should be used to interpret the RGB value (e.g. sRGB, Adobe RGB, DCI-P3, BT.2020, etc.). By default, applications should assume the sRGB color space. When color equality needs to be decided, implementations, unless documented otherwise, treat two colors as equal if all their red, green, blue, and alpha values each differ by at most 1e-5. Example (Java): import com.google.type.Color; // ... public static java.awt.Color fromProto(Color protocolor) { float alpha = protocolor.hasAlpha() ? protocolor.getAlpha().getValue() : 1.0; return new java.awt.Color( protocolor.getRed(), protocolor.getGreen(), protocolor.getBlue(), alpha); } public static Color toProto(java.awt.Color color) { float red = (float) color.getRed(); float green = (float) color.getGreen(); float blue = (float) color.getBlue(); float denominator = 255.0; Color.Builder resultBuilder = Color .newBuilder() .setRed(red / denominator) .setGreen(green / denominator) .setBlue(blue / denominator); int alpha = color.getAlpha(); if (alpha != 255) { result.setAlpha( FloatValue .newBuilder() .setValue(((float) alpha) / denominator) .build()); } return resultBuilder.build(); } // ... Example (iOS / Obj-C): // ... static UIColor* fromProto(Color* protocolor) { float red = [protocolor red]; float green = [protocolor green]; float blue = [protocolor blue]; FloatValue* alpha_wrapper = [protocolor alpha]; float alpha = 1.0; if (alpha_wrapper != nil) { alpha = [alpha_wrapper value]; } return [UIColor colorWithRed:red green:green blue:blue alpha:alpha]; } static Color* toProto(UIColor* color) { CGFloat red, green, blue, alpha; if (![color getRed:&red green:&green blue:&blue alpha:&alpha]) { return nil; } Color* result = [[Color alloc] init]; [result setRed:red]; [result setGreen:green]; [result setBlue:blue]; if (alpha <= 0.9999) { [result setAlpha:floatWrapperWithValue(alpha)]; } [result autorelease]; return result; } // ... Example (JavaScript): // ... var protoToCssColor = function(rgb_color) { var redFrac = rgb_color.red || 0.0; var greenFrac = rgb_color.green || 0.0; var blueFrac = rgb_color.blue || 0.0; var red = Math.floor(redFrac * 255); var green = Math.floor(greenFrac * 255); var blue = Math.floor(blueFrac * 255); if (!('alpha' in rgb_color)) { return rgbToCssColor(red, green, blue); } var alphaFrac = rgb_color.alpha.value || 0.0; var rgbParams = [red, green, blue].join(','); return ['rgba(', rgbParams, ',', alphaFrac, ')'].join(''); }; var rgbToCssColor = function(red, green, blue) { var rgbNumber = new Number((red << 16) | (green << 8) | blue); var hexString = rgbNumber.toString(16); var missingZeros = 6 - hexString.length; var resultBuilder = ['#']; for (var i = 0; i < missingZeros; i++) { resultBuilder.push('0'); } resultBuilder.push(hexString); return resultBuilder.join(''); }; // ..."}, "GoogleCloudVisionV1p2beta1Paragraph" {"properties" {"boundingBox" {"description" "The bounding box for the paragraph. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the 'natural' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it's rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).", "$ref" "GoogleCloudVisionV1p2beta1BoundingPoly"}, "property" {"description" "Additional information detected for the paragraph.", "$ref" "GoogleCloudVisionV1p2beta1TextAnnotationTextProperty"}, "words" {"type" "array", "description" "List of all words in this paragraph.", "items" {"$ref" "GoogleCloudVisionV1p2beta1Word"}}, "confidence" {"description" "Confidence of the OCR results for the paragraph. Range [0, 1].", "type" "number", "format" "float"}}, "description" "Structural unit of text representing a number of words in certain order.", "type" "object", "id" "GoogleCloudVisionV1p2beta1Paragraph"}, "GoogleCloudVisionV1p3beta1ColorInfo" {"id" "GoogleCloudVisionV1p3beta1ColorInfo", "type" "object", "description" "Color information consists of RGB channels, score, and the fraction of the image that the color occupies in the image.", "properties" {"score" {"format" "float", "type" "number", "description" "Image-specific score for this color. Value in range [0, 1]."}, "pixelFraction" {"type" "number", "description" "The fraction of pixels the color occupies in the image. Value in range [0, 1].", "format" "float"}, "color" {"description" "RGB components of the color.", "$ref" "Color"}}}, "GoogleCloudVisionV1p4beta1WebDetectionWebPage" {"id" "GoogleCloudVisionV1p4beta1WebDetectionWebPage", "properties" {"url" {"type" "string", "description" "The result web page URL."}, "pageTitle" {"type" "string", "description" "Title for the web page, may contain HTML markups."}, "score" {"description" "(Deprecated) Overall relevancy score for the web page.", "type" "number", "format" "float"}, "partialMatchingImages" {"type" "array", "description" "Partial matching images on the page. Those images are similar enough to share some key-point features. For example an original image will likely have partial matching for its crops.", "items" {"$ref" "GoogleCloudVisionV1p4beta1WebDetectionWebImage"}}, "fullMatchingImages" {"items" {"$ref" "GoogleCloudVisionV1p4beta1WebDetectionWebImage"}, "description" "Fully matching images on the page. Can include resized copies of the query image.", "type" "array"}}, "type" "object", "description" "Metadata for web pages."}, "GoogleCloudVisionV1p1beta1GcsSource" {"type" "object", "properties" {"uri" {"type" "string", "description" "Google Cloud Storage URI for the input file. This must only be a Google Cloud Storage object. Wildcards are not currently supported."}}, "description" "The Google Cloud Storage location where the input will be read from.", "id" "GoogleCloudVisionV1p1beta1GcsSource"}, "ImageProperties" {"description" "Stores image properties, such as dominant colors.", "type" "object", "properties" {"dominantColors" {"description" "If present, dominant colors completed successfully.", "$ref" "DominantColorsAnnotation"}}, "id" "ImageProperties"}, "ProductSearchResults" {"description" "Results for a product search request.", "type" "object", "id" "ProductSearchResults", "properties" {"indexTime" {"description" "Timestamp of the index which provided these results. Products added to the product set and products removed from the product set after this time are not reflected in the current results.", "format" "google-datetime", "type" "string"}, "results" {"items" {"$ref" "Result"}, "type" "array", "description" "List of results, one for each product match."}, "productGroupedResults" {"type" "array", "items" {"$ref" "GroupedResult"}, "description" "List of results grouped by products detected in the query image. Each entry corresponds to one bounding polygon in the query image, and contains the matching products specific to that region. There may be duplicate product matches in the union of all the per-product results."}}}, "GoogleCloudVisionV1p1beta1ProductSearchResultsResult" {"properties" {"score" {"description" "A confidence level on the match, ranging from 0 (no confidence) to 1 (full confidence).", "format" "float", "type" "number"}, "product" {"$ref" "GoogleCloudVisionV1p1beta1Product", "description" "The Product."}, "image" {"type" "string", "description" "The resource name of the image from the product that is the closest match to the query."}}, "type" "object", "id" "GoogleCloudVisionV1p1beta1ProductSearchResultsResult", "description" "Information about a product."}, "LatLng" {"type" "object", "id" "LatLng", "properties" {"longitude" {"format" "double", "type" "number", "description" "The longitude in degrees. It must be in the range [-180.0, +180.0]."}, "latitude" {"format" "double", "type" "number", "description" "The latitude in degrees. It must be in the range [-90.0, +90.0]."}}, "description" "An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges."}, "BoundingPoly" {"properties" {"normalizedVertices" {"description" "The bounding polygon normalized vertices.", "items" {"$ref" "NormalizedVertex"}, "type" "array"}, "vertices" {"items" {"$ref" "Vertex"}, "description" "The bounding polygon vertices.", "type" "array"}}, "id" "BoundingPoly", "description" "A bounding polygon for the detected image annotation.", "type" "object"}, "GoogleCloudVisionV1p4beta1LocalizedObjectAnnotation" {"description" "Set of detected objects with bounding boxes.", "id" "GoogleCloudVisionV1p4beta1LocalizedObjectAnnotation", "type" "object", "properties" {"name" {"type" "string", "description" "Object name, expressed in its `language_code` language."}, "languageCode" {"description" "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier.", "type" "string"}, "mid" {"type" "string", "description" "Object ID that should align with EntityAnnotation mid."}, "boundingPoly" {"description" "Image region to which this object belongs. This must be populated.", "$ref" "GoogleCloudVisionV1p4beta1BoundingPoly"}, "score" {"format" "float", "description" "Score of the result. Range [0, 1].", "type" "number"}}}, "GoogleCloudVisionV1p3beta1Symbol" {"description" "A single symbol representation.", "id" "GoogleCloudVisionV1p3beta1Symbol", "type" "object", "properties" {"boundingBox" {"$ref" "GoogleCloudVisionV1p3beta1BoundingPoly", "description" "The bounding box for the symbol. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the 'natural' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it's rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3)."}, "property" {"description" "Additional information detected for the symbol.", "$ref" "GoogleCloudVisionV1p3beta1TextAnnotationTextProperty"}, "text" {"description" "The actual UTF-8 representation of the symbol.", "type" "string"}, "confidence" {"type" "number", "description" "Confidence of the OCR results for the symbol. Range [0, 1].", "format" "float"}}}, "GoogleCloudVisionV1p1beta1BatchAnnotateFilesRequest" {"type" "object", "id" "GoogleCloudVisionV1p1beta1BatchAnnotateFilesRequest", "description" "A list of requests to annotate files using the BatchAnnotateFiles API.", "properties" {"requests" {"type" "array", "items" {"$ref" "GoogleCloudVisionV1p1beta1AnnotateFileRequest"}, "description" "Required. The list of file annotation requests. Right now we support only one AnnotateFileRequest in BatchAnnotateFilesRequest."}, "parent" {"type" "string", "description" "Optional. Target project and location to make a call. Format: `projects/{project-id}/locations/{location-id}`. If no parent is specified, a region will be chosen automatically. Supported location-ids: `us`: USA country only, `asia`: East asia areas, like Japan, Taiwan, `eu`: The European Union. Example: `projects/project-A/locations/eu`."}}}, "GoogleCloudVisionV1p2beta1Page" {"type" "object", "id" "GoogleCloudVisionV1p2beta1Page", "properties" {"confidence" {"format" "float", "description" "Confidence of the OCR results on the page. Range [0, 1].", "type" "number"}, "property" {"description" "Additional information detected on the page.", "$ref" "GoogleCloudVisionV1p2beta1TextAnnotationTextProperty"}, "width" {"type" "integer", "format" "int32", "description" "Page width. For PDFs the unit is points. For images (including TIFFs) the unit is pixels."}, "height" {"format" "int32", "description" "Page height. For PDFs the unit is points. For images (including TIFFs) the unit is pixels.", "type" "integer"}, "blocks" {"description" "List of blocks of text, images etc on this page.", "type" "array", "items" {"$ref" "GoogleCloudVisionV1p2beta1Block"}}}, "description" "Detected page from OCR."}, "GoogleCloudVisionV1p4beta1Block" {"type" "object", "properties" {"property" {"description" "Additional information detected for the block.", "$ref" "GoogleCloudVisionV1p4beta1TextAnnotationTextProperty"}, "confidence" {"description" "Confidence of the OCR results on the block. Range [0, 1].", "format" "float", "type" "number"}, "blockType" {"type" "string", "description" "Detected block type (text, image etc) for this block.", "enum" ["UNKNOWN" "TEXT" "TABLE" "PICTURE" "RULER" "BARCODE"], "enumDescriptions" ["Unknown block type." "Regular text block." "Table block." "Image block." "Horizontal/vertical line box." "Barcode block."]}, "paragraphs" {"description" "List of paragraphs in this block (if this blocks is of type text).", "items" {"$ref" "GoogleCloudVisionV1p4beta1Paragraph"}, "type" "array"}, "boundingBox" {"description" "The bounding box for the block. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the 'natural' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it's rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).", "$ref" "GoogleCloudVisionV1p4beta1BoundingPoly"}}, "description" "Logical element on the page.", "id" "GoogleCloudVisionV1p4beta1Block"}, "GoogleCloudVisionV1p1beta1Image" {"description" "Client image to perform Google Cloud Vision API tasks over.", "type" "object", "properties" {"source" {"$ref" "GoogleCloudVisionV1p1beta1ImageSource", "description" "Google Cloud Storage image location, or publicly-accessible image URL. If both `content` and `source` are provided for an image, `content` takes precedence and is used to perform the image annotation request."}, "content" {"type" "string", "format" "byte", "description" "Image content, represented as a stream of bytes. Note: As with all `bytes` fields, protobuffers use a pure binary representation, whereas JSON representations use base64. Currently, this field only works for BatchAnnotateImages requests. It does not work for AsyncBatchAnnotateImages requests."}}, "id" "GoogleCloudVisionV1p1beta1Image"}, "GoogleCloudVisionV1p2beta1ProductSearchResults" {"properties" {"results" {"description" "List of results, one for each product match.", "items" {"$ref" "GoogleCloudVisionV1p2beta1ProductSearchResultsResult"}, "type" "array"}, "indexTime" {"format" "google-datetime", "description" "Timestamp of the index which provided these results. Products added to the product set and products removed from the product set after this time are not reflected in the current results.", "type" "string"}, "productGroupedResults" {"items" {"$ref" "GoogleCloudVisionV1p2beta1ProductSearchResultsGroupedResult"}, "type" "array", "description" "List of results grouped by products detected in the query image. Each entry corresponds to one bounding polygon in the query image, and contains the matching products specific to that region. There may be duplicate product matches in the union of all the per-product results."}}, "type" "object", "id" "GoogleCloudVisionV1p2beta1ProductSearchResults", "description" "Results for a product search request."}, "GoogleCloudVisionV1p4beta1TextAnnotationDetectedBreak" {"properties" {"type" {"enum" ["UNKNOWN" "SPACE" "SURE_SPACE" "EOL_SURE_SPACE" "HYPHEN" "LINE_BREAK"], "enumDescriptions" ["Unknown break label type." "Regular space." "Sure space (very wide)." "Line-wrapping break." "End-line hyphen that is not present in text; does not co-occur with `SPACE`, `LEADER_SPACE`, or `LINE_BREAK`." "Line break that ends a paragraph."], "type" "string", "description" "Detected break type."}, "isPrefix" {"type" "boolean", "description" "True if break prepends the element."}}, "id" "GoogleCloudVisionV1p4beta1TextAnnotationDetectedBreak", "description" "Detected start or end of a structural component.", "type" "object"}, "DetectedLanguage" {"properties" {"languageCode" {"type" "string", "description" "The BCP-47 language code, such as \"en-US\" or \"sr-Latn\". For more information, see http://www.unicode.org/reports/tr35/#Unicode_locale_identifier."}, "confidence" {"description" "Confidence of detected language. Range [0, 1].", "type" "number", "format" "float"}}, "type" "object", "description" "Detected language for a structural component.", "id" "DetectedLanguage"}, "GoogleCloudVisionV1p2beta1AsyncBatchAnnotateFilesResponse" {"id" "GoogleCloudVisionV1p2beta1AsyncBatchAnnotateFilesResponse", "description" "Response to an async batch file annotation request.", "properties" {"responses" {"items" {"$ref" "GoogleCloudVisionV1p2beta1AsyncAnnotateFileResponse"}, "description" "The list of file annotation responses, one for each request in AsyncBatchAnnotateFilesRequest.", "type" "array"}}, "type" "object"}, "GoogleCloudVisionV1p1beta1BatchAnnotateImagesResponse" {"description" "Response to a batch image annotation request.", "id" "GoogleCloudVisionV1p1beta1BatchAnnotateImagesResponse", "properties" {"responses" {"items" {"$ref" "GoogleCloudVisionV1p1beta1AnnotateImageResponse"}, "description" "Individual responses to image annotation requests within the batch.", "type" "array"}}, "type" "object"}, "GoogleCloudVisionV1p1beta1BatchAnnotateFilesResponse" {"type" "object", "properties" {"responses" {"items" {"$ref" "GoogleCloudVisionV1p1beta1AnnotateFileResponse"}, "type" "array", "description" "The list of file annotation responses, each response corresponding to each AnnotateFileRequest in BatchAnnotateFilesRequest."}}, "id" "GoogleCloudVisionV1p1beta1BatchAnnotateFilesResponse", "description" "A list of file annotation responses."}, "GoogleCloudVisionV1p3beta1TextAnnotationTextProperty" {"description" "Additional information detected on the structural component.", "properties" {"detectedLanguages" {"description" "A list of detected languages together with confidence.", "type" "array", "items" {"$ref" "GoogleCloudVisionV1p3beta1TextAnnotationDetectedLanguage"}}, "detectedBreak" {"$ref" "GoogleCloudVisionV1p3beta1TextAnnotationDetectedBreak", "description" "Detected start or end of a text segment."}}, "id" "GoogleCloudVisionV1p3beta1TextAnnotationTextProperty", "type" "object"}, "GoogleCloudVisionV1p4beta1ProductSearchResults" {"id" "GoogleCloudVisionV1p4beta1ProductSearchResults", "properties" {"productGroupedResults" {"description" "List of results grouped by products detected in the query image. Each entry corresponds to one bounding polygon in the query image, and contains the matching products specific to that region. There may be duplicate product matches in the union of all the per-product results.", "items" {"$ref" "GoogleCloudVisionV1p4beta1ProductSearchResultsGroupedResult"}, "type" "array"}, "indexTime" {"type" "string", "format" "google-datetime", "description" "Timestamp of the index which provided these results. Products added to the product set and products removed from the product set after this time are not reflected in the current results."}, "results" {"description" "List of results, one for each product match.", "items" {"$ref" "GoogleCloudVisionV1p4beta1ProductSearchResultsResult"}, "type" "array"}}, "type" "object", "description" "Results for a product search request."}, "GoogleCloudVisionV1p4beta1ImageProperties" {"type" "object", "properties" {"dominantColors" {"description" "If present, dominant colors completed successfully.", "$ref" "GoogleCloudVisionV1p4beta1DominantColorsAnnotation"}}, "description" "Stores image properties, such as dominant colors.", "id" "GoogleCloudVisionV1p4beta1ImageProperties"}, "GoogleCloudVisionV1p1beta1Feature" {"properties" {"model" {"type" "string", "description" "Model to use for the feature. Supported values: \"builtin/stable\" (the default if unset) and \"builtin/latest\"."}, "maxResults" {"description" "Maximum number of results of this type. Does not apply to `TEXT_DETECTION`, `DOCUMENT_TEXT_DETECTION`, or `CROP_HINTS`.", "format" "int32", "type" "integer"}, "type" {"enumDescriptions" ["Unspecified feature type." "Run face detection." "Run landmark detection." "Run logo detection." "Run label detection." "Run text detection / optical character recognition (OCR). Text detection is optimized for areas of text within a larger image; if the image is a document, use `DOCUMENT_TEXT_DETECTION` instead." "Run dense text document OCR. Takes precedence when both `DOCUMENT_TEXT_DETECTION` and `TEXT_DETECTION` are present." "Run Safe Search to detect potentially unsafe or undesirable content." "Compute a set of image properties, such as the image's dominant colors." "Run crop hints." "Run web detection." "Run Product Search." "Run localizer for object detection."], "enum" ["TYPE_UNSPECIFIED" "FACE_DETECTION" "LANDMARK_DETECTION" "LOGO_DETECTION" "LABEL_DETECTION" "TEXT_DETECTION" "DOCUMENT_TEXT_DETECTION" "SAFE_SEARCH_DETECTION" "IMAGE_PROPERTIES" "CROP_HINTS" "WEB_DETECTION" "PRODUCT_SEARCH" "OBJECT_LOCALIZATION"], "description" "The feature type.", "type" "string"}}, "id" "GoogleCloudVisionV1p1beta1Feature", "type" "object", "description" "The type of Google Cloud Vision API detection to perform, and the maximum number of results to return for that type. Multiple `Feature` objects can be specified in the `features` list."}, "OutputConfig" {"properties" {"batchSize" {"type" "integer", "format" "int32", "description" "The max number of response protos to put into each output JSON file on Google Cloud Storage. The valid range is [1, 100]. If not specified, the default value is 20. For example, for one pdf file with 100 pages, 100 response protos will be generated. If `batch_size` = 20, then 5 json files each containing 20 response protos will be written under the prefix `gcs_destination`.`uri`. Currently, batch_size only applies to GcsDestination, with potential future support for other output configurations."}, "gcsDestination" {"$ref" "GcsDestination", "description" "The Google Cloud Storage location to write the output(s) to."}}, "description" "The desired output location and metadata.", "type" "object", "id" "OutputConfig"}, "GoogleCloudVisionV1p4beta1DominantColorsAnnotation" {"properties" {"colors" {"description" "RGB color values with their score and pixel fraction.", "type" "array", "items" {"$ref" "GoogleCloudVisionV1p4beta1ColorInfo"}}}, "id" "GoogleCloudVisionV1p4beta1DominantColorsAnnotation", "type" "object", "description" "Set of dominant colors and their corresponding scores."}, "GoogleCloudVisionV1p1beta1AsyncAnnotateFileResponse" {"type" "object", "id" "GoogleCloudVisionV1p1beta1AsyncAnnotateFileResponse", "properties" {"outputConfig" {"description" "The output location and metadata from AsyncAnnotateFileRequest.", "$ref" "GoogleCloudVisionV1p1beta1OutputConfig"}}, "description" "The response for a single offline file annotation request."}, "GoogleCloudVisionV1p3beta1LocationInfo" {"description" "Detected entity location information.", "properties" {"latLng" {"$ref" "LatLng", "description" "lat/long location coordinates."}}, "id" "GoogleCloudVisionV1p3beta1LocationInfo", "type" "object"}, "GoogleCloudVisionV1p3beta1Block" {"description" "Logical element on the page.", "properties" {"blockType" {"enumDescriptions" ["Unknown block type." "Regular text block." "Table block." "Image block." "Horizontal/vertical line box." "Barcode block."], "enum" ["UNKNOWN" "TEXT" "TABLE" "PICTURE" "RULER" "BARCODE"], "description" "Detected block type (text, image etc) for this block.", "type" "string"}, "property" {"$ref" "GoogleCloudVisionV1p3beta1TextAnnotationTextProperty", "description" "Additional information detected for the block."}, "boundingBox" {"description" "The bounding box for the block. The vertices are in the order of top-left, top-right, bottom-right, bottom-left. When a rotation of the bounding box is detected the rotation is represented as around the top-left corner as defined when the text is read in the 'natural' orientation. For example: * when the text is horizontal it might look like: 0----1 | | 3----2 * when it's rotated 180 degrees around the top-left corner it becomes: 2----3 | | 1----0 and the vertex order will still be (0, 1, 2, 3).", "$ref" "GoogleCloudVisionV1p3beta1BoundingPoly"}, "paragraphs" {"type" "array", "description" "List of paragraphs in this block (if this blocks is of type text).", "items" {"$ref" "GoogleCloudVisionV1p3beta1Paragraph"}}, "confidence" {"format" "float", "type" "number", "description" "Confidence of the OCR results on the block. Range [0, 1]."}}, "type" "object", "id" "GoogleCloudVisionV1p3beta1Block"}}}