#:compute.gcp.descriptor{:name "oslogin", :title "Cloud OS Login API", :api-version "v1", :revision "20220319", :endpoint #:compute.gcp.descriptor{:url "https://oslogin.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"location" "query", "description" "JSONP", "type" "string"}, "uploadType" {"type" "string", "description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "location" "query"}, "key" {"description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "location" "query", "type" "string"}, "access_token" {"type" "string", "location" "query", "description" "OAuth access token."}, "oauth_token" {"description" "OAuth 2.0 token for the current user.", "type" "string", "location" "query"}, "prettyPrint" {"default" "true", "description" "Returns response with indentations and line breaks.", "location" "query", "type" "boolean"}, "alt" {"location" "query", "enum" ["json" "media" "proto"], "type" "string", "default" "json", "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "description" "Data format for response."}, "$.xgafv" {"location" "query", "enumDescriptions" ["v1 error format" "v2 error format"], "enum" ["1" "2"], "type" "string", "description" "V1 error format."}, "fields" {"type" "string", "location" "query", "description" "Selector specifying which fields to include in a partial response."}, "upload_protocol" {"description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "type" "string", "location" "query"}, "quotaUser" {"description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "location" "query", "type" "string"}}, :op->info {"oslogin.users.projects.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1/{+name}", :response {"$ref" "Empty"}, :parameters {"name" {"type" "string", "location" "path", "description" "Required. A reference to the POSIX account to update. POSIX accounts are identified by the project ID they are associated with. A reference to the POSIX account is in format `users/{user}/projects/{project}`.", "required" true, "pattern" "^users/[^/]+/projects/[^/]+$"}}, :description "Deletes a POSIX account."}, "oslogin.users.sshPublicKeys.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1/{+name}", :response {"$ref" "Empty"}, :parameters {"name" {"type" "string", "required" true, "location" "path", "description" "Required. The fingerprint of the public key to update. Public keys are identified by their SHA-256 fingerprint. The fingerprint of the public key is in format `users/{user}/sshPublicKeys/{fingerprint}`.", "pattern" "^users/[^/]+/sshPublicKeys/[^/]+$"}}, :description "Deletes an SSH public key."}, "oslogin.users.sshPublicKeys.create" #:compute.gcp.descriptor{:http-method :post, :path "v1/{+parent}/sshPublicKeys", :request {"$ref" "SshPublicKey"}, :response {"$ref" "SshPublicKey"}, :parameters {"parent" {"pattern" "^users/[^/]+$", "type" "string", "location" "path", "required" true, "description" "Required. The unique ID for the user in format `users/{user}`."}}, :description "Create an SSH public key"}, "oslogin.users.sshPublicKeys.patch" #:compute.gcp.descriptor{:http-method :patch, :path "v1/{+name}", :request {"$ref" "SshPublicKey"}, :response {"$ref" "SshPublicKey"}, :parameters {"updateMask" {"type" "string", "format" "google-fieldmask", "location" "query", "description" "Mask to control which fields get updated. Updates all if not present."}, "name" {"type" "string", "pattern" "^users/[^/]+/sshPublicKeys/[^/]+$", "required" true, "description" "Required. The fingerprint of the public key to update. Public keys are identified by their SHA-256 fingerprint. The fingerprint of the public key is in format `users/{user}/sshPublicKeys/{fingerprint}`.", "location" "path"}}, :description "Updates an SSH public key and returns the profile information. This method supports patch semantics."}, "oslogin.users.sshPublicKeys.get" #:compute.gcp.descriptor{:http-method :get, :path "v1/{+name}", :response {"$ref" "SshPublicKey"}, :parameters {"name" {"pattern" "^users/[^/]+/sshPublicKeys/[^/]+$", "description" "Required. The fingerprint of the public key to retrieve. Public keys are identified by their SHA-256 fingerprint. The fingerprint of the public key is in format `users/{user}/sshPublicKeys/{fingerprint}`.", "type" "string", "location" "path", "required" true}}, :description "Retrieves an SSH public key."}, "oslogin.users.getLoginProfile" #:compute.gcp.descriptor{:http-method :get, :path "v1/{+name}/loginProfile", :response {"$ref" "LoginProfile"}, :parameters {"projectId" {"description" "The project ID of the Google Cloud Platform project.", "type" "string", "location" "query"}, "name" {"type" "string", "description" "Required. The unique ID for the user in format `users/{user}`.", "required" true, "location" "path", "pattern" "^users/[^/]+$"}, "systemId" {"location" "query", "type" "string", "description" "A system ID for filtering the results of the request."}}, :description "Retrieves the profile information used for logging in to a virtual machine on Google Compute Engine."}, "oslogin.users.importSshPublicKey" #:compute.gcp.descriptor{:http-method :post, :path "v1/{+parent}:importSshPublicKey", :request {"$ref" "SshPublicKey"}, :response {"$ref" "ImportSshPublicKeyResponse"}, :parameters {"parent" {"description" "Required. The unique ID for the user in format `users/{user}`.", "pattern" "^users/[^/]+$", "required" true, "type" "string", "location" "path"}, "projectId" {"type" "string", "location" "query", "description" "The project ID of the Google Cloud Platform project."}}, :description "Adds an SSH public key and returns the profile information. Default POSIX account information is set when no username and UID exist as part of the login profile."}}, :schemas {"LoginProfile" {"id" "LoginProfile", "properties" {"sshPublicKeys" {"additionalProperties" {"$ref" "SshPublicKey"}, "type" "object", "description" "A map from SSH public key fingerprint to the associated key object."}, "posixAccounts" {"type" "array", "items" {"$ref" "PosixAccount"}, "description" "The list of POSIX accounts associated with the user."}, "name" {"type" "string", "description" "Required. A unique user ID."}}, "description" "The user profile information used for logging in to a virtual machine on Google Compute Engine.", "type" "object"}, "SshPublicKey" {"description" "The SSH public key information associated with a Google account.", "type" "object", "properties" {"key" {"type" "string", "description" "Public key text in SSH format, defined by RFC4253 section 6.6."}, "name" {"type" "string", "description" "Output only. The canonical resource name.", "readOnly" true}, "fingerprint" {"readOnly" true, "type" "string", "description" "Output only. The SHA-256 fingerprint of the SSH public key."}, "expirationTimeUsec" {"format" "int64", "type" "string", "description" "An expiration time in microseconds since epoch."}}, "id" "SshPublicKey"}, "PosixAccount" {"id" "PosixAccount", "properties" {"gecos" {"type" "string", "description" "The GECOS (user information) entry for this account."}, "systemId" {"description" "System identifier for which account the username or uid applies to. By default, the empty value is used.", "type" "string"}, "operatingSystemType" {"type" "string", "description" "The operating system type where this account applies.", "enumDescriptions" ["The operating system type associated with the user account information is unspecified." "Linux user account information." "Windows user account information."], "enum" ["OPERATING_SYSTEM_TYPE_UNSPECIFIED" "LINUX" "WINDOWS"]}, "accountId" {"type" "string", "description" "Output only. A POSIX account identifier.", "readOnly" true}, "username" {"description" "The username of the POSIX account.", "type" "string"}, "uid" {"format" "int64", "description" "The user ID.", "type" "string"}, "name" {"type" "string", "description" "Output only. The canonical resource name.", "readOnly" true}, "shell" {"type" "string", "description" "The path to the logic shell for this account."}, "primary" {"type" "boolean", "description" "Only one POSIX account can be marked as primary."}, "homeDirectory" {"type" "string", "description" "The path to the home directory for this account."}, "gid" {"format" "int64", "type" "string", "description" "The default group ID."}}, "description" "The POSIX account information associated with a Google account.", "type" "object"}, "ImportSshPublicKeyResponse" {"properties" {"details" {"type" "string", "description" "Detailed information about import results."}, "loginProfile" {"$ref" "LoginProfile", "description" "The login profile information for the user."}}, "description" "A response message for importing an SSH public key.", "id" "ImportSshPublicKeyResponse", "type" "object"}, "Empty" {"id" "Empty", "type" "object", "properties" {}, "description" "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"}}}