#:compute.gcp.descriptor{:name "oslogin", :title "Cloud OS Login API", :api-version "v1beta", :revision "20200419", :endpoint #:compute.gcp.descriptor{:url "https://oslogin.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"location" "query", "description" "JSONP", "type" "string"}, "uploadType" {"location" "query", "description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "type" "string"}, "key" {"description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "type" "string", "location" "query"}, "access_token" {"type" "string", "location" "query", "description" "OAuth access token."}, "oauth_token" {"type" "string", "location" "query", "description" "OAuth 2.0 token for the current user."}, "prettyPrint" {"type" "boolean", "default" "true", "location" "query", "description" "Returns response with indentations and line breaks."}, "alt" {"default" "json", "enum" ["json" "media" "proto"], "type" "string", "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "location" "query", "description" "Data format for response."}, "$.xgafv" {"description" "V1 error format.", "type" "string", "enumDescriptions" ["v1 error format" "v2 error format"], "location" "query", "enum" ["1" "2"]}, "fields" {"location" "query", "description" "Selector specifying which fields to include in a partial response.", "type" "string"}, "upload_protocol" {"description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "type" "string", "location" "query"}, "quotaUser" {"location" "query", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "type" "string"}}, :op->info {"oslogin.users.importSshPublicKey" #:compute.gcp.descriptor{:http-method :post, :path "v1beta/users/{usersId}:importSshPublicKey", :request {"$ref" "SshPublicKey"}, :response {"$ref" "ImportSshPublicKeyResponse"}, :parameters {"projectId" {"location" "query", "description" "The project ID of the Google Cloud Platform project.", "type" "string"}, "parent" {"pattern" "^users/[^/]+$", "location" "path", "description" "The unique ID for the user in format `users/{user}`.", "required" true, "type" "string"}}, :description "Adds an SSH public key and returns the profile information. Default POSIX\naccount information is set when no username and UID exist as part of the\nlogin profile."}, "oslogin.users.getLoginProfile" #:compute.gcp.descriptor{:http-method :get, :path "v1beta/users/{usersId}/loginProfile", :response {"$ref" "LoginProfile"}, :parameters {"name" {"location" "path", "description" "Required. The unique ID for the user in format `users/{user}`.", "required" true, "type" "string", "pattern" "^users/[^/]+$"}, "projectId" {"location" "query", "description" "The project ID of the Google Cloud Platform project.", "type" "string"}, "systemId" {"description" "A system ID for filtering the results of the request.", "type" "string", "location" "query"}}, :description "Retrieves the profile information used for logging in to a virtual machine\non Google Compute Engine."}, "oslogin.users.sshPublicKeys.get" #:compute.gcp.descriptor{:http-method :get, :path "v1beta/users/{usersId}/sshPublicKeys/{sshPublicKeysId}", :response {"$ref" "SshPublicKey"}, :parameters {"name" {"required" true, "type" "string", "pattern" "^users/[^/]+/sshPublicKeys/[^/]+$", "location" "path", "description" "Required. The fingerprint of the public key to retrieve. Public keys are identified\nby their SHA-256 fingerprint. The fingerprint of the public key is in\nformat `users/{user}/sshPublicKeys/{fingerprint}`."}}, :description "Retrieves an SSH public key."}, "oslogin.users.sshPublicKeys.patch" #:compute.gcp.descriptor{:http-method :patch, :path "v1beta/users/{usersId}/sshPublicKeys/{sshPublicKeysId}", :request {"$ref" "SshPublicKey"}, :response {"$ref" "SshPublicKey"}, :parameters {"updateMask" {"description" "Mask to control which fields get updated. Updates all if not present.", "format" "google-fieldmask", "type" "string", "location" "query"}, "name" {"description" "Required. The fingerprint of the public key to update. Public keys are identified by\ntheir SHA-256 fingerprint. The fingerprint of the public key is in format\n`users/{user}/sshPublicKeys/{fingerprint}`.", "required" true, "type" "string", "pattern" "^users/[^/]+/sshPublicKeys/[^/]+$", "location" "path"}}, :description "Updates an SSH public key and returns the profile information. This method\nsupports patch semantics."}, "oslogin.users.sshPublicKeys.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1beta/users/{usersId}/sshPublicKeys/{sshPublicKeysId}", :response {"$ref" "Empty"}, :parameters {"name" {"pattern" "^users/[^/]+/sshPublicKeys/[^/]+$", "location" "path", "description" "Required. The fingerprint of the public key to update. Public keys are identified by\ntheir SHA-256 fingerprint. The fingerprint of the public key is in format\n`users/{user}/sshPublicKeys/{fingerprint}`.", "required" true, "type" "string"}}, :description "Deletes an SSH public key."}, "oslogin.users.projects.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1beta/users/{usersId}/projects/{projectsId}", :response {"$ref" "Empty"}, :parameters {"name" {"location" "path", "description" "Required. A reference to the POSIX account to update. POSIX accounts are identified\nby the project ID they are associated with. A reference to the POSIX\naccount is in format `users/{user}/projects/{project}`.", "required" true, "type" "string", "pattern" "^users/[^/]+/projects/[^/]+$"}}, :description "Deletes a POSIX account."}}, :schemas {"ImportSshPublicKeyResponse" {"description" "A response message for importing an SSH public key.", "type" "object", "properties" {"loginProfile" {"$ref" "LoginProfile", "description" "The login profile information for the user."}}, "id" "ImportSshPublicKeyResponse"}, "PosixAccount" {"type" "object", "properties" {"gecos" {"type" "string", "description" "The GECOS (user information) entry for this account."}, "systemId" {"description" "System identifier for which account the username or uid applies to.\nBy default, the empty value is used.", "type" "string"}, "operatingSystemType" {"description" "The operating system type where this account applies.", "type" "string", "enumDescriptions" ["The operating system type associated with the user account information is\nunspecified." "Linux user account information." "Windows user account information."], "enum" ["OPERATING_SYSTEM_TYPE_UNSPECIFIED" "LINUX" "WINDOWS"]}, "accountId" {"description" "Output only. A POSIX account identifier.", "type" "string"}, "username" {"description" "The username of the POSIX account.", "type" "string"}, "uid" {"description" "The user ID.", "format" "int64", "type" "string"}, "name" {"description" "Output only. The canonical resource name.", "type" "string"}, "shell" {"description" "The path to the logic shell for this account.", "type" "string"}, "primary" {"type" "boolean", "description" "Only one POSIX account can be marked as primary."}, "homeDirectory" {"type" "string", "description" "The path to the home directory for this account."}, "gid" {"description" "The default group ID.", "format" "int64", "type" "string"}}, "id" "PosixAccount", "description" "The POSIX account information associated with a Google account."}, "LoginProfile" {"type" "object", "properties" {"sshPublicKeys" {"additionalProperties" {"$ref" "SshPublicKey"}, "description" "A map from SSH public key fingerprint to the associated key object.", "type" "object"}, "name" {"description" "Required. A unique user ID.", "type" "string"}, "posixAccounts" {"description" "The list of POSIX accounts associated with the user.", "type" "array", "items" {"$ref" "PosixAccount"}}}, "id" "LoginProfile", "description" "The user profile information used for logging in to a virtual machine on\nGoogle Compute Engine."}, "Empty" {"description" "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`.", "type" "object", "properties" {}, "id" "Empty"}, "SshPublicKey" {"id" "SshPublicKey", "description" "The SSH public key information associated with a Google account.", "type" "object", "properties" {"fingerprint" {"description" "Output only. The SHA-256 fingerprint of the SSH public key.", "type" "string"}, "key" {"description" "Public key text in SSH format, defined by\n<a href=\"https://www.ietf.org/rfc/rfc4253.txt\" target=\"_blank\">RFC4253</a>\nsection 6.6.", "type" "string"}, "name" {"description" "Output only. The canonical resource name.", "type" "string"}, "expirationTimeUsec" {"description" "An expiration time in microseconds since epoch.", "format" "int64", "type" "string"}}}}}