#:compute.gcp.descriptor{:name "oslogin", :title "Cloud OS Login API", :api-version "v1beta", :revision "20220319", :endpoint #:compute.gcp.descriptor{:url "https://oslogin.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"location" "query", "description" "JSONP", "type" "string"}, "uploadType" {"description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "type" "string", "location" "query"}, "key" {"type" "string", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "location" "query"}, "access_token" {"description" "OAuth access token.", "type" "string", "location" "query"}, "oauth_token" {"description" "OAuth 2.0 token for the current user.", "type" "string", "location" "query"}, "prettyPrint" {"location" "query", "default" "true", "type" "boolean", "description" "Returns response with indentations and line breaks."}, "alt" {"enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "type" "string", "location" "query", "description" "Data format for response.", "default" "json", "enum" ["json" "media" "proto"]}, "$.xgafv" {"enum" ["1" "2"], "type" "string", "enumDescriptions" ["v1 error format" "v2 error format"], "location" "query", "description" "V1 error format."}, "fields" {"type" "string", "location" "query", "description" "Selector specifying which fields to include in a partial response."}, "upload_protocol" {"type" "string", "description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "location" "query"}, "quotaUser" {"description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "location" "query", "type" "string"}}, :op->info {"oslogin.users.projects.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1beta/{+name}", :response {"$ref" "Empty"}, :parameters {"name" {"pattern" "^users/[^/]+/projects/[^/]+$", "description" "Required. A reference to the POSIX account to update. POSIX accounts are identified by the project ID they are associated with. A reference to the POSIX account is in format `users/{user}/projects/{project}`.", "type" "string", "required" true, "location" "path"}}, :description "Deletes a POSIX account."}, "oslogin.users.sshPublicKeys.get" #:compute.gcp.descriptor{:http-method :get, :path "v1beta/{+name}", :response {"$ref" "SshPublicKey"}, :parameters {"name" {"pattern" "^users/[^/]+/sshPublicKeys/[^/]+$", "location" "path", "required" true, "description" "Required. The fingerprint of the public key to retrieve. Public keys are identified by their SHA-256 fingerprint. The fingerprint of the public key is in format `users/{user}/sshPublicKeys/{fingerprint}`.", "type" "string"}}, :description "Retrieves an SSH public key."}, "oslogin.users.sshPublicKeys.create" #:compute.gcp.descriptor{:http-method :post, :path "v1beta/{+parent}/sshPublicKeys", :request {"$ref" "SshPublicKey"}, :response {"$ref" "SshPublicKey"}, :parameters {"parent" {"required" true, "type" "string", "pattern" "^users/[^/]+$", "description" "Required. The unique ID for the user in format `users/{user}`.", "location" "path"}}, :description "Create an SSH public key"}, "oslogin.users.sshPublicKeys.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1beta/{+name}", :response {"$ref" "Empty"}, :parameters {"name" {"location" "path", "type" "string", "description" "Required. The fingerprint of the public key to update. Public keys are identified by their SHA-256 fingerprint. The fingerprint of the public key is in format `users/{user}/sshPublicKeys/{fingerprint}`.", "pattern" "^users/[^/]+/sshPublicKeys/[^/]+$", "required" true}}, :description "Deletes an SSH public key."}, "oslogin.users.sshPublicKeys.patch" #:compute.gcp.descriptor{:http-method :patch, :path "v1beta/{+name}", :request {"$ref" "SshPublicKey"}, :response {"$ref" "SshPublicKey"}, :parameters {"name" {"required" true, "description" "Required. The fingerprint of the public key to update. Public keys are identified by their SHA-256 fingerprint. The fingerprint of the public key is in format `users/{user}/sshPublicKeys/{fingerprint}`.", "type" "string", "pattern" "^users/[^/]+/sshPublicKeys/[^/]+$", "location" "path"}, "updateMask" {"description" "Mask to control which fields get updated. Updates all if not present.", "type" "string", "format" "google-fieldmask", "location" "query"}}, :description "Updates an SSH public key and returns the profile information. This method supports patch semantics."}, "oslogin.users.getLoginProfile" #:compute.gcp.descriptor{:http-method :get, :path "v1beta/{+name}/loginProfile", :response {"$ref" "LoginProfile"}, :parameters {"name" {"type" "string", "required" true, "description" "Required. The unique ID for the user in format `users/{user}`.", "location" "path", "pattern" "^users/[^/]+$"}, "systemId" {"type" "string", "description" "A system ID for filtering the results of the request.", "location" "query"}, "view" {"location" "query", "enumDescriptions" ["The default login profile view. The API defaults to the BASIC view." "Includes POSIX and SSH key information." "Include security key information for the user."], "description" "The view configures whether to retrieve security keys information.", "enum" ["LOGIN_PROFILE_VIEW_UNSPECIFIED" "BASIC" "SECURITY_KEY"], "type" "string"}, "projectId" {"description" "The project ID of the Google Cloud Platform project.", "type" "string", "location" "query"}}, :description "Retrieves the profile information used for logging in to a virtual machine on Google Compute Engine."}, "oslogin.users.importSshPublicKey" #:compute.gcp.descriptor{:http-method :post, :path "v1beta/{+parent}:importSshPublicKey", :request {"$ref" "SshPublicKey"}, :response {"$ref" "ImportSshPublicKeyResponse"}, :parameters {"parent" {"required" true, "description" "The unique ID for the user in format `users/{user}`.", "location" "path", "pattern" "^users/[^/]+$", "type" "string"}, "view" {"enumDescriptions" ["The default login profile view. The API defaults to the BASIC view." "Includes POSIX and SSH key information." "Include security key information for the user."], "enum" ["LOGIN_PROFILE_VIEW_UNSPECIFIED" "BASIC" "SECURITY_KEY"], "type" "string", "description" "The view configures whether to retrieve security keys information.", "location" "query"}, "projectId" {"type" "string", "location" "query", "description" "The project ID of the Google Cloud Platform project."}}, :description "Adds an SSH public key and returns the profile information. Default POSIX account information is set when no username and UID exist as part of the login profile."}}, :schemas {"PosixAccount" {"id" "PosixAccount", "type" "object", "properties" {"gecos" {"type" "string", "description" "The GECOS (user information) entry for this account."}, "systemId" {"description" "System identifier for which account the username or uid applies to. By default, the empty value is used.", "type" "string"}, "operatingSystemType" {"enum" ["OPERATING_SYSTEM_TYPE_UNSPECIFIED" "LINUX" "WINDOWS"], "type" "string", "description" "The operating system type where this account applies.", "enumDescriptions" ["The operating system type associated with the user account information is unspecified." "Linux user account information." "Windows user account information."]}, "accountId" {"readOnly" true, "type" "string", "description" "Output only. A POSIX account identifier."}, "username" {"description" "The username of the POSIX account.", "type" "string"}, "uid" {"description" "The user ID.", "format" "int64", "type" "string"}, "name" {"description" "Output only. The canonical resource name.", "readOnly" true, "type" "string"}, "shell" {"type" "string", "description" "The path to the logic shell for this account."}, "primary" {"description" "Only one POSIX account can be marked as primary.", "type" "boolean"}, "homeDirectory" {"description" "The path to the home directory for this account.", "type" "string"}, "gid" {"description" "The default group ID.", "format" "int64", "type" "string"}}, "description" "The POSIX account information associated with a Google account."}, "SshPublicKey" {"type" "object", "id" "SshPublicKey", "description" "The SSH public key information associated with a Google account.", "properties" {"expirationTimeUsec" {"description" "An expiration time in microseconds since epoch.", "type" "string", "format" "int64"}, "key" {"description" "Public key text in SSH format, defined by RFC4253 section 6.6.", "type" "string"}, "fingerprint" {"readOnly" true, "description" "Output only. The SHA-256 fingerprint of the SSH public key.", "type" "string"}, "name" {"type" "string", "readOnly" true, "description" "Output only. The canonical resource name."}}}, "ImportSshPublicKeyResponse" {"type" "object", "id" "ImportSshPublicKeyResponse", "description" "A response message for importing an SSH public key.", "properties" {"details" {"description" "Detailed information about import results.", "type" "string"}, "loginProfile" {"$ref" "LoginProfile", "description" "The login profile information for the user."}}}, "Empty" {"type" "object", "description" "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }", "id" "Empty", "properties" {}}, "WebAuthn" {"properties" {"rpId" {"type" "string", "description" "Relying party ID for Web Authentication."}}, "description" "Security key information specific to the Web Authentication protocol.", "type" "object", "id" "WebAuthn"}, "LoginProfile" {"type" "object", "properties" {"name" {"description" "Required. A unique user ID.", "type" "string"}, "posixAccounts" {"items" {"$ref" "PosixAccount"}, "description" "The list of POSIX accounts associated with the user.", "type" "array"}, "sshPublicKeys" {"description" "A map from SSH public key fingerprint to the associated key object.", "additionalProperties" {"$ref" "SshPublicKey"}, "type" "object"}, "securityKeys" {"description" "The registered security key credentials for a user.", "type" "array", "items" {"$ref" "SecurityKey"}}}, "id" "LoginProfile", "description" "The user profile information used for logging in to a virtual machine on Google Compute Engine."}, "UniversalTwoFactor" {"properties" {"appId" {"type" "string", "description" "Application ID for the U2F protocol."}}, "description" "Security key information specific to the U2F protocol.", "type" "object", "id" "UniversalTwoFactor"}, "SecurityKey" {"id" "SecurityKey", "description" "The credential information for a Google registered security key.", "type" "object", "properties" {"privateKey" {"type" "string", "description" "Hardware-backed private key text in SSH format."}, "universalTwoFactor" {"$ref" "UniversalTwoFactor", "description" "The U2F protocol type."}, "publicKey" {"type" "string", "description" "Public key text in SSH format, defined by [RFC4253](\"https://www.ietf.org/rfc/rfc4253.txt\") section 6.6."}, "webAuthn" {"description" "The Web Authentication protocol type.", "$ref" "WebAuthn"}}}}}