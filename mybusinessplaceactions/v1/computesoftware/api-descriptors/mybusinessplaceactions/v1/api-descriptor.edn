#:compute.gcp.descriptor{:name "mybusinessplaceactions", :title "My Business Place Actions API", :api-version "v1", :revision "20220323", :endpoint #:compute.gcp.descriptor{:url "https://mybusinessplaceactions.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"location" "query", "description" "JSONP", "type" "string"}, "uploadType" {"location" "query", "description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "type" "string"}, "key" {"description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "type" "string", "location" "query"}, "access_token" {"type" "string", "description" "OAuth access token.", "location" "query"}, "oauth_token" {"location" "query", "description" "OAuth 2.0 token for the current user.", "type" "string"}, "prettyPrint" {"type" "boolean", "description" "Returns response with indentations and line breaks.", "location" "query", "default" "true"}, "alt" {"enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "enum" ["json" "media" "proto"], "default" "json", "location" "query", "description" "Data format for response.", "type" "string"}, "$.xgafv" {"type" "string", "description" "V1 error format.", "enumDescriptions" ["v1 error format" "v2 error format"], "enum" ["1" "2"], "location" "query"}, "fields" {"location" "query", "description" "Selector specifying which fields to include in a partial response.", "type" "string"}, "upload_protocol" {"description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "type" "string", "location" "query"}, "quotaUser" {"type" "string", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "location" "query"}}, :op->info {"mybusinessplaceactions.placeActionTypeMetadata.list" #:compute.gcp.descriptor{:http-method :get, :path "v1/placeActionTypeMetadata", :response {"$ref" "ListPlaceActionTypeMetadataResponse"}, :parameters {"pageSize" {"description" "Optional. How many action types to include per page. Default is 10, minimum is 1.", "type" "integer", "format" "int32", "location" "query"}, "filter" {"type" "string", "description" "Optional. A filter constraining the place action types to return metadata for. The response includes entries that match the filter. We support only the following filters: 1. location=XYZ where XYZ is a string indicating the resource name of a location, in the format `locations/{location_id}`. 2. region_code=XYZ where XYZ is a Unicode CLDR region code to find available action types. If no filter is provided, all place action types are returned.", "location" "query"}, "languageCode" {"description" "Optional. The IETF BCP-47 code of language to get display names in. If this language is not available, they will be provided in English.", "type" "string", "location" "query"}, "pageToken" {"type" "string", "location" "query", "description" "Optional. If specified, the next page of place action type metadata is retrieved. The `pageToken` is returned when a call to `placeActionTypeMetadata.list` returns more results than can fit into the requested page size."}}, :description "Returns the list of available place action types for a location or country."}, "mybusinessplaceactions.locations.placeActionLinks.patch" #:compute.gcp.descriptor{:http-method :patch, :path "v1/{+name}", :request {"$ref" "PlaceActionLink"}, :response {"$ref" "PlaceActionLink"}, :parameters {"name" {"required" true, "type" "string", "pattern" "^locations/[^/]+/placeActionLinks/[^/]+$", "location" "path", "description" "Optional. The resource name, in the format `locations/{location_id}/placeActionLinks/{place_action_link_id}`. The name field will only be considered in UpdatePlaceActionLink and DeletePlaceActionLink requests for updating and deleting links respectively. However, it will be ignored in CreatePlaceActionLink request, where `place_action_link_id` will be assigned by the server on successful creation of a new link and returned as part of the response."}, "updateMask" {"type" "string", "location" "query", "description" "Required. The specific fields to update. The only editable fields are `uri`, `place_action_type` and `is_preferred`. If the updated link already exists at the same location with the same `place_action_type` and `uri`, fails with an `ALREADY_EXISTS` error.", "format" "google-fieldmask"}}, :description "Updates the specified place action link and returns it."}, "mybusinessplaceactions.locations.placeActionLinks.delete" #:compute.gcp.descriptor{:http-method :delete, :path "v1/{+name}", :response {"$ref" "Empty"}, :parameters {"name" {"pattern" "^locations/[^/]+/placeActionLinks/[^/]+$", "type" "string", "required" true, "description" "Required. The resource name of the place action link to remove from the location.", "location" "path"}}, :description "Deletes a place action link from the specified location."}, "mybusinessplaceactions.locations.placeActionLinks.create" #:compute.gcp.descriptor{:http-method :post, :path "v1/{+parent}/placeActionLinks", :request {"$ref" "PlaceActionLink"}, :response {"$ref" "PlaceActionLink"}, :parameters {"parent" {"pattern" "^locations/[^/]+$", "required" true, "description" "Required. The resource name of the location where to create this place action link. `locations/{location_id}`.", "location" "path", "type" "string"}}, :description "Creates a place action link associated with the specified location, and returns it. The request is considered duplicate if the `parent`, `place_action_link.uri` and `place_action_link.place_action_type` are the same as a previous request."}, "mybusinessplaceactions.locations.placeActionLinks.get" #:compute.gcp.descriptor{:http-method :get, :path "v1/{+name}", :response {"$ref" "PlaceActionLink"}, :parameters {"name" {"required" true, "type" "string", "location" "path", "pattern" "^locations/[^/]+/placeActionLinks/[^/]+$", "description" "Required. The name of the place action link to fetch."}}, :description "Gets the specified place action link."}, "mybusinessplaceactions.locations.placeActionLinks.list" #:compute.gcp.descriptor{:http-method :get, :path "v1/{+parent}/placeActionLinks", :response {"$ref" "ListPlaceActionLinksResponse"}, :parameters {"pageToken" {"type" "string", "description" "Optional. If specified, returns the next page of place action links.", "location" "query"}, "parent" {"type" "string", "location" "path", "pattern" "^locations/[^/]+$", "description" "Required. The name of the location whose place action links will be listed. `locations/{location_id}`.", "required" true}, "filter" {"type" "string", "description" "Optional. A filter constraining the place action links to return. The response includes entries that match the filter. We support only the following filter: 1. place_action_type=XYZ where XYZ is a valid PlaceActionType.", "location" "query"}, "pageSize" {"description" "Optional. How many place action links to return per page. Default of 10. The minimum is 1.", "format" "int32", "type" "integer", "location" "query"}}, :description "Lists the place action links for the specified location."}}, :schemas {"PlaceActionLink" {"type" "object", "id" "PlaceActionLink", "properties" {"placeActionType" {"enum" ["PLACE_ACTION_TYPE_UNSPECIFIED" "APPOINTMENT" "ONLINE_APPOINTMENT" "DINING_RESERVATION" "FOOD_ORDERING" "FOOD_DELIVERY" "FOOD_TAKEOUT"], "enumDescriptions" ["Not specified." "The action type is booking an appointment." "The action type is booking an online appointment." "The action type is making a dining reservation." "The action type is ordering food for delivery and/or takeout." "The action type is ordering food for delivery." "The action type is ordering food for takeout."], "type" "string", "description" "Required. The type of place action that can be performed using this link."}, "uri" {"type" "string", "description" "Required. The link uri. The same uri can be reused for different action types across different locations. However, only one place action link is allowed for each unique combination of (uri, place action type, location)."}, "isPreferred" {"type" "boolean", "description" "Optional. Whether this link is preferred by the merchant. Only one link can be marked as preferred per place action type at a location. If a future request marks a different link as preferred for the same place action type, then the current preferred link (if any exists) will lose its preference."}, "updateTime" {"type" "string", "format" "google-datetime", "readOnly" true, "description" "Output only. The time when the place action link was last modified."}, "name" {"description" "Optional. The resource name, in the format `locations/{location_id}/placeActionLinks/{place_action_link_id}`. The name field will only be considered in UpdatePlaceActionLink and DeletePlaceActionLink requests for updating and deleting links respectively. However, it will be ignored in CreatePlaceActionLink request, where `place_action_link_id` will be assigned by the server on successful creation of a new link and returned as part of the response.", "type" "string"}, "providerType" {"readOnly" true, "enumDescriptions" ["Not specified." "A 1P provider such as a merchant, or an agency on behalf of a merchant." "A 3P aggregator, such as a `Reserve with Google` partner."], "description" "Output only. Specifies the provider type.", "enum" ["PROVIDER_TYPE_UNSPECIFIED" "MERCHANT" "AGGREGATOR_3P"], "type" "string"}, "isEditable" {"type" "boolean", "readOnly" true, "description" "Output only. Indicates whether this link can be edited by the client."}, "createTime" {"type" "string", "format" "google-datetime", "readOnly" true, "description" "Output only. The time when the place action link was created."}}, "description" "Represents a place action link and its attributes."}, "ListPlaceActionLinksResponse" {"type" "object", "description" "Response message for PlaceActions.ListPlaceActionLinks.", "id" "ListPlaceActionLinksResponse", "properties" {"nextPageToken" {"description" "If there are more place action links than the requested page size, then this field is populated with a token to fetch the next page of results.", "type" "string"}, "placeActionLinks" {"items" {"$ref" "PlaceActionLink"}, "type" "array", "description" "The returned list of place action links."}}}, "PlaceActionTypeMetadata" {"id" "PlaceActionTypeMetadata", "type" "object", "description" "Metadata for supported place action types.", "properties" {"placeActionType" {"enum" ["PLACE_ACTION_TYPE_UNSPECIFIED" "APPOINTMENT" "ONLINE_APPOINTMENT" "DINING_RESERVATION" "FOOD_ORDERING" "FOOD_DELIVERY" "FOOD_TAKEOUT"], "type" "string", "enumDescriptions" ["Not specified." "The action type is booking an appointment." "The action type is booking an online appointment." "The action type is making a dining reservation." "The action type is ordering food for delivery and/or takeout." "The action type is ordering food for delivery." "The action type is ordering food for takeout."], "description" "The place action type."}, "displayName" {"description" "The localized display name for the attribute, if available; otherwise, the English display name.", "type" "string"}}}, "Empty" {"type" "object", "properties" {}, "id" "Empty", "description" "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"}, "ListPlaceActionTypeMetadataResponse" {"id" "ListPlaceActionTypeMetadataResponse", "description" "Response message for PlaceActions.ListPlaceActionTypeMetadata.", "type" "object", "properties" {"placeActionTypeMetadata" {"items" {"$ref" "PlaceActionTypeMetadata"}, "description" "A collection of metadata for the available place action types.", "type" "array"}, "nextPageToken" {"type" "string", "description" "If the number of action types exceeded the requested page size, this field will be populated with a token to fetch the next page on a subsequent call to `placeActionTypeMetadata.list`. If there are no more results, this field will not be present in the response."}}}}}