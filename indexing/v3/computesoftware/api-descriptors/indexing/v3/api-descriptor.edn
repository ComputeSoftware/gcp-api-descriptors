#:compute.gcp.descriptor{:name "indexing", :title "Indexing API", :api-version "v3", :revision "20200410", :endpoint #:compute.gcp.descriptor{:url "https://indexing.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"type" "string", "location" "query", "description" "JSONP"}, "uploadType" {"location" "query", "description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "type" "string"}, "key" {"type" "string", "location" "query", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."}, "access_token" {"type" "string", "location" "query", "description" "OAuth access token."}, "oauth_token" {"location" "query", "description" "OAuth 2.0 token for the current user.", "type" "string"}, "prettyPrint" {"location" "query", "description" "Returns response with indentations and line breaks.", "type" "boolean", "default" "true"}, "alt" {"default" "json", "enum" ["json" "media" "proto"], "type" "string", "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "location" "query", "description" "Data format for response."}, "$.xgafv" {"description" "V1 error format.", "type" "string", "enumDescriptions" ["v1 error format" "v2 error format"], "location" "query", "enum" ["1" "2"]}, "fields" {"location" "query", "description" "Selector specifying which fields to include in a partial response.", "type" "string"}, "upload_protocol" {"description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "type" "string", "location" "query"}, "quotaUser" {"location" "query", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "type" "string"}}, :op->info {"indexing.urlNotifications.publish" #:compute.gcp.descriptor{:http-method :post, :path "v3/urlNotifications:publish", :request {"$ref" "UrlNotification"}, :response {"$ref" "PublishUrlNotificationResponse"}, :parameters {}, :description "Notifies that a URL has been updated or deleted."}, "indexing.urlNotifications.getMetadata" #:compute.gcp.descriptor{:http-method :get, :path "v3/urlNotifications/metadata", :response {"$ref" "UrlNotificationMetadata"}, :parameters {"url" {"type" "string", "location" "query", "description" "URL that is being queried."}}, :description "Gets metadata about a Web Document. This method can _only_ be used to query\nURLs that were previously seen in successful Indexing API notifications.\nIncludes the latest `UrlNotification` received via this API."}}, :schemas {"UrlNotificationMetadata" {"description" "Summary of the most recent Indexing API notifications successfully received,\nfor a given URL.", "type" "object", "properties" {"url" {"type" "string", "description" "URL to which this metadata refers."}, "latestRemove" {"description" "Latest notification received with type `URL_REMOVED`.", "$ref" "UrlNotification"}, "latestUpdate" {"$ref" "UrlNotification", "description" "Latest notification received with type `URL_UPDATED`."}}, "id" "UrlNotificationMetadata"}, "UrlNotification" {"description" "`UrlNotification` is the resource used in all Indexing API calls.\nIt describes one event in the life cycle of a Web Document.", "type" "object", "properties" {"type" {"type" "string", "enumDescriptions" ["Unspecified." "The given URL (Web document) has been updated." "The given URL (Web document) has been deleted."], "enum" ["URL_NOTIFICATION_TYPE_UNSPECIFIED" "URL_UPDATED" "URL_DELETED"], "description" "The URL life cycle event that Google is being notified about."}, "url" {"description" "The object of this notification. The URL must be owned by the publisher\nof this notification and, in case of `URL_UPDATED` notifications, it _must_\nbe crawlable by Google.", "type" "string"}, "notifyTime" {"type" "string", "description" "Creation timestamp for this notification.\nUsers should _not_ specify it, the field is ignored at the request time.", "format" "google-datetime"}}, "id" "UrlNotification"}, "PublishUrlNotificationResponse" {"description" "Output for PublishUrlNotification", "type" "object", "properties" {"urlNotificationMetadata" {"$ref" "UrlNotificationMetadata", "description" "Description of the notification events received for this URL."}}, "id" "PublishUrlNotificationResponse"}}}