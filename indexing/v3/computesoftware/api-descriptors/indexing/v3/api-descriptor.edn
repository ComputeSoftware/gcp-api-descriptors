#:compute.gcp.descriptor{:name "indexing", :title "Indexing API", :api-version "v3", :revision "20210302", :endpoint #:compute.gcp.descriptor{:url "https://indexing.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"location" "query", "description" "JSONP", "type" "string"}, "uploadType" {"type" "string", "description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", "location" "query"}, "key" {"description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "type" "string", "location" "query"}, "access_token" {"type" "string", "description" "OAuth access token.", "location" "query"}, "oauth_token" {"location" "query", "type" "string", "description" "OAuth 2.0 token for the current user."}, "prettyPrint" {"type" "boolean", "location" "query", "description" "Returns response with indentations and line breaks.", "default" "true"}, "alt" {"enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "default" "json", "enum" ["json" "media" "proto"], "location" "query", "type" "string", "description" "Data format for response."}, "$.xgafv" {"description" "V1 error format.", "location" "query", "enum" ["1" "2"], "type" "string", "enumDescriptions" ["v1 error format" "v2 error format"]}, "fields" {"description" "Selector specifying which fields to include in a partial response.", "type" "string", "location" "query"}, "upload_protocol" {"type" "string", "description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "location" "query"}, "quotaUser" {"description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "type" "string", "location" "query"}}, :op->info {"indexing.urlNotifications.publish" #:compute.gcp.descriptor{:http-method :post, :path "v3/urlNotifications:publish", :request {"$ref" "UrlNotification"}, :response {"$ref" "PublishUrlNotificationResponse"}, :parameters {}, :description "Notifies that a URL has been updated or deleted."}, "indexing.urlNotifications.getMetadata" #:compute.gcp.descriptor{:http-method :get, :path "v3/urlNotifications/metadata", :response {"$ref" "UrlNotificationMetadata"}, :parameters {"url" {"type" "string", "location" "query", "description" "URL that is being queried."}}, :description "Gets metadata about a Web Document. This method can _only_ be used to query URLs that were previously seen in successful Indexing API notifications. Includes the latest `UrlNotification` received via this API."}}, :schemas {"UrlNotification" {"properties" {"url" {"description" "The object of this notification. The URL must be owned by the publisher of this notification and, in case of `URL_UPDATED` notifications, it _must_ be crawlable by Google.", "type" "string"}, "notifyTime" {"format" "google-datetime", "type" "string", "description" "Creation timestamp for this notification. Users should _not_ specify it, the field is ignored at the request time."}, "type" {"description" "The URL life cycle event that Google is being notified about.", "enumDescriptions" ["Unspecified." "The given URL (Web document) has been updated." "The given URL (Web document) has been deleted."], "type" "string", "enum" ["URL_NOTIFICATION_TYPE_UNSPECIFIED" "URL_UPDATED" "URL_DELETED"]}}, "type" "object", "id" "UrlNotification", "description" "`UrlNotification` is the resource used in all Indexing API calls. It describes one event in the life cycle of a Web Document."}, "PublishUrlNotificationResponse" {"type" "object", "id" "PublishUrlNotificationResponse", "description" "Output for PublishUrlNotification", "properties" {"urlNotificationMetadata" {"description" "Description of the notification events received for this URL.", "$ref" "UrlNotificationMetadata"}}}, "UrlNotificationMetadata" {"properties" {"url" {"description" "URL to which this metadata refers.", "type" "string"}, "latestRemove" {"description" "Latest notification received with type `URL_REMOVED`.", "$ref" "UrlNotification"}, "latestUpdate" {"description" "Latest notification received with type `URL_UPDATED`.", "$ref" "UrlNotification"}}, "description" "Summary of the most recent Indexing API notifications successfully received, for a given URL.", "id" "UrlNotificationMetadata", "type" "object"}}}