#:compute.api-descriptor{:endpoint {:schemes ["https"], :host "iamcredentials.googleapis.com", :base-path "/"}, :op->spec {"iamcredentials.projects.serviceAccounts.generateAccessToken" {:description "Generates an OAuth 2.0 access token for a service account.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/GenerateAccessTokenResponse"}}}, :parameters [{:in "body", :name "body", :schema {"$ref" "#/definitions/GenerateAccessTokenRequest"}} {:description "The resource name of the service account for which the credentials\nare requested, in the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard\ncharacter is required; replacing it with a project ID is invalid.", :in "path", :name "name", :required true, :type "string", :x-reservedExpansion true}], :operationId "iamcredentials.projects.serviceAccounts.generateAccessToken", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/{name}:generateAccessToken", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "iamcredentials.projects.serviceAccounts.generateIdToken" {:description "Generates an OpenID Connect ID token for a service account.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/GenerateIdTokenResponse"}}}, :parameters [{:in "body", :name "body", :schema {"$ref" "#/definitions/GenerateIdTokenRequest"}} {:description "The resource name of the service account for which the credentials\nare requested, in the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard\ncharacter is required; replacing it with a project ID is invalid.", :in "path", :name "name", :required true, :type "string", :x-reservedExpansion true}], :operationId "iamcredentials.projects.serviceAccounts.generateIdToken", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/{name}:generateIdToken", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "iamcredentials.projects.serviceAccounts.signBlob" {:description "Signs a blob using a service account's system-managed private key.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/SignBlobResponse"}}}, :parameters [{:in "body", :name "body", :schema {"$ref" "#/definitions/SignBlobRequest"}} {:description "The resource name of the service account for which the credentials\nare requested, in the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard\ncharacter is required; replacing it with a project ID is invalid.", :in "path", :name "name", :required true, :type "string", :x-reservedExpansion true}], :operationId "iamcredentials.projects.serviceAccounts.signBlob", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/{name}:signBlob", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "iamcredentials.projects.serviceAccounts.signJwt" {:description "Signs a JWT using a service account's system-managed private key.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/SignJwtResponse"}}}, :parameters [{:in "body", :name "body", :schema {"$ref" "#/definitions/SignJwtRequest"}} {:description "The resource name of the service account for which the credentials\nare requested, in the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard\ncharacter is required; replacing it with a project ID is invalid.", :in "path", :name "name", :required true, :type "string", :x-reservedExpansion true}], :operationId "iamcredentials.projects.serviceAccounts.signJwt", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/{name}:signJwt", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}}, :parameters {:quotaUser {:description "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", :in "query", :name "quotaUser", :type "string"}, :key {:description "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", :in "query", :name "key", :type "string"}, :alt {:default "json", :description "Data format for response.", :enum ["json" "media" "proto"], :in "query", :name "alt", :type "string"}, :access_token {:description "OAuth access token.", :in "query", :name "access_token", :type "string"}, :fields {:description "Selector specifying which fields to include in a partial response.", :in "query", :name "fields", :type "string"}, :upload_protocol {:description "Upload protocol for media (e.g. \"raw\", \"multipart\").", :in "query", :name "upload_protocol", :type "string"}, :uploadType {:description "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", :in "query", :name "uploadType", :type "string"}, :oauth_token {:description "OAuth 2.0 token for the current user.", :in "query", :name "oauth_token", :type "string"}, :prettyPrint {:default true, :description "Returns response with indentations and line breaks.", :in "query", :name "prettyPrint", :type "boolean"}, "$.xgafv" {:description "V1 error format.", :enum ["1" "2"], :in "query", :name "$.xgafv", :type "string"}, :callback {:description "JSONP", :in "query", :name "callback", :type "string"}}, :definitions {:GenerateAccessTokenRequest {:properties {:delegates {:description "The sequence of service accounts in a delegation chain. Each service\naccount must be granted the `roles/iam.serviceAccountTokenCreator` role\non its next service account in the chain. The last service account in the\nchain must be granted the `roles/iam.serviceAccountTokenCreator` role\non the service account that is specified in the `name` field of the\nrequest.\n\nThe delegates must have the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard\ncharacter is required; replacing it with a project ID is invalid.", :items {:type "string"}, :type "array"}, :lifetime {:description "The desired lifetime duration of the access token in seconds.\nMust be set to a value less than or equal to 3600 (1 hour). If a value is\nnot specified, the token's lifetime will be set to a default value of one\nhour.", :format "google-duration", :type "string"}, :scope {:description "Code to identify the scopes to be included in the OAuth 2.0 access token.\nSee https://developers.google.com/identity/protocols/googlescopes for more\ninformation.\nAt least one value required.", :items {:type "string"}, :type "array"}}, :type "object"}, :GenerateAccessTokenResponse {:properties {:accessToken {:description "The OAuth 2.0 access token.", :type "string"}, :expireTime {:description "Token expiration time.\nThe expiration time is always set.", :format "google-datetime", :type "string"}}, :type "object"}, :GenerateIdTokenRequest {:properties {:audience {:description "The audience for the token, such as the API or account that this token\ngrants access to.", :type "string"}, :delegates {:description "The sequence of service accounts in a delegation chain. Each service\naccount must be granted the `roles/iam.serviceAccountTokenCreator` role\non its next service account in the chain. The last service account in the\nchain must be granted the `roles/iam.serviceAccountTokenCreator` role\non the service account that is specified in the `name` field of the\nrequest.\n\nThe delegates must have the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard\ncharacter is required; replacing it with a project ID is invalid.", :items {:type "string"}, :type "array"}, :includeEmail {:description "Include the service account email in the token. If set to `true`, the\ntoken will contain `email` and `email_verified` claims.", :type "boolean"}}, :type "object"}, :GenerateIdTokenResponse {:properties {:token {:description "The OpenId Connect ID token.", :type "string"}}, :type "object"}, :SignBlobRequest {:properties {:delegates {:description "The sequence of service accounts in a delegation chain. Each service\naccount must be granted the `roles/iam.serviceAccountTokenCreator` role\non its next service account in the chain. The last service account in the\nchain must be granted the `roles/iam.serviceAccountTokenCreator` role\non the service account that is specified in the `name` field of the\nrequest.\n\nThe delegates must have the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard\ncharacter is required; replacing it with a project ID is invalid.", :items {:type "string"}, :type "array"}, :payload {:description "The bytes to sign.", :format "byte", :type "string"}}, :type "object"}, :SignBlobResponse {:properties {:keyId {:description "The ID of the key used to sign the blob.", :type "string"}, :signedBlob {:description "The signed blob.", :format "byte", :type "string"}}, :type "object"}, :SignJwtRequest {:properties {:delegates {:description "The sequence of service accounts in a delegation chain. Each service\naccount must be granted the `roles/iam.serviceAccountTokenCreator` role\non its next service account in the chain. The last service account in the\nchain must be granted the `roles/iam.serviceAccountTokenCreator` role\non the service account that is specified in the `name` field of the\nrequest.\n\nThe delegates must have the following format:\n`projects/-/serviceAccounts/{ACCOUNT_EMAIL_OR_UNIQUEID}`. The `-` wildcard\ncharacter is required; replacing it with a project ID is invalid.", :items {:type "string"}, :type "array"}, :payload {:description "The JWT payload to sign: a JSON object that contains a JWT Claims Set.", :type "string"}}, :type "object"}, :SignJwtResponse {:properties {:keyId {:description "The ID of the key used to sign the JWT.", :type "string"}, :signedJwt {:description "The signed JWT.", :type "string"}}, :type "object"}}}