#:compute.gcp.descriptor{:name "datastore", :title "Cloud Datastore API", :api-version "v1beta1", :revision "20200311", :endpoint #:compute.gcp.descriptor{:url "https://datastore.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"location" "query", "description" "JSONP", "type" "string"}, "uploadType" {"type" "string", "location" "query", "description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."}, "key" {"type" "string", "location" "query", "description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."}, "access_token" {"type" "string", "location" "query", "description" "OAuth access token."}, "oauth_token" {"description" "OAuth 2.0 token for the current user.", "type" "string", "location" "query"}, "prettyPrint" {"location" "query", "description" "Returns response with indentations and line breaks.", "type" "boolean", "default" "true"}, "alt" {"type" "string", "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"], "location" "query", "description" "Data format for response.", "default" "json", "enum" ["json" "media" "proto"]}, "$.xgafv" {"location" "query", "enum" ["1" "2"], "description" "V1 error format.", "type" "string", "enumDescriptions" ["v1 error format" "v2 error format"]}, "fields" {"location" "query", "description" "Selector specifying which fields to include in a partial response.", "type" "string"}, "upload_protocol" {"type" "string", "location" "query", "description" "Upload protocol for media (e.g. \"raw\", \"multipart\")."}, "quotaUser" {"description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", "type" "string", "location" "query"}}, :op->info {"datastore.projects.export" #:compute.gcp.descriptor{:http-method :post, :path "v1beta1/projects/{projectId}:export", :request {"$ref" "GoogleDatastoreAdminV1beta1ExportEntitiesRequest"}, :response {"$ref" "GoogleLongrunningOperation"}, :parameters {"projectId" {"description" "Project ID against which to make the request.", "required" true, "type" "string", "location" "path"}}, :description "Exports a copy of all or a subset of entities from Google Cloud Datastore\nto another storage system, such as Google Cloud Storage. Recent updates to\nentities may not be reflected in the export. The export occurs in the\nbackground and its progress can be monitored and managed via the\nOperation resource that is created. The output of an export may only be\nused once the associated operation is done. If an export operation is\ncancelled before completion it may leave partial data behind in Google\nCloud Storage."}, "datastore.projects.import" #:compute.gcp.descriptor{:http-method :post, :path "v1beta1/projects/{projectId}:import", :request {"$ref" "GoogleDatastoreAdminV1beta1ImportEntitiesRequest"}, :response {"$ref" "GoogleLongrunningOperation"}, :parameters {"projectId" {"location" "path", "description" "Project ID against which to make the request.", "required" true, "type" "string"}}, :description "Imports entities into Google Cloud Datastore. Existing entities with the\nsame key are overwritten. The import occurs in the background and its\nprogress can be monitored and managed via the Operation resource that is\ncreated. If an ImportEntities operation is cancelled, it is possible\nthat a subset of the data has already been imported to Cloud Datastore."}}, :schemas {"GoogleDatastoreAdminV1beta1ImportEntitiesRequest" {"description" "The request for\ngoogle.datastore.admin.v1beta1.DatastoreAdmin.ImportEntities.", "type" "object", "properties" {"inputUrl" {"description" "The full resource URL of the external storage location. Currently, only\nGoogle Cloud Storage is supported. So input_url should be of the form:\n`gs://BUCKET_NAME[/NAMESPACE_PATH]/OVERALL_EXPORT_METADATA_FILE`, where\n`BUCKET_NAME` is the name of the Cloud Storage bucket, `NAMESPACE_PATH` is\nan optional Cloud Storage namespace path (this is not a Cloud Datastore\nnamespace), and `OVERALL_EXPORT_METADATA_FILE` is the metadata file written\nby the ExportEntities operation. For more information about Cloud Storage\nnamespace paths, see\n[Object name\nconsiderations](https://cloud.google.com/storage/docs/naming#object-considerations).\n\nFor more information, see\ngoogle.datastore.admin.v1beta1.ExportEntitiesResponse.output_url.", "type" "string"}, "entityFilter" {"$ref" "GoogleDatastoreAdminV1beta1EntityFilter", "description" "Optionally specify which kinds/namespaces are to be imported. If provided,\nthe list must be a subset of the EntityFilter used in creating the export,\notherwise a FAILED_PRECONDITION error will be returned. If no filter is\nspecified then all entities from the export are imported."}, "labels" {"description" "Client-assigned labels.", "type" "object", "additionalProperties" {"type" "string"}}}, "id" "GoogleDatastoreAdminV1beta1ImportEntitiesRequest"}, "GoogleDatastoreAdminV1beta1ExportEntitiesRequest" {"description" "The request for\ngoogle.datastore.admin.v1beta1.DatastoreAdmin.ExportEntities.", "type" "object", "properties" {"entityFilter" {"$ref" "GoogleDatastoreAdminV1beta1EntityFilter", "description" "Description of what data from the project is included in the export."}, "outputUrlPrefix" {"type" "string", "description" "Location for the export metadata and data files.\n\nThe full resource URL of the external storage location. Currently, only\nGoogle Cloud Storage is supported. So output_url_prefix should be of the\nform: `gs://BUCKET_NAME[/NAMESPACE_PATH]`, where `BUCKET_NAME` is the\nname of the Cloud Storage bucket and `NAMESPACE_PATH` is an optional Cloud\nStorage namespace path (this is not a Cloud Datastore namespace). For more\ninformation about Cloud Storage namespace paths, see\n[Object name\nconsiderations](https://cloud.google.com/storage/docs/naming#object-considerations).\n\nThe resulting files will be nested deeper than the specified URL prefix.\nThe final output URL will be provided in the\ngoogle.datastore.admin.v1beta1.ExportEntitiesResponse.output_url\nfield. That value should be used for subsequent ImportEntities operations.\n\nBy nesting the data files deeper, the same Cloud Storage bucket can be used\nin multiple ExportEntities operations without conflict."}, "labels" {"additionalProperties" {"type" "string"}, "description" "Client-assigned labels.", "type" "object"}}, "id" "GoogleDatastoreAdminV1beta1ExportEntitiesRequest"}, "GoogleDatastoreAdminV1CommonMetadata" {"id" "GoogleDatastoreAdminV1CommonMetadata", "description" "Metadata common to all Datastore Admin operations.", "type" "object", "properties" {"startTime" {"description" "The time that work began on the operation.", "format" "google-datetime", "type" "string"}, "labels" {"additionalProperties" {"type" "string"}, "description" "The client-assigned labels which were provided when the operation was\ncreated. May also include additional labels.", "type" "object"}, "endTime" {"description" "The time the operation ended, either successfully or otherwise.", "format" "google-datetime", "type" "string"}, "operationType" {"description" "The type of the operation. Can be used as a filter in\nListOperationsRequest.", "type" "string", "enumDescriptions" ["Unspecified." "ExportEntities." "ImportEntities." "CreateIndex." "DeleteIndex."], "enum" ["OPERATION_TYPE_UNSPECIFIED" "EXPORT_ENTITIES" "IMPORT_ENTITIES" "CREATE_INDEX" "DELETE_INDEX"]}, "state" {"type" "string", "enumDescriptions" ["Unspecified." "Request is being prepared for processing." "Request is actively being processed." "Request is in the process of being cancelled after user called\ngoogle.longrunning.Operations.CancelOperation on the operation." "Request has been processed and is in its finalization stage." "Request has completed successfully." "Request has finished being processed, but encountered an error." "Request has finished being cancelled after user called\ngoogle.longrunning.Operations.CancelOperation."], "enum" ["STATE_UNSPECIFIED" "INITIALIZING" "PROCESSING" "CANCELLING" "FINALIZING" "SUCCESSFUL" "FAILED" "CANCELLED"], "description" "The current state of the Operation."}}}, "GoogleDatastoreAdminV1Progress" {"type" "object", "properties" {"workEstimated" {"description" "An estimate of how much work needs to be performed. May be zero if the\nwork estimate is unavailable.", "format" "int64", "type" "string"}, "workCompleted" {"description" "The amount of work that has been completed. Note that this may be greater\nthan work_estimated.", "format" "int64", "type" "string"}}, "id" "GoogleDatastoreAdminV1Progress", "description" "Measures the progress of a particular metric."}, "GoogleDatastoreAdminV1beta1ExportEntitiesMetadata" {"description" "Metadata for ExportEntities operations.", "type" "object", "properties" {"common" {"$ref" "GoogleDatastoreAdminV1beta1CommonMetadata", "description" "Metadata common to all Datastore Admin operations."}, "progressBytes" {"description" "An estimate of the number of bytes processed.", "$ref" "GoogleDatastoreAdminV1beta1Progress"}, "entityFilter" {"description" "Description of which entities are being exported.", "$ref" "GoogleDatastoreAdminV1beta1EntityFilter"}, "outputUrlPrefix" {"description" "Location for the export metadata and data files. This will be the same\nvalue as the\ngoogle.datastore.admin.v1beta1.ExportEntitiesRequest.output_url_prefix\nfield. The final output location is provided in\ngoogle.datastore.admin.v1beta1.ExportEntitiesResponse.output_url.", "type" "string"}, "progressEntities" {"description" "An estimate of the number of entities processed.", "$ref" "GoogleDatastoreAdminV1beta1Progress"}}, "id" "GoogleDatastoreAdminV1beta1ExportEntitiesMetadata"}, "GoogleDatastoreAdminV1beta1ExportEntitiesResponse" {"type" "object", "properties" {"outputUrl" {"description" "Location of the output metadata file. This can be used to begin an import\ninto Cloud Datastore (this project or another project). See\ngoogle.datastore.admin.v1beta1.ImportEntitiesRequest.input_url.\nOnly present if the operation completed successfully.", "type" "string"}}, "id" "GoogleDatastoreAdminV1beta1ExportEntitiesResponse", "description" "The response for\ngoogle.datastore.admin.v1beta1.DatastoreAdmin.ExportEntities."}, "GoogleDatastoreAdminV1ExportEntitiesMetadata" {"id" "GoogleDatastoreAdminV1ExportEntitiesMetadata", "description" "Metadata for ExportEntities operations.", "type" "object", "properties" {"common" {"$ref" "GoogleDatastoreAdminV1CommonMetadata", "description" "Metadata common to all Datastore Admin operations."}, "progressBytes" {"$ref" "GoogleDatastoreAdminV1Progress", "description" "An estimate of the number of bytes processed."}, "entityFilter" {"$ref" "GoogleDatastoreAdminV1EntityFilter", "description" "Description of which entities are being exported."}, "outputUrlPrefix" {"description" "Location for the export metadata and data files. This will be the same\nvalue as the\ngoogle.datastore.admin.v1.ExportEntitiesRequest.output_url_prefix\nfield. The final output location is provided in\ngoogle.datastore.admin.v1.ExportEntitiesResponse.output_url.", "type" "string"}, "progressEntities" {"description" "An estimate of the number of entities processed.", "$ref" "GoogleDatastoreAdminV1Progress"}}}, "GoogleDatastoreAdminV1EntityFilter" {"description" "Identifies a subset of entities in a project. This is specified as\ncombinations of kinds and namespaces (either or both of which may be all, as\ndescribed in the following examples).\nExample usage:\n\nEntire project:\n  kinds=[], namespace_ids=[]\n\nKinds Foo and Bar in all namespaces:\n  kinds=['Foo', 'Bar'], namespace_ids=[]\n\nKinds Foo and Bar only in the default namespace:\n  kinds=['Foo', 'Bar'], namespace_ids=['']\n\nKinds Foo and Bar in both the default and Baz namespaces:\n  kinds=['Foo', 'Bar'], namespace_ids=['', 'Baz']\n\nThe entire Baz namespace:\n  kinds=[], namespace_ids=['Baz']", "type" "object", "properties" {"kinds" {"type" "array", "items" {"type" "string"}, "description" "If empty, then this represents all kinds."}, "namespaceIds" {"type" "array", "items" {"type" "string"}, "description" "An empty list represents all namespaces. This is the preferred\nusage for projects that don't use namespaces.\n\nAn empty string element represents the default namespace. This should be\nused if the project has data in non-default namespaces, but doesn't want to\ninclude them.\nEach namespace in this list must be unique."}}, "id" "GoogleDatastoreAdminV1EntityFilter"}, "Status" {"type" "object", "properties" {"code" {"description" "The status code, which should be an enum value of google.rpc.Code.", "format" "int32", "type" "integer"}, "message" {"description" "A developer-facing error message, which should be in English. Any\nuser-facing error message should be localized and sent in the\ngoogle.rpc.Status.details field, or localized by the client.", "type" "string"}, "details" {"description" "A list of messages that carry the error details.  There is a common set of\nmessage types for APIs to use.", "type" "array", "items" {"additionalProperties" {"type" "any", "description" "Properties of the object. Contains field @type with type URL."}, "type" "object"}}}, "id" "Status", "description" "The `Status` type defines a logical error model that is suitable for\ndifferent programming environments, including REST APIs and RPC APIs. It is\nused by [gRPC](https://github.com/grpc). Each `Status` message contains\nthree pieces of data: error code, error message, and error details.\n\nYou can find out more about this error model and how to work with it in the\n[API Design Guide](https://cloud.google.com/apis/design/errors)."}, "GoogleLongrunningOperation" {"description" "This resource represents a long-running operation that is the result of a\nnetwork API call.", "type" "object", "properties" {"done" {"description" "If the value is `false`, it means the operation is still in progress.\nIf `true`, the operation is completed, and either `error` or `response` is\navailable.", "type" "boolean"}, "response" {"type" "object", "additionalProperties" {"type" "any", "description" "Properties of the object. Contains field @type with type URL."}, "description" "The normal response of the operation in case of success.  If the original\nmethod returns no data on success, such as `Delete`, the response is\n`google.protobuf.Empty`.  If the original method is standard\n`Get`/`Create`/`Update`, the response should be the resource.  For other\nmethods, the response should have the type `XxxResponse`, where `Xxx`\nis the original method name.  For example, if the original method name\nis `TakeSnapshot()`, the inferred response type is\n`TakeSnapshotResponse`."}, "name" {"description" "The server-assigned name, which is only unique within the same service that\noriginally returns it. If you use the default HTTP mapping, the\n`name` should be a resource name ending with `operations/{unique_id}`.", "type" "string"}, "error" {"$ref" "Status", "description" "The error result of the operation in case of failure or cancellation."}, "metadata" {"additionalProperties" {"description" "Properties of the object. Contains field @type with type URL.", "type" "any"}, "description" "Service-specific metadata associated with the operation.  It typically\ncontains progress information and common metadata such as create time.\nSome services might not provide such metadata.  Any method that returns a\nlong-running operation should document the metadata type, if any.", "type" "object"}}, "id" "GoogleLongrunningOperation"}, "GoogleDatastoreAdminV1ExportEntitiesResponse" {"description" "The response for\ngoogle.datastore.admin.v1.DatastoreAdmin.ExportEntities.", "type" "object", "properties" {"outputUrl" {"description" "Location of the output metadata file. This can be used to begin an import\ninto Cloud Datastore (this project or another project). See\ngoogle.datastore.admin.v1.ImportEntitiesRequest.input_url.\nOnly present if the operation completed successfully.", "type" "string"}}, "id" "GoogleDatastoreAdminV1ExportEntitiesResponse"}, "GoogleDatastoreAdminV1ImportEntitiesMetadata" {"description" "Metadata for ImportEntities operations.", "type" "object", "properties" {"common" {"$ref" "GoogleDatastoreAdminV1CommonMetadata", "description" "Metadata common to all Datastore Admin operations."}, "progressBytes" {"$ref" "GoogleDatastoreAdminV1Progress", "description" "An estimate of the number of bytes processed."}, "inputUrl" {"type" "string", "description" "The location of the import metadata file. This will be the same value as\nthe google.datastore.admin.v1.ExportEntitiesResponse.output_url field."}, "entityFilter" {"description" "Description of which entities are being imported.", "$ref" "GoogleDatastoreAdminV1EntityFilter"}, "progressEntities" {"$ref" "GoogleDatastoreAdminV1Progress", "description" "An estimate of the number of entities processed."}}, "id" "GoogleDatastoreAdminV1ImportEntitiesMetadata"}, "GoogleDatastoreAdminV1beta1EntityFilter" {"description" "Identifies a subset of entities in a project. This is specified as\ncombinations of kinds and namespaces (either or both of which may be all, as\ndescribed in the following examples).\nExample usage:\n\nEntire project:\n  kinds=[], namespace_ids=[]\n\nKinds Foo and Bar in all namespaces:\n  kinds=['Foo', 'Bar'], namespace_ids=[]\n\nKinds Foo and Bar only in the default namespace:\n  kinds=['Foo', 'Bar'], namespace_ids=['']\n\nKinds Foo and Bar in both the default and Baz namespaces:\n  kinds=['Foo', 'Bar'], namespace_ids=['', 'Baz']\n\nThe entire Baz namespace:\n  kinds=[], namespace_ids=['Baz']", "type" "object", "properties" {"kinds" {"description" "If empty, then this represents all kinds.", "type" "array", "items" {"type" "string"}}, "namespaceIds" {"type" "array", "items" {"type" "string"}, "description" "An empty list represents all namespaces. This is the preferred\nusage for projects that don't use namespaces.\n\nAn empty string element represents the default namespace. This should be\nused if the project has data in non-default namespaces, but doesn't want to\ninclude them.\nEach namespace in this list must be unique."}}, "id" "GoogleDatastoreAdminV1beta1EntityFilter"}, "GoogleDatastoreAdminV1beta1Progress" {"id" "GoogleDatastoreAdminV1beta1Progress", "description" "Measures the progress of a particular metric.", "type" "object", "properties" {"workEstimated" {"description" "An estimate of how much work needs to be performed. May be zero if the\nwork estimate is unavailable.", "format" "int64", "type" "string"}, "workCompleted" {"description" "The amount of work that has been completed. Note that this may be greater\nthan work_estimated.", "format" "int64", "type" "string"}}}, "GoogleDatastoreAdminV1IndexOperationMetadata" {"description" "Metadata for Index operations.", "type" "object", "properties" {"common" {"description" "Metadata common to all Datastore Admin operations.", "$ref" "GoogleDatastoreAdminV1CommonMetadata"}, "progressEntities" {"description" "An estimate of the number of entities processed.", "$ref" "GoogleDatastoreAdminV1Progress"}, "indexId" {"description" "The index resource ID that this operation is acting on.", "type" "string"}}, "id" "GoogleDatastoreAdminV1IndexOperationMetadata"}, "GoogleDatastoreAdminV1beta1CommonMetadata" {"type" "object", "properties" {"endTime" {"type" "string", "description" "The time the operation ended, either successfully or otherwise.", "format" "google-datetime"}, "operationType" {"description" "The type of the operation. Can be used as a filter in\nListOperationsRequest.", "type" "string", "enumDescriptions" ["Unspecified." "ExportEntities." "ImportEntities."], "enum" ["OPERATION_TYPE_UNSPECIFIED" "EXPORT_ENTITIES" "IMPORT_ENTITIES"]}, "state" {"description" "The current state of the Operation.", "type" "string", "enumDescriptions" ["Unspecified." "Request is being prepared for processing." "Request is actively being processed." "Request is in the process of being cancelled after user called\ngoogle.longrunning.Operations.CancelOperation on the operation." "Request has been processed and is in its finalization stage." "Request has completed successfully." "Request has finished being processed, but encountered an error." "Request has finished being cancelled after user called\ngoogle.longrunning.Operations.CancelOperation."], "enum" ["STATE_UNSPECIFIED" "INITIALIZING" "PROCESSING" "CANCELLING" "FINALIZING" "SUCCESSFUL" "FAILED" "CANCELLED"]}, "startTime" {"description" "The time that work began on the operation.", "format" "google-datetime", "type" "string"}, "labels" {"additionalProperties" {"type" "string"}, "description" "The client-assigned labels which were provided when the operation was\ncreated. May also include additional labels.", "type" "object"}}, "id" "GoogleDatastoreAdminV1beta1CommonMetadata", "description" "Metadata common to all Datastore Admin operations."}, "GoogleDatastoreAdminV1beta1ImportEntitiesMetadata" {"description" "Metadata for ImportEntities operations.", "type" "object", "properties" {"entityFilter" {"description" "Description of which entities are being imported.", "$ref" "GoogleDatastoreAdminV1beta1EntityFilter"}, "progressEntities" {"$ref" "GoogleDatastoreAdminV1beta1Progress", "description" "An estimate of the number of entities processed."}, "common" {"$ref" "GoogleDatastoreAdminV1beta1CommonMetadata", "description" "Metadata common to all Datastore Admin operations."}, "progressBytes" {"$ref" "GoogleDatastoreAdminV1beta1Progress", "description" "An estimate of the number of bytes processed."}, "inputUrl" {"description" "The location of the import metadata file. This will be the same value as\nthe google.datastore.admin.v1beta1.ExportEntitiesResponse.output_url\nfield.", "type" "string"}}, "id" "GoogleDatastoreAdminV1beta1ImportEntitiesMetadata"}}}