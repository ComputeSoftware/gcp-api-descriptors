#:compute.api-descriptor{:endpoint #:compute.gcp.impl.descriptor{:url "https://searchconsole.googleapis.com/"}, :op->spec {"searchconsole.urlTestingTools.mobileFriendlyTest.run" {:operationId "searchconsole.urlTestingTools.mobileFriendlyTest.run", :description "Runs Mobile-Friendly Test for a given URL.", :requestBody {:content {"application/json" {:schema {:$ref "#/components/schemas/RunMobileFriendlyTestRequest"}}}}, :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/v1/urlTestingTools/mobileFriendlyTest:run"}}, :resolve {:components {:parameters {:quotaUser {:description "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", :in "query", :name "quotaUser", :schema {:type "string"}}, :key {:description "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", :in "query", :name "key", :schema {:type "string"}}, :alt {:description "Data format for response.", :in "query", :name "alt", :schema {:default "json", :enum ["json" "media" "proto"], :type "string"}}, :access_token {:description "OAuth access token.", :in "query", :name "access_token", :schema {:type "string"}}, :fields {:description "Selector specifying which fields to include in a partial response.", :in "query", :name "fields", :schema {:type "string"}}, :upload_protocol {:description "Upload protocol for media (e.g. \"raw\", \"multipart\").", :in "query", :name "upload_protocol", :schema {:type "string"}}, :uploadType {:description "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", :in "query", :name "uploadType", :schema {:type "string"}}, :oauth_token {:description "OAuth 2.0 token for the current user.", :in "query", :name "oauth_token", :schema {:type "string"}}, "_.xgafv" {:description "V1 error format.", :in "query", :name "$.xgafv", :schema {:enum ["1" "2"], :type "string"}}, :prettyPrint {:description "Returns response with indentations and line breaks.", :in "query", :name "prettyPrint", :schema {:default true, :type "boolean"}}, :callback {:description "JSONP", :in "query", :name "callback", :schema {:type "string"}}}, :schemas {:BlockedResource {:description "Blocked resource.", :properties {:url {:description "URL of the blocked resource.", :type "string"}}, :type "object"}, :Image {:description "Describe image data.", :properties {:data {:description "Image data in format determined by the mime type. Currently, the format\nwill always be \"image/png\", but this might change in the future.", :format "byte", :type "string"}, :mimeType {:description "The mime-type of the image data.", :type "string"}}, :type "object"}, :MobileFriendlyIssue {:description "Mobile-friendly issue.", :properties {:rule {:description "Rule violated.", :enum ["MOBILE_FRIENDLY_RULE_UNSPECIFIED" "USES_INCOMPATIBLE_PLUGINS" "CONFIGURE_VIEWPORT" "FIXED_WIDTH_VIEWPORT" "SIZE_CONTENT_TO_VIEWPORT" "USE_LEGIBLE_FONT_SIZES" "TAP_TARGETS_TOO_CLOSE"], :type "string"}}, :type "object"}, :ResourceIssue {:description "Information about a resource with issue.", :properties {:blockedResource {:$ref "#/components/schemas/BlockedResource", :description "Describes a blocked resource issue."}}, :type "object"}, :RunMobileFriendlyTestRequest {:description "Mobile-friendly test request.", :properties {:requestScreenshot {:description "Whether or not screenshot is requested. Default is false.", :type "boolean"}, :url {:description "URL for inspection.", :type "string"}}, :type "object"}, :RunMobileFriendlyTestResponse {:description "Mobile-friendly test response, including mobile-friendly issues and resource\nissues.", :properties {:mobileFriendliness {:description "Test verdict, whether the page is mobile friendly or not.", :enum ["MOBILE_FRIENDLY_TEST_RESULT_UNSPECIFIED" "MOBILE_FRIENDLY" "NOT_MOBILE_FRIENDLY"], :type "string"}, :mobileFriendlyIssues {:description "List of mobile-usability issues.", :items {:$ref "#/components/schemas/MobileFriendlyIssue"}, :type "array"}, :resourceIssues {:description "Information about embedded resources issues.", :items {:$ref "#/components/schemas/ResourceIssue"}, :type "array"}, :screenshot {:$ref "#/components/schemas/Image", :description "Screenshot of the requested URL."}, :testStatus {:$ref "#/components/schemas/TestStatus", :description "Final state of the test, can be either complete or an error."}}, :type "object"}, :TestStatus {:description "Final state of the test, including error details if necessary.", :properties {:details {:description "Error details if applicable.", :type "string"}, :status {:description "Status of the test.", :enum ["TEST_STATUS_UNSPECIFIED" "COMPLETE" "INTERNAL_ERROR" "PAGE_UNREACHABLE"], :type "string"}}, :type "object"}}}}}