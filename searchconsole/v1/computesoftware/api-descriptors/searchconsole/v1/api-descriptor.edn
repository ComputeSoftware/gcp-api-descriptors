#:compute.gcp.descriptor{:name "searchconsole", :title "Google Search Console API", :api-version "v1", :revision "20200715", :endpoint #:compute.gcp.descriptor{:url "https://searchconsole.googleapis.com/", :batch-path "batch", :service-path ""}, :parameters {"callback" {"type" "string", "location" "query", "description" "JSONP"}, "uploadType" {"location" "query", "type" "string", "description" "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."}, "key" {"description" "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", "type" "string", "location" "query"}, "access_token" {"type" "string", "description" "OAuth access token.", "location" "query"}, "oauth_token" {"type" "string", "location" "query", "description" "OAuth 2.0 token for the current user."}, "prettyPrint" {"description" "Returns response with indentations and line breaks.", "type" "boolean", "location" "query", "default" "true"}, "alt" {"location" "query", "default" "json", "enum" ["json" "media" "proto"], "type" "string", "description" "Data format for response.", "enumDescriptions" ["Responses with Content-Type of application/json" "Media download with context-dependent Content-Type" "Responses with Content-Type of application/x-protobuf"]}, "$.xgafv" {"description" "V1 error format.", "enumDescriptions" ["v1 error format" "v2 error format"], "enum" ["1" "2"], "type" "string", "location" "query"}, "fields" {"type" "string", "description" "Selector specifying which fields to include in a partial response.", "location" "query"}, "upload_protocol" {"description" "Upload protocol for media (e.g. \"raw\", \"multipart\").", "location" "query", "type" "string"}, "quotaUser" {"location" "query", "type" "string", "description" "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."}}, :op->info {"searchconsole.urlTestingTools.mobileFriendlyTest.run" #:compute.gcp.descriptor{:http-method :post, :path "v1/urlTestingTools/mobileFriendlyTest:run", :request {"$ref" "RunMobileFriendlyTestRequest"}, :response {"$ref" "RunMobileFriendlyTestResponse"}, :parameters {}, :description "Runs Mobile-Friendly Test for a given URL."}}, :schemas {"TestStatus" {"type" "object", "description" "Final state of the test, including error details if necessary.", "properties" {"details" {"description" "Error details if applicable.", "type" "string"}, "status" {"type" "string", "enumDescriptions" ["Internal error when running this test. Please try running the test again." "Inspection has completed without errors." "Inspection terminated in an error state. This indicates a problem in\nGoogle's infrastructure, not a user error. Please try again later." "Google can not access the URL because of a user error such as a robots.txt\nblockage, a 403 or 500 code etc. Please make sure that the URL provided is\naccessible by Googlebot and is not password protected."], "enum" ["TEST_STATUS_UNSPECIFIED" "COMPLETE" "INTERNAL_ERROR" "PAGE_UNREACHABLE"], "description" "Status of the test."}}, "id" "TestStatus"}, "RunMobileFriendlyTestRequest" {"description" "Mobile-friendly test request.", "type" "object", "id" "RunMobileFriendlyTestRequest", "properties" {"url" {"description" "URL for inspection.", "type" "string"}, "requestScreenshot" {"description" "Whether or not screenshot is requested. Default is false.", "type" "boolean"}}}, "RunMobileFriendlyTestResponse" {"description" "Mobile-friendly test response, including mobile-friendly issues and resource\nissues.", "id" "RunMobileFriendlyTestResponse", "type" "object", "properties" {"testStatus" {"$ref" "TestStatus", "description" "Final state of the test, can be either complete or an error."}, "screenshot" {"$ref" "Image", "description" "Screenshot of the requested URL."}, "resourceIssues" {"items" {"$ref" "ResourceIssue"}, "description" "Information about embedded resources issues.", "type" "array"}, "mobileFriendliness" {"enumDescriptions" ["Internal error when running this test. Please try running the test again." "The page is mobile friendly." "The page is not mobile friendly."], "type" "string", "description" "Test verdict, whether the page is mobile friendly or not.", "enum" ["MOBILE_FRIENDLY_TEST_RESULT_UNSPECIFIED" "MOBILE_FRIENDLY" "NOT_MOBILE_FRIENDLY"]}, "mobileFriendlyIssues" {"type" "array", "items" {"$ref" "MobileFriendlyIssue"}, "description" "List of mobile-usability issues."}}}, "ResourceIssue" {"description" "Information about a resource with issue.", "id" "ResourceIssue", "type" "object", "properties" {"blockedResource" {"description" "Describes a blocked resource issue.", "$ref" "BlockedResource"}}}, "MobileFriendlyIssue" {"properties" {"rule" {"enumDescriptions" ["Unknown rule. Sorry, we don't have any description for the rule that was\nbroken." "Plugins incompatible with mobile devices are being used. [Learn more]\n(https://support.google.com/webmasters/answer/6352293#flash_usage)." "Viewsport is not specified using the meta viewport tag. [Learn more]\n(https://support.google.com/webmasters/answer/6352293#viewport_not_configured)." "Viewport defined to a fixed width. [Learn more]\n(https://support.google.com/webmasters/answer/6352293#fixed-width_viewport)." "Content not sized to viewport. [Learn more]\n(https://support.google.com/webmasters/answer/6352293#content_not_sized_to_viewport)." "Font size is too small for easy reading on a small screen. [Learn More]\n(https://support.google.com/webmasters/answer/6352293#small_font_size)." "Touch elements are too close to each other. [Learn more]\n(https://support.google.com/webmasters/answer/6352293#touch_elements_too_close)."], "type" "string", "enum" ["MOBILE_FRIENDLY_RULE_UNSPECIFIED" "USES_INCOMPATIBLE_PLUGINS" "CONFIGURE_VIEWPORT" "FIXED_WIDTH_VIEWPORT" "SIZE_CONTENT_TO_VIEWPORT" "USE_LEGIBLE_FONT_SIZES" "TAP_TARGETS_TOO_CLOSE"], "description" "Rule violated."}}, "id" "MobileFriendlyIssue", "type" "object", "description" "Mobile-friendly issue."}, "BlockedResource" {"type" "object", "id" "BlockedResource", "properties" {"url" {"description" "URL of the blocked resource.", "type" "string"}}, "description" "Blocked resource."}, "Image" {"properties" {"mimeType" {"type" "string", "description" "The mime-type of the image data."}, "data" {"type" "string", "format" "byte", "description" "Image data in format determined by the mime type. Currently, the format\nwill always be \"image/png\", but this might change in the future."}}, "type" "object", "id" "Image", "description" "Describe image data."}}}