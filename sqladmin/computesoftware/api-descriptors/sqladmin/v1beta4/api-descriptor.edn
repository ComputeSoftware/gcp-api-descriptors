#:compute.api-descriptor{:endpoint {:schemes ["https"], :host "sqladmin.googleapis.com", :base-path "/"}, :op->spec {"sql.sslCerts.insert" {:description "Creates an SSL certificate and returns it along with the private key and\nserver certificate authority.  The new certificate will not be usable until\nthe instance is restarted.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/SslCertsInsertResponse"}}}, :parameters [{:in "body", :name "body", :schema {"$ref" "#/definitions/SslCertsInsertRequest"}} {:description "Cloud SQL instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "The parent resource where Cloud SQL creates this SSL certificate.\nFormat: projects/{project}/locations/{location}/instances/{instance}", :in "query", :name "parent", :type "string"} {:description "Project ID of the project that contains the instance.", :in "path", :name "project", :required true, :type "string"}], :operationId "sql.sslCerts.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/sslCerts", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.instances.promoteReplica" {:description "Promotes the read replica instance to be a stand-alone Cloud SQL instance.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Operation"}}}, :parameters [{:description "Cloud SQL read replica instance name.", :in "path", :name "instance", :required true, :type "string"} {:description "The parent resource where Cloud SQL promotes this replica database\ninstance. Format: projects/{project}/locations/{location}", :in "query", :name "parent", :type "string"} {:description "ID of the project that contains the read replica.", :in "path", :name "project", :required true, :type "string"}], :operationId "sql.instances.promoteReplica", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/promoteReplica", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.users.insert" {:description "Creates a new user in a Cloud SQL instance.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Operation"}}}, :parameters [{:in "body", :name "body", :schema {"$ref" "#/definitions/User"}} {:description "Database instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "The parent resource where Cloud SQL creates this user.\nFormat: projects/{project}/locations/{location}/instances/{instance}", :in "query", :name "parent", :type "string"} {:description "Project ID of the project that contains the instance.", :in "path", :name "project", :required true, :type "string"}], :operationId "sql.users.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/users", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.backupRuns.insert" {:description "Creates a new backup run on demand. This method is applicable only to\nSecond Generation instances.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Operation"}}}, :parameters [{:in "body", :name "body", :schema {"$ref" "#/definitions/BackupRun"}} {:description "Cloud SQL instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "The parent resource where Cloud SQL should create this backupRun.\nFormat: projects/{project}/locations/{location}/instances/{instance}", :in "query", :name "parent", :type "string"} {:description "Project ID of the project that contains the instance.", :in "path", :name "project", :required true, :type "string"}], :operationId "sql.backupRuns.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/backupRuns", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.databases.list" {:description "Lists databases in the specified Cloud SQL instance.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/DatabasesListResponse"}}}, :parameters [{:description "Cloud SQL instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "The parent, which owns this collection of databases.\nFormat: projects/{project}/locations/{location}/instances/{instance}", :in "query", :name "parent", :type "string"} {:description "Project ID of the project that contains the instance.", :in "path", :name "project", :required true, :type "string"}], :operationId "sql.databases.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/databases", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.users.update" {:description "Updates an existing user in a Cloud SQL instance.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Operation"}}}, :parameters [{:in "body", :name "body", :schema {"$ref" "#/definitions/User"}} {:description "Host of the user in the instance. For a MySQL instance, it's required; For\na PostgreSQL instance, it's optional.", :in "query", :name "host", :type "string"} {:description "Database instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "Name of the user in the instance.", :in "query", :name "name", :type "string"} {:description "Project ID of the project that contains the instance.", :in "path", :name "project", :required true, :type "string"} {:description "The name of the user for Cloud SQL to update.\nFormat: projects/{project}/locations/{location}/instances/{instance}/users", :in "query", :name "resourceName", :type "string"}], :operationId "sql.users.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/users", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.instances.startReplica" {:description "Starts the replication in the read replica instance.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Operation"}}}, :parameters [{:description "Cloud SQL read replica instance name.", :in "path", :name "instance", :required true, :type "string"} {:description "The parent resource where Cloud SQL starts this database instance\nreplication. Format:\nprojects/{project}/locations/{location}/instances/{instance}", :in "query", :name "parent", :type "string"} {:description "ID of the project that contains the read replica.", :in "path", :name "project", :required true, :type "string"}], :operationId "sql.instances.startReplica", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/startReplica", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.instances.delete" {:description "Deletes a Cloud SQL instance.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Operation"}}}, :parameters [{:description "Cloud SQL instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "Project ID of the project that contains the instance to be deleted.", :in "path", :name "project", :required true, :type "string"} {:description "The name of database instance to delete.\nFormat: projects/{project}/locations/{location}/instances/{instance}", :in "query", :name "resourceName", :type "string"}], :operationId "sql.instances.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.sslCerts.list" {:description "Lists all of the current SSL certificates for the instance.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/SslCertsListResponse"}}}, :parameters [{:description "Cloud SQL instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "The parent, which owns this collection of SSL certificates.\nFormat: projects/{project}/locations/{location}/instances/{instance}", :in "query", :name "parent", :type "string"} {:description "Project ID of the project that contains the instance.", :in "path", :name "project", :required true, :type "string"}], :operationId "sql.sslCerts.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/sslCerts", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.databases.patch" {:description "Partially updates a resource containing information about a database inside\na Cloud SQL instance. This method supports patch semantics.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Operation"}}}, :parameters [{:in "body", :name "body", :schema {"$ref" "#/definitions/Database"}} {:description "Name of the database to be updated in the instance.", :in "path", :name "database", :required true, :type "string"} {:description "Database instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "Project ID of the project that contains the instance.", :in "path", :name "project", :required true, :type "string"} {:description "The name of the database for Cloud SQL to update.\nFormat:\nprojects/{project}/locations/{location}/instances/{instance}/databases/{database}", :in "query", :name "resourceName", :type "string"}], :operationId "sql.databases.patch", :compute.gcp.impl.descriptor/http-method :patch, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.instances.patch" {:description "Updates settings of a Cloud SQL instance.\nThis method supports patch semantics.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Operation"}}}, :parameters [{:in "body", :name "body", :schema {"$ref" "#/definitions/DatabaseInstance"}} {:description "Cloud SQL instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "Project ID of the project that contains the instance.", :in "path", :name "project", :required true, :type "string"} {:description "The name of the database instance for Cloud SQL to update.\nFormat: projects/{project}/locations/{location}/instances/{instance}", :in "query", :name "resourceName", :type "string"}], :operationId "sql.instances.patch", :compute.gcp.impl.descriptor/http-method :patch, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.instances.get" {:description "Retrieves a resource containing information about a Cloud SQL instance.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/DatabaseInstance"}}}, :parameters [{:description "Database instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "Project ID of the project that contains the instance.", :in "path", :name "project", :required true, :type "string"} {:description "Name of the resource database instance.\nFormat: projects/{project}/locations/{location}/instances/{instance}", :in "query", :name "resourceName", :type "string"}], :operationId "sql.instances.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.instances.export" {:description "Exports data from a Cloud SQL instance to a Cloud Storage bucket as a SQL\ndump or CSV file.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Operation"}}}, :parameters [{:in "body", :name "body", :schema {"$ref" "#/definitions/InstancesExportRequest"}} {:description "Cloud SQL instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "The parent resource where Cloud SQL exports this database instance.\nFormat: projects/{project}/locations/{location}/instances/{instance}", :in "query", :name "parent", :type "string"} {:description "Project ID of the project that contains the instance to be exported.", :in "path", :name "project", :required true, :type "string"}], :operationId "sql.instances.export", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/export", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.instances.restoreBackup" {:description "Restores a backup of a Cloud SQL instance.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Operation"}}}, :parameters [{:in "body", :name "body", :schema {"$ref" "#/definitions/InstancesRestoreBackupRequest"}} {:description "Cloud SQL instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "The parent resource where Cloud SQL restores this database instance from\nbackup. Format:\nprojects/{project}/locations/{location}/instances/{instance}", :in "query", :name "parent", :type "string"} {:description "Project ID of the project that contains the instance.", :in "path", :name "project", :required true, :type "string"}], :operationId "sql.instances.restoreBackup", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/restoreBackup", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.instances.addServerCa" {:description "Add a new trusted Certificate Authority (CA) version for the specified\ninstance. Required to prepare for a certificate rotation. If a CA version\nwas previously added but never used in a certificate rotation, this\noperation replaces that version. There cannot be more than one CA version\nwaiting to be rotated in.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Operation"}}}, :parameters [{:description "Cloud SQL instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "The parent resource where Cloud SQL should add this server CA.\nFormat: projects/{project}/locations/{location}/instances/{instance}", :in "query", :name "parent", :type "string"} {:description "Project ID of the project that contains the instance.", :in "path", :name "project", :required true, :type "string"}], :operationId "sql.instances.addServerCa", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/addServerCa", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.users.delete" {:description "Deletes a user from a Cloud SQL instance.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Operation"}}}, :parameters [{:description "Host of the user in the instance.", :in "query", :name "host", :type "string"} {:description "Database instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "Name of the user in the instance.", :in "query", :name "name", :type "string"} {:description "Project ID of the project that contains the instance.", :in "path", :name "project", :required true, :type "string"} {:description "The name of the user to delete.\nFormat: projects/{project}/locations/{location}/instances/{instance}/users", :in "query", :name "resourceName", :type "string"}], :operationId "sql.users.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/users", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.instances.import" {:description "Imports data into a Cloud SQL instance from a SQL dump  or CSV file in\nCloud Storage.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Operation"}}}, :parameters [{:in "body", :name "body", :schema {"$ref" "#/definitions/InstancesImportRequest"}} {:description "Cloud SQL instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "The parent resource where Cloud SQL imports this database instance.\nFormat: projects/{project}/locations/{location}/instances/{instance}", :in "query", :name "parent", :type "string"} {:description "Project ID of the project that contains the instance.", :in "path", :name "project", :required true, :type "string"}], :operationId "sql.instances.import", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/import", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.backupRuns.delete" {:description "Deletes the backup taken by a backup run.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Operation"}}}, :parameters [{:description "The ID of the Backup Run to delete. To find a Backup Run ID, use the <a\nhref=\"/sql/docs/db_path/admin-api/rest/v1beta4/backupRuns/list\">list</a>\nmethod.", :in "path", :name "id", :required true, :type "string"} {:description "Cloud SQL instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "Project ID of the project that contains the instance.", :in "path", :name "project", :required true, :type "string"} {:description "The name of the backupRun to delete.\nFormat:\nprojects/{project}/locations/{location}/instances/{instance}/backupRuns/{backupRun}", :in "query", :name "resourceName", :type "string"}], :operationId "sql.backupRuns.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/backupRuns/{id}", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.instances.listServerCas" {:description "Lists all of the trusted Certificate Authorities (CAs) for the specified\ninstance. There can be up to three CAs listed: the CA that was used to sign\nthe certificate that is currently in use, a CA that has been added but not\nyet used to sign a certificate, and a CA used to sign a certificate that\nhas previously rotated out.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/InstancesListServerCasResponse"}}}, :parameters [{:description "Cloud SQL instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "The parent, which owns this collection of server CAs.\nFormat: projects/{project}/locations/{location}/instances/{instance}", :in "query", :name "parent", :type "string"} {:description "Project ID of the project that contains the instance.", :in "path", :name "project", :required true, :type "string"}], :operationId "sql.instances.listServerCas", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/listServerCas", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.instances.truncateLog" {:description "Truncate MySQL general and slow query log tables", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Operation"}}}, :parameters [{:in "body", :name "body", :schema {"$ref" "#/definitions/InstancesTruncateLogRequest"}} {:description "Cloud SQL instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "The parent resource where Cloud SQL truncates this log.\nFormat: projects/{project}/locations/{location}/instances/{instance}", :in "query", :name "parent", :type "string"} {:description "Project ID of the Cloud SQL project.", :in "path", :name "project", :required true, :type "string"}], :operationId "sql.instances.truncateLog", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/truncateLog", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.instances.failover" {:description "Failover the instance to its failover replica instance.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Operation"}}}, :parameters [{:in "body", :name "body", :schema {"$ref" "#/definitions/InstancesFailoverRequest"}} {:description "Cloud SQL instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "The parent resource where Cloud SQL sends this database instance during a\nfailover. Format:\nprojects/{project}/locations/{location}/instances/{instance}", :in "query", :name "parent", :type "string"} {:description "ID of the project that contains the read replica.", :in "path", :name "project", :required true, :type "string"}], :operationId "sql.instances.failover", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/failover", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.sslCerts.createEphemeral" {:description "Generates a short-lived X509 certificate containing the provided public key\nand signed by a private key specific to the target instance. Users may use\nthe certificate to authenticate as themselves when connecting to the\ndatabase.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/SslCert"}}}, :parameters [{:in "body", :name "body", :schema {"$ref" "#/definitions/SslCertsCreateEphemeralRequest"}} {:description "Cloud SQL instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "The parent resource where Cloud SQL creates this ephemeral certificate.\nFormat: projects/{project}/locations/{location}/instances/{instance}", :in "query", :name "parent", :type "string"} {:description "Project ID of the Cloud SQL project.", :in "path", :name "project", :required true, :type "string"}], :operationId "sql.sslCerts.createEphemeral", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/createEphemeral", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.tiers.list" {:description "Lists all available machine types (tiers) for Cloud SQL, for example,\ndb-n1-standard-1. For related information, see <a\nhref=\"/sql/pricing\">Pricing</a>.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/TiersListResponse"}}}, :parameters [{:description "Project ID of the project for which to list tiers.", :in "path", :name "project", :required true, :type "string"}], :operationId "sql.tiers.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/tiers", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.operations.list" {:description "Lists all instance operations that have been performed on the given Cloud\nSQL instance in the reverse chronological order of the start time.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/OperationsListResponse"}}}, :parameters [{:description "Cloud SQL instance ID. This does not include the project ID.", :in "query", :name "instance", :type "string"} {:description "Maximum number of operations per response.", :in "query", :name "maxResults", :type "integer"} {:description "A previously-returned page token representing part of the larger set of\nresults to view.", :in "query", :name "pageToken", :type "string"} {:description "Indirect parent. The direct parent should combine with the instance name,\nwhich owns this collection of operations.\nFormat:\nprojects/{project}/locations/{location}", :in "query", :name "parent", :type "string"} {:description "Project ID of the project that contains the instance.", :in "path", :name "project", :required true, :type "string"}], :operationId "sql.operations.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/operations", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.backupRuns.list" {:description "Lists all backup runs associated with a given instance and configuration in\nthe reverse chronological order of the backup initiation time.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/BackupRunsListResponse"}}}, :parameters [{:description "Cloud SQL instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "Maximum number of backup runs per response.", :in "query", :name "maxResults", :type "integer"} {:description "A previously-returned page token representing part of the larger set of\nresults to view.", :in "query", :name "pageToken", :type "string"} {:description "The parent, which owns this collection of backupRuns.\nFormat: projects/{project}/locations/{location}/instances/{instance}", :in "query", :name "parent", :type "string"} {:description "Project ID of the project that contains the instance.", :in "path", :name "project", :required true, :type "string"}], :operationId "sql.backupRuns.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/backupRuns", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.flags.list" {:description "List all available database flags for Cloud SQL instances.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/FlagsListResponse"}}}, :parameters [{:description "Database type and version you want to retrieve flags for. By default, this\nmethod returns flags for all database types and versions.", :in "query", :name "databaseVersion", :type "string"}], :operationId "sql.flags.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/flags", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.instances.list" {:description "Lists instances under a given project in the alphabetical order of the\ninstance name.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/InstancesListResponse"}}}, :parameters [{:description "An expression for filtering the results of the request, such as by name or\nlabel.", :in "query", :name "filter", :type "string"} {:description "The maximum number of results to return per response.", :in "query", :name "maxResults", :type "integer"} {:description "A previously-returned page token representing part of the larger set of\nresults to view.", :in "query", :name "pageToken", :type "string"} {:description "Project ID of the project for which to list Cloud SQL instances.", :in "path", :name "project", :required true, :type "string"}], :operationId "sql.instances.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.operations.get" {:description "Retrieves an instance operation that has been performed on an instance.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Operation"}}}, :parameters [{:description "Instance operation ID.", :in "path", :name "operation", :required true, :type "string"} {:description "Project ID of the project that contains the instance.", :in "path", :name "project", :required true, :type "string"}], :operationId "sql.operations.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/operations/{operation}", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.databases.insert" {:description "Inserts a resource containing information about a database inside a Cloud\nSQL instance.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Operation"}}}, :parameters [{:in "body", :name "body", :schema {"$ref" "#/definitions/Database"}} {:description "Database instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "The parent resource where Cloud SQL should add this database.\nFormat: projects/{project}/locations/{location}/instances/{instance}", :in "query", :name "parent", :type "string"} {:description "Project ID of the project that contains the instance.", :in "path", :name "project", :required true, :type "string"}], :operationId "sql.databases.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/databases", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.instances.clone" {:description "Creates a Cloud SQL instance as a clone of the source instance.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Operation"}}}, :parameters [{:in "body", :name "body", :schema {"$ref" "#/definitions/InstancesCloneRequest"}} {:description "The ID of the Cloud SQL instance to be cloned (source). This does not\ninclude the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "The parent resource where Cloud SQL should clone this instance.\nFormat: projects/{project}/locations/{location}/instances/{instance}", :in "query", :name "parent", :type "string"} {:description "Project ID of the source as well as the clone Cloud SQL instance.", :in "path", :name "project", :required true, :type "string"}], :operationId "sql.instances.clone", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/clone", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.instances.insert" {:description "Creates a new Cloud SQL instance.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Operation"}}}, :parameters [{:in "body", :name "body", :schema {"$ref" "#/definitions/DatabaseInstance"}} {:description "The parent resource where Cloud SQL creates this database instance.\nFormat: projects/{project}/locations/{location}", :in "query", :name "parent", :type "string"} {:description "Project ID of the project to which the newly created Cloud SQL instances\nshould belong.", :in "path", :name "project", :required true, :type "string"}], :operationId "sql.instances.insert", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.instances.demoteMaster" {:description "Demotes the stand-alone instance to be a Cloud SQL read replica for an\nexternal database server.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Operation"}}}, :parameters [{:in "body", :name "body", :schema {"$ref" "#/definitions/InstancesDemoteMasterRequest"}} {:description "Cloud SQL instance name.", :in "path", :name "instance", :required true, :type "string"} {:description "The parent resource where Cloud SQL demotes this master database instance.\nFormat: projects/{project}/locations/{location}/instances/{instance}", :in "query", :name "parent", :type "string"} {:description "ID of the project that contains the instance.", :in "path", :name "project", :required true, :type "string"}], :operationId "sql.instances.demoteMaster", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/demoteMaster", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.instances.update" {:description "Updates settings of a Cloud SQL instance. <aside\nclass=\"caution\"><strong>Caution:</strong> This is not a partial update, so\nyou must include values for all the settings that you want to retain. For\npartial updates, use <a\nhref=\"/sql/docs/db_path/admin-api/rest/v1beta4/instances/patch\">patch</a>.</aside>", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Operation"}}}, :parameters [{:in "body", :name "body", :schema {"$ref" "#/definitions/DatabaseInstance"}} {:description "Cloud SQL instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "Project ID of the project that contains the instance.", :in "path", :name "project", :required true, :type "string"} {:description "The name of the database instance for Cloud SQL to update.\nFormat: projects/{project}/locations/{location}/instances/{instance}", :in "query", :name "resourceName", :type "string"}], :operationId "sql.instances.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.sslCerts.delete" {:description "Deletes the SSL certificate. For First Generation instances, the\ncertificate remains valid until the instance is restarted.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Operation"}}}, :parameters [{:description "Cloud SQL instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "Project ID of the project that contains the instance.", :in "path", :name "project", :required true, :type "string"} {:description "The name of SSL certificate to delete.\nFormat:\nprojects/{project}/locations/{location}/instances/{instance}/sslCerts/{sslCert}", :in "query", :name "resourceName", :type "string"} {:description "Sha1 FingerPrint.", :in "path", :name "sha1Fingerprint", :required true, :type "string"}], :operationId "sql.sslCerts.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.instances.resetSslConfig" {:description "Deletes all client certificates and generates a new server SSL certificate\nfor the instance.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Operation"}}}, :parameters [{:description "Cloud SQL instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "The parent resource where Cloud SQL resets this SSL config.\nFormat: projects/{project}/locations/{location}/instances/{instance}", :in "query", :name "parent", :type "string"} {:description "Project ID of the project that contains the instance.", :in "path", :name "project", :required true, :type "string"}], :operationId "sql.instances.resetSslConfig", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/resetSslConfig", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.instances.rotateServerCa" {:description "Rotates the server certificate to one signed by the Certificate Authority\n(CA) version previously added with the addServerCA method.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Operation"}}}, :parameters [{:in "body", :name "body", :schema {"$ref" "#/definitions/InstancesRotateServerCaRequest"}} {:description "Cloud SQL instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "The parent resource where Cloud SQL rotates these server CAs.\nFormat: projects/{project}/locations/{location}/instances/{instance}", :in "query", :name "parent", :type "string"} {:description "Project ID of the project that contains the instance.", :in "path", :name "project", :required true, :type "string"}], :operationId "sql.instances.rotateServerCa", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/rotateServerCa", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.backupRuns.get" {:description "Retrieves a resource containing information about a backup run.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/BackupRun"}}}, :parameters [{:description "The ID of this Backup Run.", :in "path", :name "id", :required true, :type "string"} {:description "Cloud SQL instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "Project ID of the project that contains the instance.", :in "path", :name "project", :required true, :type "string"} {:description "Name of the resource backupRun.\nFormat:\nprojects/{project}/locations/{location}/instances/{instance}/backupRuns/{backupRun}", :in "query", :name "resourceName", :type "string"}], :operationId "sql.backupRuns.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/backupRuns/{id}", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.instances.stopReplica" {:description "Stops the replication in the read replica instance.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Operation"}}}, :parameters [{:description "Cloud SQL read replica instance name.", :in "path", :name "instance", :required true, :type "string"} {:description "The parent resource where Cloud SQL stops this database instance\nreplication. Format:\nprojects/{project}/locations/{location}/instances/{instance}", :in "query", :name "parent", :type "string"} {:description "ID of the project that contains the read replica.", :in "path", :name "project", :required true, :type "string"}], :operationId "sql.instances.stopReplica", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/stopReplica", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.instances.restart" {:description "Restarts a Cloud SQL instance.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Operation"}}}, :parameters [{:description "Cloud SQL instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "The parent resource where Cloud SQL restarts this database instance.\nFormat: projects/{project}/locations/{location}/instances/{instance}", :in "query", :name "parent", :type "string"} {:description "Project ID of the project that contains the instance to be restarted.", :in "path", :name "project", :required true, :type "string"}], :operationId "sql.instances.restart", :compute.gcp.impl.descriptor/http-method :post, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/restart", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.databases.get" {:description "Retrieves a resource containing information about a database inside a Cloud\nSQL instance.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Database"}}}, :parameters [{:description "Name of the database in the instance.", :in "path", :name "database", :required true, :type "string"} {:description "Database instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "Project ID of the project that contains the instance.", :in "path", :name "project", :required true, :type "string"} {:description "Name of the resource database.\nFormat:\nprojects/{project}/locations/{location}/instances/{instance}/databases/{database}", :in "query", :name "resourceName", :type "string"}], :operationId "sql.databases.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.databases.delete" {:description "Deletes a database from a Cloud SQL instance.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Operation"}}}, :parameters [{:description "Name of the database to be deleted in the instance.", :in "path", :name "database", :required true, :type "string"} {:description "Database instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "Project ID of the project that contains the instance.", :in "path", :name "project", :required true, :type "string"} {:description "The name of the database to delete.\nFormat:\nprojects/{project}/locations/{location}/instances/{instance}/databases/{database}", :in "query", :name "resourceName", :type "string"}], :operationId "sql.databases.delete", :compute.gcp.impl.descriptor/http-method :delete, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.users.list" {:description "Lists users in the specified Cloud SQL instance.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/UsersListResponse"}}}, :parameters [{:description "Database instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "The parent, which owns this collection of users.\nFormat: projects/{project}/locations/{location}/instances/{instance}", :in "query", :name "parent", :type "string"} {:description "Project ID of the project that contains the instance.", :in "path", :name "project", :required true, :type "string"}], :operationId "sql.users.list", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/users", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.databases.update" {:description "Updates a resource containing information about a database inside a Cloud\nSQL instance.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/Operation"}}}, :parameters [{:in "body", :name "body", :schema {"$ref" "#/definitions/Database"}} {:description "Name of the database to be updated in the instance.", :in "path", :name "database", :required true, :type "string"} {:description "Database instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "Project ID of the project that contains the instance.", :in "path", :name "project", :required true, :type "string"} {:description "The name of the database for Cloud SQL to update.\nFormat:\nprojects/{project}/locations/{location}/instances/{instance}/databases/{database}", :in "query", :name "resourceName", :type "string"}], :operationId "sql.databases.update", :compute.gcp.impl.descriptor/http-method :put, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}, "sql.sslCerts.get" {:description "Retrieves a particular SSL certificate.  Does not include the private key\n(required for usage).  The private key must be saved from the response to\ninitial creation.", :responses {"200" {:description "Successful response", :schema {"$ref" "#/definitions/SslCert"}}}, :parameters [{:description "Cloud SQL instance ID. This does not include the project ID.", :in "path", :name "instance", :required true, :type "string"} {:description "Project ID of the project that contains the instance.", :in "path", :name "project", :required true, :type "string"} {:description "Name of the resource ssl certificate.\nFormat:\nprojects/{project}/locations/{location}/instances/{instance}/sslCerts/{sslCert}", :in "query", :name "resourceName", :type "string"} {:description "Sha1 FingerPrint.", :in "path", :name "sha1Fingerprint", :required true, :type "string"}], :operationId "sql.sslCerts.get", :compute.gcp.impl.descriptor/http-method :get, :compute.gcp.impl.descriptor/http-path "/sql/v1beta4/projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}", :compute.gcp.impl.descriptor/path-parameters [{"$ref" "#/parameters/$.xgafv"} {"$ref" "#/parameters/access_token"} {"$ref" "#/parameters/alt"} {"$ref" "#/parameters/callback"} {"$ref" "#/parameters/fields"} {"$ref" "#/parameters/key"} {"$ref" "#/parameters/oauth_token"} {"$ref" "#/parameters/prettyPrint"} {"$ref" "#/parameters/quotaUser"} {"$ref" "#/parameters/uploadType"} {"$ref" "#/parameters/upload_protocol"}]}}, :parameters {:quotaUser {:description "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.", :in "query", :name "quotaUser", :type "string"}, :key {:description "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.", :in "query", :name "key", :type "string"}, :alt {:default "json", :description "Data format for response.", :enum ["json" "media" "proto"], :in "query", :name "alt", :type "string"}, :access_token {:description "OAuth access token.", :in "query", :name "access_token", :type "string"}, :fields {:description "Selector specifying which fields to include in a partial response.", :in "query", :name "fields", :type "string"}, :upload_protocol {:description "Upload protocol for media (e.g. \"raw\", \"multipart\").", :in "query", :name "upload_protocol", :type "string"}, :uploadType {:description "Legacy upload protocol for media (e.g. \"media\", \"multipart\").", :in "query", :name "uploadType", :type "string"}, :oauth_token {:description "OAuth 2.0 token for the current user.", :in "query", :name "oauth_token", :type "string"}, :prettyPrint {:default true, :description "Returns response with indentations and line breaks.", :in "query", :name "prettyPrint", :type "boolean"}, "$.xgafv" {:description "V1 error format.", :enum ["1" "2"], :in "query", :name "$.xgafv", :type "string"}, :callback {:description "JSONP", :in "query", :name "callback", :type "string"}}, :definitions {:DatabaseInstance {:description "A Cloud SQL instance resource.\nIf you change this, also change SqlDatabaseInstance", :properties {:onPremisesConfiguration {"$ref" "#/definitions/OnPremisesConfiguration", :description "Configuration specific to on-premises instances."}, :diskEncryptionConfiguration {"$ref" "#/definitions/DiskEncryptionConfiguration", :description "Disk encryption configuration specific to an instance.\nApplies only to Second Generation instances."}, :databaseVersion {:description "The database engine type and version. The <code>databaseVersion</code>\nfield can not be changed after instance creation.  MySQL Second Generation\ninstances: <code>MYSQL_5_7</code> (default) or <code>MYSQL_5_6</code>.\nPostgreSQL instances: <code>POSTGRES_9_6</code> (default) or\n<code>POSTGRES_11 Beta</code> MySQL First Generation\ninstances: <code>MYSQL_5_6</code> (default) or <code>MYSQL_5_5</code>", :enum ["SQL_DATABASE_VERSION_UNSPECIFIED" "OBSOLETE_MYSQL_5_0" "MYSQL_5_1" "MYSQL_5_5" "MARIADB_10_0" "MYSQL_5_6" "MYSQL_5_7" "OBSOLETE_POSTGRES_9_5" "SQLSERVER_ENTERPRISE_2016" "POSTGRES_9_6" "POSTGRES_11" "SQLSERVER_2017_STANDARD" "SQLSERVER_2017_ENTERPRISE" "SQLSERVER_2017_EXPRESS" "SQLSERVER_2017_WEB"], :type "string"}, :maxDiskSize {:description "The maximum disk size of the instance in bytes.", :format "int64", :type "string"}, :instanceType {:description "The instance type. This can be one of the following.\n<br><code>CLOUD_SQL_INSTANCE</code>: A Cloud SQL instance that is not\nreplicating from a master. <br><code>ON_PREMISES_INSTANCE</code>: An\ninstance running on the\ncustomer's premises. <br><code>READ_REPLICA_INSTANCE</code>: A Cloud SQL\ninstance configured as a read-replica.", :enum ["SQL_INSTANCE_TYPE_UNSPECIFIED" "CLOUD_SQL_INSTANCE" "ON_PREMISES_INSTANCE" "READ_REPLICA_INSTANCE"], :type "string"}, :rootPassword {:description "Initial root password. Use only on creation.", :type "string"}, :currentDiskSize {:description "The current disk usage of the instance in bytes. This property has been\ndeprecated. Users should use the\n\"cloudsql.googleapis.com/database/disk/bytes_used\" metric in Cloud\nMonitoring API instead. Please see <a\nhref=\"https://groups.google.com/d/msg/google-cloud-sql-announce/I_7-F9EBhT0/BtvFtdFeAgAJ\">this\nannouncement</a> for details.", :format "int64", :type "string"}, :gceZone {:description "The Compute Engine zone that the instance is currently serving from. This\nvalue could be different from the zone that was specified when the instance\nwas created if the instance has failed over to its secondary zone.", :type "string"}, :name {:description "Name of the Cloud SQL instance. This does not include the project ID.", :type "string"}, :masterInstanceName {:description "The name of the instance which will act as master in the replication setup.", :type "string"}, :settings {"$ref" "#/definitions/Settings", :description "The user settings."}, :selfLink {:description "The URI of this resource.", :type "string"}, :etag {:description "This field is deprecated and will be removed from a future version of the\nAPI. Use the <code>settings.settingsVersion</code> field instead.", :type "string"}, :ipAddresses {:description "The assigned IP addresses for the instance.", :items {"$ref" "#/definitions/IpMapping"}, :type "array"}, :state {:description "The current serving state of the Cloud SQL instance. This can be one of the\nfollowing. <br><code>RUNNABLE</code>: The instance is running, or is ready\nto run when accessed. <br><code>SUSPENDED</code>: The instance is not\navailable, for example due to problems with billing.\n<br><code>PENDING_CREATE</code>: The instance is being created.\n<br><code>MAINTENANCE</code>: The instance is down for maintenance.\n<br><code>FAILED</code>: The instance creation failed.\n<br><code>UNKNOWN_STATE</code>: The state of the instance is unknown.", :enum ["SQL_INSTANCE_STATE_UNSPECIFIED" "RUNNABLE" "SUSPENDED" "PENDING_DELETE" "PENDING_CREATE" "MAINTENANCE" "FAILED"], :type "string"}, :ipv6Address {:description "The IPv6 address assigned to the instance. This property is applicable only\nto First Generation instances.", :type "string"}, :region {:description "The geographical region. Can be <code>us-central</code>\n(<code>FIRST_GEN</code> instances only), <code>us-central1</code>\n(<code>SECOND_GEN</code> instances only), <code>asia-east1</code> or\n<code>europe-west1</code>. Defaults to <code>us-central</code> or\n<code>us-central1</code> depending on the instance type (First Generation\nor Second Generation). The region can not be changed after instance\ncreation.", :type "string"}, :diskEncryptionStatus {"$ref" "#/definitions/DiskEncryptionStatus", :description "Disk encryption status specific to an instance.\nApplies only to Second Generation instances."}, :replicaNames {:description "The replicas of the instance.", :items {:type "string"}, :type "array"}, :failoverReplica {:description "The name and status of the failover replica. This property is applicable\nonly to Second Generation instances.", :properties {:available {:description "The availability status of the failover replica. A false status indicates\nthat the failover replica is out of sync. The master can only failover to\nthe failover replica when the status is true.", :type "boolean"}, :name {:description "The name of the failover replica. If specified at instance creation, a\nfailover replica is created for the instance. The name\ndoesn't include the project ID. This property is applicable only to\nSecond Generation instances.", :type "string"}}, :type "object"}, :project {:description "The project ID of the project containing the Cloud SQL instance. The Google\napps domain is prefixed if applicable.", :type "string"}, :kind {:description "This is always <code>sql#instance</code>.", :type "string"}, :backendType {:description "<code>FIRST_GEN</code>: First Generation instance. MySQL only. <br\n/><code>SECOND_GEN</code>: Second Generation instance or PostgreSQL\ninstance. <br /><code>EXTERNAL</code>: A database server that is not\nmanaged by Google. <br>This property is read-only; use the\n<code>tier</code> property in the <code>settings</code> object to determine\nthe database type and Second or First Generation.", :enum ["SQL_BACKEND_TYPE_UNSPECIFIED" "FIRST_GEN" "SECOND_GEN" "EXTERNAL"], :type "string"}, :serviceAccountEmailAddress {:description "The service account email address assigned to the instance. This property\nis applicable only to Second Generation instances.", :type "string"}, :scheduledMaintenance {"$ref" "#/definitions/SqlScheduledMaintenance", :description "The start time of any upcoming scheduled maintenance for this instance."}, :replicaConfiguration {"$ref" "#/definitions/ReplicaConfiguration", :description "Configuration specific to failover replicas and read replicas."}, :serverCaCert {"$ref" "#/definitions/SslCert", :description "SSL configuration."}, :connectionName {:description "Connection name of the Cloud SQL instance used in connection strings.", :type "string"}, :suspensionReason {:description "If the instance state is SUSPENDED, the reason for the suspension.", :items {:enum ["SQL_SUSPENSION_REASON_UNSPECIFIED" "BILLING_ISSUE" "LEGAL_ISSUE" "OPERATIONAL_ISSUE" "KMS_KEY_ISSUE"], :type "string"}, :type "array"}}, :type "object"}, :InstancesExportRequest {:description "Database instance export request.", :properties {:exportContext {"$ref" "#/definitions/ExportContext", :description "Contains details about the export operation."}}, :type "object"}, :TiersListResponse {:description "Tiers list response.", :properties {:items {:description "List of tiers.", :items {"$ref" "#/definitions/Tier"}, :type "array"}, :kind {:description "This is always <code>sql#tiersList</code>.", :type "string"}}, :type "object"}, :AclEntry {:description "An entry for an Access Control list.", :properties {:expirationTime {:description "The time when this access control entry expires in <a\nhref=\"https://tools.ietf.org/html/rfc3339\">RFC 3339</a> format, for example\n<code>2012-11-15T16:19:00.094Z</code>.", :format "google-datetime", :type "string"}, :kind {:description "This is always <code>sql#aclEntry</code>.", :type "string"}, :name {:description "An optional label to identify this entry.", :type "string"}, :value {:description "The whitelisted value for the access control list.", :type "string"}}, :type "object"}, :MaintenanceWindow {:description "Maintenance window. This specifies when a v2 Cloud SQL instance should\npreferably be restarted for system maintenance purposes.", :properties {:day {:description "day of week (1-7), starting on Monday.", :format "int32", :type "integer"}, :hour {:description "hour of day - 0 to 23.", :format "int32", :type "integer"}, :kind {:description "This is always <code>sql#maintenanceWindow</code>.", :type "string"}, :updateTrack {:description "Maintenance timing setting: <code>canary</code> (Earlier) or\n<code>stable</code> (Later). <br /><a\nhref=\"/sql/docs/db_path/instance-settings#maintenance-timing-2ndgen\">\nLearn more</a>.", :enum ["SQL_UPDATE_TRACK_UNSPECIFIED" "canary" "stable"], :type "string"}}, :type "object"}, :IpConfiguration {:description "IP Management configuration.", :properties {:authorizedNetworks {:description "The list of external networks that are allowed to connect to the instance\nusing the IP. In <a\nhref=\"http://en.wikipedia.org/wiki/CIDR_notation#CIDR_notation\">CIDR\nnotation</a>, also known as 'slash' notation (e.g.\n<code>192.168.100.0/24</code>).", :items {"$ref" "#/definitions/AclEntry"}, :type "array"}, :ipv4Enabled {:description "Whether the instance should be assigned an IP address or not.", :type "boolean"}, :privateNetwork {:description "The resource link for the VPC network from which the Cloud SQL instance is\naccessible for private IP. For example,\n<code>/projects/myProject/global/networks/default</code>. This setting can\nbe updated, but it cannot be removed after it is set.", :type "string"}, :requireSsl {:description "Whether SSL connections over IP should be enforced or not.", :type "boolean"}}, :type "object"}, :OperationError {:description "Database instance operation error.", :properties {:code {:description "Identifies the specific error that occurred.", :type "string"}, :kind {:description "This is always <code>sql#operationError</code>.", :type "string"}, :message {:description "Additional information about the error encountered.", :type "string"}}, :type "object"}, :DemoteMasterConfiguration {:description "Read-replica configuration for connecting to the on-premises master.", :properties {:kind {:description "This is always <code>sql#demoteMasterConfiguration</code>.", :type "string"}, :mysqlReplicaConfiguration {"$ref" "#/definitions/DemoteMasterMySqlReplicaConfiguration", :description "MySQL specific configuration when replicating from a MySQL on-premises\nmaster. Replication configuration information such as the username,\npassword, certificates, and keys are not stored in the instance metadata.\nThe configuration information is used only to set up the replication\nconnection and is stored by MySQL in a file named <code>master.info</code>\nin the data directory."}}, :type "object"}, :ApiWarning {:description "An Admin API warning message.", :properties {:code {:description "Code to uniquely identify the warning type.", :enum ["SQL_API_WARNING_CODE_UNSPECIFIED" "REGION_UNREACHABLE"], :type "string"}, :message {:description "The warning message.", :type "string"}}, :type "object"}, :DiskEncryptionConfiguration {:description "Disk encryption configuration for an instance.", :properties {:kind {:description "This is always <code>sql#diskEncryptionConfiguration</code>.", :type "string"}, :kmsKeyName {:description "Resource name of KMS key for disk encryption", :type "string"}}, :type "object"}, :ReplicaConfiguration {:description "Read-replica configuration for connecting to the master.", :properties {:failoverTarget {:description "Specifies if the replica is the failover target. If the field is set to\n<code>true</code> the replica will be designated as a failover replica. In\ncase the master instance fails, the replica instance will be promoted as\nthe new master instance.  <p>Only one replica can be specified as failover\ntarget, and the replica has to be in different zone with the master\ninstance.", :type "boolean"}, :kind {:description "This is always <code>sql#replicaConfiguration</code>.", :type "string"}, :mysqlReplicaConfiguration {"$ref" "#/definitions/MySqlReplicaConfiguration", :description "MySQL specific configuration when replicating from a MySQL on-premises\nmaster. Replication configuration information such as the username,\npassword, certificates, and keys are not stored in the instance metadata.\nThe configuration information is used only to set up the replication\nconnection and is stored by MySQL in a file named <code>master.info</code>\nin the data directory."}}, :type "object"}, :OperationsListResponse {:description "Database instance list operations response.", :properties {:items {:description "List of operation resources.", :items {"$ref" "#/definitions/Operation"}, :type "array"}, :kind {:description "This is always <code>sql#operationsList</code>.", :type "string"}, :nextPageToken {:description "The continuation token, used to page through large result sets. Provide\nthis value in a subsequent request to return the next page of results.", :type "string"}}, :type "object"}, :DatabaseFlags {:description "Database flags for Cloud SQL instances.", :properties {:name {:description "The name of the flag. These flags are passed at instance startup, so\ninclude both server options and system variables for MySQL. Flags should be\nspecified with underscores, not hyphens. For more information, see <a\nhref=\"/sql/docs/mysql/flags\">Configuring Database Flags</a> in the Cloud\nSQL documentation.", :type "string"}, :value {:description "The value of the flag. Booleans should be set to <code>on</code> for true\nand <code>off</code> for false. This field must be omitted if the flag\ndoesn't take a value.", :type "string"}}, :type "object"}, :InstancesRestoreBackupRequest {:description "Database instance restore backup request.", :properties {:restoreBackupContext {"$ref" "#/definitions/RestoreBackupContext", :description "Parameters required to perform the restore backup operation."}}, :type "object"}, :Operation {:description "An Operation resource.&nbsp;For successful operations that return an\nOperation resource, only the fields relevant to the operation are populated\nin the resource.", :properties {:startTime {:description "The time this operation actually started in UTC timezone in <a\nhref=\"https://tools.ietf.org/html/rfc3339\">RFC 3339</a> format, for example\n<code>2012-11-15T16:19:00.094Z</code>.", :format "google-datetime", :type "string"}, :name {:description "An identifier that uniquely identifies the operation. You can use this\nidentifier to retrieve the Operations resource that has information about\nthe operation.", :type "string"}, :targetId {:description "Name of the database instance related to this operation.", :type "string"}, :endTime {:description "The time this operation finished in UTC timezone in <a\nhref=\"https://tools.ietf.org/html/rfc3339\">RFC 3339</a> format, for example\n<code>2012-11-15T16:19:00.094Z</code>.", :format "google-datetime", :type "string"}, :selfLink {:description "The URI of this resource.", :type "string"}, :targetProject {:description "The project ID of the target instance related to this operation.", :type "string"}, :status {:description "The status of an operation. Valid values are <code>PENDING</code>,\n<code>RUNNING</code>, <code>DONE</code>, <code>UNKNOWN</code>.", :enum ["SQL_OPERATION_STATUS_UNSPECIFIED" "PENDING" "RUNNING" "DONE"], :type "string"}, :targetLink {:type "string"}, :insertTime {:description "The time this operation was enqueued in UTC timezone in <a\nhref=\"https://tools.ietf.org/html/rfc3339\">RFC 3339</a> format, for example\n<code>2012-11-15T16:19:00.094Z</code>.", :format "google-datetime", :type "string"}, :kind {:description "This is always <code>sql#operation</code>.", :type "string"}, :exportContext {"$ref" "#/definitions/ExportContext", :description "The context for export operation, if applicable."}, :error {"$ref" "#/definitions/OperationErrors", :description "If errors occurred during processing of this operation, this field will be\npopulated."}, :user {:description "The email address of the user who initiated this operation.", :type "string"}, :operationType {:description "The type of the operation. Valid values are <code>CREATE</code>,\n<code>DELETE</code>, <code>UPDATE</code>, <code>RESTART</code>,\n<code>IMPORT</code>, <code>EXPORT</code>, <code>BACKUP_VOLUME</code>,\n<code>RESTORE_VOLUME</code>, <code>CREATE_USER</code>,\n<code>DELETE_USER</code>, <code>CREATE_DATABASE</code>,\n<code>DELETE_DATABASE</code> .", :enum ["SQL_OPERATION_TYPE_UNSPECIFIED" "IMPORT" "EXPORT" "CREATE" "UPDATE" "DELETE" "RESTART" "BACKUP" "SNAPSHOT" "BACKUP_VOLUME" "DELETE_VOLUME" "RESTORE_VOLUME" "INJECT_USER" "CLONE" "STOP_REPLICA" "START_REPLICA" "PROMOTE_REPLICA" "CREATE_REPLICA" "CREATE_USER" "DELETE_USER" "UPDATE_USER" "CREATE_DATABASE" "DELETE_DATABASE" "UPDATE_DATABASE" "FAILOVER" "DELETE_BACKUP" "RECREATE_REPLICA" "TRUNCATE_LOG" "DEMOTE_MASTER" "MAINTENANCE" "ENABLE_PRIVATE_IP" "DEFER_MAINTENANCE" "CREATE_CLONE"], :type "string"}, :importContext {"$ref" "#/definitions/ImportContext", :description "The context for import operation, if applicable."}}, :type "object"}, :DatabasesListResponse {:description "Database list response.", :properties {:items {:description "List of database resources in the instance.", :items {"$ref" "#/definitions/Database"}, :type "array"}, :kind {:description "This is always <code>sql#databasesList</code>.", :type "string"}}, :type "object"}, :BackupRunsListResponse {:description "Backup run list results.", :properties {:items {:description "A list of backup runs in reverse chronological order of the enqueued time.", :items {"$ref" "#/definitions/BackupRun"}, :type "array"}, :kind {:description "This is always <code>sql#backupRunsList</code>.", :type "string"}, :nextPageToken {:description "The continuation token, used to page through large result sets. Provide\nthis value in a subsequent request to return the next page of results.", :type "string"}}, :type "object"}, :RestoreBackupContext {:description "Database instance restore from backup context.\nBackup context contains source instance id and project id.", :properties {:backupRunId {:description "The ID of the backup run to restore from.", :format "int64", :type "string"}, :instanceId {:description "The ID of the instance that the backup was taken from.", :type "string"}, :kind {:description "This is always <code>sql#restoreBackupContext</code>.", :type "string"}, :project {:description "The full project ID of the source instance.", :type "string"}}, :type "object"}, :InstancesListResponse {:description "Database instances list response.", :properties {:items {:description "List of database instance resources.", :items {"$ref" "#/definitions/DatabaseInstance"}, :type "array"}, :kind {:description "This is always <code>sql#instancesList</code>.", :type "string"}, :nextPageToken {:description "The continuation token, used to page through large result sets. Provide\nthis value in a subsequent request to return the next page of results.", :type "string"}, :warnings {:description "List of warnings that ocurred while handling the request.", :items {"$ref" "#/definitions/ApiWarning"}, :type "array"}}, :type "object"}, :CloneContext {:description "Database instance clone context.", :properties {:binLogCoordinates {"$ref" "#/definitions/BinLogCoordinates", :description "Binary log coordinates, if specified, identify the position up to which the\nsource instance should be cloned. If not specified, the source instance is\ncloned up to the most recent binary log coordinates."}, :destinationInstanceName {:description "Name of the Cloud SQL instance to be created as a clone.", :type "string"}, :kind {:description "This is always <code>sql#cloneContext</code>.", :type "string"}, :pitrTimestampMs {:description "Reserved for future use.", :format "int64", :type "string"}}, :type "object"}, :ExportContext {:description "Database instance export context.", :properties {:csvExportOptions {:description "Options for exporting data as CSV.", :properties {:selectQuery {:description "The select query used to extract the data.", :type "string"}}, :type "object"}, :databases {:description "Databases to be exported. <br /> <b>MySQL instances:</b> If\n<code>fileType</code> is <code>SQL</code> and no database is specified, all\ndatabases are exported, except for the <code>mysql</code> system database.\nIf <code>fileType</code> is <code>CSV</code>, you can specify one database,\neither by using this property or by using the\n<code>csvExportOptions.selectQuery</code> property, which takes precedence\nover this property. <br /> <b>PostgreSQL instances:</b> You must specify\none database to be exported. If <code>fileType</code> is <code>CSV</code>,\nthis database must match the one specified in the\n<code>csvExportOptions.selectQuery</code> property.", :items {:type "string"}, :type "array"}, :fileType {:description "The file type for the specified uri. <br><code>SQL</code>: The file\ncontains SQL statements. <br><code>CSV</code>: The file contains CSV data.", :enum ["SQL_FILE_TYPE_UNSPECIFIED" "SQL" "CSV" "BAK"], :type "string"}, :kind {:description "This is always <code>sql#exportContext</code>.", :type "string"}, :sqlExportOptions {:description "Options for exporting data as SQL statements.", :properties {:mysqlExportOptions {:description "Options for exporting from MySQL.", :properties {:masterData {:description "Option to include SQL statement required to set up replication.\nIf set to <code>1</code>, the dump file includes\n a CHANGE MASTER TO statement with the binary log coordinates.\nIf set to <code>2</code>, the CHANGE MASTER TO statement is written as\n a SQL comment, and has no effect.\nAll other values are ignored.", :format "int32", :type "integer"}}, :type "object"}, :schemaOnly {:description "Export only schemas.", :type "boolean"}, :tables {:description "Tables to export, or that were exported, from the specified database. If\nyou specify tables, specify one and only one database. For PostgreSQL\ninstances, you can specify only one table.", :items {:type "string"}, :type "array"}}, :type "object"}, :uri {:description "The path to the file in Google Cloud Storage where the export will be\nstored. The URI is in the form <code>gs:\n//bucketName/fileName</code>. If the file already exists, the requests\n// succeeds, but the operation fails. If <code>fileType</code> is\n// <code>SQL</code> and the filename ends with .gz, the contents are\n// compressed.", :type "string"}}, :type "object"}, :UsersListResponse {:description "User list response.", :properties {:items {:description "List of user resources in the instance.", :items {"$ref" "#/definitions/User"}, :type "array"}, :kind {:description "This is always <code>sql#usersList</code>.", :type "string"}, :nextPageToken {:description "An identifier that uniquely identifies the operation. You can use this\nidentifier to retrieve the Operations resource that has information about\nthe operation.", :type "string"}}, :type "object"}, :Database {:description "Represents a SQL database on the Cloud SQL instance.", :properties {:instance {:description "The name of the Cloud SQL instance. This does not include the project ID.", :type "string"}, :name {:description "The name of the database in the Cloud SQL instance. This does not include\nthe project ID or instance name.", :type "string"}, :selfLink {:description "The URI of this resource.", :type "string"}, :etag {:description "This field is deprecated and will be removed from a future version of the\nAPI.", :type "string"}, :collation {:description "The MySQL collation value.", :type "string"}, :charset {:description "The MySQL charset value.", :type "string"}, :project {:description "The project ID of the project containing the Cloud SQL database. The Google\napps domain is prefixed if applicable.", :type "string"}, :kind {:description "This is always <code>sql#database</code>.", :type "string"}, :sqlserverDatabaseDetails {"$ref" "#/definitions/SqlServerDatabaseDetails"}}, :type "object"}, :Tier {:description "A Google Cloud SQL service tier resource.", :properties {:DiskQuota {:description "The maximum disk size of this tier in bytes.", :format "int64", :type "string"}, :RAM {:description "The maximum RAM usage of this tier in bytes.", :format "int64", :type "string"}, :kind {:description "This is always <code>sql#tier</code>.", :type "string"}, :region {:description "The applicable regions for this tier.", :items {:type "string"}, :type "array"}, :tier {:description "An identifier for the machine type, for example, db-n1-standard-1. For\nrelated information, see <a href=\"/sql/pricing\">Pricing</a>.", :type "string"}}, :type "object"}, :BackupConfiguration {:description "Database instance backup configuration.", :properties {:binaryLogEnabled {:description "Whether binary log is enabled. If backup configuration is disabled, binary\nlog must be disabled as well.", :type "boolean"}, :enabled {:description "Whether this configuration is enabled.", :type "boolean"}, :kind {:description "This is always <code>sql#backupConfiguration</code>.", :type "string"}, :location {:description "Location of the backup", :type "string"}, :replicationLogArchivingEnabled {:description "Reserved for future use.", :type "boolean"}, :startTime {:description "Start time for the daily backup configuration in UTC timezone in the 24\nhour format - <code>HH:MM</code>.", :type "string"}}, :type "object"}, :InstancesTruncateLogRequest {:description "Instance truncate log request.", :properties {:truncateLogContext {"$ref" "#/definitions/TruncateLogContext", :description "Contains details about the truncate log operation."}}, :type "object"}, :SslCertsListResponse {:description "SslCerts list response.", :properties {:items {:description "List of client certificates for the instance.", :items {"$ref" "#/definitions/SslCert"}, :type "array"}, :kind {:description "This is always <code>sql#sslCertsList</code>.", :type "string"}}, :type "object"}, :InstancesDemoteMasterRequest {:description "Database demote master request.", :properties {:demoteMasterContext {"$ref" "#/definitions/DemoteMasterContext", :description "Contains details about the demoteMaster operation."}}, :type "object"}, :SslCertsInsertRequest {:description "SslCerts insert request.", :properties {:commonName {:description "User supplied name.  Must be a distinct name from the other certificates\nfor this instance.", :type "string"}}, :type "object"}, :SslCertDetail {:description "SslCertDetail.", :properties {:certInfo {"$ref" "#/definitions/SslCert", :description "The public information about the cert."}, :certPrivateKey {:description "The private key for the client cert, in pem format.  Keep private in order\nto protect your security.", :type "string"}}, :type "object"}, :InstancesListServerCasResponse {:description "Instances ListServerCas response.", :properties {:activeVersion {:type "string"}, :certs {:description "List of server CA certificates for the instance.", :items {"$ref" "#/definitions/SslCert"}, :type "array"}, :kind {:description "This is always <code>sql#instancesListServerCas</code>.", :type "string"}}, :type "object"}, :SslCertsInsertResponse {:description "SslCert insert response.", :properties {:clientCert {"$ref" "#/definitions/SslCertDetail", :description "The new client certificate and private key.  For First Generation\ninstances, the new certificate does not take effect until the instance is\nrestarted."}, :kind {:description "This is always <code>sql#sslCertsInsert</code>.", :type "string"}, :operation {"$ref" "#/definitions/Operation", :description "The operation to track the ssl certs insert request."}, :serverCaCert {"$ref" "#/definitions/SslCert", :description "The server Certificate Authority's certificate.  If this is missing you can\nforce a new one to be generated by calling resetSslConfig method on\ninstances resource."}}, :type "object"}, :Flag {:description "A flag resource.", :properties {:maxValue {:description "For <code>INTEGER</code> flags, the maximum allowed value.", :format "int64", :type "string"}, :appliesTo {:description "The database version this flag applies to. Can be <code>MYSQL_5_5</code>,\n<code>MYSQL_5_6</code>, or <code>MYSQL_5_7</code>. <code>MYSQL_5_7</code>\nis applicable only to Second Generation instances.", :items {:enum ["SQL_DATABASE_VERSION_UNSPECIFIED" "OBSOLETE_MYSQL_5_0" "MYSQL_5_1" "MYSQL_5_5" "MARIADB_10_0" "MYSQL_5_6" "MYSQL_5_7" "OBSOLETE_POSTGRES_9_5" "SQLSERVER_ENTERPRISE_2016" "POSTGRES_9_6" "POSTGRES_11" "SQLSERVER_2017_STANDARD" "SQLSERVER_2017_ENTERPRISE" "SQLSERVER_2017_EXPRESS" "SQLSERVER_2017_WEB"], :type "string"}, :type "array"}, :name {:description "This is the name of the flag. Flag names always use underscores, not\nhyphens, e.g. <code>max_allowed_packet</code>", :type "string"}, :type {:description "The type of the flag. Flags are typed to being <code>BOOLEAN</code>,\n<code>STRING</code>, <code>INTEGER</code> or <code>NONE</code>.\n<code>NONE</code> is used for flags which do not take a value, such as\n<code>skip_grant_tables</code>.", :enum ["SQL_FLAG_TYPE_UNSPECIFIED" "BOOLEAN" "STRING" "INTEGER" "NONE" "MYSQL_TIMEZONE_OFFSET" "FLOAT" "REPEATED_STRING"], :type "string"}, :minValue {:description "For <code>INTEGER</code> flags, the minimum allowed value.", :format "int64", :type "string"}, :allowedStringValues {:description "For <code>STRING</code> flags, a list of strings that the value can be set\nto.", :items {:type "string"}, :type "array"}, :kind {:description "This is always <code>sql#flag</code>.", :type "string"}, :inBeta {:description "Whether or not the flag is considered in beta.", :type "boolean"}, :requiresRestart {:description "Indicates whether changing this flag will trigger a database restart. Only\napplicable to Second Generation instances.", :type "boolean"}}, :type "object"}, :User {:description "A Cloud SQL user resource.", :properties {:etag {:description "This field is deprecated and will be removed from a future version of the\nAPI.", :type "string"}, :host {:description "The host name from which the user can connect. For <code>insert</code>\noperations, host defaults to an empty string. For <code>update</code>\noperations, host is specified as part of the request URL. The host name\ncannot be updated after insertion.", :type "string"}, :instance {:description "The name of the Cloud SQL instance. This does not include the project ID.\nCan be omitted for <code>update</code> since it is already specified on the\nURL.", :type "string"}, :kind {:description "This is always <code>sql#user</code>.", :type "string"}, :name {:description "The name of the user in the Cloud SQL instance. Can be omitted for\n<code>update</code> since it is already specified in the URL.", :type "string"}, :password {:description "The password for the user.", :type "string"}, :project {:description "The project ID of the project containing the Cloud SQL database. The Google\napps domain is prefixed if applicable. Can be omitted for\n<code>update</code> since it is already specified on the URL.", :type "string"}}, :type "object"}, :FailoverContext {:description "Database instance failover context.", :properties {:kind {:description "This is always <code>sql#failoverContext</code>.", :type "string"}, :settingsVersion {:description "The current settings version of this instance. Request will be rejected if\nthis version doesn't match the current settings version.", :format "int64", :type "string"}}, :type "object"}, :BinLogCoordinates {:description "Binary log coordinates.", :properties {:binLogFileName {:description "Name of the binary log file for a Cloud SQL instance.", :type "string"}, :binLogPosition {:description "Position (offset) within the binary log file.", :format "int64", :type "string"}, :kind {:description "This is always <code>sql#binLogCoordinates</code>.", :type "string"}}, :type "object"}, :Settings {:description "Database instance settings.", :properties {:availabilityType {:description "Availability type (PostgreSQL instances only). Potential values:\n<br><code>ZONAL</code>: The instance serves data from only one zone.\nOutages in that zone affect data accessibility. <br><code>REGIONAL</code>:\nThe instance can serve data from more than one zone in a region (it is\nhighly available). <br>For more information, see <a\nhref=\"https://cloud.google.com/sql/docs/postgres/high-availability\">Overview\nof the High Availability Configuration</a>.", :enum ["SQL_AVAILABILITY_TYPE_UNSPECIFIED" "ZONAL" "REGIONAL"], :type "string"}, :tier {:description "The tier (or machine type) for this instance, for example\n<code>db-n1-standard-1</code> (MySQL instances) or\n<code>db-custom-1-3840</code> (PostgreSQL instances). For MySQL instances,\nthis property determines whether the instance is First or Second\nGeneration. For more information, see <a\nhref=\"/sql/docs/db_path/instance-settings\">Instance Settings</a>.", :type "string"}, :databaseFlags {:description "The database flags passed to the instance at startup.", :items {"$ref" "#/definitions/DatabaseFlags"}, :type "array"}, :databaseReplicationEnabled {:description "Configuration specific to read replica instances. Indicates whether\nreplication is enabled or not.", :type "boolean"}, :settingsVersion {:description "The version of instance settings. This is a required field for update\nmethod to make sure concurrent updates are handled properly. During update,\nuse the most recent settingsVersion value for this instance and do not try\nto update this value.", :format "int64", :type "string"}, :storageAutoResizeLimit {:description "The maximum size to which storage capacity can be automatically increased.\nThe default value is 0, which specifies that there is no limit. Not used\nfor First Generation instances.", :format "int64", :type "string"}, :crashSafeReplicationEnabled {:description "Configuration specific to read replica instances. Indicates whether\ndatabase flags for crash-safe replication are enabled. This property is\nonly applicable to First Generation instances.", :type "boolean"}, :activationPolicy {:description "The activation policy specifies when the instance is activated; it is\napplicable only when the instance state is <code>RUNNABLE</code>. Valid\nvalues: <br><code>ALWAYS</code>: The instance is on, and remains so even in\nthe absence of connection requests. <br><code>NEVER</code>: The instance is\noff; it is not activated, even if a connection request arrives.\n<br><code>ON_DEMAND</code>: First Generation instances only. The instance\nresponds to incoming requests, and turns itself off when not in use.\nInstances with <code>PER_USE</code> pricing turn off after 15 minutes of\ninactivity. Instances with <code>PER_PACKAGE</code> pricing turn off after\n12 hours of inactivity.", :enum ["SQL_ACTIVATION_POLICY_UNSPECIFIED" "ALWAYS" "NEVER" "ON_DEMAND"], :type "string"}, :storageAutoResize {:description "Configuration to increase storage size automatically. The default value is\ntrue. Not used for First Generation instances.", :type "boolean"}, :pricingPlan {:description "The pricing plan for this instance. This can be either <code>PER_USE</code>\nor <code>PACKAGE</code>. Only <code>PER_USE</code> is supported for Second\nGeneration instances.", :enum ["SQL_PRICING_PLAN_UNSPECIFIED" "PACKAGE" "PER_USE"], :type "string"}, :locationPreference {"$ref" "#/definitions/LocationPreference", :description "The location preference settings. This allows the instance to be located as\nnear as possible to either an App Engine app or Compute Engine zone for\nbetter performance. App Engine co-location is only applicable to First\nGeneration instances."}, :ipConfiguration {"$ref" "#/definitions/IpConfiguration", :description "The settings for IP Management. This allows to enable or disable the\ninstance IP and manage which external networks can connect to the instance.\nThe IPv4 address cannot be disabled for Second Generation instances."}, :kind {:description "This is always <code>sql#settings</code>.", :type "string"}, :maintenanceWindow {"$ref" "#/definitions/MaintenanceWindow", :description "The maintenance window for this instance. This specifies when the instance\ncan be restarted for maintenance purposes. Not used for First Generation\ninstances."}, :backupConfiguration {"$ref" "#/definitions/BackupConfiguration", :description "The daily backup configuration for the instance."}, :dataDiskSizeGb {:description "The size of data disk, in GB. The data disk size minimum is 10GB. Not used\nfor First Generation instances.", :format "int64", :type "string"}, :replicationType {:description "The type of replication this instance uses. This can be either\n<code>ASYNCHRONOUS</code> or <code>SYNCHRONOUS</code>. This property is\nonly applicable to First Generation instances.", :enum ["SQL_REPLICATION_TYPE_UNSPECIFIED" "SYNCHRONOUS" "ASYNCHRONOUS"], :type "string"}, :userLabels {:additionalProperties {:type "string"}, :description "User-provided labels, represented as a dictionary where each label is a\nsingle key value pair.", :type "object"}, :dataDiskType {:description "The type of data disk: <code>PD_SSD</code> (default) or\n<code>PD_HDD</code>. Not used for First Generation instances.", :enum ["SQL_DATA_DISK_TYPE_UNSPECIFIED" "PD_SSD" "PD_HDD" "OBSOLETE_LOCAL_SSD"], :type "string"}, :authorizedGaeApplications {:description "The App Engine app IDs that can access this instance. First Generation\ninstances only.", :items {:type "string"}, :type "array"}}, :type "object"}, :DemoteMasterContext {:description "Database instance demote master context.", :properties {:kind {:description "This is always <code>sql#demoteMasterContext</code>.", :type "string"}, :masterInstanceName {:description "The name of the instance which will act as on-premises master in the\nreplication setup.", :type "string"}, :replicaConfiguration {"$ref" "#/definitions/DemoteMasterConfiguration", :description "Configuration specific to read-replicas replicating from the on-premises\nmaster."}, :verifyGtidConsistency {:description "Verify GTID consistency for demote operation. Default value:\n<code>True</code>. Second Generation instances only.  Setting this flag to\nfalse enables you to bypass GTID consistency check between on-premises\nmaster and Cloud SQL instance during the demotion operation but also\nexposes you to the risk of future replication failures. Change the value\nonly if you know the reason for the GTID divergence and are confident that\ndoing so will not cause any replication issues.", :type "boolean"}}, :type "object"}, :MySqlReplicaConfiguration {:description "Read-replica configuration specific to MySQL databases.", :properties {:clientCertificate {:description "PEM representation of the slave's x509 certificate.", :type "string"}, :sslCipher {:description "A list of permissible ciphers to use for SSL encryption.", :type "string"}, :password {:description "The password for the replication connection.", :type "string"}, :clientKey {:description "PEM representation of the slave's private key. The corresponsing public key\nis encoded in the client's certificate.", :type "string"}, :caCertificate {:description "PEM representation of the trusted CA's x509 certificate.", :type "string"}, :username {:description "The username for the replication connection.", :type "string"}, :connectRetryInterval {:description "Seconds to wait between connect retries. MySQL's default is 60 seconds.", :format "int32", :type "integer"}, :verifyServerCertificate {:description "Whether or not to check the master's Common Name value in the certificate\nthat it sends during the SSL handshake.", :type "boolean"}, :kind {:description "This is always <code>sql#mysqlReplicaConfiguration</code>.", :type "string"}, :dumpFilePath {:description "Path to a SQL dump file in Google Cloud Storage from which the slave\ninstance is to be created. The URI is in the form gs:\n//bucketName/fileName. Compressed gzip files (.gz) are also supported.\n// Dumps should have the binlog co-ordinates from which replication should\n// begin. This can be accomplished by setting --master-data to 1 when using\n// mysqldump.", :type "string"}, :masterHeartbeatPeriod {:description "Interval in milliseconds between replication heartbeats.", :format "int64", :type "string"}}, :type "object"}, :FlagsListResponse {:description "Flags list response.", :properties {:items {:description "List of flags.", :items {"$ref" "#/definitions/Flag"}, :type "array"}, :kind {:description "This is always <code>sql#flagsList</code>.", :type "string"}}, :type "object"}, :SslCert {:description "SslCerts Resource", :properties {:instance {:description "Name of the database instance.", :type "string"}, :expirationTime {:description "The time when the certificate expires in <a\nhref=\"https://tools.ietf.org/html/rfc3339\">RFC 3339</a> format, for example\n<code>2012-11-15T16:19:00.094Z</code>.", :format "google-datetime", :type "string"}, :cert {:description "PEM representation.", :type "string"}, :createTime {:description "The time when the certificate was created in <a\nhref=\"https://tools.ietf.org/html/rfc3339\">RFC 3339</a> format, for example\n<code>2012-11-15T16:19:00.094Z</code>", :format "google-datetime", :type "string"}, :selfLink {:description "The URI of this resource.", :type "string"}, :sha1Fingerprint {:description "Sha1 Fingerprint.", :type "string"}, :kind {:description "This is always <code>sql#sslCert</code>.", :type "string"}, :commonName {:description "User supplied name.  Constrained to [a-zA-Z.-_ ]+.", :type "string"}, :certSerialNumber {:description "Serial number, as extracted from the certificate.", :type "string"}}, :type "object"}, :OnPremisesConfiguration {:description "On-premises instance configuration.", :properties {:hostPort {:description "The host and port of the on-premises instance in host:port format", :type "string"}, :kind {:description "This is always <code>sql#onPremisesConfiguration</code>.", :type "string"}}, :type "object"}, :LocationPreference {:description "Preferred location. This specifies where a Cloud SQL instance should\npreferably be located, either in a specific Compute Engine zone, or\nco-located with an App Engine application. Note that if the preferred\nlocation is not available, the instance will be located as close as possible\nwithin the region. Only one location may be specified.", :properties {:followGaeApplication {:description "The AppEngine application to follow, it must be in the same region as the\nCloud SQL instance.", :type "string"}, :kind {:description "This is always <code>sql#locationPreference</code>.", :type "string"}, :zone {:description "The preferred Compute Engine zone (e.g. us-central1-a, us-central1-b,\netc.).", :type "string"}}, :type "object"}, :SslCertsCreateEphemeralRequest {:description "SslCerts create ephemeral certificate request.", :properties {:public_key {:description "PEM encoded public key to include in the signed certificate.", :type "string"}}, :type "object"}, :ImportContext {:description "Database instance import context.", :properties {:bakImportOptions {:description "Import parameters specific to SQL Server .BAK files", :properties {:encryptionOptions {:properties {:certPath {:description "Path to the Certificate (.cer) in Cloud Storage, in the form\n<code>gs://bucketName/fileName</code>. The instance must have\nwrite permissions to the bucket and read access to the file.", :type "string"}, :pvkPassword {:description "Password that encrypts the private key", :type "string"}, :pvkPath {:description "Path to the Certificate Private Key (.pvk)  in Cloud Storage, in the\nform <code>gs://bucketName/fileName</code>. The instance must have\nwrite permissions to the bucket and read access to the file.", :type "string"}}, :type "object"}}, :type "object"}, :csvImportOptions {:description "Options for importing data as CSV.", :properties {:columns {:description "The columns to which CSV data is imported. If not specified, all columns\nof the database table are loaded with CSV data.", :items {:type "string"}, :type "array"}, :table {:description "The table to which CSV data is imported.", :type "string"}}, :type "object"}, :database {:description "The target database for the import. If <code>fileType</code> is\n<code>SQL</code>, this field is required only if the import file does not\nspecify a database, and is overridden by any database specification in the\nimport file. If <code>fileType</code> is <code>CSV</code>, one database\nmust be specified.", :type "string"}, :fileType {:description "The file type for the specified uri. <br><code>SQL</code>: The file\ncontains SQL statements. <br><code>CSV</code>: The file contains CSV data.", :enum ["SQL_FILE_TYPE_UNSPECIFIED" "SQL" "CSV" "BAK"], :type "string"}, :importUser {:description "The PostgreSQL user for this import operation. PostgreSQL instances only.", :type "string"}, :kind {:description "This is always <code>sql#importContext</code>.", :type "string"}, :uri {:description "Path to the import file in Cloud Storage, in the form\n<code>gs:\n//bucketName/fileName</code>. Compressed gzip files (.gz) are supported\n// when <code>fileType</code> is <code>SQL</code>. The instance must have\n// write permissions to the bucket and read access to the file.", :type "string"}}, :type "object"}, :SqlScheduledMaintenance {:description "Any scheduled maintenancce for this instance.", :properties {:canDefer {:description "If the scheduled maintenance can be deferred.", :type "boolean"}, :startTime {:description "The start time of any upcoming scheduled maintenance for this instance.", :format "google-datetime", :type "string"}}, :type "object"}, :InstancesFailoverRequest {:description "Instance failover request.", :properties {:failoverContext {"$ref" "#/definitions/FailoverContext", :description "Failover Context."}}, :type "object"}, :DiskEncryptionStatus {:description "Disk encryption status for an instance.", :properties {:kind {:description "This is always <code>sql#diskEncryptionStatus</code>.", :type "string"}, :kmsKeyVersionName {:description "KMS key version used to encrypt the Cloud SQL instance resource", :type "string"}}, :type "object"}, :OperationErrors {:description "Database instance operation errors list wrapper.", :properties {:errors {:description "The list of errors encountered while processing this operation.", :items {"$ref" "#/definitions/OperationError"}, :type "array"}, :kind {:description "This is always <code>sql#operationErrors</code>.", :type "string"}}, :type "object"}, :InstancesRotateServerCaRequest {:description "Rotate Server CA request.", :properties {:rotateServerCaContext {"$ref" "#/definitions/RotateServerCaContext", :description "Contains details about the rotate server CA operation."}}, :type "object"}, :SqlServerDatabaseDetails {:description "Represents a Sql Server database on the Cloud SQL instance.", :properties {:compatibilityLevel {:description "The version of SQL Server with which the database is to be made compatible", :format "int32", :type "integer"}, :recoveryModel {:description "The recovery model of a SQL Server database", :type "string"}}, :type "object"}, :TruncateLogContext {:description "Database Instance truncate log context.", :properties {:kind {:description "This is always <code>sql#truncateLogContext</code>.", :type "string"}, :logType {:description "The type of log to truncate. Valid values are\n<code>MYSQL_GENERAL_TABLE</code> and <code>MYSQL_SLOW_TABLE</code>.", :type "string"}}, :type "object"}, :BackupRun {:description "A BackupRun resource.", :properties {:description {:description "The description of this run, only applicable to on-demand backups.", :type "string"}, :diskEncryptionConfiguration {"$ref" "#/definitions/DiskEncryptionConfiguration", :description "Encryption configuration specific to a backup.\nApplies only to Second Generation instances."}, :instance {:description "Name of the database instance.", :type "string"}, :startTime {:description "The time the backup operation actually started in UTC timezone in <a\nhref=\"https://tools.ietf.org/html/rfc3339\">RFC 3339</a> format, for example\n<code>2012-11-15T16:19:00.094Z</code>.", :format "google-datetime", :type "string"}, :windowStartTime {:description "The start time of the backup window during which this the backup was\nattempted in <a href=\"https://tools.ietf.org/html/rfc3339\">RFC 3339</a>\nformat, for example <code>2012-11-15T16:19:00.094Z</code>.", :format "google-datetime", :type "string"}, :endTime {:description "The time the backup operation completed in UTC timezone in <a\nhref=\"https://tools.ietf.org/html/rfc3339\">RFC 3339</a> format, for example\n<code>2012-11-15T16:19:00.094Z</code>.", :format "google-datetime", :type "string"}, :enqueuedTime {:description "The time the run was enqueued in UTC timezone in <a\nhref=\"https://tools.ietf.org/html/rfc3339\">RFC 3339</a> format, for example\n<code>2012-11-15T16:19:00.094Z</code>.", :format "google-datetime", :type "string"}, :selfLink {:description "The URI of this resource.", :type "string"}, :type {:description "The type of this run; can be either \"AUTOMATED\" or \"ON_DEMAND\".", :enum ["SQL_BACKUP_RUN_TYPE_UNSPECIFIED" "AUTOMATED" "ON_DEMAND"], :type "string"}, :diskEncryptionStatus {"$ref" "#/definitions/DiskEncryptionStatus", :description "Encryption status specific to a backup.\nApplies only to Second Generation instances."}, :status {:description "The status of this run.", :enum ["SQL_BACKUP_RUN_STATUS_UNSPECIFIED" "ENQUEUED" "OVERDUE" "RUNNING" "FAILED" "SUCCESSFUL" "SKIPPED" "DELETION_PENDING" "DELETION_FAILED" "DELETED"], :type "string"}, :id {:description "The identifier for this backup run. Unique only for a specific Cloud SQL\ninstance.", :format "int64", :type "string"}, :kind {:description "This is always <code>sql#backupRun</code>.", :type "string"}, :error {"$ref" "#/definitions/OperationError", :description "Information about why the backup operation failed. This is only present if\nthe run has the FAILED status."}, :location {:description "Location of the backups.", :type "string"}}, :type "object"}, :InstancesCloneRequest {:description "Database instance clone request.", :properties {:cloneContext {"$ref" "#/definitions/CloneContext", :description "Contains details about the clone operation."}}, :type "object"}, :RotateServerCaContext {:description "Instance rotate server CA context.", :properties {:kind {:description "This is always <code>sql#rotateServerCaContext</code>.", :type "string"}, :nextVersion {:description "The fingerprint of the next version to be rotated to. If left unspecified,\nwill be rotated to the most recently added server CA version.", :type "string"}}, :type "object"}, :DemoteMasterMySqlReplicaConfiguration {:description "Read-replica configuration specific to MySQL databases.", :properties {:caCertificate {:description "PEM representation of the trusted CA's x509 certificate.", :type "string"}, :clientCertificate {:description "PEM representation of the slave's x509 certificate.", :type "string"}, :clientKey {:description "PEM representation of the slave's private key. The corresponsing public key\nis encoded in the client's certificate. The format of the slave's private\nkey can be either PKCS #1 or PKCS #8.", :type "string"}, :kind {:description "This is always <code>sql#demoteMasterMysqlReplicaConfiguration</code>.", :type "string"}, :password {:description "The password for the replication connection.", :type "string"}, :username {:description "The username for the replication connection.", :type "string"}}, :type "object"}, :IpMapping {:description "Database instance IP Mapping.", :properties {:ipAddress {:description "The IP address assigned.", :type "string"}, :timeToRetire {:description "The due time for this IP to be retired in <a\nhref=\"https://tools.ietf.org/html/rfc3339\">RFC 3339</a> format, for example\n<code>2012-11-15T16:19:00.094Z</code>. This field is only available when\nthe IP is scheduled to be retired.", :format "google-datetime", :type "string"}, :type {:description "The type of this IP address. A <code>PRIMARY</code> address is a public\naddress that can accept incoming connections. A <code>PRIVATE</code>\naddress is a private address that can accept incoming connections. An\n<code>OUTGOING</code> address is the source address of connections\noriginating from the instance, if supported.", :enum ["SQL_IP_ADDRESS_TYPE_UNSPECIFIED" "PRIMARY" "OUTGOING" "PRIVATE" "MIGRATED_1ST_GEN"], :type "string"}}, :type "object"}, :InstancesImportRequest {:description "Database instance import request.", :properties {:importContext {"$ref" "#/definitions/ImportContext", :description "Contains details about the import operation."}}, :type "object"}}}